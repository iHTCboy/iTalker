{"success":1,"total":11,"result":[{"ID":"1376","typeID":"24","question":"\u5c06\u4e00\u6574\u6570\u9006\u5e8f\u540e\u653e\u5165\u4e00\u6570\u7ec4\u4e2d\uff08\u8981\u6c42\u9012\u5f52\u5b9e\u73b0\uff09","answer":"void convert(int *result, int n) {\r\n\r\n     if(n>=10)\r\n\r\n         convert(result+1, n\/10);\r\n\r\n     *result = n%10;   \r\n\r\n}\r\n\r\nint main(int argc, char* argv[]) {\r\n\r\n     int n = 123456789, result[20]={};\r\n\r\n     convert(result, n);\r\n\r\n     printf(\"%d:\", n);\r\n\r\n     for(int i=0; i<9; i++)\r\n\r\n         printf(\"%d\", result[i]);\r\n\r\n}"},{"ID":"1375","typeID":"24","question":"\u6c42\u9ad8\u4e8e\u5e73\u5747\u5206\u7684\u5b66\u751f\u5b66\u53f7\u53ca\u6210\u7ee9\uff1f","answer":"double find(int total, int n) {\r\n\r\n     int number, score,  average;\r\n\r\n     scanf(\"%d\", &number);\r\n\r\n     if(number != 0) {\r\n\r\n         scanf(\"%d\", &score);\r\n\r\n         average = find(total+score, n+1);\r\n\r\n         if(score >= average)\r\n\r\n              printf(\"%d:%d\/n\", number, score);\r\n\r\n         return average;\r\n\r\n     } else {\r\n\r\n         printf(\"Average=%d\/n\", total\/n);\r\n\r\n         return total\/n;\r\n\r\n     }\r\n\r\n}\r\n\r\nint main(int argc, char* argv[]) {\r\n\r\n     find(0, 0);\r\n\r\n}"},{"ID":"1374","typeID":"24","question":"\u9012\u5f52\u5b9e\u73b0\u56de\u6587\u5224\u65ad\uff0c\u5982\uff1aabcdedbca\u5c31\u662f\u56de\u6587\uff1f","answer":"int find(char *str, int n) {\r\n\r\n     if(n<=1) return 1;\r\n\r\n     else if(str[0]==str[n-1])   return find(str+1, n-2);\r\n\r\n     else     return 0;\r\n\r\n}\r\n\r\n \r\n\r\nint main(int argc, char* argv[]) {\r\n\r\n     char *str = \"abcdedcba\";\r\n\r\n     printf(\"%s: %s\/n\", str, find(str, strlen(str)) ? \"Yes\" : \"No\");\r\n\r\n}"},{"ID":"1373","typeID":"24","question":"\u5206\u89e3\u6210\u8d28\u56e0\u6570\uff0c\u5982435234=251*17*17*3*2\uff1f","answer":"void prim(int m, int n) {\r\n\r\n     if(m>n) {\r\n\r\n         while(m%n != 0) n++;\r\n\r\n         m \/= n;\r\n\r\n         prim(m, n);\r\n\r\n         printf(\"%d*\", n);\r\n\r\n     }\r\n\r\n}\r\n\r\nint main(int argc, char* argv[]) {\r\n\r\n     int n = 435234;\r\n\r\n     printf(\"%d=\", n);\r\n\r\n     prim(n, 2);\r\n\r\n}\r\n\r\n"},{"ID":"1372","typeID":"24","question":"\u968f\u673a\u5206\u914d\u5ea7\u4f4d\uff0c\u517150\u4e2a\u5b66\u751f\uff0c\u4f7f\u5b66\u53f7\u76f8\u90bb\u7684\u540c\u5b66\u5ea7\u4f4d\u4e0d\u80fd\u76f8\u90bb(\u65e9\u4e9b\u65f6\u5019\u7528C#\u5199\u7684\uff0c\u6ca1\u6709\u7528C\u6539\u5199\uff09","answer":"static void Main(string[] args)\r\n\r\n{\r\n\r\n     int Tmp = 0, Count = 50;            \r\n\r\n     int[] Seats = new int[Count];            \r\n\r\n     bool[] Students = new bool[Count];\r\n\r\n     System.Random RandStudent=new System.Random();\r\n\r\n     Students[Seats[0]=RandStudent.Next(0,Count)]=true;\r\n\r\n     for(int i = 1; i < Count; ) {\r\n\r\n         Tmp=(int)RandStudent.Next(0,Count);\r\n\r\n         if((!Students[Tmp])&&(Seats[i-1]-Tmp!=1) && (Seats[i-1] - Tmp) != -1) {\r\n\r\n              Seats[i++] = Tmp;\r\n\r\nStudents[Tmp] = true;\r\n\r\n         }\r\n\r\n     }\r\n\r\n     foreach(int Student in Seats)\r\n\r\n         System.Console.Write(Student + \" \");\r\n\r\n     System.Console.Read();\r\n\r\n}"},{"ID":"1371","typeID":"24","question":"\u67094\u79cd\u9762\u503c\u7684\u90ae\u7968\u5f88\u591a\u679a\uff0c\u8fd94\u79cd\u90ae\u7968\u9762\u503c\u5206\u522b1, 4, 12, 21\uff0c\u73b0\u4ece\u591a\u5f20\u4e2d\u6700\u591a\u4efb\u53d65\u5f20\u8fdb\u884c\u7ec4\u5408\uff0c\u6c42\u53d6\u51fa\u8fd9\u4e9b\u90ae\u7968\u7684\u6700\u5927\u8fde\u7eed\u7ec4\u5408\u503c\uff1f","answer":"#define N 5\r\n\r\n#define M 5\r\n\r\nint k, Found, Flag[N];\r\n\r\nint Stamp[M] = {0, 1, 4, 12, 21};\r\n\r\n \r\n\r\n\/\/ \u5728\u5269\u4f59\u5f20\u6570n\u4e2d\u7ec4\u5408\u51fa\u9762\u503c\u548cValue\r\n\r\nint Combine(int n, int Value) {\r\n\r\n     if(n >= 0 && Value == 0) {\r\n\r\n         Found = 1;\r\n\r\n         int Sum = 0;\r\n\r\n         for(int i=0; i<N && Flag[i] != 0; i++) {\r\n\r\n              Sum += Stamp[Flag[i]];\r\n\r\n              printf(\"%d \", Stamp[Flag[i]]);\r\n\r\n         }\r\n\r\n         printf(\"\/tSum=%d\/n\/n\", Sum);\r\n\r\n     }else for(int i=1; i<M && !Found && n>0; i++)\r\n\r\n         if(Value-Stamp[i] >= 0) {\r\n\r\n              Flag[k++] = i;\r\n\r\n              Combine(n-1, Value-Stamp[i]);\r\n\r\n              Flag[--k] = 0;\r\n\r\n         }\r\n\r\n     return Found;\r\n\r\n}\r\n\r\n \r\n\r\nint main(int argc, char* argv[]) {\r\n\r\n     for(int i=1; Combine(N, i); i++, Found=0);\r\n\r\n}"},{"ID":"1370","typeID":"24","question":"\u6b4c\u5fb7\u5df4\u8d6b\u731c\u60f3\u3002\u4efb\u4f55\u4e00\u4e2a\u5076\u6570\u90fd\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e24\u4e2a\u7d20\u6570\u4e4b\u548c","answer":"#include \"stdafx.h\"\r\n\r\n#include \"math.h\"\r\n\r\nint main(int argc, char* argv[]) {\r\n\r\n     int Even=78, Prime1, Prime2, Tmp1, Tmp2;\r\n\r\n     for(Prime1=3; Prime1<=Even\/2; Prime1+=2) {\r\n\r\n         for(Tmp1=2,Tmp2=sqrt(float(Prime1)); Tmp1<=Tmp2 && Prime1%Tmp1 != 0; Tmp1++);\r\n\r\n         if(Tmp1<=Tmp2) continue;\r\n\r\n         Prime2 = Even-Prime1;\r\n\r\n         for(Tmp1=2,Tmp2=sqrt(float(Prime2)); Tmp1<=Tmp2 && Prime2%Tmp1 != 0; Tmp1++);\r\n\r\n         if(Tmp1<=Tmp2) continue;\r\n\r\n         printf(\"%d=%d+%d\/n\", Even, Prime1, Prime2);\r\n\r\n     }\r\n\r\n}"},{"ID":"1369","typeID":"24","question":"\u5feb\u901f\u6392\u5e8f\uff1f","answer":"#include \"stdafx.h\"\r\n\r\n#define N 10\r\n\r\nint part(int list[], int low, int high) {      \/\/ \u4e00\u8d9f\u6392\u5e8f\uff0c\u8fd4\u56de\u5206\u5272\u70b9\u4f4d\u7f6e\r\n\r\n     int tmp = list[low];\r\n\r\n     while(low<high) {\r\n\r\n         while(low<high && list[high]>=tmp) --high;\r\n\r\n         list[low] = list[high];\r\n\r\n         while(low<high && list[low]<=tmp)  ++low;\r\n\r\n         list[high] = list[low];\r\n\r\n     }\r\n\r\n     list[low] = tmp;\r\n\r\n     return low;\r\n\r\n}\r\n\r\nvoid QSort(int list[], int low, int high) {    \/\/ \u5e94\u7528\u9012\u5f52\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\r\n\r\n     if(low<high) {\r\n\r\n         int mid = part(list, low, high);\r\n\r\n         QSort(list, low, mid-1);\r\n\r\n         QSort(list, mid+1, high);\r\n\r\n     }\r\n\r\n}\r\n\r\nvoid show(int list[], int n) {                 \/\/ \u8f93\u51fa\u5217\u8868\u4e2d\u5143\u7d20\r\n\r\n     for(int i=0; i<n; i++)\r\n\r\n         printf(\"%d \", list[i]);\r\n\r\n     printf(\"\/n\");\r\n\r\n}\r\n\r\nint main(int argc, char* argv[]) {\r\n\r\n     int list[N] = {23, 65, 26, 1, 6, 89, 3, 12, 33, 8};\r\n\r\n     show(list, N);                            \/\/ \u8f93\u51fa\u6392\u5e8f\u524d\u5e8f\u5217\r\n\r\n     QSort(list, 0, N-1);                      \/\/ \u5feb\u901f\u6392\u5e8f\r\n\r\n     show(list, N);                            \/\/ \u8f93\u51fa\u6392\u5e8f\u540e\u5e8f\u5217\r\n\r\n}"},{"ID":"1368","typeID":"24","question":"\u5199\u4e00\u51fd\u6570\u5224\u65ad\u67d0\u4e2a\u6574\u6570\u662f\u5426\u4e3a\u56de\u6587\u6570\uff0c\u598212321\u4e3a\u56de\u6587\u6570","answer":"#include \"stdafx.h\"\r\n\r\nint IsEchoNum(int num) {\r\n\r\n     int tmp = 0;\r\n\r\n     for(int n = num; n; n\/=10)\r\n\r\n         tmp = tmp *10 + n%10;\r\n\r\n     return tmp==num;\r\n\r\n}\r\n\r\n \r\n\r\nint main(int argc, char* argv[]) {\r\n\r\n     int num = 12321;\r\n\r\n     printf(\"%d  %d\/n\", num, IsEchoNum(num));\r\n\r\n}"},{"ID":"1367","typeID":"24","question":"\u4e0d\u5f00\u8f9f\u7528\u4e8e\u4ea4\u6362\u6570\u636e\u7684\u4e34\u65f6\u7a7a\u95f4\uff0c\u5982\u4f55\u5b8c\u6210\u5b57\u7b26\u4e32\u7684\u9006\u5e8f\uff1f","answer":"#include \"stdafx.h\"\r\n\r\nvoid change(char *str) {\r\n\r\n     for(int i=0,j=strlen(str)-1; i<j; i++, j--){\r\n\r\n         str[i] ^= str[j] ^= str[i] ^= str[j];\r\n\r\n     }\r\n\r\n}\r\n\r\nint main(int argc, char* argv[]) {\r\n\r\n     char str[] = \"abcdefg\";\r\n\r\n     printf(\"strSource=%s\/n\", str);\r\n\r\n     change(str);\r\n\r\n     printf(\"strResult=%s\/n\", str);\r\n\r\n     return getchar();\r\n\r\n}"},{"ID":"1366","typeID":"24","question":"\u6c42\u4e24\u4e2a\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6700\u957f\u5b50\u4e32\uff0c\u5982\"abractyeyt\",\"dgdsaeactyey\"\u7684\u6700\u5927\u5b50\u4e32\u4e3a\"actyet\"","answer":"#include \"stdafx.h\"\r\n\r\nchar *MaxSubString(char *str1, char *str2) {\r\n\r\n     int i, j, k, index, max=0;\r\n\r\n     for(i=0; str1[i]; i++)\r\n\r\n         for(j=0; str2[j]; j++) {\r\n\r\n              for(k=0; str1[i+k]==str2[j+k] && (str2[i+k] || str1[i+k]); k++);\r\n\r\n              if(k>max) {        \/\/ \u51fa\u73b0\u5927\u4e8e\u5f53\u524d\u5b50\u4e32\u957f\u5ea6\u7684\u5b50\u4e32\uff0c\u5219\u66ff\u6362\u5b50\u4e32\u4f4d\u7f6e\u548c\u7a0b\u5ea6\r\n\r\n                   index = j;    max = k;\r\n\r\n              }\r\n\r\n         }\r\n\r\n     char *strResult = (char *)calloc(sizeof(char), max+1);\r\n\r\n     for(i=0; i<max; i++)       \r\n\r\n         strResult[i] = str2[index++];\r\n\r\n     return strResult;\r\n\r\n}\r\n\r\n \r\n\r\nint main(int argc, char* argv[]) {\r\n\r\n     char str1[] = \"abractyeyt\", str2[] = \"dgdsaeactyey\";\r\n\r\n     char *strResult = MaxSubString(str1, str2);\r\n\r\n     printf(\"str1=%s\/nstr2=%s\/nMaxSubString=%s\/n\", str1, str2, strResult);\r\n\r\n}\r\n\r\n"}]}