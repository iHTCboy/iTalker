{
  "success": 1,
  "total": 114,
  "result": [
    {
      "ID": "55b6edfce4b0ef2b5755eb13",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": " \u2018T\u2019\u6216\u2019F\u2019",
      "optionC": "1",
      "optionAnswer": "B",
      "answer": "\u903b\u8f91\u8868\u8fbe\u5f0f\u662f\u6307\u8fd0\u7b97\u7b26\u4e3a\u6216||\u3001\u4e0e&&\u3001\u975e\uff01\u7684\u8868\u8fbe\u5f0f\u3002\u8fd4\u56de\u503c\u4e3a0\u62161\uff0c0\u8868\u793afalse\uff0c\u975e0\u8868\u793atrue\u3002\u5173\u7cfb\u8868\u8fbe\u5f0f\u662f\u6307\u8fd0\u7b97\u7b26\u4e3a<,<=,>,>=,==,!=\u7684\u8868\u8fbe\u5f0f\u3002\u8fd4\u56de\u503c\u540c\u6837\u4e3a0\u62161\u3002",
      "optionB": "0\u62161",
      "type": "1",
      "optionA": "0",
      "question": "C\u8bed\u8a00\u4e2d\uff0c\u5173\u7cfb\u8868\u8fbe\u5f0f\u548c\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u503c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb11",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "1",
      "optionC": "0",
      "optionAnswer": "A",
      "answer": "a<b?a:b\u7684\u610f\u601d\u662f\uff0c\u5982\u679ca<b\u4e3atrue\u7ed3\u679c\u4e3aa\uff1b\u5982\u679ca<b\u4e3afalse\u7ed3\u679c\u4e3ab\u3002\u672c\u9898\u4e2da<b\u4e3atrue\uff0c\u56e0\u6b64\u7ed3\u679c\u4e3a3\u3002",
      "optionB": "4",
      "type": "1",
      "optionA": "3",
      "question": "\u5982\u679cint a=3,b=4\uff1b\u5219\u6761\u4ef6\u8868\u8fbe\u5f0f\"a<b? a:b\"\u7684\u503c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb20",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "a>=10\u2016a<=0",
      "optionC": "a>=10 &&a<=0",
      "optionAnswer": "D",
      "answer": "\u903b\u8f91\u8fd0\u7b97\u7b26\u201c||\u201d\u8868\u793a\u6216\u7684\u610f\u601d\u3002",
      "optionB": "a>=0|a<=10",
      "type": "1",
      "optionA": " a>=10 or a<=0",
      "question": "\u80fd\u6b63\u786e\u8868\u793a\u903b\u8f91\u5173\u7cfb\uff1a\u201ca\u2265=10\u6216a\u22640\u201d\u7684C\u8bed\u8a00\u8868\u8fbe\u5f0f\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb2b",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "9\u6b21",
      "optionC": "10\u6b21",
      "optionAnswer": "A",
      "answer": "while(a<10) x++; a++; \u8fd9\u53e5\u8bdd\u91ccwhile\u8bed\u53e5\u662f\u4e0d\u5305\u542ba++\u7684 \u53ea\u5faa\u73afx\u3002",
      "optionB": "\u4e0d\u786e\u5b9a\u6b21",
      "type": "1",
      "optionA": "\u65e0\u9650\u6b21",
      "question": "\u82e5\u6709\u201cint a=1,x=1;\u201d,\u5219\u5faa\u73af\u8bed\u53e5\u201cwhile(a<10) x++; a++;\u201d\u7684\u5faa\u73af\u6267\u884c",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb23",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "if(a==0) s1; else s2;",
      "optionC": "if(a!=0) s1; else s2;",
      "optionAnswer": "D",
      "answer": "\u7b54\u6848A if(a) S1; else S2   \uff0c\u5047\u8bbea==0\uff0c\u90a3\u4e48if\u8bed\u53e5\u6761\u4ef6\u4e3a\u5047\uff0c\u6267\u884cS2\uff0c\u5047\u8bbea\uff01=0\uff0c\u6267\u884cS1\uff1b\u7b54\u6848B if(a==0) S2; else S1;\uff0c\u5047\u8bbea==0\uff0c\u90a3\u4e48if\u8bed\u53e5\u6761\u4ef6\u4e3a\u771f\uff0c\u6267\u884cS2\uff0c\u5047\u8bbea\uff01=0\uff0c\u6267\u884cS1\uff1b\u7b54\u6848C if(a!=0) S1; else S2\uff0c\u5047\u8bbea==0\uff0c\u90a3\u4e48if\u8bed\u53e5\u6761\u4ef6\u4e3a\u5047\uff0c\u6267\u884cS2\uff0c\u5047\u8bbea\uff01=0\uff0c\u6267\u884cS1\uff1b\u7b54\u6848D if(a==0) S1; else S2;\uff0c\u5047\u8bbea==0\uff0c\u90a3\u4e48if\u8bed\u53e5\u6761\u4ef6\u4e3a\u771f\uff0c\u6267\u884cS1\uff0c\u5047\u8bbea\uff01=0\uff0c\u6267\u884cS2",
      "optionB": "if (a= =0)  s2;  else  s1;",
      "type": "1",
      "optionA": "if (a)   s1 ;  else  s2; ",
      "question": "\u5728\u4e0b\u9762\u7684\u6761\u4ef6\u8bed\u53e5\u4e2d\uff08\u5176\u4e2ds1\u548cs2\u8868\u793a\u662fC\u8bed\u8a00\u7684\u8bed\u53e5\uff09\uff0c\u53ea\u6709\u4e00\u4e2a\u5728\u529f\u80fd\u4e0a\u4e0e\u5176\u5b83\u4e09\u4e2a\u8bed\u53e5\u4e0d\u7b49\u4ef7\uff0c\u5b83\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb10",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "3",
      "optionC": "1",
      "optionAnswer": "C",
      "answer": "%\u6307\u7684\u662f\u53d6\u4f59\u6570\uff0c5\u9664\u4ee52\u7684\u4f59\u6570\u4e3a1\u3002",
      "optionB": "2",
      "type": "1",
      "optionA": "2.5",
      "question": "\u5728C\u8bed\u8a00\u7a0b\u5e8f\u4e2d\uff0c\u8868\u8fbe\u5f0f5%2\u7684\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb30",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "4",
      "optionC": "\u6b7b\u5faa\u73af",
      "optionAnswer": "A",
      "answer": "\u9996\u5148\uff0ci=1\uff0c\u8fdb\u5165for\u5faa\u73af\uff0c\u6267\u884csum+=i\u540esum\u7684\u503c\u4e3a3\uff1b\u6267\u884ci+=2\uff0ci\u7684\u503c\u53d8\u4e3a3\uff0c\u6b64\u65f6\u4ecd\u7136\u6ee1\u8db3i<=3\u7684\u5faa\u73af\u6761\u4ef6\uff0c\u7ee7\u7eed\u6267\u884cfor\u5faa\u73af\uff0csum\u7684\u503c\u53d8\u4e3a6\uff1b\u518d\u6b21\u6267\u884ci+=2\u540ei\u7684\u503c\u53d8\u4e3a5\uff0c\u4e0d\u6ee1\u8db3\u5faa\u73af\u6761\u4ef6\uff0c\u9000\u51fa\u5faa\u73af\uff0c\u56e0\u6b64sum\u7684\u503c\u4e3a6\u3002",
      "optionB": "3",
      "type": "1",
      "optionA": "6",
      "question": "\u6709\u5982\u4e0b\u7a0b\u5e8f\nmain(){\n    int i,sum=2;\n    for(i=1;i<=3;i+=2){\n        sum+=i;printf(\u201c%d\\n\u201d,sum);\n    }\n}\n\u8be5\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb29",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "a=50 b=30 c=50",
      "optionC": "a=50 b=30 c=10    ",
      "optionAnswer": "B",
      "answer": "if\uff08a>b\uff09 a=b\uff1b\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u6b64\u8bed\u53e5\u4e0d\u6267\u884c\uff1bb=c\uff1b\u76f4\u63a5\u8d4b\u503c\u8bed\u53e5\uff0cb\u76f4\u63a5\u7b49\u4e8ec=30\uff1bc=a\uff1bc\u76f4\u63a5\u7b49\u4e8ea\u3002",
      "optionB": "a=10 b=30 c=10",
      "type": "1",
      "optionA": "a=10 b=50 c=10  ",
      "question": "\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f( )\nint a=10,b=50,c=30;\nif(a>b) a=b;\nb=c;\nc=a;\nprintf(\"a=%2d b=%2d c=%2d\\n\",a,b,c);",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb15",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "(int)(11.0/3+0.5)",
      "optionC": "(float)11/3",
      "optionAnswer": "D",
      "answer": "A.\u6574\u6570\u7684\u8fd0\u7b97\u7ed3\u679c\u4ecd\u7136\u4e3a\u6574\u6570\uff0c\u7ed3\u679c\u4e3a3\uff1bB.\u7531\u4e8e11.0\u662ffloat\u578b\uff0c\u56e0\u6b64\u8ba1\u7b97\u7ed3\u679c\u4e5f\u4e3afloat\u578b\uff0c\u503c\u4e3a3.0\uff1bC.\u7ed3\u679c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e3afloat\u7c7b\u578b\uff0c\u503c\u4e3a3.0\uff1bD.11.0/3+0.5=4.1\uff0c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e3a\u6574\u578b\uff0c\u7ed3\u679c\u4e3a4\u3002",
      "optionB": "11.0/3",
      "type": "1",
      "optionA": "11/3",
      "question": "\u4e0b\u9762(    )\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a4.",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb1b",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "4.6",
      "optionC": "4.333333",
      "optionAnswer": "A",
      "answer": "13.8\u53d6\u6574\u4e4b\u540e\u7b49\u4e8e13\uff0c13\u5bf93\u6c42\u4f59\u662f1\uff0c\u9009A\u3002",
      "optionB": "4",
      "type": "1",
      "optionA": "1",
      "question": "\u82e5\u201cint n; float f=13.8;\u201d,\u5219\u6267\u884c\u201cn=(int)f%3\u201d\u540e\uff0cn\u7684\u503c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb26",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u65e0\u8f93\u51fa\u7ed3\u679c",
      "optionC": "\uff03\uff03\uff03\uff03&&&&",
      "optionAnswer": "A",
      "answer": "k\u7684\u503c\u4e3a-3\uff0c\u6ee1\u8db3if\u8bed\u53e5\u4e2d\u7684\u6761\u4ef6k<=0\uff0c\u56e0\u6b64\u8f93\u51fa\u7ed3\u679c\u4e3aA\u3002",
      "optionB": "&&&&",
      "type": "1",
      "optionA": "\uff03\uff03\uff03\uff03",
      "question": "\u82e5k\u662fint\u578b\u53d8\u91cf\uff0c\u4e14\u6709\u4e0b\u9762\u7684\u7a0b\u5e8f\u6bb5\uff1a\nint k;\nk= -3;\nif  (k<=0)\n    printf(\u201c####\u201d);\nelse\n    printf(\u201c&&&&\u201d);\n\u4e0a\u9762\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb32",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "char a[3]={\u2018a\u2019,\u2019b\u2019,\u2019c\u2019}",
      "optionC": "int k=5,a[k];",
      "optionAnswer": "D",
      "answer": "A\u5e94\u4e3a\u65b9\u62ec\u53f7[]\uff1bB\u4e2d\u6ca1\u6709\u5b9a\u4e49\u6570\u7ec4\u5927\u5c0f\uff1bC\u65b9\u62ec\u53f7\u5185\u5fc5\u987b\u662f\u5e38\u91cf\uff1bD\u6b63\u786e\u3002",
      "optionB": "int a[];",
      "type": "1",
      "optionA": "char a(10);",
      "question": "\u4ee5\u4e0b\u5bf9\u4e00\u7ef4\u6570\u7ec4a\u7684\u6b63\u786e\u8bf4\u660e\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb19",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "\u4ee5\u4e0a\u7ed3\u679c\u90fd\u4e0d\u5bf9",
      "optionC": "3",
      "optionAnswer": "C",
      "answer": "m=(w<x)?w:x;\u5c06w\u548cx\u4e2d\u7684\u8f83\u5c0f\u503c\u8d4b\u7ed9m\uff0c\u5373m=11\uff1bm=(m<y)?m:y;\u5c06m\u548cy\u4e2d\u7684\u8f83\u5c0f\u503c\u8d4b\u7ed9m\uff0c\u5373m=3",
      "optionB": "2",
      "type": "1",
      "optionA": "1",
      "question": "\u6709\uff1aint w=11,x=12,y=3,m; \u6267\u884c\u4e0b\u9762\u8bed\u53e5\u540em\u7684\u7ed3\u679c\u662f(  ) m=(w<x)?w:x; m=(m<y)?m:y;",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb0c",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "double",
      "optionC": "int",
      "optionAnswer": "C",
      "answer": "\u5f53\u64cd\u4f5c\u6570\u7684\u7c7b\u578b\u4e0d\u540c\uff0c\u800c\u4e14\u4e0d\u5c5e\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u7ecf\u5e38\u9700\u8981\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u5c06\u64cd\u4f5c\u6570\u8f6c\u5316\u4e3a\u6240\u9700\u8981\u7684\u7c7b\u578b\u3002\u663e\u5f0f\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u9700\u8981\u4f7f\u7528\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u683c\u5f0f\u5982\u4e0b\uff1atype\uff08<expression>\uff09\u6216\uff08type\uff09<expression>\u5176\u4e2d\uff0ctype\u4e3a\u7c7b\u578b\u63cf\u8ff0\u7b26\uff0c\u5982int\uff0cfloat\u7b49\u3002<expression>\u4e3a\u8868\u8fbe\u5f0f\u3002\u7ecf\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u8fd0\u7b97\u540e\uff0c\u8fd4\u56de\u4e00\u4e2a\u5177\u6709type\u7c7b\u578b\u7684\u6570\u503c\uff0c\u8fd9\u79cd\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u64cd\u4f5c\u5e76\u4e0d\u6539\u53d8\u64cd\u4f5c\u6570\u672c\u8eab\uff0c\u8fd0\u7b97\u540e\u64cd\u4f5c\u6570\u672c\u8eab\u672a\u6539\u53d8\u3002",
      "optionB": "char",
      "type": "1",
      "optionA": "float",
      "question": "\u82e5\u6709\u4ee5\u4e0b\u7c7b\u578b\u8bf4\u660e\u8bed\u53e5\uff1achar w;int x;float y;double z;\u5219\u8868\u8fbe\u5f0fw-x*y/z\u7684\u7ed3\u679c\u4e3a( D  )\u7c7b\u578b,\u8868\u8fbe\u5f0f(int)(x+y-z*w)\u7684\u7ed3\u679c\u4e3a(   )\u7c7b\u578b\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb17",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "d'",
      "optionC": "\u9519\u8bef",
      "optionAnswer": "B",
      "answer": "c2 \u7684ASCII\u7801\u4e3a\u5341\u8fdb\u5236\u657068\uff0c\u56e0\u4e3ac2\u5b57\u7b26\u578b\u7684\u6240\u4ee5\u5e94\u8be5\u662fD\u3002",
      "optionB": "\u2018D\u2019",
      "type": "1",
      "optionA": "68",
      "question": "\u5df2\u77e5\u5b57\u6bcdA\u7684ASCII\u7801\u4e3a\u5341\u8fdb\u5236\u657065\uff0c\u4e14c2\u4e3a\u5b57\u7b26\u578b\uff0c\u5219\u6267\u884c\u8bed\u53e5c2='A'+'6'-'3';\u540e\uff0cc2\u4e2d\u7684\u503c\u4e3a",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb22",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "10",
      "optionC": "11",
      "optionAnswer": "A",
      "answer": "\u7531\u4e8ecase\u4e2d\u7f3a\u5c11break\u8bed\u53e5\uff0c\u56e0\u6b64\u5728case 10\u4e4b\u540e\u7a0b\u5e8f\u4f1a\u4e00\u76f4\u6267\u884c\uff0c\u56e0\u6b64\u7ed3\u679c\u4e3a13\u3002",
      "optionB": "12",
      "type": "1",
      "optionA": "13",
      "question": "\u82e5int i=10; \u6267\u884c\u4e0b\u5217\u7a0b\u5e8f\u540e\uff0c\u53d8\u91cfi\u7684\u6b63\u786e\u7ed3\u679c\u662f\nswitch ( i ) {\n    case   9:  i+=1;\n    case  10:  i+=1;\n    case  11:  i+=1;\n    default :  i+=1;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb2f",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "1",
      "optionC": "4",
      "optionAnswer": "C",
      "answer": "\u5728j=3\u65f6\u4ecd\u7136\u6ee1\u8db3\u5faa\u73af\u6761\u4ef6\uff0c\u56e0\u6b64j\u4ecd\u7136\u4f1a\u6267\u884c\u4e00\u6b21j++\u7684\u64cd\u4f5c\uff0c\u6b64\u65f6j=4\uff0c\u4e0d\u6ee1\u8db3j<=3\u7684\u6761\u4ef6\uff0c\u9000\u51fa\u5faa\u73af\u3002",
      "optionB": "3",
      "type": "1",
      "optionA": "0",
      "question": "\u6267\u884c\u8bed\u53e5{for(j=0;j<=3;j++) a=1;}\u540e\u53d8\u91cfj\u7684\u503c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb0e",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "0",
      "optionC": "3",
      "optionAnswer": "B",
      "answer": "c\u8bed\u8a00\u4e2d\u6574\u6570\u7684\u8fd0\u7b97\u7ed3\u679c\u4ecd\u7136\u4e3a\u6574\u6570\u3002",
      "optionB": "1",
      "type": "1",
      "optionA": "1.6",
      "question": "\u5728C\u8bed\u8a00\u7a0b\u5e8f\u4e2d\uff0c\u8868\u8fbe\u5f0f8/5\u7684\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb1e",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "\u975e0\u7684\u6570",
      "optionC": "\u975e0\u6574\u6570",
      "optionAnswer": "D",
      "answer": "C\u8bed\u8a00\u4e2d\uff0c0\u662f\u5047\u503c\uff0c\u5176\u4ed6\u7684\u90fd\u662f\u771f\u503c\u3002",
      "optionB": "\u5927\u4e8e0\u7684\u6570",
      "type": "1",
      "optionA": "true",
      "question": "\u5728C\u8bed\u8a00\u4e2d\uff0c\u8ba4\u4e3a(        )\u4e3a\u903b\u8f91\"\u771f\" ",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb1a",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "b=1/(a*1.0)",
      "optionC": "b=1/(float)a ",
      "optionAnswer": "B",
      "answer": "B\u4e2d\u6574\u6570\u4e0e\u6574\u6570\u7684\u8fd0\u7b97\u7ed3\u679c\u4ecd\u7136\u4e3a\u6574\u6570\uff0c\u6240\u4ee51/a\u7684\u503c\u4e3a0\uff0c\u5f3a\u5236\u8f6c\u5316\u4e3afloat\u578b\u540e\u7ed3\u679c\u4e3a0.0\u3002",
      "optionB": "b=(float)(1/a) ",
      "type": "1",
      "optionA": "b=1.0/a ",
      "question": "\u8bbe\u6574\u578b\u53d8\u91cf a=2\uff0c\u5219\u6267\u884c\u4e0b\u5217\u8bed\u53e5\u540e\uff0c\u6d6e\u70b9\u578b\u53d8\u91cfb\u7684\u503c\u4e0d\u4e3a0.5\u7684\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb1f",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "(x<=y)&(y<=z)",
      "optionC": "(x<=y<=z) ",
      "optionAnswer": "A",
      "answer": "\u9898\u4e2dX<=Y<=Z\u7684\u610f\u601d\u4e3aX<=Y\u5e76\u4e14Y<=Z\uff0c\u5728c\u8bed\u8a00\u4e2d\uff0c\u8981\u8868\u793a\u201c\u4e14\u201d\u7684\u5173\u7cfb\uff0c\u5e94\u7528\u201c\u4e0e\u201d\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u5373\u201c\uff06\uff06\u201d\uff0c\u6545\u9009\u62e9A\u9009\u9879\u3002",
      "optionB": "(x<=y)AND(y<=z)",
      "type": "1",
      "optionA": "(x<=y)&&(y<=z)",
      "question": "\u8868\u793a\u5173\u7cfbx<=y<=z\u7684c\u8bed\u8a00\u8868\u8fbe\u5f0f\u4e3a",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb24",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "0",
      "optionC": "9",
      "optionAnswer": "A",
      "answer": "if\uff08a=0\uff09y\u2014\uff1b//a=0\u662f\u5148\u7ed9a\u8d4b\u503c\u4e3a0\u518d\u5224\u65ad,\u8fd9\u91cc\u7684a\u4e3a0\u4e86if(a)\u5c31\u662f\u5047\u7684,\u4e0d\u6210\u7acb\uff1belse if \uff08a>0\uff09//\u7ee7\u7eed\u5224\u65ad a>0  \u4e0a\u9762\u5df2\u7ecf\u80fd a\u8d4b\u503c\u4e3a0,\u8fd9\u91cc\u4e5f\u4e0d\u6210\u7acb\uff1by++\uff1belse y+=y\uff1b//\u505a\u8fd9\u4e00\u6b65\u4e86,y=y+y=20\uff0c\u6240\u4ee5a\u7684\u503c\u662f0,y\u7684\u503c\u662f20",
      "optionB": "11",
      "type": "1",
      "optionA": "20",
      "question": "\u5047\u5b9a\u6240\u6709\u53d8\u91cf\u5747\u5df2\u6b63\u786e\u5b9a\u4e49\uff0c\u5219\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u8fd0\u884c\u540ey\u7684\u503c\u662f\uff08 \uff09\nint a=0,y=10;\nif(a=0)\n    y--;\nelse if(a>0)\n    y++;\nelse\n    y+=y;",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb2d",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "\u6709\u8bed\u6cd5\u9519\u8bef",
      "optionC": "\u5faa\u73af\u6267\u884c\u4e8c\u6b21",
      "optionAnswer": "A",
      "answer": "\u8fdb\u5165do\u5faa\u73af\u540ex\u7684\u503c\u53d8\u4e3a1\uff0c\u6ee1\u8db3while(x>0)\u7684\u6761\u4ef6\uff0c\u56e0\u6b64\u4f1a\u4e00\u76f4\u6267\u884cdo while\uff0c\u9020\u6210\u6b7b\u5faa\u73af\u3002",
      "optionB": "\u5faa\u73af\u6267\u884c\u4e00\u6b21",
      "type": "1",
      "optionA": "\u662f\u6b7b\u5faa\u73af",
      "question": "\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5( )\nx=-1;\ndo {\n    x=x*x; \n}while(x>0);",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb27",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "a=2,b=2",
      "optionC": "a=1,b=0",
      "optionAnswer": "D",
      "answer": "case\u540e\u9762\u8ddf\u7684\u5fc5\u987b\u662f\u6574\u578b\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002\u8fdb\u5165case\u540e\uff0c\u5982\u679c\u6ca1\u6709\u9047\u5230break\u8bed\u53e5\u5c31\u4f1a\u4e00\u76f4\u5f80\u4e0b\u6267\u884c\uff0c\u540e\u9762\u5176\u4ed6case\u6216default\u5206\u652f\u7684\u8bed\u53e5\u4e5f\u4f1a\u88ab\u6267\u884c\u5230\uff0c\u76f4\u5230\u9047\u5230break\uff0c\u6216\u8005\u6267\u884c\u5230\u6574\u4e2aswitch\u8bed\u53e5\u5757\u7684\u672b\u5c3e\u3002\u9898\u76ee\u4e2d\u7ed9\u51fa\u4e86\u4e09\u4e2acase\u8bed\u53e5\uff1acase 0\u3001case 1\u3001case 2\u3002\u5f53x\u4e3a0\u65f6\uff0c\u4ececase 1\u8bed\u53e5\u5f00\u59cb\u6267\u884c\uff0c\u56e0\u4e3a\u6ca1\u6709break\u8bed\u53e5\uff0c\u5c06\u4e00\u76f4\u6267\u884c\u5230\u51fd\u6570\u672b\u5c3e\u7ed3\u675f\uff0c\u5373\u6267\u884ccase 1\u3001case 2\u4e24\u6761\u8bed\u53e5\u3002\u6267\u884c\u5b8ccase 1\u65f6\uff0ca=1\uff0cb=1\uff1b\u6267\u884c\u5b8ccase 2\u65f6\uff0ca=2\uff0cb=2\u3002",
      "optionB": "a=1,b=1",
      "type": "1",
      "optionA": "a=2,b=1",
      "question": "main(){\n    int x=0, a=0, b=0;\n    switch(x){\n        case 0:\n            b++;\n        case 1:\n            a++;\n        case 2:\n            a++;\n        b++;\n    }\n    printf(\u201ca=%d,b=%d\\n\u201d,a,b);\n}\u8be5\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb2a",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "y==1",
      "optionC": "y=!0",
      "optionAnswer": "A",
      "answer": "y == 0 !y\u5c31\u662f\u975e0 \u771f\uff1by!=1 y \u53ef\u4ee5\u7b49\u4e8e 2,3,!y \u662f\u5047\uff1by!=0 y \u662f1\u65f6 y!=0 \u662f\u771f ,!y\u662f\u5047\uff1by==1 y\u662f1\u65f6 \u662f\u771f,!y \u662f\u5047",
      "optionB": "y!=1",
      "type": "1",
      "optionA": "y==0",
      "question": "\u8bed\u53e5while\uff08\uff01y\uff09\uff1b\u4e2d\u7684\u8868\u8fbe\u5f0f\uff01y\u7b49\u4ef7\u4e8e",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb31",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "5",
      "optionC": "4",
      "optionAnswer": "C",
      "answer": "\u5f53i=3\u65f6\u4e0d\u6ee1\u8db3\u6761\u4ef6\u9000\u51fa\u5faa\u73af\uff0c\u4f46\u662f\u201ci++\u201d\u4f7fi\u518d\u52a01\uff0c\u5c31\u53d8\u6210\u4e864",
      "optionB": "3",
      "type": "1",
      "optionA": "2",
      "question": "\u6267\u884c\u4e0b\u5217\u8bed\u53e5\u540e\uff0c\u53d8\u91cfi\u7684\u503c\u4e3a\uff08\uff09\nfor ( i=0;  i++<3 ;   ) ;",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb2e",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "9\u6b21",
      "optionC": "10\u6b21",
      "optionAnswer": "A",
      "answer": "i\u88ab\u8d4b\u503c\u4e3a10\u4e0ex>0\u662f\u6c38\u771f\u7684\u3002\u4e00\u5f00\u59cbi=0\u53ea\u662f\u7ed9i\u9644\u4e86\u4e00\u4e2a\u521d\u503c\u3002\u6240\u4ee5\u7a0b\u5e8f\u4f1a\u6267\u884c\u65e0\u6570\u6b21\u3002",
      "optionB": "\u4e0d\u786e\u5b9a\u6b21",
      "type": "1",
      "optionA": "\u65e0\u9650\u6b21",
      "question": "\u5faa\u73af\u201cfor(i=0,x=1;i=10&&x>0;i++);\u201d\u7684\u5faa\u73af\u6267\u884c",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb18",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "\u540c\u4e00\u4e2a\u8fd0\u7b97\u7b26\u53f7\u5728\u4e0d\u540c\u7684\u573a\u5408\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u542b\u4e49",
      "optionC": "\u5728\u8d4b\u503c\u8868\u8fbe\u5f0f\u4e2d\u7b49\u53f7(=)\u5de6\u8fb9\u7684\u53d8\u91cf\u548c\u53f3\u8fb9\u7684\u503c\u53ef\u4ee5\u662f\u4e0d\u540c\u7c7b\u578b",
      "optionAnswer": "A",
      "answer": "C\u8bed\u8a00\u4e2d\uff0c\u5927\u5c0f\u5199\u4ee3\u8868\u4e0d\u540c\u7684\u4e24\u4e2a\u6807\u8bc6\u7b26\u3002A\u9519\u8bef\u3002",
      "optionB": "\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u4ee5\u5728\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e2d",
      "type": "1",
      "optionA": "\u5927\u5199\u5b57\u6bcd\u548c\u5c0f\u5199\u5b57\u6bcd\u7684\u610f\u4e49\u76f8\u540c",
      "question": "\u4e0b\u5217\u5173\u4e8eC\u8bed\u8a00\u7684\u53d9\u8ff0\u9519\u8bef\u7684\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb14",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "!((a<b)&&!c||1)",
      "optionC": "a||b+c&&b-c  ",
      "optionAnswer": "D",
      "answer": "||\u548c&&\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e+\u548c-\uff0c||\u548c&&\u7684\u4f18\u5148\u7ea7\u76f8\u7b49\uff0c\u4e14\u662f\u5de6\u7ed3\u5408\u7684\uff0c\u5c31\u662f\u4ece\u5de6\u8fb9\u5f00\u59cb\u7ed3\u5408\u5230\u53f3\u8fb9\u3002",
      "optionB": "a<=b",
      "type": "1",
      "optionA": "\u2019a\u2019&&\u2019b\u2019",
      "question": "\u8bbea,b\u548cc\u90fd\u662fint\u578b\u53d8\u91cf\uff0c\u4e14a=3,b=4,c=5,\u5219\u4e0b\u9762\u8868\u8fbe\u5f0f\u4e2d\uff0c\u503c\u4e3a0\u7684\u8868\u8fbe\u5f0f\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb0d",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "\u3008=",
      "optionC": "=",
      "optionAnswer": "A",
      "answer": "%=\u662f\u53d6\u6a21\u8fd0\u7b97\uff0c\u4e5f\u5c31\u662f\u6c42\u4f59\u6570\u7684\u8fd0\u7b97\uff0c\u53ea\u6709\u6574\u6570\u624d\u80fd\u53d6\u6a21\u3002",
      "optionB": "/",
      "type": "1",
      "optionA": "%=",
      "question": "C\u8bed\u8a00\u4e2d\u8fd0\u7b97\u5bf9\u8c61\u5fc5\u987b\u662f\u6574\u578b\u7684\u8fd0\u7b97\u7b26\u662f(      )",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb28",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "3",
      "optionC": "2",
      "optionAnswer": "C",
      "answer": "x\u503c\u4e3a-10\uff0cy\u503c\u4e3a1\uff0c\u5728\u7b2c\u4e00\u4e2aif\u5224\u65ad\u4e2d\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fdb\u5165\u7b2c\u4e8c\u5c42if\u5224\u65ad\uff0c\u7531\u4e8ey>0\uff0c\u6267\u884celse\u8bed\u53e5\uff0cz=z+1=2\uff0c\u6240\u4ee5\u7ed3\u679c\u4e3aC\u3002",
      "optionB": "1",
      "type": "1",
      "optionA": "0",
      "question": "\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f:( )\nmain(){\n    int x = -10,y = 1,z = 1;\n    if(x<y)\n        if(y<0)\n            z=0;\n        else\n            z = z+1;\n    printf(\u201c%d\\n\u201d,z);\n}",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb1d",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "\uff08int\uff09x+y \u548c\uff08int\uff09\uff08x+y\uff09\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\u8868\u8fbe\u5f0f",
      "optionC": "\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u65f6\uff0c\u7c7b\u578b\u8bf4\u660e\u7b26\u5fc5\u987b\u52a0\u62ec\u53f7",
      "optionAnswer": "C",
      "answer": "A.\u8868\u8fbe\u5f0f\u6b63\u786e\uff1bB.C\u8bed\u8a00\u5141\u8bb8\u7c7b\u578b\u6df7\u5408\u8fd0\u7b97\uff1bC\u6b63\u786e\uff1bD.(int)x+y\u5148\u5c06x\u8f6c\u6362\u4e3a\u6574\u578b\uff0c\u518d\u4e0ey\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\uff0c(int)(x+y)\u5148\u5c06x\u4e0ey\u76f8\u52a0\uff0c\u7ed3\u679c\u518d\u8f6c\u6362\u4e3a\u6574\u578b\uff0c\u4e24\u4e2a\u5f0f\u5b50\u662f\u4e0d\u540c\u7684\u3002",
      "optionB": "C\u8bed\u8a00\u4e0d\u5141\u8bb8\u7c7b\u578b\u7684\u6df7\u5408\u8fd0\u7b97",
      "type": "1",
      "optionA": "'x'+5\u662f\u4e00\u4e2a\u9519\u8bef\u7684\u8868\u8fbe\u5f0f",
      "question": "\u4ee5\u4e0b\u8bf4\u6cd5\u6b63\u786e\u7684\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb12",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "1",
      "optionC": "2",
      "optionAnswer": "B",
      "answer": "a<b?a:b\u7684\u610f\u601d\u662f\uff0c\u5982\u679ca<b\u4e3atrue\u7ed3\u679c\u4e3aa\uff1b\u5982\u679ca<b\u4e3afalse\u7ed3\u679c\u4e3ab\u3002\u672c\u9898\u4e2dx<z\u4e3atrue\uff0c\u7ed3\u679c\u4e3ay\u7684\u503c3\u3002",
      "optionB": "3",
      "type": "1",
      "optionA": "4",
      "question": "\u82e5int x=2,y=3,z=4 \u5219\u8868\u8fbe\u5f0fx<z?y:z\u7684\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb0f",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "30",
      "optionC": "40",
      "optionAnswer": "B",
      "answer": "\u4f8b\u5982\u5f0f\u5b50a+=b\uff0c\u5373\u628aa+b\u7684\u503c\u518d\u8d4b\u503c\u7ed9a\u3002\u5bf9\u4e8e\u672c\u9898\u6765\u8bf4\uff0cx+=x\u5373\u628ax+x\u7684\u503c\u8d4b\u7ed9x\uff0cx\u6700\u540e\u4e3a20\u3002",
      "optionB": "20",
      "type": "1",
      "optionA": "10",
      "question": "\u8bbex\u4e3aint\u578b\u53d8\u91cf,\u5219\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\u540e,x\u7684\u503c\u4e3a",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb21",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "c1>=\u2019A\u2019 && c1<=\u2019Z\u2019",
      "optionC": "\uff08\u2019A\u2019<=c1\uff09AND (\u2018Z\u2019>=c1\uff09",
      "optionAnswer": "D",
      "answer": "C\u8bed\u8a00\u89c4\u5b9a\uff0c\u5b57\u7b26\u5e38\u91cf\u5728\u7a0b\u5e8f\u4e2d\u8981\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u3002\u5224\u65adc1\u662f\u5426\u4e3a\u5927\u5199\u5b57\u6bcd\u7684\u5145\u8981\u6761\u4ef6c1\uff1e='A'\uff0c\u548cc1='Z'\uff0c\u7528\u903b\u8f91\u4e0e(&&)\u6765\u8868\u793a\u3002\u6240\u4ee5\u9009\u9879D)\u6b63\u786e",
      "optionB": "(c1>=\u2019A\u2019) & (c1<=\u2019Z\u2019)",
      "type": "1",
      "optionA": "\u2019A\u2019<=c1<=\u2019Z\u2019 ",
      "question": "\u5224\u65adchar\u578b\u53d8\u91cfc1\u662f\u5426\u4e3a\u5927\u5199\u5b57\u6bcd\u7684\u8868\u8fbe\u5f0f\u4e3a",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb1c",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "puts(x)",
      "optionC": "putchar(x)",
      "optionAnswer": "C",
      "answer": "\u8f93\u51fa\u51fd\u6570\u662fputchar\u548cprintf\uff0cputchar\u53ea\u80fd\u8f93\u51fa\u5b57\u7b26\u5e38\u91cf\u548c\u5b57\u7b26\u578b\u53d8\u91cf\u3002getchar\u548cputchar\u662f\u4e00\u5bf9\uff0c\u9488\u5bf9\u5b57\u7b26\u53ca\u5b57\u7b26\u53d8\u91cf\u8fdb\u884c\u64cd\u4f5c\uff0cgetchar()\u53ef\u4ee5\u63a5\u53d7\u5404\u79cd\u5b57\u7b26\uff0c\u5305\u62ec\u7a7a\u683c\u56de\u8f66\uff0c\u76f8\u5e94\u7684putchar\u53ef\u4ee5\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u3002",
      "optionB": "fputc(x)",
      "type": "1",
      "optionA": "getchar(x)",
      "question": "\u5728C\u8bed\u8a00\u7684\u5e93\u51fd\u6570\u4e2d,\u53ef\u4ee5\u8f93\u51fachar\u578b\u53d8\u91cfx\u503c\u7684\u8bed\u53e5\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb25",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "3",
      "optionC": "35",
      "optionAnswer": "B",
      "answer": "\u7a0b\u5e8f\u662f\u4e00\u6b65\u4e00\u6b65\u5f80\u4e0b\u6267\u884c\u7684, \u5bf9\u4e8eif\u8bed\u53e5\uff0c\u53ea\u6709\u4e3a\u771f\u7684\u65f6\u5019\u624d\u4f1a\u6267\u884c\u5176\u540e\u9762\u7684\u8bed\u53e5if(!a)\u4f1a\u6267\u884c\u540e\u9762\u7684\u8bed\u53e5\uff0c\u56e0\u4e3a\u975e\u96f6\u5373\u4e3a\u771f\uff0c\u6267\u884c\u5230\u8fd9\u6b65\u540e\uff0cx=34,\u4f46\u662f\u7a0b\u5e8f\u7ee7\u7eed\u5f80\u4e0b\uff0cif(c)\u540e\u9762\u7684\u8bed\u53e5\u4e0d\u6267\u884c\uff0c\u5c31\u6267\u884c\u4e86else\u540e\u7684\u8bed\u53e5\uff0c\u6240\u4ee5x=4\u3002",
      "optionB": "4",
      "type": "1",
      "optionA": "34",
      "question": "\u5047\u5b9a\u6240\u6709\u53d8\u91cf\u5747\u5df2\u6b63\u786e\u5b9a\u4e49\uff0c\u5219\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u8fd0\u884c\u540ex\u7684\u503c\u662f\uff08\uff09\u3002\na=b=c=0;\nx=35;\nif(!a) \n    x--;\nelse\n    if(b);\nif(c)\n    x=3;\nelse\n    x=4;",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb2c",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": " do x++ while(x==10);",
      "optionC": "do 2;while(x==b)",
      "optionAnswer": "D",
      "answer": "D\u9009\u9879\u4e2dx++\u662f\u4e00\u6761\u8bed\u53e5\uff0c\u540e\u9762\u8981\u52a0;\u3002",
      "optionB": "while(0);",
      "type": "1",
      "optionA": "while(x=y) 5\uff1b",
      "question": "\u4e0b\u5217\u5faa\u73af\u8bed\u53e5\u4e2d\u6709\u8bed\u6cd5\u9519\u8bef\u7684\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b6edfce4b0ef2b5755eb16",
      "typeID": "54993f49e4b06783458c3a94",
      "optionD": "6",
      "optionC": "5",
      "optionAnswer": "C",
      "answer": "x=x%(y+z)\uff0cx=5%(5+5)=5\uff0c\u7ed3\u679c\u4e3a5\u3002",
      "optionB": "1",
      "type": "1",
      "optionA": "0",
      "question": "\u5df2\u77e5int x=5,y=5,z=5\uff1b\u6267\u884c\u8bed\u53e5x%=y+z\uff1b\u540e\uff0cx\u7684\u503c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143232",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u672a\u77e5",
      "optionC": "111111",
      "optionAnswer": "B",
      "answer": "\u5f53*p = 5\u65f6\uff0c\u4f1a\u518d\u8c03\u7528add(p)\uff0c\u7136\u540e\u5148\u8f93\u51fa*p = 6\uff0c\u7136\u540e\u8fdb\u884c\u5224\u65ad\uff0c\u76f4\u63a5\u8df3\u51fa\u7a0b\u5e8f\u3002\u6240\u4ee5\u4ece1\u4e00\u76f4\u52306",
      "optionB": "123456",
      "type": "1",
      "optionA": "12345",
      "question": "\u4e0b\u9762\u7a0b\u5e8f\u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff08\uff09\u3002#include<stdio.h>\nvoid add(int *p)\n{\n    (*p)++;\n    printf(\"%d\",*p);\n    if (*p>5)\n    {\n        return;\n    }\n    add(p);\n}\nint main()\n{\n    int i=0;\n    add(&i);\n    return 0;\n}",
      "title": "C&C++"
    },
    {
      "answer": "\u5982\u679c\u53ea\u6709\u4e00\u6761\u9cc4\u9c7c\uff0c\u602a\u7269\u663e\u7136\u662f\u5371\u9669\u7684\uff1b\n\u4e24\u6761\u9cc4\u9c7c\u7684\u65f6\u5019\uff0c\u5148\u4e0b\u624b\u7684\u9cc4\u9c7c\u4f1a\u6210\u4e3a\u53e6\u5916\u4e00\u6761\u9cc4\u9c7c\u7684\u98df\u7269\uff0c\u6240\u4ee5\u602a\u7269\u663e\u7136\u5f88\u5b89\u5168\uff1b\n\u4e09\u6761\u9cc4\u9c7c\u7684\u65f6\u5019\uff0c\u628a\u5148\u4e0b\u624b\u7684\u9cc4\u9c7c\u5f53\u505a\u602a\u7269\uff0c\u5c31\u4f1a\u56de\u5230\u4e24\u6761\u9cc4\u9c7c\u7684\u72b6\u6001\uff0c\u6b64\u65f6\u5148\u4e0b\u624b\u7684\u9cc4\u9c7c\u975e\u5e38\u5b89\u5168\uff0c\u4e5f\u5c31\u662f\u8bf4\u602a\u7269\u663e\u7136\u5f88\u5371\u9669\uff1b\n\u56db\u6761\u9cc4\u9c7c\u7684\u65f6\u5019\uff0c\u5148\u4e0b\u624b\u7684\u9cc4\u9c7c\u4f1a\u9762\u4e34\u4e09\u6761\u9cc4\u9c7c\u7684\u72b6\u6001\uff0c\u6b64\u65f6\u4e5f\u5c31\u6ca1\u6709\u9cc4\u9c7c\u51c6\u5907\u5148\u4e0b\u624b\uff0c\u6240\u4ee5\u602a\u7269\u5f88\u5b89\u5168\uff1b\n\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u541e\u5403\u8fc7\u602a\u7269\u7684\u9cc4\u9c7c\u4f1a\u6210\u4e3a\u4e0b\u4e00\u4e2a\u602a\u7269\uff0c\u6210\u4e3aN-1\u6761\u9cc4\u9c7c\u7684\u730e\u7269\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679cN-1\u7684\u65f6\u5019\u5b89\u5168\uff0c\u5219N\u7684\u65f6\u5019\u5371\u9669\uff1b\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u5947\u6570\u6761\u9cc4\u9c7c\u602a\u7269\u4e0d\u5b89\u5168\uff0c\u5076\u6570\u6761\u9cc4\u9c7c\u602a\u7269\u5b89\u5168\u3002",
      "ID": "55f2e51de4b0152a6114336e",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u67d0\u602a\u7269\u88ab\u6d77\u6c34\u51b2\u4e0a\u4e00\u4e2a\u5b64\u5c9b\u3002\u9192\u6765\u65f6\u4ed6\u53d1\u73b0\u81ea\u5df1\u5904\u4e8e\u9669\u5883\u3002\u5468\u56f4\u6709N\u6761\u9cc4\u9c7c\u90fd\u864e\u89c6\u7708\u7708\u7684\u76ef\u7740\u4ed6\u3002\u6bcf\u6761\u9cc4\u9c7c\u770b\u4e0a\u53bb\u90fd\u997f\u5f97\u8db3\u4ee5\u628a\u4ed6\u541e\u4e0b\u53bb\u3002\u4e0d\u8fc7\uff0c\u4e8b\u60c5\u4e5f\u672a\u5fc5\u771f\u7684\u90a3\u4e48\u7cdf\u7cd5\u3002\u9cc4\u9c7c\u541e\u4e0b\u4ed6\u662f\u8981\u82b1\u8d39\u4f53\u529b\u7684\u3002\u8fd9\u4e9b\u9cc4\u9c7c\u73b0\u5728\u7684\u4f53\u529b\u90fd\u76f8\u5f53\uff0c\u7531\u4e8e\u730e\u98df\u9700\u8981\u82b1\u8d39\u4f53\u529b\uff0c\u6240\u4ee5\u541e\u4e0b\u602a\u7269\u7684\u9cc4\u9c7c\u4f1a\u7531\u4e8e\u4f53\u529b\u4e0b\u964d\u800c\u53ef\u80fd\u88ab\u5468\u56f4\u7684\u67d0\u6761\u9cc4\u9c7c\u541e\u4e86\u3002\u7c7b\u4f3c\u7684\uff0c\u541e\u9cc4\u9c7c\u7684\u8fd9\u6761\u9cc4\u9c7c\u4e5f\u53ef\u80fd\u88ab\u5176\u4ed6\u9cc4\u9c7c\u541e\u4e86\u3002\u56e0\u6b64\uff0c\u867d\u7136\u6709\u98df\u7269\u53ef\u730e\uff0c\u4f46\u4ed6\u4eec\u81ea\u5df1\u5e76\u4e0d\u60f3\u6210\u4e3a\u5176\u4ed6\u9cc4\u9c7c\u7684\u730e\u98df\u5bf9\u8c61\u3002\u6b63\u6240\u8c13\uff0c\u87b3\u8782\u6355\u8749\uff0c\u9ec4\u96c0\u5728\u540e\u3002\u6240\u4ee5\u9cc4\u9c7c\u4eec\u5728\u786e\u4fdd\u81ea\u5df1\u751f\u547d\u5b89\u5168\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u53d1\u52a8\u8fdb\u653b\u3002\u90a3\u4e48\uff0c\u602a\u7269\u5230\u5e95\u5b89\u5168\u4e48\uff1f\u4e3a\u4ec0\u4e48\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fde4b0152a611431e9",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6808\uff0c\u53ea\u8bfb\u5b58\u50a8\u533a",
      "optionC": "\u5806\uff0c\u53ea\u8bfb\u5b58\u50a8\u533a",
      "optionAnswer": "D",
      "answer": "\u6709\u4ee5\u4e0b\u7a0b\u5e8f\n\n#include <stdio.h>\nint fun( char s[ ] )\n{\n    char *p = s ;\n    while ( *p ! = 0 ) p+ +;\n    return ( p - s) ;\n}\nmain()\n{\n    printf ( \"% d\\n \", fun ( \"OABCDEF\" ) ) ;\n}\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f?",
      "optionB": "\u6808\uff0c\u6808",
      "type": "1",
      "optionA": "\u6808\uff0c\u5806",
      "question": " int main()\n{\n    char *p = \"hello,world\";\n    return 0;\n}\np\u548c\"hello,world\"\u5b58\u50a8\u5728\u5185\u5b58\u54ea\u4e2a\u533a\u57df\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de80d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u90fd\u4e0d\u5bf9",
      "optionC": "\u65e0\u9650",
      "optionAnswer": "A",
      "answer": "\u5224\u65ad\u8bed\u53e5  i = j = 0;  \u6267\u884c\u540e\uff0ci = 0\uff0c\u6b64\u65f6\u5224\u65adi\u7684\u503c\u4e3a\u5047\uff0c\n\u4e00\u6b21\u90fd\u4e0d\u6267\u884c",
      "optionB": "1",
      "type": "1",
      "optionA": "0",
      "question": "\u4e0b\u5217for\u5faa\u73af\u7684\u5faa\u73af\u4f53\u6267\u884c\u6b21\u6570\u4e3a\nfor(int i=10, j=1; i=j=0; i++, j--)",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a6114314b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u91cd\u8f7d\u9519\u8bef",
      "optionC": "\u9009\u9879A\uff09\u548c\u9009\u9879B\uff09\u90fd\u53ef\u80fd",
      "optionAnswer": "D",
      "answer": "\u53cb\u5143\u51fd\u6570\u91cd\u8f7d\u65f6,\u53c2\u6570\u5217\u8868\u4e3a1,\u8bf4\u660e\u662f1\u5143,\u4e3a2\u8bf4\u660e\u662f2\u5143\n\u6210\u5458\u51fd\u6570\u91cd\u8f7d\u65f6,\u53c2\u6570\u5217\u8868\u4e3a\u7a7a,\u662f\u4e00\u5143,\u53c2\u6570\u5217\u8868\u662f1,\u4e3a2\u5143",
      "optionB": "\u4e8c\u5143\u8fd0\u7b97\u7b26",
      "type": "1",
      "optionA": "\u4e00\u5143\u8fd0\u7b97\u7b26",
      "question": "\u5982\u679c\u53cb\u5143\u51fd\u6570\u91cd\u8f7d\u4e00\u4e2a\u8fd0\u7b97\u7b26\u65f6\uff0c\u5176\u53c2\u6570\u8868\u4e2d\u6ca1\u6709\u4efb\u4f55\u53c2\u6570\u5219\u8bf4\u660e\u8be5\u8fd0\u7b97\u7b26\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "answer": "\u8bbe\u8ba1\u4e00\u4e2a\u94fe\u5f0f\u7684\u961f\u5217\uff0c\u7531\u4e8e\u961f\u5217\u9891\u7e41\u7684\u6709\u4eba\u6765\u548c\u8d70\uff08\u63d2\u5165\u548c\u5220\u9664\uff09\uff0c\u6240\u4ee5\u94fe\u5f0f\u961f\u5217\u7684\u6548\u7387\u6700\u597d\uff0c\u961f\u5217\u4e2d\u5b58\u653e\u7684\u5143\u7d20\u662f\u4e00\u4e2a\u5bf9\u8c61\u548c\u961f\u957f\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5305\u62ec\u4e86 Person\u3001location\u5c5e\u6027\uff0cPerson\u662f\u6392\u961f\u7684\u7528\u6237\uff0c\u800clocation\u662f\u7528\u6237\u7684\u4f4d\u7f6e\uff0c\u5f53\u6709\u7528\u6237\u8fdb\u6765\u7684\u65f6\u5019\uff0c\u53ea\u80fd\u4ece\u961f\u5c3e\u8fdb\u5165\uff0c\u6b64\u65f6\u5c06\u4ed6\u7684 Person\u5bf9\u8c61\u52a0\u5165\uff0c\u5176location\u7b49\u4e8e\u961f\u957f\u52a01\uff0c\u5e76\u4e14\u961f\u957f\u52a01\uff1b\u5982\u679c\u6709\u7528\u6237\u9000\u51fa\uff08\u4efb\u4f55\u4f4d\u7f6e\uff09\uff0c\u627e\u5230\u9000\u51fa\u7684\u7528\u6237\u7684\u524d\u4e00\u4e2a\u7528\u6237\uff0c\u5220\u9664\u9000\u51fa\u7528\u6237\u7684\u7ed3\u70b9\uff0c \u5e76\u4e14\u5176\u540e\u7684\u5176\u4ed6\u7528\u6237\u7684location-1\uff0c\u961f\u957f\u4e5f-1.\n\u4e3a\u4e86\u66f4\u5feb\u7684\u627e\u5230\u9000\u51fa\u7684\u7528\u6237\uff0c\u53ef\u4ee5\u8003\u8651\u7528HashMap\u5b58\u50a8\u7528\u6237\u7684key\uff1aHash\u503c\uff0cval\uff1a\u94fe\u8868\u7ed3\u70b9\u7684\u4f4d\u7f6e\u3002",
      "ID": "55f2e51de4b0152a61143371",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bf7\u8bbe\u8ba1\u4e00\u4e2a\u6392\u961f\u7cfb\u7edf\uff0c\u80fd\u591f\u8ba9\u6bcf\u4e2a\u8fdb\u5165\u961f\u4f0d\u7684\u7528\u6237\u90fd\u80fd\u770b\u5230\u81ea\u5df1\u5728\u961f\u5217\u4e2d\u6240\u5904\u7684\u4f4d\u7f6e\u548c\u53d8\u5316\uff0c\u961f\u4f0d\u53ef\u80fd\u968f\u65f6\u6709\u4eba\u52a0\u5165\u548c\u9000\u51fa\uff1b\u5f53\u6709\u4eba\u9000\u51fa\u5f71\u54cd\u5230\u7528\u6237\u7684\u4f4d\u7f6e\u6392\u540d\u65f6\u9700\u8981\u53ca\u65f6\u53cd\u9988\u5230\u7528\u6237",
      "title": "C&C++"
    },
    {
      "answer": "#include\"iostream\"\n#include\"string\"\n#define MAX 100\nusing namespace std;\nbool check(string str1,string str2)\n{\n    bool flag = true;\n    for(int i=0; i<str1.length(); i++)\n    {\n        if(str1[i]!=str2[str1.length()-1-i])\n        {\n            flag = false;\n            return flag;\n        }\n    }\n    return flag;\n}\nint main(int argc, char* argv[])\n{\n    string str[MAX];\n    int n,a[MAX];\n    bool flag[MAX];\n    cin>>n;\n    for(int i=0; i<n; i++)\n    {\n        cin>>str[i];\n        a[i] = str[i].length();\n        flag[i] = true;\n    }\n    int num = 0;\n    for(int i=0; i<n; i++)\n    {\n        int len = a[i];\n        if(flag[i]==true)\n        {\n            for(int j=0;j<n;j++)\n            {\n                if(flag[j]==true&&len==a[j])\n                {\n                    if(check(str[i],str[j]))\n                    {\n                        num++;\n                        flag[i] = false;\n                        flag[j] = false;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    for(int i=0; i<n; i++)\n        cout<<str[i]<<'\\t';\n    cout<<endl;\n    cout<<\"The Number of Matched String Is: \"<<num<<endl;\n    getchar();\n    getchar();\n    return 0;\n}",
      "ID": "55f2e51de4b0152a61143375",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7f16\u7a0b\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6587\u4ef6\u6bcf\u4e00\u884c\u662f\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u6240\u6709\u7684\u9006\u5e8f\u5bf9\uff0c\u6bd4\u5982abc\u548ccba\u662f\u9006\u5e8f\u7684\u5bf9\u3002",
      "title": "C&C++"
    },
    {
      "answer": "2xx 4xx 5xx\nHTTP 1.1\u4e2d\u7684\u72b6\u6001\u7801\u88ab\u5206\u4e3a\u4e94\u5927\u7c7b\uff1a \n100-199 \u7528\u4e8e\u6307\u5b9a\u5ba2\u6237\u7aef\u5e94\u76f8\u5e94\u7684\u67d0\u4e9b\u52a8\u4f5c\u3002 \n200-299 \u7528\u4e8e\u8868\u793a\u8bf7\u6c42\u6210\u529f\u3002 \n300-399 \u7528\u4e8e\u5df2\u7ecf\u79fb\u52a8\u7684\u6587\u4ef6\u5e76\u4e14\u5e38\u88ab\u5305\u542b\u5728\u5b9a\u4f4d\u5934\u4fe1\u606f\u4e2d\u6307\u5b9a\u65b0\u7684\u5730\u5740\u4fe1\u606f\u3002 \n400-499 \u7528\u4e8e\u6307\u51fa\u5ba2\u6237\u7aef\u7684\u9519\u8bef\u3002 \n500-599 \u7528\u4e8e\u652f\u6301\u670d\u52a1\u5668\u9519\u8bef",
      "ID": "55f2e51ce4b0152a6114332b",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "http\u72b6\u6001\u7801\u4e2d\uff0c()\u8868\u793a\u8bbf\u95ee\u6210\u529f\uff0c()\u8868\u793a\u574f\u8bf7\u6c42\uff0c()\u8868\u793a\u670d\u52a1\u4e0d\u53ef\u7528",
      "title": "C&C++"
    },
    {
      "answer": "//\u7b5b\u9009\u6cd5\uff0c\u518d\u5229\u7528bitmap\u4f4d\u6807\u793a\u6574\u6570\n#include <vector>\nusing namespace std;\n \nclass Solution {\npublic:\n    /**\n     * \u83b7\u53d6n\u4e2a\u7d20\u6570\n     * n: \u7d20\u6570\u4e2a\u6570\n     * \u8fd4\u56de\uff1a\u6700\u5c0f\u7684N\u4e2a\u7d20\u6570\n     */\n    vector<int> getPrimes(int n) {\n        vector<int> ret;\n        if(n<=1) return ret;\n        long i,j;\n        unsigned char arr[1<<13]={0};\n        for(i=2;i<(1<<16);++i){\n            for(j=i+i;j<(1<<16);j=j+i){\n                arr[j/8]=arr[j/8]|(1<<(j%8));\n            }\n        }\n        for(i=2;i<(1<<16)&&n>0;++i){\n            if(!(arr[i/8]&(1<<(i%8)))){\n                ret.push_back(i);\n                --n;\n            }\n        }\n        return ret;\n    }\n};",
      "ID": "55f2e51de4b0152a61143384",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5199\u51fd\u6570\uff0c\u8f93\u51fa\u524dN\u4e2a\u7d20\u6570\u3002\u4e0d\u9700\u8981\u8003\u8651\u6574\u6570\u6ea2\u51fa\u95ee\u9898\uff0c\u4e5f\u4e0d\u9700\u8981\u4f7f\u7528\u5927\u6570\u5904\u7406\u7b97\u6cd5\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143203",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6570\u7ec4X\u7684\u957f\u5ea6\u5c0f\u4e8e\u6570\u7ec4Y\u7684\u957f\u5ea6",
      "optionC": "\u6570\u7ec4X\u7684\u957f\u5ea6\u5927\u4e8e\u6570\u7ec4Y\u7684\u957f\u5ea6",
      "optionAnswer": "C",
      "answer": "char x[]=\"abcdefg\";\u4e2d\u4f1a\u9690\u5f0f\u7684\u5728\u672b\u5c3e\u6dfb\u52a0\u7a7a\u5b57\u7b26\uff0c\u800cchar y[]={'a','b','c','d','e','f','g'};\u5219\u4e0d\u4f1a\u6dfb\u52a0\uff0c\u7a7a\u5b57\u7b26\u7684\u51fa\u73b0\u53d6\u51b3\u4e8e\u7cfb\u7edf\u4e2d\u7a7a\u5b57\u7b26\u7684\u51fa\u73b0\uff0c\u8fd9\u79cd\u5b9a\u4e49\u4e0b\u4e0d\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002",
      "optionB": "\u6570\u7ec4X\u548c\u6570\u7ec4Y\u957f\u5ea6\u76f8\u540c",
      "type": "1",
      "optionA": "\u6570\u7ec4X\u548c\u6570\u7ec4Y\u7b49\u4ef7",
      "question": "\u7ed9\u51fa\u4ee5\u4e0b\u5b9a\u4e49, \u5219\u6b63\u786e\u7684\u53d9\u8ff0\u4e3a\nchar x[]=\"abcdefg\";\nchar y[]={'a','b','c','d','e','f','g'};",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a6114312d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "66",
      "optionC": "35",
      "optionAnswer": "A",
      "answer": "\u672c\u9898\u91cd\u70b9\u8003\u67e5\u903b\u8f91\u8fd0\u7b97\u7b26\u548c\u5173\u7cfb\u8fd0\u7b97\u7b26\u7684\u76f8\u5173\u77e5\u8bc6,\u5df2\u77e5\u53d8\u91cfx\u4e3a\u6574\u578b\u53d8\u91cf,\u5e76\u8d4b\u503c\u4e3a35,\u53d8\u91cfz\u4e3a\u5b57\u7b26\u578b\u53d8\u91cf,\u5e76\u8d4b\u503c\u4e3a'B'\u3002\u8bed\u53e5B =((x)&&(z <'b'));\u4e2d,(x)\u7684\u503c\u4e3a1,'B'\u7684asscii\u7801\u5c0f\u4e8e'b'\u7684asscii\u7801,\u6240\u4ee5(z <'b')\u7684\u503c\u4e5f\u4e3a1,1&&1\u7ed3\u679c\u4e3a1\u3002\u56e0\u6b64A\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "0",
      "type": "1",
      "optionA": "1",
      "question": "\u6709\u4ee5\u4e0b\u7a0b\u5e8f\n\n#include <stdio. h>\nmain(){\n    int x =35,B;\n    char z ='B';\n    B =((x)&&(z <'b'));\n    printf(\"%d\\n\",B);\n}\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "answer": "\u7ffb\u624b\u7b97\u6cd5\uff1a\n\u8bbe\u7f6e\u6709\u4e2a\u51fd\u6570\u4e3a\u5012\u5e8f\u6392\u5217\uff1avoid Rorder(char *pF,char *pE);\n\nvoid Rorder(char *pF, char *pE)\n{\n    char temp;\n    while (pF <= pE)\n    {\n        temp = *pF;\n        *pF = *pE;\n        *pE = temp;\n    }\n}\n \nvoid *pszStringRotate(char *pszString, int nCharsRotate)\n{\n    char *pR = pszString;\n    int n = 0;\n    while (pszString + n++ \uff01 = \u2018\\n\u2019); //\u5f97\u5230\u5b57\u7b26\u4e32\u957f\u5ea6\n    if (n < nCharsRotate) return pR; //\u5165\u53e3\u53c2\u6570\u68c0\u6d4b\n \n    Rorder(pszString, pszString + nCharsRotate ); //C B A\n    pszString = pR;//\u5f52\u4f4d\n    Rorder( pszString + nCharsRotate, pszString + n - 1); //GFED\n    pszString = pR;\n    Rorder(pszString, pszString + n - 1); //DEFGABC\n    return pR;\n}\n\u5927\u81f4\u8fc7\u7a0b\u5982\u4e0b\uff1a\nABCDEFG\n\u7b2c\u4e00\u6b65\uff1a\u5c40\u90e8\u7ffb\u8f6c\nABC DEFG == = \u300b CBA GFED\n\u7b2c\u4e8c\u6b65\uff1a\u6574\u4f53\u7ffb\u8f6c\nCBA GFED    == = \u300b DEFGABC",
      "ID": "55f2e51de4b0152a61143369",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5b57\u7b26\u4e32\u5de6\u79fb:\nvoid *pszStringRotate(char *pszString, intnCharsRotate)\n\u6bd4\u5982ABCDEFG\uff0c\u79fb3\u4f4d\u53d8DEFGABC\uff0c\u8981\u6c42\u7a7a\u95f4\u590d\u6742\u5ea6O\uff081\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O\uff08n\uff09\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c7c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "8\uff0f2\u548c6.0\uff0f2.0",
      "optionC": "7.0\uff0f2\u548c7\uff0f2",
      "optionAnswer": "A",
      "answer": "\u5c0f\u6570\u9ed8\u8ba4\u7684\u7c7b\u578b\u4e3adouble\u7c7b\u578b\uff0c\u6574\u6570\u9664\u4ee5\u6574\u6570\u7ed3\u679c\u662f\u53d6\u6574\u7684\u7ed3\u679c\u3002A\u3001B\u3001C\u548cD\u9879\u7684\u7b2c\u4e00\u9879\n\u5206\u522b\u662fdouble\u3001double\u3001double\u548cint\u7c7b\u578b\u7684,\u7b2c\u4e8c\u9879\u5206\u522b\u662fdouble\u3001int\u3001int\u548cdouble\u7c7b\u578b\uff0c\u6240\n\u4ee5\u9009\u62e9A\u9879\u3002",
      "optionB": "5\uff0f2.0\u548c5\uff0f2",
      "type": "1",
      "optionA": "7.0\uff0f2.0\u548c7.0\uff0f2",
      "question": "\u5728\u4e0b\u5217\u6210\u5bf9\u7684\u8868\u8fbe\u5f0f\u4e2d\uff0c\u8fd0\u7b97\u7ed3\u679c\u7c7b\u578b\u76f8\u540c\u7684\u4e00\u5bf9\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7f0",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "k=3 a=14",
      "optionC": "k=6 a=11",
      "optionAnswer": "B",
      "answer": "\u5f53k=0\u65f6,\u6267\u884cwhile\u4e00\u6b21,\u5f97\u5230k=1,a\u4e3a2;\u5f53k=1\u65f6,\u6267\u884cwhile\u4e00\u6b21,\u5f97\u5230k=2,a\u4e3a4;\u5f53k=2\u65f6,\u6267\u884cwhile\u4e00\u6b21,\u5f97\u5230k=3,a=7;\u5f53k=3\u65f6,\u6267\u884cwhile\u4e00\u6b21,\u5f97\u5230k=4,a\u4e3a12;\u6240\u4ee5\u7b54\u6848\u4e3aB\u9009\u9879\u3002",
      "optionB": "k=4 a=12",
      "type": "1",
      "optionA": "k=5 a=15",
      "question": "#include<stdio. h>\nmain()\n{ \n    char *s=\"12134\";\n    int k=0, a=0;\n    while(s[k+1])\n    { \n       k++;\n       if(k%2= =0)\n       {\n            a=a+(s[k]-'0'+1);\n            continue;    \n       }\n       a=a+(s[k]-'0');\n    }\n    printf(\"k=%d a=%d\\n\",k,a);\n}\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f?",
      "title": "C&C++"
    },
    {
      "answer": "<span style=\"font-family: monospace;font-size: 13.0px;line-height: 19.0px;\">/* \u57fa\u6570\u6392\u5e8f  */\n#include <iostream>\n#include <stdlib.h>\n#include <ctime>\n#include <algorithm>\n#include <cassert>\n#include \"windows.h\"\nusing namespace std;\n#define MAXN 100000000 #define MAXM 1000\nvoid find_max_data0( int dest[], int m, int src[], int n )\n{\n    fill( dest, dest + n, -INT_MAX );\n    for ( int i = 0; i < n; i++ )\n    {\n        for ( int j = 0; j < m; j++ )\n        {\n            if ( src[i] > dest[j] )\n            {\n                dest[j] = src[i];\n                break;\n            }\n        }\n    }\n}\nvoid find_max_data1( int dest[], int m, int src[], int n )\n{\n    make_heap( src, src + n );\n    for( int i = 0; i < m; i++ )\n    {\n        dest[i] = src[0];\n        pop_heap( src, src + n-- );\n    }\n}\nvoid radix_sort( int *src, int n )\n{\n    int *tmp = new int[MAXN];  int cnt[256];\n    for( int i = 0; i < 4; i++ ) {\n        memset( cnt, 0, sizeof(cnt) );\n        for( int j = 0; j < MAXN; j++ )\n        {\n            cnt[ ( src[j] >> (8 * i) ) & 0xff ]++;\n        }\n        for ( int j = 1; j < 256; j++ )\n        {\n            cnt[j] = cnt[j - 1] + cnt[j];\n        }\n        for( int j = MAXN - 1; j >= 0; j-- )\n        {\n            tmp[ -- cnt[ ( src[j] >> (8 * i) ) & 0xff ] ] = src[j]; swap( src, tmp );\n        }\n    }\n    delete [] tmp;\n}\nvoid find_max_data2( int dest[], int m, int src[], int n )\n{\n    radix_sort( src, n );\n    int j = 0;\n    for( int i = n - 1; i >= n - m; i-- )\n    {\n        dest[j++] = src[i];\n    }\n}\nint src[MAXN];\nint main()\n{\n    ( (unsigned int) time( NULL ) );\n    src[i] = abs( i * 6516187 );\n    DWORD t1, t2;\n    t1  = GetTickCount();\n    find_max_data2( dest2, MAXM, src, MAXN );  \n    t2 = GetTickCount();\n    printf( \"find_max_data2 time cost:%dn\", t2 - t1 );\n    for( int i = 0; i < MAXM; i++ )\n    {\n        printf( \"n\" );  return 0;\n    }\n} </span>",
      "ID": "55f2e51de4b0152a6114338a",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4e00\u4ebf\u4e2a\u6570\u627e\u6700\u5927\u76841000\u4e2a\u6570\uff0c\u8981\u6c42\u6548\u7387\u9ad8\u5360\u7528\u5185\u5b58\u5c11\u3002\u51fd\u6570\u539f\u578b\u4e3a\uff1afind_max_data(int* source_data, int* max_data)\uff0c\u5176\u4e2dsource_data\u662f\u5b58\u653e\u4e00\u4ebf\u4e2a\u6570\u7684\u6570\u7ec4\uff0cmax_data\u7528\u4e8e\u5b58\u653e\u5176\u4e2d\u6700\u5927\u76841000\u4e2a\u6570\u3002",
      "title": "C&C++"
    },
    {
      "answer": "1.\u751f\u5b58\u5468\u671f\u4e0d\u540c \u5168\u5c40\u53d8\u91cf:\u5168\u5c40\u533a\uff08\u9759\u6001\u533a\uff09\uff08static\uff09\uff1a\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u662f\u5b58\u50a8\u5728\u4e00\u8d77\u7684\uff0c\u521d\u59cb\u5316\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u5728\u540c\u4e00\u5757\u533a\u57df\uff0c\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u5b58\u653e\u5728\u4e00\u5757\u76f8\u90bb\u7684\u533a\u57df\u5185\u3002\u6b64\u533a\u57df\u7531\u7cfb\u7edf\u5728\u7a0b\u5e8f\u7ed3\u675f\u540e\u91ca\u653e \u5c40\u90e8\u53d8\u91cf\uff1a \u653e\u5728\u5806\u6808\u4e2d\u3002\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u7b49\u3002\u5176\u64cd\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6808\n2.\u4f5c\u7528\u8303\u56f4\u4e0d\u540c \u5168\u5c40\u53d8\u91cf\u5177\u6709\u5168\u5c40\u4f5c\u7528\u57df\u3002\u5168\u5c40\u53d8\u91cf\u53ea\u9700\u5728\u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d\u5b9a\u4e49\uff0c\u5c31\u53ef\u4ee5\u4f5c\u7528\u4e8e\u6240\u6709\u7684\u6e90\u6587\u4ef6\u3002\u5f53\u7136\uff0c\u5176\u4ed6\u4e0d\u5305\u542b\u5168\u5c40\u53d8\u91cf\u5b9a\u4e49\u7684\u6e90\u6587\u4ef6\u9700\u8981\u7528extern \u5173\u952e\u5b57\u518d\u6b21\u58f0\u660e\u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf\u3002 \u5c40\u90e8\u53d8\u91cf\u4e5f\u53ea\u6709\u5c40\u90e8\u4f5c\u7528\u57df\uff0c\u5b83\u662f\u81ea\u52a8\u5bf9\u8c61\uff08auto\uff09\uff0c\u5b83\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u4e0d\u662f\u4e00\u76f4\u5b58\u5728\uff0c\u800c\u662f\u53ea\u5728\u51fd\u6570\u6267\u884c\u671f\u95f4\u5b58\u5728\uff0c\u51fd\u6570\u7684\u4e00\u6b21\u8c03\u7528\u6267\u884c\u7ed3\u675f\u540e\uff0c\u53d8\u91cf\u88ab\u64a4\u9500\uff0c\u5176\u6240\u5360\u7528\u7684\u5185\u5b58\u4e5f\u88ab\u6536\u56de",
      "ID": "55f2e51ee4b0152a611433cf",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c12",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51fd\u6570\u7684\u529f\u80fd",
      "optionC": "\u51fd\u6570\u53c2\u6570\u7c7b\u578b",
      "optionAnswer": "D",
      "answer": "\u51fd\u6570\u7684\u58f0\u660e\uff0c\u8bf4\u660e\u51fd\u6570\u7684\u53c2\u6570\u3001\u8fd4\u56de\u7c7b\u578b\u4ee5\u53ca\u51fd\u6570\u540d\uff0c\u51fd\u6570\u4f53\u5373\u5b9e\u73b0\u90e8\u5206\u51b3\u5b9a\u529f\u80fd\u3002\u6240\u4ee5\n\u51fd\u6570\u7684\u539f\u578b\u4e0d\u80fd\u51b3\u5b9a\u51fd\u6570\u7684\u529f\u80fd\u3002",
      "optionB": "\u51fd\u6570\u53c2\u6570\u7684\u4e2a\u6570",
      "type": "1",
      "optionA": "\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b",
      "question": "\u5728C++\u4e2d\uff0c\u51fd\u6570\u539f\u578b\u4e0d\u80fd\u6807\u8bc6\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de80c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "int i=0;printf(\u201c%d%d\\n\u201d,i++ i--)",
      "optionC": "char *p=\u201dhello\u201d;char ch=*p++",
      "optionAnswer": "C",
      "answer": "C\u4fee\u6539\u7684\u662f\u6307\u9488\u7684\u503c \u6ca1\u6709\u4fee\u6539\u6307\u9488\u6307\u5411\u5e38\u91cf\u7684\u503c \u662f\u6b63\u786e\u7684\uff01ABD \u884c\u4e3a\u7ed3\u679c\u662f\u4e0d\u53ef\u9884\u6d4b\u7684 \u73af\u5883\u4e0d\u540c\u7ed3\u679c\u4e5f\u4e0d\u5b9a \u56fa\u90fd\u662f\u672a\u5b9a\u4e49\u7684",
      "optionB": "char *p=\u201dhello\u201d;p[1]=\u2019E\u2019",
      "type": "1",
      "optionA": "int i=0;i=(i++);",
      "question": "\u4e0b\u5217 C \u4ee3\u7801\u4e2d\uff0c\u4e0d\u5c5e\u4e8e\u672a\u5b9a\u4e49\u884c\u4e3a\u7684\u6709\uff1a______\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c80",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6d3e\u751f\u7c7b\u4e2d\u4e00\u822c\u6570\u636e\u6210\u5458\u7684\u521d\u59cb\u5316",
      "optionC": "\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u521d\u59cb\u5316",
      "optionAnswer": "C",
      "answer": "\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u7684\u6210\u5458\u521d\u59cb\u5316\uff0c\u5305\u62ec\u57fa\u7c7b\u6210\u5458\u3001\u57fa\u7c7b\u5bf9\u8c61\u6210\u5458\u548c\u6d3e\u751f\u7c7b\u6210\u5458\u3002\u56e0\n\u4e3a\u672c\u8eab\u5c31\u662f\u521d\u59cb\u5316\u5b9a\u4e49\u7684\u5bf9\u8c61\uff0c\u5728\u6784\u9020\u51fd\u6570\u4e2d\u518d\u8fdb\u884c\u8be5\u7c7b\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u4ea7\u751f\u4e86\u5faa\u73af\u5b9a\u4e49\uff0c\u6216\u8005\u7c7b\n\u4e2d\u4e0d\u80fd\u5305\u62ec\u672c\u8eab\u7c7b\u7684\u6210\u5458\u5bf9\u8c61\u3002\u6240\u4ee5\u9009\u62e9C\u9879\u3002",
      "optionB": "\u57fa\u7c7b\u7684\u5bf9\u8c61\u521d\u59cb\u5316",
      "type": "1",
      "optionA": "\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570",
      "question": "\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u7684\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\u4e2d\uff0c\u4e0d\u80fd\u5305\u542b\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c82",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "3",
      "optionC": "2",
      "optionAnswer": "B",
      "answer": "\u6790\u6784\u51fd\u6570(destructor)?\u4e0e\u6784\u9020\u51fd\u6570\u76f8\u53cd\uff0c\u5f53\u5bf9\u8c61\u8131\u79bb\u5176\u4f5c\u7528\u57df\u65f6\uff08\u4f8b\u5982\u5bf9\u8c61\u6240\u5728\u7684\u51fd\u6570\u5df2\u8c03\u7528\u5b8c\u6bd5\uff09\uff0c\u7cfb\u7edf\u81ea\u52a8\u6267\u884c\u6790\u6784\u51fd\u6570\u3002\u6790\u6784\u51fd\u6570\u5f80\u5f80\u7528\u6765\u505a\u201c\u6e05\u7406\u5584\u540e\u201d?\u7684\u5de5\u4f5c\uff08\u4f8b\u5982\u5728\u5efa\u7acb\u5bf9\u8c61\u65f6\u7528new\u5f00\u8f9f\u4e86\u4e00\u7247\u5185\u5b58\u7a7a\u95f4\uff0c\u5e94\u5728\u9000\u51fa\u524d\u5728\u6790\u6784\u51fd\u6570\u4e2d\u7528delete\u91ca\u653e\uff09\u3002?\u4ee5C++\u8bed\u8a00\u4e3a\u4f8b\uff0c\u6790\u6784\u51fd\u6570\u540d\u4e5f\u5e94\u4e0e\u7c7b\u540d\u76f8\u540c\uff0c\u53ea\u662f\u5728\u51fd\u6570\u540d\u524d\u9762\u52a0\u4e00\u4e2a\u6ce2\u6d6a\u7b26~\uff0c\u4f8b\u5982~stud(?)\uff0c\u4ee5\u533a\u522b\u4e8e\u6784\u9020\u51fd\u6570\u3002\u5b83\u4e0d\u80fd\u5e26\u4efb\u4f55\u53c2\u6570\uff0c\u4e5f\u6ca1\u6709\u8fd4\u56de\u503c\uff08\u5305\u62ecvoid\u7c7b\u578b\uff09\u3002\u53ea\u80fd\u6709\u4e00\u4e2a\u6790\u6784\u51fd\u6570\uff0c\u4e0d\u80fd\u91cd\u8f7d\u3002\u5982\u679c\u7528\u6237\u6ca1\u6709\u7f16\u5199\u6790\u6784\u51fd\u6570\uff0c\u7f16\u8bd1\u7cfb\u7edf\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u7f3a\u7701\u7684\u6790\u6784\u51fd\u6570\uff0c\u5b83\u4e5f\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\u6240\u4ee5\u8bb8\u591a\u7b80\u5355\u7684\u7c7b\u4e2d\u6ca1\u6709\u7528\u663e\u5f0f\u7684\u6790\u6784\u51fd\u6570\u3002",
      "optionB": "1",
      "type": "1",
      "optionA": "0",
      "question": "\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u7c7b\uff0c\u6790\u6784\u51fd\u6570\u7684\u4e2a\u6570\u6700\u591a\u4e3a?(???)??",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114322d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "_group_6",
      "optionC": "age+3",
      "optionAnswer": "D",
      "answer": "\u5728C\u8bed\u8a00\u4e2d,\u6807\u8bc6\u7b26\u7684\u547d\u540d\u89c4\u5219\u662f:\u7531\u5b57\u6bcd(\u5927\u3001\u5c0f\u5199\u7686\u53ef)\u3001\u6570\u5b57\u53ca\u4e0b\u5212\u7ebf\u7ec4\u6210\uff0c\u4e14\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f\u5b57\u6bcd\u6216\u8005\u4e0b\u5212\u7ebf\uff0c\u957f\u5ea6\u4e3a8\u4f4d\u3002\u5728C\u8bed\u8a00\u4e2d\uff0c\u5927\u5199\u5b57\u6bcd\u548c\u5c0f\u5199\u5b57\u6bcd\u662f\u6709\u533a\u522b\u7684\uff0c\u5373\u4f5c\u4e3a\u4e0d\u540c\u7684\u5b57\u6bcd\u6765\u770b\u5f85\uff0c\u5e94\u5f15\u8d77\u6ce8\u610f\u3002\nA\u4ee5\u6570\u5b57\u5f00\u5934 \nB\u4e2d\u6709\u975e\u6cd5\u7b26\u53f7\uff5e C\u4e2d\u6709\u975e\u6cd5\u7b26\u53f7+\nD\u6b63\u786e",
      "optionB": "group\uff5e6",
      "type": "1",
      "optionA": "6_group",
      "question": "\u4e0b\u5217\u9009\u9879\u4e2d\uff0c\u6b63\u786e\u7684C++\u6807\u8bc6\u7b26\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143253",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "int k, *p;  *p= &k;   scanf\uff08\u201c%d\u201d,p\uff09;",
      "optionC": "int k, *p=&k;  scanf\uff08\"%d\",p\uff09;",
      "optionAnswer": "C",
      "answer": "A\u4e0d\u5bf9 P\u662f\u6307\u9488\u578b,scanf\u4e2d&p\u5e94\u4e3a\u6574\u578b\u53d8\u91cf\u7a7a\u95f4\u7684\u5730\u5740,\u800c\u4e0d\u662f\u6574\u578b\u6307\u9488\u53d8\u91cf\u7a7a\u95f4\u7684\u5730\u5740\nB\u4e0d\u5bf9 scanf\u4e2d&P\u662f\u6574\u578b\u53d8\u91cf\u7a7a\u95f4\u7684\u5730\u5740,\u4f46P\u6ca1\u6709\u521d\u503c,P\u7684\u503c\u662f\u4e0d\u786e\u5b9a\u7684 \nC\u6b63\u786e\nD\u4e0d\u5bf9 *p=&k \u662f\u628ak\u7684\u5730\u5740\u8d4b\u503c\u7ed9*p\uff0c*p\u76f8\u5f53\u4e8ep\u6240\u6307\u5411\u7684\u53d8\u91cf\u3002\u8fd9\u91ccp\u6ca1\u6709\u88ab\u8d4b\u521d\u503c\uff0c\u4e5f\u5c31\u6ca1\u6709\u6307\u5411\u4efb\u4f55\u53d8\u91cf\uff0c\u6240\u4ee5\u4f7f\u7528*p\u65f6\u51fa\u9519\u3002",
      "optionB": "int *p;  scanf\uff08\u201c%d\u201d,p\uff09;",
      "type": "1",
      "optionA": "int *p;  scanf\uff08\"%d\",\uff06p\uff09;",
      "question": "\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u5b8c\u5168\u6b63\u786e\u7684\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143244",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u975e\u9759\u6001\u6210\u5458\u7684\u751f\u5b58\u671f\u51b3\u5b9a\u4e8e\u8be5\u7c7b\u7684\u751f\u5b58\u671f\uff0c\u800c\u9759\u6001\u6210\u5458\u5219\u4e0d\u5b58\u5728\u751f\u5b58\u671f\u7684\u6982\u5ff5",
      "optionC": "\u9759\u6001\u6210\u5458\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u7684\u6210\u5458",
      "optionAnswer": "C",
      "answer": "\u56e0\u4e3a\u9759\u6001\u6210\u5458\u5b58\u5728\u4e8e\u5185\u5b58\uff0c\u975e\u9759\u6001\u6210\u5458\u9700\u8981\u5b9e\u4f8b\u5316\u624d\u4f1a\u5206\u914d\u5185\u5b58\uff0c\u6240\u4ee5\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u7684\u6210\u5458\u3002\u56e0\u4e3a\u9759\u6001\u6210\u5458\u5b58\u5728\u4e8e\u5185\u5b58\uff0c\u6240\u4ee5\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7c7b\u4e2d\u9759\u6001\u7684\u6210\u5458",
      "optionB": "\u975e\u9759\u6001\u6210\u5458\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7c7b\u4e2d\u9759\u6001\u7684\u6210\u5458",
      "type": "1",
      "optionA": "\u9759\u6001\u6210\u5458\u5b58\u5728\u4e8e\u5185\u5b58\uff0c\u975e\u9759\u6001\u6210\u5458\u9700\u8981\u5b9e\u4f8b\u5316\u624d\u4f1a\u5206\u914d\u5185\u5b58",
      "question": "\u4e0b\u9762\u6709\u5173\u7c7b\u7684\u9759\u6001\u6210\u5458\u548c\u975e\u9759\u6001\u6210\u5458\uff0c\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff1f?",
      "title": "C&C++"
    },
    {
      "answer": "\u786c\u4ef6\u65b9\u9762\uff1a\n1\u3001\u589e\u52a0\u5e26\u5bbd\uff0c\u591a\u673a\u623f\u90e8\u7f72\uff0c\u8d2d\u4e70CDN\u3002\n2\u3001\u589e\u52a0\u670d\u52a1\u5668\uff0c\u589e\u52a0\u670d\u52a1\u5668\u7684\u786c\u4ef6\u8d44\u6e90\u3002\n\u8f6f\u4ef6\u65b9\u9762\uff1a\n1\u3001\u9996\u5148\u4e3a\u4e86\u9632\u6b62\u56e0\u4e3a\u5927\u91cf\u7528\u6237\u4e0b\u8f7dAPP\uff0c\u5e26\u5bbd\u5360\u7528\u8fc7\u9ad8\u5bfc\u81f4\u7f51\u7ad9\u539f\u6709\u7684\u529f\u80fd\u762b\u75ea\u6216\u8005\u4f53\u9a8c\u4e25\u91cd\u4e0b\u964d\uff0c\u9700\u8981\u5c06APP\u4e0b\u8f7d\u7684\u5730\u5740\u548c\u7f51\u7ad9\u670d\u52a1\u5206\u5f00\u90e8\u7f72\u3002\n2\u3001\u52a8\u9759\u6001\u5206\u79bb\uff0c\u4f7f\u7528CACHE\u3002\n2\u3001NGINX\u53cd\u54cd\u4ee3\u7406\uff0c\u591a\u70b9\u96c6\u7fa4",
      "ID": "55f2e51ce4b0152a61143330",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "A\u516c\u53f8\u6253\u7b97\u642d\u5efa\u4e00\u4e2aAndriod App\u4e0b\u8f7d\u7684Web\u7ad9\u70b9\uff0c\u8ba1\u5212\u5c06\u76ee\u524d\u5e38\u89c1\u7684\u624b\u673aAPP\u90fd\u653e\u5230\u8fd9\u4e2a\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u4e0b\u8f7d\u3002\u56e0\u4e3a\u4e1a\u52a1\u5f00\u5c55\u521d\u671f\u4e0b\u8f7d\u91cf\u5f88\u5c0f\uff0c\u6280\u672f\u90e8\u95e8\u5c31\u7528\u4e861\u53f0\u670d\u52a1\u5668\uff0c\u7ed9\u670d\u52a1\u5668\u914d\u7f6e\u4e86\u4e00\u4e2a\u516c\u7f51IP\u5bf9\u5916\u8fdb\u884c\u670d\u52a1\u3002\u968f\u7740\u9500\u552e\u90e8\u95e8\u7684\u63a8\u5e7f\u5230\u4f4d\uff0c\u7528\u6237\u91cf\u548c\u4e0b\u8f7d\u91cf\u5448\u6307\u6570\u7ea7\u4e0a\u8f7d\uff0c\u8981\u6c42\u6280\u672f\u90e8\u95e8\u9a6c\u4e0a\u8fdb\u884c\u6539\u9020\u3002\u5982\u679c\u4f60\u662f\u6280\u672f\u90e8\u95e8\u7ecf\u7406\uff0c\u4f60\u4f1a\u600e\u4e48\u6539\u9020\u8fd9\u4e2a\u7ad9\u70b9\uff0c\u4ee5\u6ee1\u8db3\u9ad8\u8d1f\u8f7d\u7684\u9700\u6c42\u3002\n\u63d0\u793a\uff1a\u77ed\u65f6\u95f4\u4fee\u6539\u7f51\u7ad9\u7684\u4ee3\u7801\u4e0d\u73b0\u5b9e\uff0c\u5176\u4ed6\u65b9\u9762\u7684\u5404\u79cd\u6539\u9020\u5efa\u8bae\u90fd\u53ef\u4ee5\uff0c\u5efa\u8bae\u8d8a\u591a\u8d8a\u597d\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c1f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001\u6027\u7684\u673a\u5236\u79f0\u4e3a\u52a8\u6001\u591a\u6001\u6027",
      "optionC": "\u8fd0\u884c\u65f6\u7684\u591a\u6001\u6027\u53ef\u901a\u8fc7\u6a21\u677f\u548c\u865a\u51fd\u6570\u5b9e\u73b0",
      "optionAnswer": "C",
      "answer": "\u591a\u6001\u6027\u5206\u4e3a\u9759\u6001\u7684\u548c\u52a8\u6001\u7684\u3002\u9759\u6001\u901a\u8fc7\u51fd\u6570\u7684\u91cd\u8f7d\u6765\u5b9e\u73b0\uff0c\u52a8\u6001\u662f\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\n\u57fa\u7c7b\u5f15\u7528\u548c\u865a\u51fd\u6570\u6765\u5b9e\u73b0\u7684\u3002\u6240\u4ee5\u9519\u8bef\u7684\u662fC\u9879\u3002",
      "optionB": "\u7f16\u8bd1\u65f6\u7684\u591a\u6001\u6027\u53ef\u901a\u8fc7\u51fd\u6570\u91cd\u8f7d\u5b9e\u73b0",
      "type": "1",
      "optionA": "C++\u8bed\u8a00\u7684\u591a\u6001\u6027\u5206\u4e3a\u7f16\u8bd1\u65f6\u7684\u591a\u6001\u6027\u548c\u8fd0\u884c\u65f6\u7684\u591a\u6001\u6027",
      "question": "\u6709\u5173\u591a\u6001\u6027\u8bf4\u6cd5\u4e0d\u6b63\u786e\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c0e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5bf9\u8c61\u4e4b\u95f4\u7684\u4fe1\u606f\u4f20\u9012\u662f\u901a\u8fc7\u6d88\u606f\u8fdb\u884c\u7684",
      "optionC": "\u5bf9\u8c61\u662f\u7c7b\u7684\u4e00\u4e2a\u53d8\u91cf",
      "optionAnswer": "A",
      "answer": "A\u5bf9\u8c61\u5728C\uff0b\uff0b\u4e2d\u624d\u6709\uff0c\u5305\u62ec\u6570\u636e\u548c\u64cd\u4f5c\u4e24\u9879\uff0c\u800cC\u4e2d\u7684\u53d8\u91cf\u53ea\u6709\u6570\u636e\uff0c\u6ca1\u6709\u64cd\u4f5c\u3002\u6240\n\u4ee5A\u9879\u9519\u8bef\u3002",
      "optionB": "\u5bf9\u8c61\u4ee3\u8868\u7740\u6b63\u5728\u521b\u5efa\u7684\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u5b9e\u4f53",
      "type": "1",
      "optionA": "\u5bf9\u8c61\u5c31\u662fC\u8bed\u8a00\u4e2d\u7684\u7ed3\u6784\u53d8\u91cf",
      "question": "\u5173\u4e8e\u5bf9\u8c61\u6982\u5ff5\u7684\u63cf\u8ff0\u4e2d\uff0c\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143252",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51fa\u9519",
      "optionC": "9",
      "optionAnswer": "",
      "answer": "\u6ce8\u610f\u62ec\u53f7\u4e2d\u9017\u53f7\u8fd0\u7b97\u7b26\u8fd4\u56de\u503c\u662f\u6700\u540e\u7684\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u9898\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3ac+a=4, \u540e\u4e00\u4e2a\u53c2\u6570\u4e3ae=5,\n\u6240\u4ee5\u7ed3\u679c\u4e3a9",
      "optionB": "5",
      "type": "1",
      "optionA": "15",
      "question": "\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\n\n#include \"stdio.h\"\nint func(int x, int y)\n{\n    return (x + y);\n}\nint main()\n{\n    int a = 1, b = 2, c = 3, d = 4, e = 5;\n    printf(\" % d\\n\", func((a + b, b + c, c + a), (d, e)));\n     \n    return 0;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7fc",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "fastcall",
      "optionC": "pascal",
      "optionAnswer": "A",
      "answer": "\u53ef\u53d8\u53c2\u6570\u51fd\u6570\u9700\u8981\u7531\u8c03\u7528\u8005\u6e05\u6808\uff0c\u56e0\u4e3a\u5f53\u524d\u51fd\u6570\u5e76\u4e0d\u77e5\u9053\u8981\u6709\u591a\u5c11\u53c2\u6570\u88ab\u4f20\u5165\uff0c\u6240\u4ee5\u5fc5\u987b\u7528cdcel",
      "optionB": "stdcall",
      "type": "1",
      "optionA": "cdecl",
      "question": "Which of the following calling convention(s) support(s) support variable-length parameter(e.g. printf)?",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c70",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u62bd\u8c61\u7c7b",
      "optionC": "\u865a\u51fd\u6570",
      "optionAnswer": "B",
      "answer": "\u7c7b\u65cf\u5373\u540c\u4e00\u4e2a\u7c7b\u6d3e\u751f\u51fa\u6765\u7684\u7c7b\uff0c\u5404\u4e2a\u7c7b\u662f\u5144\u5f1f\u6216\u7236\u5b50\u5173\u7cfb\u3002",
      "optionB": "\u7c7b\u7684\u7ee7\u627f",
      "type": "1",
      "optionA": "\u7c7b\u7684\u5d4c\u5957",
      "question": "C++\u8bed\u8a00\u5efa\u7acb\u7c7b\u65cf\u662f\u901a\u8fc7\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "char\u3001int\u3001byte\u3001short\u3001long\u3001long long\u3001double\u3001float\nstruct\n\u5bf9\u8c61\u7c7b\u578b\nlong\u3001int\u5360\u591a\u5c11\u5b57\u8282\uff0c\u5f97\u770b\u8ba1\u7b97\u673acpu\u662f\u591a\u5c11\u4f4d\u7684\u300216\u4f4d\u673a\u5668\u4e0a\uff0cint2\u5b57\u8282\uff0clong4\u5b57\u8282\uff0c32\u4f4d\u673a\u5668\u4e0a\u4e8c\u8005\u90fd\u662f4\u5b57\u8282\uff0c64\u4f4d\u673a\u5668\u4e0a\uff0cint4\u5b57\u8282\uff0clong8\u5b57\u8282\nint\u662f\u6700\u57fa\u672c\u7684\u7c7b\u578b\uff0c\u4e00\u822c\u8981\u548ccpu\u7684\u81ea\u5bbd\u4fdd\u6301\u4e00\u81f4\uff0c\u4fdd\u8bc1\u6548\u7387\u3002",
      "ID": "55f2e51de4b0152a61143373",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "C++\u6709\u54ea\u4e9b\u6570\u636e\u7c7b\u578b?\u4e3a\u4ec0\u4e48long\u548cint\u90fd\u662f4\u5b57\u8282?",
      "title": "C&C++"
    },
    {
      "answer": "FILLUserInfo\u51fd\u6570\u7684\u95ee\u9898\uff1a\n\u56e0\u4e3a\u7ed3\u6784\u4f53USERINFO\u7684\u6210\u5458szName\u6700\u591a\u5bb9\u7eb320\u4e2a\u5b57\u8282\uff0c\u5982\u679c\u62f7\u8d1d\u7684\u540d\u5b57\u8d85\u8fc720\u5b57\u8282\uff0c\u5c31\u8d85\u8d8a\u4e86\u6570\u7ec4\u7684\u8fb9\u754c\uff0c\u5f15\u8d77\u6bb5\u9519\u8bef\u3002\nmain()\u51fd\u6570\u7684\u95ee\u9898\uff1a\narUserInfos\u6709100\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u5728\u8f93\u5165\u7684\u7528\u6237\u4e2a\u6570\u8d85\u8fc7100\uff0c\u90a3\u4e48\u4e5f\u4f1a\u5f15\u8d77\u8be5\u6570\u7ec4\u7684\u8fb9\u754c\u8d8a\u754c\uff0c\u540c\u6837\u662f\u6bb5\u9519\u8bef",
      "ID": "55f2e51ee4b0152a611433bd",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4ece\u7a0b\u5e8f\u5065\u58ee\u6027\u8fdb\u884c\u5206\u6790,\u4e0b\u9762\u7684 FillUserInfo \u51fd\u6570\u548c main \u51fd\u6570\u5206\u522b\u5b58\u5728\u4ec0\u4e48\u95ee\u9898?\n#define MAX_NAME_LEN 20\nstruct USERINFO\n{\n    int nAge;\n    char szName[MAX_NAME_LEN];\n};\nvoid FillUserInfo(USERINFO *parUserInfo)\n{\n    stu::cout << \"\u8bf7\u8f93\u5165\u7528\u6237\u7684\u4e2a\u6570:\";\n    int nCount = 0;\n    std::cin >> nCount;\n    for (int i = 0; i < nCount; i++)\n    {\n        std::cout << \"\u8bf7\u8f93\u5165\u5e74\u9f84:\";\n        std::cin >> parUserInfo[i]->nAge;\n        std::string strName;\n        std::cout << \"\u8bf7\u8f93\u5165\u59d3\u540d:\";\n        std::cin >> strName;\n        strcpy(parUserInfo[i].szName, strName.c_str());\n    }\n}\nint main(int argc, char *argv[])\n{\n    USERINFO arUserInfos[100] = {0};\n    FillUserInfo(arUserInfos);\n    printf(\"The first name is:\");\n    printf(arUserInfos[0].szName);\n    printf(\"\\n\");\n    return 0;\n}",
      "title": "C&C++"
    },
    {
      "answer": "\u89e3\u7b54\uff1a\u6570\u636e\u5e93\u4e2d\u7684\u9501\u662f\u7f51\u7edc\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u5b83\u4e3b\u8981\u7528\u4e8e\u591a\u7528\u6237\u73af\u5883\u4e0b\u4fdd\u8bc1\u6570\u636e\u5e93\u5b8c\u6574\u6027\u548c\u4e00\u81f4\u6027\u3002\u5404\u79cd\u5927\u578b\u6570\u636e\u5e93\u6240\u91c7\u7528\u7684\u9501\u7684\u57fa\u672c\u7406\u8bba\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u5728\u5177\u4f53\u5b9e\u73b0\u4e0a\u5404\u6709\u5dee\u522b\u3002\u76ee\u524d\uff0c\u5927\u591a\u6570\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u90fd\u6216\u591a\u6216\u5c11\u5177\u6709\u81ea\u6211\u8c03\u8282\u3001\u81ea\u6211\u7ba1\u7406\u7684\u529f\u80fd\uff0c\u56e0\u6b64\u5f88\u591a\u7528\u6237\u5b9e\u9645\u4e0a\u4e0d \u6e05\u695a\u9501\u7684\u7406\u8bba\u548c\u6240\u7528\u6570\u636e\u5e93\u4e2d\u9501\u7684\u5177\u4f53\u5b9e\u73b0\u3002\u5728\u6570\u636e\u5e93\u4e2d\u52a0\u9501\u65f6\uff0c\u9664\u4e86\u53ef\u4ee5\u5bf9\u4e0d\u540c\u7684\u8d44\u6e90\u52a0\u9501\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7a0b\u5ea6\u7684\u52a0\u9501\u65b9\u5f0f\uff0c\u5373\u9501\u6709\u591a\u79cd\u6a21\u5f0f\uff0cSQL Server\u4e2d\u9501\u6a21\u5f0f\u5305\u62ec\uff1a\n1\uff09\u5171\u4eab\u9501 SQL Server\u4e2d\uff0c\u5171\u4eab\u9501\u7528\u4e8e\u6240\u6709\u7684\u53ea\u8bfb\u6570\u636e\u64cd\u4f5c\u3002\u5171\u4eab\u9501\u662f\u975e\u72ec\u5360\u7684\uff0c\u5141\u8bb8\u591a\u4e2a\u5e76\u53d1\u4e8b\u52a1\u8bfb\u53d6\u5176\u9501\u5b9a\u7684\u8d44\u6e90\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u88ab\u8bfb\u53d6\u540e\uff0cSQL Server\u7acb\u5373\u91ca\u653e\u5171\u4eab\u9501\u3002\u4f8b\u5982\uff0c\u6267\u884c\u67e5\u8be2\u201cSELECT * FROM my_table\u201d\u65f6\uff0c\u9996\u5148\u9501\u5b9a\u7b2c\u4e00\u9875\uff0c\u8bfb\u53d6\u4e4b\u540e\uff0c\u91ca\u653e\u5bf9\u7b2c\u4e00\u9875\u7684\u9501\u5b9a\uff0c\u7136\u540e\u9501\u5b9a\u7b2c\u4e8c\u9875\u3002\u8fd9\u6837\uff0c\u5c31\u5141\u8bb8\u5728\u8bfb\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u4fee\u6539\u672a\u88ab\u9501\u5b9a\u7684\u7b2c\u4e00\u9875\u3002\u4f46\u662f\uff0c\u4e8b\u52a1 \u9694\u79bb\u7ea7\u522b\u8fde\u63a5\u9009\u9879\u8bbe\u7f6e\u548cSELECT\u8bed\u53e5\u4e2d\u7684\u9501\u5b9a\u8bbe\u7f6e\u90fd\u53ef\u4ee5\u6539\u53d8SQL Server\u7684\u8fd9\u79cd\u9ed8\u8ba4\u8bbe\u7f6e\u3002\u4f8b\u5982\uff0c\u201c SELECT * FROM my_table HOLDLOCK\u201d\u5c31\u8981\u6c42\u5728\u6574\u4e2a\u67e5\u8be2\u8fc7\u7a0b\u4e2d\uff0c\u4fdd\u6301\u5bf9\u8868\u7684\u9501\u5b9a\uff0c\u76f4\u5230\u67e5\u8be2\u5b8c\u6210\u624d\u91ca\u653e\u9501\u5b9a\u3002\n\n2\uff09\u4fee\u6539\u9501 \u4fee \u6539\u9501\u5728\u4fee\u6539\u64cd\u4f5c\u7684\u521d\u59cb\u5316\u9636\u6bb5\u7528\u6765\u9501\u5b9a\u53ef\u80fd\u8981\u88ab\u4fee\u6539\u7684\u8d44\u6e90\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4f7f\u7528\u5171\u4eab\u9501\u9020\u6210\u7684\u6b7b\u9501\u73b0\u8c61\u3002\u56e0\u4e3a\u4f7f\u7528\u5171\u4eab\u9501\u65f6\uff0c\u4fee\u6539\u6570\u636e\u7684\u64cd\u4f5c\u5206\u4e3a\u4e24\u6b65\uff0c\u9996\u5148\u83b7\u5f97\u4e00 \u4e2a\u5171\u4eab\u9501\uff0c\u8bfb\u53d6\u6570\u636e\uff0c\u7136\u540e\u5c06\u5171\u4eab\u9501\u5347\u7ea7\u4e3a\u72ec\u5360\u9501\uff0c\u7136\u540e\u518d\u6267\u884c\u4fee\u6539\u64cd\u4f5c\u3002\u8fd9\u6837\u5982\u679c\u540c\u65f6\u6709\u4e24\u4e2a\u6216\u591a\u4e2a\u4e8b\u52a1\u540c\u65f6\u5bf9\u4e00\u4e2a\u4e8b\u52a1\u7533\u8bf7\u4e86\u5171\u4eab\u9501\uff0c\u5728\u4fee\u6539\u6570\u636e\u7684\u65f6\u5019\uff0c\u8fd9\u4e9b \u4e8b\u52a1\u90fd\u8981\u5c06\u5171\u4eab\u9501\u5347\u7ea7\u4e3a\u72ec\u5360\u9501\u3002\u8fd9\u65f6\uff0c\u8fd9\u4e9b\u4e8b\u52a1\u90fd\u4e0d\u4f1a\u91ca\u653e\u5171\u4eab\u9501\u800c\u662f\u4e00\u76f4\u7b49\u5f85\u5bf9\u65b9\u91ca\u653e\uff0c\u8fd9\u6837\u5c31\u9020\u6210\u4e86\u6b7b\u9501\u3002\u5982\u679c\u4e00\u4e2a\u6570\u636e\u5728\u4fee\u6539\u524d\u76f4\u63a5\u7533\u8bf7\u4fee\u6539\u9501\uff0c\u5728\u6570\u636e\u4fee \u6539\u7684\u65f6\u5019\u518d\u5347\u7ea7\u4e3a\u72ec\u5360\u9501\uff0c\u5c31\u53ef\u4ee5\u907f\u514d\u6b7b\u9501\u3002\u4fee\u6539\u9501\u4e0e\u5171\u4eab\u9501\u662f\u517c\u5bb9\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u8d44\u6e90\u7528\u5171\u4eab\u9501\u9501\u5b9a\u540e\uff0c\u5141\u8bb8\u518d\u7528\u4fee\u6539\u9501\u9501\u5b9a\u3002\n\n3\uff09\u72ec\u5360\u9501 \u72ec\u5360\u9501\u662f\u4e3a\u4fee\u6539\u6570\u636e\u800c\u4fdd\u7559\u7684\u3002\u5b83\u6240\u9501\u5b9a\u7684\u8d44\u6e90\uff0c\u5176\u4ed6\u4e8b\u52a1\u4e0d\u80fd\u8bfb\u53d6\u4e5f\u4e0d\u80fd\u4fee\u6539\u3002\u72ec\u5360\u9501\u4e0d\u80fd\u548c\u5176\u4ed6\u9501\u517c\u5bb9\u3002\n\n4\uff09\u7ed3\u6784\u9501 \u7ed3\u6784\u9501\u5206\u4e3a\u7ed3\u6784\u4fee\u6539\u9501\uff08Sch-M\uff09\u548c\u7ed3\u6784\u7a33\u5b9a\u9501\uff08Sch-S\uff09\u3002\u6267\u884c\u8868\u5b9a\u4e49\u8bed\u8a00\u64cd\u4f5c\u65f6\uff0cSQL Server\u91c7\u7528Sch-M\u9501\uff0c\u7f16\u8bd1\u67e5\u8be2\u65f6\uff0cSQL Server\u91c7\u7528Sch-S\u9501\u3002\n\n5\uff09\u610f\u5411\u9501 \u610f \u5411\u9501\u8bf4\u660eSQL Server\u6709\u5728\u8d44\u6e90\u7684\u4f4e\u5c42\u83b7\u5f97\u5171\u4eab\u9501\u6216\u72ec\u5360\u9501\u7684\u610f\u5411\u3002\u4f8b\u5982\uff0c\u8868\u7ea7\u7684\u5171\u4eab\u610f\u5411\u9501\u8bf4\u660e\u4e8b\u52a1\u610f\u56fe\u5c06\u72ec\u5360\u9501\u91ca\u653e\u5230\u8868\u4e2d\u7684\u9875\u6216\u8005\u884c\u3002\u610f\u5411\u9501\u53c8\u53ef\u4ee5\u5206\u4e3a\u5171\u4eab\u610f\u5411\u9501\u3001 \u72ec\u5360\u610f\u5411\u9501\u548c\u5171\u4eab\u5f0f\u72ec\u5360\u610f\u5411\u9501\u3002\u5171\u4eab\u610f\u5411\u9501\u8bf4\u660e\u4e8b\u52a1\u610f\u56fe\u5728\u5171\u4eab\u610f\u5411\u9501\u6240\u9501\u5b9a\u7684\u4f4e\u5c42\u8d44\u6e90\u4e0a\u653e\u7f6e\u5171\u4eab\u9501\u6765\u8bfb\u53d6\u6570\u636e\u3002\u72ec\u5360\u610f\u5411\u9501\u8bf4\u660e\u4e8b\u52a1\u610f\u56fe\u5728\u5171\u4eab\u610f\u5411\u9501\u6240\u9501\u5b9a \u7684\u4f4e\u5c42\u8d44\u6e90\u4e0a\u653e\u7f6e\u72ec\u5360\u9501\u6765\u4fee\u6539\u6570\u636e\u3002\u5171\u4eab\u5f0f\u72ec\u5360\u9501\u8bf4\u660e\u4e8b\u52a1\u5141\u8bb8\u5176\u4ed6\u4e8b\u52a1\u4f7f\u7528\u5171\u4eab\u9501\u6765\u8bfb\u53d6\u9876\u5c42\u8d44\u6e90\uff0c\u5e76\u610f\u56fe\u5728\u8be5\u8d44\u6e90\u4f4e\u5c42\u4e0a\u653e\u7f6e\u72ec\u5360\u9501\u3002\n\n6\uff09\u6279\u91cf\u4fee\u6539\u9501 \u6279\u91cf\u590d\u5236\u6570\u636e\u65f6\u4f7f\u7528\u6279\u91cf\u4fee\u6539\u9501\u3002\u53ef\u4ee5\u901a\u8fc7\u8868\u7684TabLock\u63d0\u793a\u6216\u8005\u4f7f\u7528\u7cfb\u7edf\u5b58\u50a8\u8fc7\u7a0bsp_tableoption\u7684\u201ctable lock on bulk load\u201d\u9009\u9879\u8bbe\u5b9a\u6279\u91cf\u4fee\u6539\u9501\u3002",
      "ID": "55f2e51ee4b0152a611433a8",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5217\u51fa\u6570\u636e\u5e93\u4e2d\u5e38\u7528\u7684\u9501\u53ca\u5176\u5e94\u7528\u573a\u666f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114323e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "const int *a; // a \u662f\u5e38\u6307\u9488",
      "optionC": "int const *a; // a \u6307\u5411\u5e38\u6570\u7684\u6307\u9488",
      "optionAnswer": "D",
      "answer": "const\u53ea\u5bf9\u5b83\u5de6\u8fb9\u7684\u4e1c\u897f\u8d77\u4f5c\u7528 \uff0c  \u552f\u4e00\u7684\u4f8b\u5916\u5c31\u662fconst\u672c\u8eab\u5c31\u662f\u6700\u5de6\u8fb9\u7684\u4fee\u9970\u7b26\uff0c\u90a3\u4e48\u5b83\u624d\u4f1a\u5bf9\u53f3\u8fb9\u7684\u4e1c\u897f\u8d77\u4f5c\u7528\u3002 \u6839\u636e\u8fd9\u4e2a\u89c4\u5219\u6765\u5224\u65ad\u5c31\u5f88\u5bb9\u6613\u4e86",
      "optionB": "int const a; // a \u662f\u5e38\u6570",
      "type": "1",
      "optionA": "const int a; // a \u662f\u5e38\u6570",
      "question": "\u4e0b\u9762\u8bf4\u6cd5\u54ea\u4e2a\u9519\u8bef\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a6114315a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "213",
      "optionC": "321",
      "optionAnswer": "D",
      "answer": "\u5f53\u6d3e\u751f\u7c7b\u4e2d\u4e0d\u542b\u5bf9\u8c61\u6210\u5458\u65f6\n\u00b7 \u5728\u521b\u5efa\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6,\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u662f\uff1a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u2192\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff1b\n\u00b7 \u5728\u64a4\u6d88\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6,\u6790\u6784\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u662f\uff1a\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u2192\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002\n\u5f53\u6d3e\u751f\u7c7b\u4e2d\u542b\u6709\u5bf9\u8c61\u6210\u5458\u65f6\n\u00b7 \u5728\u5b9a\u4e49\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\uff1a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u2192\u5bf9\u8c61\u6210\u5458\u7684\u6784\u9020\u51fd\u6570\u2192\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff1b\n\u00b7 \u5728\u64a4\u6d88\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u6790\u6784\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\uff1a\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u2192\u5bf9\u8c61\u6210\u5458\u7684\u6784\u9020\u51fd\u6570\u2192\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002",
      "optionB": "231",
      "type": "1",
      "optionA": "123",
      "question": "\u5bf9\u4e8e\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u5728\u5b9a\u4e49\u5bf9\u8c61\u65f6\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u4e3a\uff1f\n1\uff1a\u6210\u5458\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\n2\uff1a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\n3\uff1a\u6d3e\u751f\u7c7b\u672c\u8eab\u7684\u6784\u9020\u51fd\u6570",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c7e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u57fa\u7c7b\u7684\u516c\u6709\u6210\u5458\u4e00\u5b9a\u80fd\u88ab\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8bbf\u95ee",
      "optionC": "\u6d3e\u751f\u7c7b\u5bf9\u8c61\u9664\u4e86\u80fd\u8bbf\u95ee\u81ea\u5df1\u7684\u6210\u5458\u4ee5\u5916\uff0c\u4e0d\u80fd\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u7684\u6240\u6709\u6210\u5458",
      "optionAnswer": "C",
      "answer": "\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u4e0d\u80fd\u88ab\u6d3e\u751f\u7c7b\u7ee7\u627f\uff0cA\u9879\u9519\u8bef\u3002\u6d3e\u751f\u7c7b\u662f\u57fa\u7c7b\u7684\u6269\u5c55\uff0cB\u9879\u9519\u3002\n\u6d3e\u751f\u7c7b\u53ef\u4ee5\u8bbf\u95ee\u57fa\u7c7b\u516c\u6709\u548c\u4fdd\u62a4\u7c7b\u578b\u7684\u6210\u5458\uff0c\u4e0d\u80fd\u8bbf\u95ee\u57fa\u7c7b\u79c1\u6709\u6210\u5458\u3002D\u9879\u57fa\u7c7b\u662f\u516c\u6709\u7684\u6210\u5458\n\uff0c\u82e5\u91c7\u7528\u79c1\u6709\u7ee7\u627f\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u3002\u9009\u62e9C\u9879\u3002",
      "optionB": "\u6d3e\u751f\u7c7b\u662f\u57fa\u7c7b\u7684\u7ec4\u5408",
      "type": "1",
      "optionA": "\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u90fd\u80fd\u88ab\u7ee7\u627f",
      "question": "\u4ee5\u4e0b\u6709\u5173\u7ee7\u627f\u7684\u53d9\u8ff0\u6b63\u786e\u7684\u662f \uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c6f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "/",
      "optionC": "\uff1a\uff1a",
      "optionAnswer": "C",
      "answer": "\u9664\u4e86\u7c7b\u5c5e\u5173\u7cfb\u8fd0\u7b97\u7b26\".\"\u3001\u6210\u5458\u6307\u9488\u8fd0\u7b97\u7b26\".*\"\u3001\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26\"::\"\u3001sizeof\u8fd0\u7b97\n\u7b26\u548c\u4e09\u76ee\u8fd0\u7b97\u7b26\"?:\"\u4ee5\u5916\uff0cC++\u4e2d\u7684\u6240\u6709\u8fd0\u7b97\u7b26\u90fd\u53ef\u4ee5\u91cd\u8f7d\u3002",
      "optionB": ">=",
      "type": "1",
      "optionA": "*",
      "question": "\u4e0b\u5217\u8fd0\u7b97\u7b26\u4e2d\uff0c\u5728C++\u8bed\u8a00\u4e2d\u4e0d\u80fd\u91cd\u8f7d\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c71",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u9632\u6b62\u4e0d\u540c\u6a21\u5757\u4e4b\u95f4\u6570\u636e\u7684\u975e\u6cd5\u8bbf\u95ee",
      "optionC": "\u907f\u514d\u6570\u636e\u4e22\u5931",
      "optionAnswer": "D",
      "answer": "\u5c01\u88c5\u662f\u6307\u628a\u5bf9\u8c61\u5c5e\u6027\u548c\u64cd\u4f5c\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u6784\u6210\u72ec\u7acb\u7684\u5355\u5143\uff0c\u5b83\u7684\u5185\u90e8\u4fe1\u606f\u5bf9\u5916\u754c\u662f\n\u9690\u853d\u7684\uff0c\u4e0d\u5141\u8bb8\u5916\u754c\u76f4\u63a5\u5b58\u53d6\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u53ea\u80fd\u901a\u8fc7\u6709\u9650\u7684\u63a5\u53e3\u4e0e\u5bf9\u8c61\u53d1\u751f\u8054\u7cfb\u3002\u7c7b\u662f\u6570\u636e\u5c01\u88c5\n\u7684\u5de5\u5177\uff0c\u5bf9\u8c61\u662f\u5c01\u88c5\u7684\u5b9e\u73b0\u3002\u7c7b\u7684\u8bbf\u95ee\u63a7\u5236\u673a\u5236\u4f53\u73b0\u5728\u7c7b\u7684\u6210\u5458\u4e2d\u53ef\u4ee5\u6709\u516c\u6709\u6210\u5458\u3001\u79c1\u6709\u6210\u5458\u548c\n\u4fdd\u62a4\u6210\u5458\u3002\u5bf9\u4e8e\u5916\u754c\u800c\u8a00\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5bf9\u8c61\u6240\u8868\u73b0\u7684\u5916\u90e8\u884c\u4e3a\uff0c\u800c\u4e0d\u5fc5\u4e86\u89e3\u5185\u90e8\u5b9e\u73b0\u7ec6\u8282\u3002\u5c01\u88c5\n\u4f53\u73b0\u4e86\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u7684\u201c\u4fe1\u606f\u9690\u853d\u548c\u5c40\u90e8\u5316\u539f\u5219\u201d\u3002",
      "optionB": "\u4fbf\u4e8e\u6570\u636e\u8f6c\u6362",
      "type": "1",
      "optionA": "\u6570\u636e\u7684\u89c4\u8303\u5316",
      "question": "\u5728C++\u8bed\u8a00\u4e2d\uff0c\u6570\u636e\u5c01\u88c5\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143255",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "feof( fp ) == 0",
      "optionC": "feof(fp)",
      "optionAnswer": "C",
      "answer": "\u672c\u9898\u8003\u67e5\u6587\u4ef6\u7684\u5b9a\u4f4d,feof\u51fd\u6570\u7684\u7528\u6cd5\u662f\u4ece\u8f93\u5165\u6d41\u8bfb\u53d6\u6570\u636e,\u5982\u679c\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e(\u9047\u6587\u4ef6\u7ed3\u675f\u7b26),eof \u51fd\u6570\u503c\u4e3a\u975e\u96f6\u503c,\u5426\u5219\u4e3a0,while\u5224\u5b9a\u6761\u4ef6\u5e94\u662f\u5982\u679c\u6ca1\u6709\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e,\u6240\u4ee5\u9009\u9879C\u4e0d\u80fd\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002",
      "optionB": "! feof( fp )",
      "type": "1",
      "optionA": "feof( fp )= =NULL",
      "question": "\u4ee5\u4e0b\u7a0b\u5e8f\u7528\u6765\u7edf\u8ba1\u6587\u4ef6\u4e2d\u5b57\u7b26\u7684\u4e2a\u6570(\u51fd\u6570fopen\u7528\u4ee5\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u7ed3\u675f,\u7ed3\u675f\u662f\u8fd4\u56de\u975e\u96f6)\n#include<stdio.h>\nmain()\n{ \n    FILE *fp; \n    long num=0;\n    fp=fopen(\"fname.dat\", \"r\" );\n    while (________) \n    { \n        fgetc( fp );\n        num++ ;\n    }\n    printf( \" num= % d\\n\",num);\n    fclose( fp );\n}\n\u4e0b\u9762\u9009\u9879\u4e2d,\u586b\u5165\u6a2a\u7ebf\u5904\u4e0d\u80fd\u5f97\u5230\u6b63\u786e\u7ed3\u679c\u7684\u662f?",
      "title": "C&C++"
    },
    {
      "answer": "\u6bd4\u8d5b7\u573a\u5c31\u53ef\u4ee5\u3002\n\n\uff081\uff09\u5148\u8fdb\u884c5\u573a\u6bd4\u8d5b\u5b9a\u51fa\u6bcf\u7ec4\u6700\u5feb\u7684\u9a6c\u3002\n\uff082\uff09\u6bcf\u7ec4\u6700\u5feb\u7684\u9a6c\u8fdb\u884c\u4e00\u573a\u6bd4\u8d5b\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u627e\u5230\u7b2c\u4e00\u540d\u3002\u987a\u4fbf\u628a\u8fd95\u5339\u9a6c\u4e2d\u6700\u540e\u4e24\u540d\u6dd8\u6c70\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6c38\u8fdc\u4e0d\u53ef\u80fd\u8fdb\u5165\u524d3\u3002\n\uff083\uff09\u5206\u522b\u7528\u7b2c\u4e00\u540d\u6240\u5c5e\u7ec4\u7684\u7b2c2,3\u540d\u9a6c\u548c\u7b2c2\u540d\u6240\u5c5e\u7ec4\u7684\u7b2c1\uff0c2\u540d\u9a6c\u548c\u7b2c3\u540d\u7ec4\u7684\u7b2c1\u540d\u9a6c\u8fdb\u884c1\u573a\u6bd4\u8d5b\uff0c\u5b9a\u51fa2,3\u540d\u9a6c\n\u81f3\u6b64\u6bd4\u8d5b\u5b8c\u6bd5",
      "ID": "55f2e51de4b0152a61143378",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u903b\u8f91\u9898\uff1a25\u5339\u9a6c\uff0c5\u6761\u8d5b\u9053\uff0c\u4e00\u5339\u9a6c\u4e00\u4e2a\u8d5b\u9053\uff0c\u6bd4\u8d5b\u53ea\u80fd\u5f97\u52305\u5339\u9a6c\u4e4b\u95f4\u7684\u5feb\u6162\u7a0b\u5ea6\uff0c\u800c\u4e0d\u662f\u901f\u5ea6\uff0c\u6c42\u51b3\u80dc1\uff0c2\uff0c3\u540d\u81f3\u5c11\u591a\u5c11\u573a\u3002",
      "title": "C&C++"
    },
    {
      "answer": "256",
      "ID": "55f2e51de4b0152a61143358",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7b26\u53f7-\u3001*\u3001$\u5206\u522b\u4ee3\u8868\u51cf\u6cd5\u3001\u4e58\u6cd5\u548c\u6307\u6570\u8fd0\u7b97\uff0c\u4e14\na)\u4e09\u4e2a\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u987a\u5e8f\u4e3a\uff1a-\u6700\u9ad8\uff0c*\u5176\u6b21\uff0c$\u6700\u4f4e\uff1b\nb)\u8fd0\u7b97\u7b26\u8fd0\u7b97\u65f6\u4e3a\u5de6\u7ed3\u5408\n\u52195-3*2$2*4-3$2\u7684\u7ed3\u679c\u4e3a ",
      "title": "C&C++"
    },
    {
      "answer": "\u6839\u636e\u9898\u76ee\u7684\u6761\u4ef6\uff0c\u6bcf\u4e2a\u4eba\u63e1\u624b\u7684\u6570\u76ee\u6700\u5927\u662f8\u6b21\uff0c\u7136\u540e\u9664\u4e86smith\u592b\u5987\u59168\u4e2a\u4eba\u6bcf\u4e2a\u4eba\u7684\u6b21\u6570\u53c8\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u4ed6\u4eec\u7684\u6b21\u6570\u4e3a1\u52308   \n\u63e1\u624b8\u6b21\u7684\u4eba\u80af\u5b9a\u4e0e\u9664\u4e86\u81ea\u5df1\u548c\u914d\u5076\u4e4b\u5916\u76848\u4e2a\u4eba\u6bcf\u4eba\u63e1\u4e00\u6b21\uff08\u5305\u62ec\u4e86smith\u592b\u5987\uff09\n \u63e1\u624b1\u6b21\u7684\u4eba\u53ea\u53ef\u80fd\u662f\u4e0e\u63e1\u624b8\u6b21\u7684\u4eba\u63e1 \n \u540c\u7406\u63e1\u624b7\u6b21\u7684\u4eba\u662f\u63e1\u624b8\u6b21\u4eba\u7684\u914d\u5076\uff0c\u4e0e\u5176\u4f59\u9664\u4e86\u53ea\u63e1\u624b\u4e00\u6b21\u7684\u90a3\u4e2a\u4eba\u90fd\u63e1\u4e00\u6b21\uff0c\u5176\u4e2d\u4e5f\u5305\u62ec\u4e86smith\u592b\u5987 \n\u63e1\u624b2\u6b21\u7684\u4eba\u9664\u4e86\u8ddf\u63e1\u624b7\u6b21\u7684\u4eba\u548c\u63e1\u624b8\u6b21\u7684\u4eba\uff0c\u5176\u4f59\u7684\u4eba\u5c31\u6ca1\u518d\u63e1\u8fc7\u624b  \n\u7136\u540e\u63e1\u624b6\u6b21\u7684\u4eba\u4e5f\u4f1a\u8ddfsmith\u592b\u5987\u5404\u63e1\u4e00\u6b21\u624b\uff0c\u63e15\u6b21\u7684\u4eba\u4e5f\u8ddfsmith\u592b\u5987\u5404\u63e1\u4e00\u6b21\u624b\n\u6240\u4ee5\u53f2\u5bc6\u65af\u592b\u5987\u5206\u522b\u63e1\u4e864\u6b21\u624b",
      "ID": "55f2e51de4b0152a6114338d",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "Smith\u592b\u5987\u53ec\u5f00\u5bb4\u4f1a\uff0c\u5e76\u9080\u8bf7\u5176\u4ed64\u5bf9\u592b\u5987\u53c2\u52a0\u5bb4\u4f1a\u3002\u5728\u5bb4\u4f1a\u4e0a\uff0c\u4ed6\u4eec\u5f7c\u6b64\u63e1\u624b\uff0c \u5e76\u4e14\u6ee1\u8db3\u6ca1\u6709\u4e00\u4e2a\u4eba\u540c\u81ea\u5df1\u63e1\u624b\uff0c\u6ca1\u6709\u4e24\u4e2a\u4eba\u63e1\u624b\u4e00\u6b21\u4ee5\u4e0a\uff0c\u5e76\u4e14\u592b\u59bb\u4e4b\u95f4\u4e0d\u63e1\u624b\u3002 \u7136\u540eMr. Smith\u95ee\u5176\u5b83\u5ba2\u4eba\u63e1\u624b\u7684\u6b21\u6570\uff0c\u6bcf\u4e2a\u4eba\u7684\u7b54\u6848\u662f\u4e0d\u4e00\u6837\u7684\u3002 \u6c42Mrs Smith\u63e1\u624b\u7684\u6b21\u6570",
      "title": "C&C++"
    },
    {
      "answer": "1\u3001CreateRemoteThread + LoadLibraryA/W\n2\u3001SetWindowsHook/SetWindowsHookEx\n3\u3001QueueUserAPC + LoadLibraryA\n",
      "ID": "55f2e51de4b0152a6114334d",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5217\u4e3e\u4e24\u79cd\u5e94\u7528\u5c42\u4e2d\u7b80\u5355\u7684\u8de8\u8fdb\u7a0b<span>DLL</span>\u6ce8\u5165\u7684\u65b9\u6cd5\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114324d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "1a",
      "optionC": "19",
      "optionAnswer": "D",
      "answer": "<span class=\"pln\" style=\"color: rgb(0,0,0);\">printf<span class=\"pun\" style=\"color: rgb(102,102,0);\">(\u201c%<span class=\"pln\" style=\"color: rgb(0,0,0);\">x\\n<span class=\"pun\" style=\"color: rgb(102,102,0);\">\u201d,++*<span class=\"pln\" style=\"color: rgb(0,0,0);\">x<span class=\"pun\" style=\"color: rgb(102,102,0);\">); \u5148\u628ax\u7684\u503c\u52a0\u4e0a1\u518d16\u8fdb\u5236\u8f93\u51fa\u3002</span></span></span></span></span></span>\n",
      "optionB": "26",
      "type": "1",
      "optionA": "25",
      "question": "\u5df2\u6709\u53d8\u91cf\u5b9a\u4e49\u548c\u51fd\u6570\u8c03\u7528\u8bed\u53e5\uff0c\n\nint a=25;\nprint_value(&a);\n\u5219\u4e0b\u9762\u51fd\u6570\u7684\u6b63\u786e\u8f93\u51fa\u7ed3\u679c\u662f______\u3002\n\nvoid print_value(int* x)\n{\n    printf(\u201c%x\\n\u201d,++*x);\n}\n",
      "title": "C&C++"
    },
    {
      "answer": "\u4e24\u4e24\u6bd4\u8d5b\uff0c\u5206\u6210500\u7ec4\u5269\u4e0b\u4e00\u4eba\uff0c\u7c7b\u4f3c\u4e8e\u5f52\u5e76\u6392\u5e8f\u7684\u65b9\u5f0f\uff0c\u6bd4\u51fa\u51a0\u519b\u540e\uff0c\u8ba9\u51a0\u519b\u4e4b\u95f4\u518d\u6bd4\uff0c\u4e3b\u8981\u662f\u8981\u60f3\u60f3\u591a\u4f59\u7684\u90a3\u4e00\u4e2a\u9009\u624b\u5982\u4f55\u5904\u7406\uff0c\u5fc5\u7136\u8981\u5728\u7b2c\u4e00\u6b21\u51b3\u51fa\u51a0\u519b\u540e\u52a0\u5165\u6bd4\u8d5b\u7ec4\u3002",
      "ID": "55f2e51de4b0152a61143366",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u516c\u53f8\u91cc\u9762\u67091001\u4e2a\u5458\u5de5\uff0c\u73b0\u5728\u8981\u5728\u516c\u53f8\u91cc\u9762\u627e\u5230\u6700\u597d\u7684\u7fbd\u6bdb\u7403\u9009\u624b\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u540d\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5fc5\u987b\u53c2\u8d5b\uff0c\u95ee\u81f3\u5c11\u8981\u6bd4\u8d5b\u591a\u5c11\u6b21\u624d\u80fd\u591f\u627e\u5230\u6700\u597d\u7684\u7fbd\u6bdb\u7403\u5458\u5de5\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c09",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4fdd\u8bc1\u57fa\u7c7b\u516c\u6709\u6210\u5458\u5728\u5b50\u7c7b\u4e2d\u53ef\u4ee5\u88ab\u8bbf\u95ee",
      "optionC": "\u4fdd\u8bc1\u6bcf\u4e2a\u5bf9\u8c61\u62e5\u6709\u81ea\u5df1\u7684\u6570\u636e\u6210\u5458\uff0c\u4f46\u5171\u4eab\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u6210\u5458\u7684\u4ee3\u7801",
      "optionAnswer": "C",
      "answer": "C++\u8981\u6c42\u51fd\u6570\u5728\u88ab\u8c03\u7528\u4e4b\u524d\uff0c\u5e94\u5f53\u8ba9\u7f16\u8bd1\u5668\u77e5\u9053\u8be5\u51fd\u6570\u7684\u539f\u578b\uff0c\u4ee5\u4fbf\u7f16\u8bd1\u5668\u5229\u7528\u51fd\u6570\n\u539f\u578b\u63d0\u4f9b\u7684\u4fe1\u606f\u53bb\u68c0\u67e5\u8c03\u7528\u7684\u5408\u6cd5\u6027\uff0c\u5f3a\u5236\u53c2\u6570\u8f6c\u6362\u6210\u4e3a\u9002\u5f53\u7c7b\u578b\uff0c\u4fdd\u8bc1\u53c2\u6570\u7684\u6b63\u786e\u4f20\u9012\u3002\u5bf9\u4e8e\n\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u5176\u58f0\u660e\u5728\u5934\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u7528#include\u5b8f\u547d\u4ee4\u5305\u542b\u8fd9\u4e9b\u539f\u578b\u6587\u4ef6\uff1b\u5bf9\u4e8e\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\n\u6570\uff0c\u5148\u5b9a\u4e49\u3001\u540e\u8c03\u7528\u7684\u51fd\u6570\u53ef\u4ee5\u4e0d\u7528\u58f0\u660e\uff0c\u4f46\u540e\u5b9a\u4e49\u3001\u5148\u8c03\u7528\u7684\u51fd\u6570\u5fc5\u987b\u58f0\u660e\u3002\u4e00\u822c\u4e3a\u589e\u52a0\u7a0b\u5e8f\n\u7684\u53ef\u7406\u89e3\u6027\uff0c\u5e38\u5c06\u4e3b\u51fd\u6570\u653e\u5728\u7a0b\u5e8f\u5f00\u5934\uff0c\u8fd9\u6837\u9700\u8981\u5728\u4e3b\u51fd\u6570\u524d\u5bf9\u5176\u6240\u8c03\u7528\u7684\u51fd\u6570\u4e00\u4e00\u8fdb\u884c\u58f0\u660e\n\uff0c\u4ee5\u6d88\u9664\u51fd\u6570\u6240\u5728\u4f4d\u7f6e\u7684\u5f71\u54cd\u3002\u6240\u4ee5\u9009\u62e9C\u9879\u3002",
      "optionB": "\u4fdd\u8bc1\u57fa\u7c7b\u4fdd\u62a4\u6210\u5458\u5728\u5b50\u7c7b\u4e2d\u53ef\u4ee5\u88ab\u8bbf\u95ee",
      "type": "1",
      "optionA": "\u4fdd\u8bc1\u57fa\u7c7b\u79c1\u6709\u6210\u5458\u5728\u5b50\u7c7b\u4e2d\u53ef\u4ee5\u88ab\u8bbf\u95ee",
      "question": "this\u6307\u9488\u5b58\u5728\u7684\u76ee\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143143",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "func_a \u548cfunc_b \u5206\u914d\u7684\u5185\u5b58\u4f1a\u81ea\u52a8\u521d\u59cb\u53160",
      "optionC": "func_b \u5b58\u5728\u5185\u5b58\u6cc4\u9732",
      "optionAnswer": "B",
      "answer": "\u6808\u4e0a\u7684\u6570\u636e\u662f\u4e00\u4e2a\u968f\u673a\u503c\uff0c\u4e00\u822c\u662f0xcccccccc,\u800c\u5806\u4e0a\u7684\u5185\u5b58\u5982\u679c\u4e0d\u8c03\u7528\u76f8\u5e94\u7684\u6784\u9020\u51fd\u6570\u6216\u8005\u663e\u793a\u521d\u59cb\u5316\u5b83\u662f\u4e0d\u4f1a\u88ab\u521d\u59cb\u5316\u7684",
      "optionB": "func_b \u4f7f\u7528\u4e86\u592a\u591a\u7684\u6808\uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u5728\u8fd0\u884c\u65f6\u5019\u5d29\u6e83\u3002",
      "type": "1",
      "optionA": "func_a \u83b7\u5f97\u4e34\u65f6\u5185\u5b58\u7684\u65b9\u5f0f\u6548\u7387\u901a\u5e38\u66f4\u9ad8\u3002",
      "question": "\u8bf7\u9605\u8bfb\u4e0b\u9762\u4ee3\u7801\u7247\u6bb5\u5e76\u4e14\u56de\u7b54\u95ee\u9898\uff1a\n\n#define SIZE_20M (20*1024*1024)\nvoid func_a()\n{\n    char *tmp = malloc(SIZE_20M)\n    return;\n}\nvoid func_b()\n{\n    char temp[SIZE_20M];\n    //...do something using temp\n    return;\n}\n\n\u5173\u4e8e\u8fd9\u6bb5\u4ee3\u7801\uff0c\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a6114313e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "a=4,b=8,c=4",
      "optionC": "a=4,b=7,c=4",
      "optionAnswer": "",
      "answer": "\u9996\u5148int\u80af\u5b9a\u662f4\u4e0d\u7528\u8bf4\u4e86\uff0ca\uff1d4\n\u7b2c\u4e8c\u4e2astr\uff3b\uff3d\u4ee3\u8868char\u578b\u6570\u636e\uff0c\u6574\u4e2a\u6570\u7ec4\u5b58\u2018Tencent\\0\u2019\uff0c\u6240\u4ee5\u957f\u5ea6\u4e3a8\uff0cb\uff1d8\n\u7b2c\u4e09\u4e2a\uff0c32\u4f4d\u673a\u8ddf64\u4f4d\u673a\u7684\u53d8\u91cf\u7684\u5dee\u522b\u4e3b\u8981\u5728\u6307\u9488\u5927\u5c0f\u4e0a\uff0c32\u4f4d\u673a\u6307\u9488\u957f\u5ea6\u4e3a4\uff0c64\u4f4d\u673a\u6307\u9488\u957f\u5ea6\u4e3a8\uff0cc\uff1d4",
      "optionB": "a=4,b=4,c=4",
      "type": "1",
      "optionA": "a=1,b=1,c=1",
      "question": "win32\u7cfb\u7edf\u91cc\uff0c\u4e0b\u9762\u51e0\u4e2asizeof\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff08\uff09\n\nint intValue=1024;\nchar str[]=\"Tencent\";\nconst char* ch=str;\nsizeof(intValue)=__a___;\nsizeof(str)=__b____;\nsizeof(ch)=____c___;",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143163",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "9",
      "optionC": "4",
      "optionAnswer": "B",
      "answer": "\u7b54\u6848\u89e3\u6790\uff1aMyClass a[5]\uff0c\u4f1a\u521b\u5efa5\u4e2a\u5bf9\u8c61\uff0c\u6240\u4ee5\u4f1a\u81ea\u52a8\u8c03\u75285\u6b21\u6784\u9020\u51fd\u6570\uff0c\u4f46\u662fMyClass *b[6],\u8fd9\u4e0d\u4f1a\u81ea\u52a8\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u56e0\u4e3a\u8fd9\u662f\u58f0\u660e\u4e00\u4e2a\u6307\u54116\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\u7684\u6307\u9488\uff0c\u6307\u9488\u58f0\u660e\u7684\u65f6\u5019\u662f\u4e0d\u5206\u914d\u7a7a\u95f4\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u6ca1\u6709\u6307\u5411\u4e00\u4e2a\u6709\u6548\u7684\u5185\u5b58\u7a7a\u95f4\u3002",
      "optionB": "5",
      "type": "1",
      "optionA": "2",
      "question": "\u5982\u679cMyClass\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u6267\u884c\u201dMyClass a[5], *b[6]\u201d\u8bed\u8a00\u4f1a\u81ea\u52a8\u8c03\u7528\u8be5\u7c7b\u6784\u9020\u51fd\u6570\u7684\u6b21\u6570\u662f()",
      "title": "C&C++"
    },
    {
      "answer": "Ptr=(int?*)&value;",
      "ID": "55f2e51ee4b0152a611433dc",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bf7\u95ee c \u8bed\u8a00\u4e2d\u600e\u4e48\u53bb\u9664 const \u4fee\u9970\uff1f \u6bd4\u5982\uff1a\nconst double value=0.2f\uff1b double *ptr\uff1b\nptr \u600e\u4e48\u6837\u83b7\u53d6 value \u7684\u503c\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u5177\u4f53\u6765\u8bf4cookie\u673a\u5236\u91c7\u7528\u7684\u662f\u5728\u5ba2\u6237\u7aef\u4fdd\u6301\u72b6\u6001\u7684\u65b9\u6848\uff0c\u800csession\u673a\u5236\u91c7\u7528\u7684\u662f\u5728\u670d\u52a1\u5668\u7aef\u4fdd\u6301\u72b6\u6001\u7684\u65b9\u6848\u3002  \u9ed8\u8ba4\u65f6\uff0c\u7f51\u7ad9\u7684\u6240\u6709 Cookies \u90fd\u4e00\u8d77\u88ab\u5b58\u50a8\u5728\u5ba2\u6237\u7aef\uff0c\u5e76\u4e14\u6240\u6709 Cookies \u8fde\u540c\u7f51\u7ad9\u7684\u4efb\u4f55\u8bf7\u6c42\u4e00\u8d77\u88ab\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7f51\u7ad9\u4e2d\u7684\u6bcf\u4e2a\u9875\u9762\u90fd\u80fd\u591f\u4e3a\u7f51\u7ad9\u83b7\u53d6\u6240\u6709\u7684 Cookies\u3002\u4f46\u662f\uff0c\u4f60\u80fd\u591f\u901a\u8fc7\u4e24\u4e2a\u65b9\u5f0f\u6765\u8bbe\u7f6e Cookies \u7684\u4f5c\u7528\u8303\u56f4\uff1a        \u628a Cookies \u7684\u4f5c\u7528\u8303\u56f4\u9650\u5236\u5230\u670d\u52a1\u5668\u7684\u76ee\u5f55\uff0c\u4ece\u800c\u5141\u8bb8\u4f60\u628a Cookies \u9650\u5236\u5230\u7f51\u7ad9\u7684\u67d0\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002 \u8bbe\u7f6e\u57df\u7684\u4f5c\u7528\u8303\u56f4\uff0c\u80fd\u591f\u5141\u8bb8\u4f60\u6307\u5b9a\u57df\u4e2d\u7684\u54ea\u4e9b\u5b50\u57df\u80fd\u591f\u8bbf\u95ee Cookie\u3002 \u628a Cookies \u9650\u5236\u5230\u76ee\u5f55\u6216\u5e94\u7528\u7a0b\u5e8f \u8981\u628a Cookies \u9650\u5236\u5230\u670d\u52a1\u5668\u7684\u76ee\u5f55\uff0c\u8bf7\u8bbe\u7f6e Cookie \u7684 Path \u5c5e\u6027\n1.\u8d85\u65f6\u95ee\u9898\uff1b\n2.jsessionid\u95ee\u9898\uff1b\n3.\u5355\u70b9\u9000\u51fa\u65f6\u6709\u65f6\u5b50\u7cfb\u7edf\u672a\u80fd\u6b63\u5e38\u9000\u51fa\uff1b\n4.\u6709\u4e9b\u8bf7\u6c42\u8def\u5f84\u4e0d\u9700\u8981\u5355\u70b9\u767b\u5f55\u8fc7\u6ee4\u5668\u62e6\u622a\uff1b\n5.\u4e0d\u540c\u5e94\u7528\u670d\u52a1\u5b9e\u73b0\u53ef\u80fd\u8981\u6c42SSO\u5ba2\u6237\u7aef\u505a\u9002\u5e94\u6027\u6539\u9020\u3002",
      "ID": "55f2e51de4b0152a61143351",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u767e\u5ea6\u662f\u4e00\u4e2a\u5927\u578b\u7f51\u7ad9\uff0c\u5185\u90e8\u542b\u6709\u591a\u4e2a\u4ea7\u54c1\u7ebf\uff0c\u6bd4\u5982\u5e7f\u4e3a\u4eba\u77e5\u7684\u8d34\u5427\u3001\u77e5\u9053\u3001\u7a7a\u95f4\u7b49\u5e94\u7528\u3002\u7136\u800c\u8bbe\u8ba1\u8fd9\u4e9b\u5e94\u7528\u7684\u7edf\u4e00\u767b\u5f55\u5e73\u53f0\u5374\u662f\u4e00\u4ef6\u975e\u5e38\u8270\u5de8\u7684\u6311\u6218\u3002\u9700\u8981\u8003\u8651\u5230\u901a\u7528\u6027\u548c\u5b89\u5168\u6027\u3002\n1)     \u5bf9\u4e8e\u4e00\u4e2aWeb\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e3b\u8981\u7684\u8eab\u4efd\u9a8c\u8bc1\u548c\u51ed\u8bc1\u4fdd\u6301\u7684\u65b9\u6cd5\u4e3b\u8981\u6709cookie\u548csession\u4e24\u79cd\u3002\u4ed6\u4eec\u53c8\u662f\u5982\u4f55\u8d77\u4f5c\u7528\u7684\uff1f\u5404\u6709\u54ea\u4e9b\u4f18\u7f3a\u70b9\uff1f\n2)     \u5f71\u54cd\u5230cookie\u503c\u4f5c\u7528\u8303\u56f4\u7684\u56e0\u7d20\u6709\u54ea\u4e9b\uff1f\u8bf7\u4e00\u4e00\u8bf4\u660e\u3002\n3)     \u4ece\u5b89\u5168\u89d2\u5ea6\u6765\u8003\u8651\uff0c\u4e00\u4e2a\u5927\u578b\u7f51\u7ad9\u7684\u5355\u70b9\u767b\u5f55\u53ef\u80fd\u4f1a\u5f15\u5165\u54ea\u4e9b\u5b89\u5168\u95ee\u9898\uff1f\u5982\u4f55\u8bbe\u8ba1\u5b89\u5168\u7684\u5728\u7ebf\u5355\u70b9\u767b\u5f55\u7cfb\u7edf\uff1f ",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7ef",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "10",
      "optionC": "9",
      "optionAnswer": "B",
      "answer": "\u89e3\u9898\u601d\u8def\uff1a\u8f93\u51faa\u7684\u503c\u662f\u5728for\u4e4b\u540e\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5148\u5206\u6790\u7a0b\u5e8f\u8df3\u51fafor\u7684\u60c5\u51b5\u3002\u7531\u4ee3\u7801\u53ef\u77e5\uff0c\u7a0b\u5e8f\u8df3\u51fafor\u5faa\u73af\u7684\u60c5\u51b5\u6709\u4e24\u79cd\uff1a\nb\u5927\u4e8e\u6216\u7b49\u4e8e20\uff0c\u6267\u884cbreak\u8bed\u53e5\uff0c\u8df3\u51fafor\u5faa\u73af\uff1b\na\u5927\u4e8e100\uff0c\u4e0d\u6ee1\u8db3\u5faa\u73af\u6761\u4ef6\uff0c\u8df3\u51fa\u5faa\u73af\uff1b\n\u5982\u679c\u662f\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u8bdd\uff0c\u663e\u7136a\u7b49\u4e8e101\uff0cABCD\u90fd\u4e0d\u662f\uff0c\u6240\u4ee5\u7a0b\u5e8f\u662f\u7b2c\u4e00\u79cd\u60c5\u51b5\u8df3\u51fafor\u3002\u63a5\u4e0b\u6765\u5c31\u662f\u5206\u6790\u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e0b\u8df3\u51fafor\u540e\uff0ca\u7684\u503c\u3002\u6211\u4eec\u77e5\u9053\u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0cb\u6700\u540e\u7684\u503c\u80af\u5b9a\u662f\u5927\u4e8e20\uff0c\u6240\u4ee5\u524d\u9762\u6240\u6709b\u7684\u503c\u90fd\u5e94\u8be5\u572820\u4ee5\u5185\uff0c\u4e14\u90fd\u662f\u6a213\u4f591\u7684\u88ab\u9664\u6570\uff0c\u56e0\u4e3ab\u521d\u503c\u4e3a1\uff0c\u6a213\u4f591\uff0c\u63a5\u4e0b\u6765\u53c8\u6bcf\u6b21\u90fd\u52a03\uff0c\u6240\u4ee5\u6309\u987a\u5e8f\u5e94\u8be5\u662f1,4,7,10,13,16,19\u3002\u6700\u540eb+=3,b=21\uff0c\u8df3\u51fa\u5faa\u73af\uff0c\u6b64\u65f6a=8\u3002\n\u6267\u884c\u4ee3\u7801\uff0c\u7ed3\u679c\u201c8\u201d\u3002",
      "optionB": "8",
      "type": "1",
      "optionA": "7",
      "question": "#include\nint main() {\n    int a, b;\n    for (a = 1, b = 1; a <= 100; a++) { if (b >= 20)\n            break;\n        if (b % 3 == 1) {\n            b += 3;\n            continue;\n        }\n        b -= 5;\n    }\n    printf(\"%d\\n\", a);\n    return 0;\n}\n\u4e0a\u9762\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a()",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8bff",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "4\u548c1",
      "optionC": "4\u548c0",
      "optionAnswer": "A",
      "answer": "\u5e26\u9ed8\u8ba4\u7684\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u5e94\u5b9e\u53c2\u6ca1\u6709\u503c\u65f6\u5c31\u91c7\u7528\u5f62\u53c2\u503c\u3002\u8c03\u7528\u6784\u9020\u51fd\u6570\u65f6\uff0ci=1,\u4e0d\u91c7\n\u7528\u9ed8\u8ba4\u503c\uff0c\u800c\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0cj\u91c7\u7528\u9ed8\u8ba4\u503c0\u5373j=0,\u56e0\u6b64a=1,b=0,\u9009\u62e9A\u9879\u3002",
      "optionB": "1\u548c4",
      "type": "1",
      "optionA": "1\u548c0",
      "question": "\u5047\u5b9a\u4e00\u4e2a\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e3a\u201cA(int i=4, int j=0) {a=i;b=j;}\u201d, \u5219\u6267\u884c\u201cA x (1);\u201d\u8bed\n\u53e5\u540e\uff0cx.a\u548cx.b\u7684\u503c\u5206\u522b\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c6e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "20\u548c5",
      "optionC": "4\u548c24",
      "optionAnswer": "C",
      "answer": "\u6267\u884c\u6784\u9020\u51fd\u6570\u5c06\u6570\u636e\u6210\u5458\u8fdb\u884c\u8d4b\u503c\uff0caa++\u662f\u540e\u52a0\uff0c\u5148\u8d4b\u503ca\uff1d4\uff0c++bb,bb\u53d8\u91cf\u503c\u5148\u81ea\n\u52a0\u4e3a6\uff0c\u518d\u4e0ea\u76f8\u4e58\uff0c\u6240\u4ee5b\uff1d24\u3002",
      "optionB": "4\u548c20",
      "type": "1",
      "optionA": "4\u548c5",
      "question": "\u5047\u5b9a\u4e00\u4e2a\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e3a\nA(int aa,int bb){\n    a=aa++;b=a*++bb;\n}\n\u5219\u6267\u884cA x(4,5);\u8bed\u53e5\u540e\uff0cx.a\u548cx.b\u7684\u503c\u5206\u522b\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a6114313c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "std::bitset\u4e0d\u662f\u4e00\u4e2aSTL\u5bb9\u5668",
      "optionC": "std::sort\u662f\u7a33\u5b9a\u6392\u5e8f",
      "optionAnswer": "C",
      "answer": "A\uff1a\u201c\u5f88\u591a\u7a0b\u5e8f\u5458\u5e0c\u671bSTL\u5b9e\u73b0\u662f\u5b8c\u5168\u7ebf\u7a0b\u5b89\u5168\u7684\u201c\u3002\u6240\u4ee5\u4e0d\u5b89\u5168\u3002\nB\uff1avector\u7684\u5b58\u5728\u53ef\u4ee5\u4f7f\u5f00\u53d1\u8005\u4e0d\u5fc5\u5173\u5fc3\u5185\u5b58\u7684\u7533\u8bf7\u548c\u91ca\u653e\u3002\u4f46\u662f\uff0cvector\u7684\u4e00\u4e2a\u7f3a\u70b9\u5c31\u662f\u5b83\u7684\u5185\u5b58\u5206\u914d\u662f\u6309\u71672\u7684\u500d\u6570\u5206\u914d\u5185\u5b58\u7684\u3002\nC\uff1a\u9519\u8bef\u3002\u8981\u77e5\u9053 std::sort \u4e0d\u662f\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5b83\u4e0d\u4fdd\u8bc1\u201c\u76f8\u7b49\u201d\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u4f7f\u7528 std::stable_sort \u6765\u4fdd\u8bc1\u8fd9\u4e00\u70b9\nD\uff1aSTL\u7684\u5bb9\u5668\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u5927\u7c7b: \n\u4e00\uff1a\u5e8f\u5217\u5bb9\u5668\uff0c\u3000\u6709vector, list, deque, string.\n\u4e8c : \u5173\u8054\u5bb9\u5668,     \u6709set, multiset, map, mulmap, hash_set, hash_map, hash_multiset, hash_multimap\n\u4e09: \u5176\u4ed6\u7684\u6742\u9879\uff1a stack, queue, valarray, bitset",
      "optionB": "\u5f53\u5bb9\u91cf\u4e0d\u591f\u65f6\uff0cvector\u5185\u90e8\u5185\u5b58\u6269\u5c55\u65b9\u5f0f\u662f\u7ffb\u500d",
      "type": "1",
      "optionA": "STL\u5bb9\u5668\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684",
      "question": "\u4ee5\u4e0b\u5173\u4e8eSTL\u7684\u63cf\u8ff0\u4e2d\uff0c____\u662f\u9519\u7684\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de827",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u7684\u5730\u5740\u53ef\u4ee5\u8d4b\u7ed9\u6307\u5411\u57fa\u7c7b\u7684\u6307\u9488",
      "optionC": "\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u7684\u6210\u5458",
      "optionAnswer": "C",
      "answer": "A\uff0cB\u548cD\u8bf4\u6cd5\u662f\u76f8\u540c\u7684\uff0c\u90fd\u662f\u8bf4\u53ef\u4ee5\u7528\u6d3e\u751f\u7c7b\u5bf9\u8c61\u521d\u8bd5\u5316\u57fa\u7c7b\u5bf9\u8c61\u6216\u8005\u6307\u9488\uff0c\u662f\u6b63\u786e\u7684\nC\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u53ea\u6709\u5728\u57fa\u7c7b\u6210\u5458\u672a\u88ab\u6d3e\u751f\u7c7b\u8986\u76d6\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u7684\u6210\u5458",
      "optionB": "\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u521d\u59cb\u5316\u57fa\u7c7b\u7684\u5f15\u7528",
      "type": "1",
      "optionA": "\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u8d4b\u7ed9\u57fa\u7c7b\u7684\u5bf9\u8c61",
      "question": "\u5728\u516c\u6709\u6d3e\u751f\u60c5\u51b5\u4e0b\uff0c\u6709\u5173\u6d3e\u751f\u7c7b\u5bf9\u8c61\u548c\u57fa\u7c7b\u5bf9\u8c61\u7684\u5173\u7cfb\uff0c\u4e0b\u5217\u53d9\u8ff0\u4e0d\u6b63\u786e\u7684\u662f(????)?",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114322c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "I\u3001II\u548cIII",
      "optionC": "\u4ec5 II \u3001III",
      "optionAnswer": "B",
      "answer": "\u7528\u6237\u6001\u5207\u6362\u5230\u5185\u6838\u6001\u7684  3  \u79cd\u65b9\u5f0f\na.  \u7cfb\u7edf\u8c03\u7528\nb.  \u5f02\u5e38\nc.  \u5916\u56f4\u8bbe\u5907\u7684\u4e2d\u65ad \n\nI. \u5f02\u5e38 \nIII. \u7cfb\u7edf\u8c03\u7528 ",
      "optionB": "\u4ec5 I\u3001III",
      "type": "1",
      "optionA": "\u4ec5 I\u3001II",
      "question": "\u4e0b\u5217\u9009\u9879\u4e2d\uff0c\u4f1a\u5bfc\u81f4\u7528\u6237\u8fdb\u7a0b\u4ece\u7528\u6237\u6001\u5207\u6362\u5230\u5185\u6838\u7684\u64cd\u4f5c\u662f?\nI. \u6574\u6570\u9664\u4ee5\u96f6 \nII. sin( )\u51fd\u6570\u8c03\u7528   \nIII. read\u7cfb\u7edf\u8c03\u7528",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7f6",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u8bf4\u6cd5\u90fd\u4e0d\u6b63\u786e",
      "optionC": "\u4e0d\u5408\u6cd5",
      "optionAnswer": "B",
      "answer": "1\u3001int(*p)[4];------ptr\u4e3a\u6307\u5411\u542b4\u4e2a\u5143\u7d20\u7684\u4e00\u7ef4\u6574\u5f62\u6570\u7ec4\u7684\u6307\u9488\u53d8\u91cf\uff08\u662f\u6307\u9488\uff09\n2\u3001int *p[4];-------\u5b9a\u4e49\u6307\u9488\u6570\u7ec4p\uff0c\u5b83\u75314\u4e2a\u6307\u5411\u6574\u578b\u6570\u636e\u7684\u6307\u9488\u5143\u7d20\u7ec4\u6210\uff08\u662f\u6570\u7ec4\uff09\n3\u3001int(*)[4];--------\u5b9e\u9645\u4e0a\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u3002\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\uff08int(*p)[4];\uff09",
      "optionB": "\u4e00\u4e2a\u6307\u5411\u5143\u7d20\u4e2a\u6570\u4e3a3\u7684int\u6570\u7ec4\u7684\u6307\u9488",
      "type": "1",
      "optionA": "\u4e00\u4e2a\u6307\u5411int\u5143\u7d20\u5927\u5c0f\u4e3a3\u7684\u6307\u9488\u6570\u7ec4",
      "question": "int (*p)[3] p\u7684\u542b\u4e49\u662f\u4ec0\u4e48?",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c60",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u90fd\u4e0d\u662f\u865a\u51fd\u6570",
      "optionC": "\u53ea\u6709\u88ab\u91cd\u65b0\u8bf4\u660e\u4e3avirtual\u65f6\u624d\u662f\u865a\u51fd\u6570",
      "optionAnswer": "A",
      "answer": "\u5728\u57fa\u7c7b\u58f0\u660e\u4e3avirtual\u7684\u51fd\u6570\u4e3a\u865a\u51fd\u6570\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u53ea\u8981\u6709\u76f8\u540c\u7684\u51fd\u6570\uff08\u51fd\u6570\u540d\u76f8\n\u540c\u3001\u8fd4\u56de\u503c\u76f8\u540c\u3001\u5f62\u53c2\u7c7b\u578b\u548c\u4e2a\u6570\u76f8\u540c\uff09\u5373\u4f7f\u4e0d\u7528virtual\u8bf4\u660e\uff0c\u4e5f\u90fd\u662f\u865a\u51fd\u6570\u3002",
      "optionB": "\u53ea\u6709\u88ab\u91cd\u65b0\u8bf4\u660e\u65f6\u624d\u662f\u865a\u51fd\u6570",
      "type": "1",
      "optionA": "\u90fd\u662f\u865a\u51fd\u6570",
      "question": "\u5f53\u4e00\u4e2a\u7c7b\u7684\u67d0\u4e2a\u51fd\u6570\u88ab\u8bf4\u660e\u4e3avirtual\u65f6\uff0c\u8be5\u51fd\u6570\u5728\u8be5\u7c7b\u7684\u6240\u6709\u6d3e\u751f\u7c7b\u4e2d\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114323f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51fd\u6570\u91cd\u8f7d\u8fd4\u56de\u503c\u7c7b\u578b\u5fc5\u987b\u76f8\u540c",
      "optionC": "\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u90fd\u53ef\u4ee5\u662f\u865a\u51fd\u6570",
      "optionAnswer": "B",
      "answer": "A \u4e0d\u80fd\u91cd\u8f7d\u2018.\u2019\uff0c\u56e0\u4e3a\u2018.\u2019\u5728\u7c7b\u4e2d\u5bf9\u4efb\u4f55\u6210\u5458\u90fd\u6709\u610f\u4e49\uff0c\u5df2\u7ecf\u6210\u4e3a\u6807\u51c6\u7528\u6cd5\u3002  \n\u4e0d\u80fd\u91cd\u8f7d ?: \uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u5bf9\u4e8e\u7c7b\u5bf9\u8c61\u6765\u8bf4\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u76f8\u53cd\u8fd8\u4f1a\u5f15\u8d77\u6b67\u4e49 \n\u8fd8\u6709\uff1a\uff1a\nC \u6784\u9020\u51fd\u6570 \u4e0d\u80fd\u662f\u865a\u51fd\u6570\u3002 \nD \u51fd\u6570\u91cd\u8f7d\u53ea\u8ddf \u53c2\u6570\u7c7b\u578b \u548c\u53c2\u6570\u4e2a\u6570 \u6709\u5173\u3002",
      "optionB": "const\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528const\u7c7b\u578b\u6210\u5458\u51fd\u6570",
      "type": "1",
      "optionA": "C++\u5df2\u6709\u7684\u4efb\u4f55\u8fd0\u7b97\u7b26\u90fd\u53ef\u4ee5\u91cd\u8f7d",
      "question": "\u4e0b\u9762\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143152",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u7b54\u6848\u90fd\u4e0d\u6b63\u786e",
      "optionC": "\u7a0b\u5e8f\u4e0d\u6b63\u786e",
      "optionAnswer": "B",
      "answer": "\u57fa\u7c7bA \u7684f()\u6ca1\u6709\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u6ca1\u6709B\u8986\u76d6\u3002",
      "optionB": "\u4e0d\u7b26\u5408\u9884\u671f\u7684\u8f93\u51faA",
      "type": "1",
      "optionA": "\u6ca1\u6709\u95ee\u9898\uff0c\u8f93\u51faB",
      "question": "\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u8fd0\u884c\u65f6\u4f1a\u51fa\u73b0\u4ec0\u4e48\u95ee\u9898\uff1f\n\nclass A\n{\npublic:\n    void f()\n    {\n        printf(\"A\\n\");\n    }\n};\n \nclass B: public A\n{\npublic:\n    virtual void f()\n    {\n        printf(\"B\\n\");\n    }\n};\n \nint main()\n{\n    A *a = new B;\n    a->f();\n    delete a;\n    return 0;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143227",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "a[i] a[i] a[i]",
      "optionC": "0 a[j] a[j]",
      "optionAnswer": "B",
      "answer": "\u7b2c\u4e00\u6b65\uff1a\u627e\u51fa\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0c\u5c06\u4ed6\u4eec\u4fdd\u5b58\u5728a[0]\u548ca[1]\u4e2d\n\u7b2c\u4e8c\u6b65\uff1a\u5728\u5269\u4f59\u7684\u6570\u4e2d\u627e\u51fa\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0c\u4fdd\u5b58\u5728a[2]\u548ca[3]\u4e2d",
      "optionB": "a[i] a[j] a[j]",
      "type": "1",
      "optionA": "0 a[i] a[i]",
      "question": "\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u628a\u5f62\u53c2a\u6240\u6307\u6570\u7ec4\u4e2d\u7684\u6700\u5c0f\u503c\u653e\u5728\u5143\u7d20a[0]\u4e2d\uff0c\u63a5\u7740\u628aa\u6240\u6307\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\u653e\u5728a[1]\u5143\u7d20\u4e2d;\u518d\u628aa\u6240\u6307\u6570\u7ec4\u5143\u7d20\u4e2d\u7684\u6b21\u5c0f\u503c\u653e\u5728a[2]\u4e2d\uff0c\u628aa\u7d22\u53d6\u6570\u7ec4\u5143\u7d20\u4e2d\u7684\u6b21\u5927\u503c\u653e\u5728a[3]\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \n\u4f8b\u5982:\u82e5a\u6240\u6307\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u6700\u521d\u6392\u5217\u4e3a\uff1a9,1,4,2,3,6,5,8,7;\u6309\u89c4\u5219\u79fb\u52a8\u540e\uff0c\u6570\u636e\u6392\u5217\u4e3a:1,9,2,8,3,7,4,6,5\u3002\u5f62\u53c2n\u4e2d\u5b58\u653ea\u6240\u6307\u6570\u7ec4\u4e2d\u6570\u636e\u7684\u4e2a\u6570\u3002\n\u89c4\u5b9afun\u51fd\u6570\u4e2d\u7684max\u5b58\u653e\u7684\u5f53\u524d\u6240\u627e\u7684\u6700\u5927\u503c,px\u5b58\u653e\u5f53\u524d\u6240\u627e\u6700\u5927\u503c\u5f97\u4e0b\u6807\u3002 \u8bf7\u5728\u7a0b\u5e8f\u7684\u4e0b\u753b\u7ebf\u5904\u586b\u5165\u6b63\u786e\u7684\u5185\u5bb9\u5e76\u5c06\u4e0b\u753b\u7ebf\u5220\u9664\uff0c\u4f7f\u7a0b\u5e8f\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002 \n\u8bd5\u9898\u7a0b\u5e8f\u3002\n\n#include<stdio.h>\n#define N 9\nvoid fun(int a[ ], int n)\n{\n    int i, j, max, min, px, pn, t;\n    for (i = 0; i < n - 1; i += 2)\n    {\n \n        max = min = __;\n        px = pn = i;\n        for (j = i + 1; j < n; j++)\n        {\n \n            if (max <  __)\n            {\n                max = a[j];\n                px = j;\n            }\n \n            if (min > __ )\n            {\n                min = a[j];\n                pn = j;\n            }\n        }\n        if (pn != i)\n        {\n            t = a[i];\n            a[i] = min;\n            a[pn] = t;\n            if (px == i)\n                px = pn;\n        }\n        if (px != i + 1)\n        {\n            t = a[i + 1];\n            a[i + 1] = max;\n            a[px] = t;\n        }\n    }\n}\nint main( )\n{\n    int b[N] = {9, 1, 4, 2, 3, 6, 5, 8, 7};\n    printf(\"\\nThe original data:\\n\");\n    for (int i = 0; i < N; i++)\n        printf(\"% 4d\", b[i]);\n    printf(\"\\n\");\n    fun(b, N);\n    printf(\"\\nThe data after mocinng \\n\");\n    for (int i = 0; i < N; i++)\n        printf(\"% 4d\", b[i]);\n    printf(\"\\n\");\n}",
      "title": "C&C++"
    },
    {
      "answer": "N = 4\nM = 5\nl = []\nfor i in xrange(1, 1 + N*M):\n l.append(i)\n \nm = [[None]*M for i in xrange(N)]\nstep = [(0, 1), (1, 0), (0, -1), (-1, 0)]\nd = 0\ns = (0, 0)\n \nfor num in l:\n m[s[0]][s[1]] = num\n ns = (step[d][0] + s[0], step[d][1] + s[1])\n if ns[0] >= N or ns[1] >= M or m[ns[0]][ns[1]] is not None:\n d = (d + 1) % 4\n ns = (step[d][0] + s[0], step[d][1] + s[1])\n s = ns\n \nfor i in m:\n print i",
      "ID": "55f2e51de4b0152a6114335e",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u53cd\u87ba\u65cb\u77e9\u9635\uff1a\u968f\u673a\u7ed9\u5b9aN*M\u4e2a\u6570\uff08\u65e0\u91cd\u590d\uff09\uff0c\u5148\u5c06\u8fd9N*M\u4e2a\u6570\u6392\u5e8f\uff0c\u7136\u540e\u5347\u5e8f\u653e\u7f6e\u5230\u87ba\u65cb\u77e9\u9635\u5f53\u4e2d\uff1a\n\u5982\uff0c\u7ed9\u5b9a3*5\u517115\u4e2a\u65701-15\uff0c\u5219\u87ba\u65cb\u77e9\u9635\u8f93\u51fa\u5982\u4e0b\uff1a\n1   2  3  4  5\n14 15 16 17 6\n13 20 19 18 7\n12 11 10 9 8",
      "title": "C&C++"
    },
    {
      "answer": "\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u8f6c\u6362\u6210\u4e00\u4e2a\u52a8\u6001\u89c4\u5212\u95ee\u9898\uff1a\n\u6bd4\u5982\u6211\u4eec\u60f3\u6c42Sn(Sn\u8868\u793a\u4ece\u6c42\u4ece\u7b2c\u4e00\u4e2asegment\u5f00\u59cb\uff0c\u603b\u5171\u6709n\u4e2a\u5143\u7d20\u7684\u5b50\u95ee\u9898\uff0c\u6c42\u8fd9\u4e2a\u5b50\u95ee\u9898\u7684\u6700\u5927\u91cd\u5408\u7ebf\u6bb5\u3002)\uff0c\u9996\u5148\u6211\u4eec\u8981\u8bc1\u660e\u8fd9\u662f\u4e00\u4e2a\u52a8\u6001\u89c4\u5212\u95ee\u9898\uff1a\n\u6211\u4eec\u8981\u6c42Sn\u95ee\u9898\u7684\u6700\u5927\u91cd\u5408\u7ebf\u6bb5\uff0c\u90a3\u4e48\u5b83\u53ea\u6709\u53ef\u80fd\u6709\u4e24\u79cd\u6765\u6e90\uff1a\n\uff081\uff09Sn-1\u95ee\u9898\u7684\u6700\u5927\u91cd\u5408\u7ebf\u6bb5\uff0c\u5373Sn\u7684\u6700\u5927\u91cd\u5408\u7ebf\u6bb5\u51fa\u81ea\u524dn-1\u4e2a\u7ebf\u6bb5\uff1b\n\uff082\uff09\u7b2cn\u4e2a\u7ebf\u6bb5Segment[n-1](\u6ce8\u610f\uff1a\u6211\u662f\u4ece0\u5f00\u59cb\u8ba1\u6570\u7684\uff0c\u6240\u4ee5\u4e0b\u6807\u4e3an-1\u7684\u5c31\u662f\u7b2cn\u4e2a\u7ebf\u6bb5)\u548c\u524dn-1\u4e2a\u7ebf\u6bb5\u7684\u91cd\u5408\u7ebf\u6bb5\u4e2d\u6700\u957f\u7684\u90a3\u4e00\u4e2a\u3002\n\u6240\u4ee5\uff0c\u95ee\u9898\u7684\u89e3\u6cd5\u5982\u4e0b\uff1a\n\uff081\uff09\u9996\u5148\u6309\u7167\u6240\u6709\u7ebf\u6bb5\u7684end\u503c\u5bf9\u6240\u6709\u7ebf\u6bb5\u8fdb\u884c\u6392\u5e8f\uff1b\n\uff082\uff09\u9012\u5f52\u7684\u4ece\u540e\u5f80\u524d\u6c42\u89e3\uff0c\u6bd4\u5982\u6c42Sn\u7684\u6700\u5927\u91cd\u5408\u7ebf\u6bb5\uff0c\u5148\u901a\u8fc7\u9012\u5f52\u6c42\u51faSn-1\u7684\u6700\u5927\u91cd\u5408\u7ebf\u6bb5(tmpMaxSeg)\uff0c\u518d\u6c42\u51faSegment[n-1]\u548c\u524dn-1\u4e2a\u7ebf\u6bb5\u7684\u91cd\u5408\u7ebf\u6bb5\u4e2d\u6700\u957f\u7684\u90a3\u4e00\u4e2a(currMaxSeg)\uff0c\u6bd4\u8f83tmpMaxSeg\u548ccurrMaxSeg\u7684\u957f\u5ea6\uff0c\u9009\u51fa\u6700\u957f\u7684\u4f5c\u4e3aSn\u7684\u8fd4\u56de\u503c\u3002\n\uff083\uff09\u6ce8\u610f\uff1a\u9012\u5f52\u51fa\u53e3\uff1asize==2\u65f6\uff0c\u53ea\u6709\u4e24\u4e2a\u7ebf\u6bb5\uff0c\u901a\u8fc7\u7b80\u5355\u6bd4\u8f83\u5c31\u53ef\u4ee5\u5f97\u51fa\u6700\u5927\u8986\u76d6\u7ebf\u6bb5\uff1b\n\u81f3\u4e8e\u8fd9\u5757\u513f\uff1a\u662f\u4e3a\u4e86\u5e94\u5bf9\u539f\u672c\u4f20\u5165\u7684\u7ebf\u6bb5\u6570\u7ec4\u7684\u5927\u5c0f\u5c0f\u4e8e\u7b49\u4e8e1\u7684\u60c5\u51b5\uff0c\u7b97\u662f\u8fb9\u754c\u6761\u4ef6\u5904\u7406\u4e86\uff0c\u4e0d\u662f\u9012\u5f52\u7684\u51fa\u53e3\u3002\n\u5047\u5982\u4f20\u5165\u6570\u7ec4\u5927\u5c0f\u4e3a3\uff0c\u9012\u5f52\u6267\u884c\u5230\u6570\u7ec4\u5927\u5c0f\u4e3a2\u65f6\u5c31\u53ef\u4ee5\u8fd4\u56de\u4e86\u3002\n#include <iostream>\n#include <cstdlib>\n#include <algorithm>\nconst int LEN = 3;\nusing namespace std;\nstruct segment\n{\n    int start;\n    int end;\n};\n// assume a.end < b.end\nsegment commonSeg(const segment & a, const segment & b)\n{\n    segment CommonSeg;\n    if(a.end < b.start)\n    {\n        CommonSeg.end = 0;\n        CommonSeg.start = 0;\n    }\n    else\n    {\n        CommonSeg.end = a.end;\n        CommonSeg.start = b.start;\n    }\n    return CommonSeg;\n}\nint findMaxSegment(int size, segment * Segment, segment & maxSeg)\n{\n    if(NULL == Segment)\n    {\n        cerr << \"the segment array is NULL\" << endl;\n        return -1;\n    }\n    else if(1 == size)\n    {\n        maxSeg = Segment[0];\n        return maxSeg.end-maxSeg.start;\n    }\n    else if(2 == size)\n    {\n        if(Segment[0].end <= Segment[1].start)\n        {\n            maxSeg.start = 0;\n            maxSeg.end = 0;\n            return maxSeg.end-maxSeg.start;\n        }\n        else\n        {\n            maxSeg.end = Segment[0].end;\n            maxSeg.start = Segment[1].start;\n            return maxSeg.end-maxSeg.start;\n        }\n    }\n    else\n    {\n        segment tmpMaxSeg, tmpSeg,currMaxSeg;\n        int currMaxLen = 0;\n        findMaxSegment(size-1, Segment, tmpMaxSeg);\n        for(int i=0; i<size-1; i++)\n        {\n            tmpSeg=commonSeg(Segment[i], Segment[size-1]);\n            if(tmpSeg.end - tmpSeg.start > currMaxLen)\n            {\n                currMaxLen = tmpSe",
      "ID": "55f2e51ee4b0152a611433dd",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5728\u4e00\u7ef4\u5750\u6807\u8f74\u4e0a\u5b58\u5728\u8bb8\u591a\u6761\u7ebf\u6bb5\uff0c \u7528\u6700\u7b80\u5355\u7684\u7b97\u6cd5\u627e\u51fa\u91cd\u5408\u957f\u5ea6\u6700\u957f\u5f97\u4e24\u6761\u7ebf\u6bb5\u3002 \u6bd4\u5982\u7ebf\u6bb5 A\uff081,5\uff09\u3001B\uff082,8\uff09\u3001C\uff083,9\uff09\uff0c\u5219 B \u548c C \u7684\u91cd\u5408\u957f\u5ea6\u6700\u957f\uff0c\u4e3a 5\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7fe",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "char b[10]=\"HELLO!\";",
      "optionC": "char b[10];strcpy(b\uff0c\"HELLO!\");",
      "optionAnswer": "B",
      "answer": "B \u9009\u9879\u662f\u9519\u8bef\u7684\uff0c\u8fde\u7f16\u8bd1\u90fd\u4e0d\u4f1a\u901a\u8fc7\uff0c\u56e0\u4e3a\u6570\u7ec4\u540d\u5c5e\u4e8e\u5e38\u6027\u6307\u9488\uff0c\u73b0\u5728\u8981\u6539\u53d8\u8fd9\u4e2a\u5e38\u6027\u6307\u9488\u7684\u6307\u5411\uff0c\u8fd9\u662f\u4e0d\u4f1a\u7f16\u8bd1\u901a\u8fc7\u7684\uff0c\u518d\u8bf4B \u9009\u9879\u7684\u672c\u610f\u662f\u5c06Hello \u62f7\u8d1d\u5230b\u6307\u5411\u7684\u7a7a\u95f4\u4e2d\uff0c\u4f46\u5b9e\u9645\u5374\u662f\u5c06b\u6307\u5411\u4e86\u5728\u5e38\u91cf\u533a\u7684Hellow \u5b57\u7b26\u4e32\uff08\u867d\u7136\u7f16\u8bd1\u4e0d\u4f1a\u901a\u8fc7\uff09\u3002",
      "optionB": "char b[10];b=\"HELLO!\";",
      "type": "1",
      "optionA": "char b[10]={'H'\uff0c'E'\uff0c'L'\uff0c'L'\uff0c'O'\uff0c'!'\uff0c'\\0'};",
      "question": "\u4e0d\u80fd\u628a\u5b57\u7b26\u4e32\"HELLO!\"\u8d4b\u7ed9\u6570\u7ec4b\u7684\u8bed\u53e5\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c05",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "T add(T x,T y)",
      "optionC": "T add(T x,y)",
      "optionAnswer": "D",
      "answer": "\u5b9e\u73b0\u4e24\u4e2a\u76f8\u540c\u7c7b\u578b\u6570\u52a0\u6cd5\u7ed3\u679c\u5e94\u8be5\u548c\u64cd\u4f5c\u6570\u5177\u6709\u76f8\u540c\u7c7b\u578b\u3002\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\u540e\u7ed3\u679c\u4e5f\n\u662f\u548c\u53c2\u6570\u5177\u6709\u76f8\u540c\u7c7b\u578b\uff0c\u9700\u8981\u8fd4\u56de\u503c\u3002A\u65e0\u8fd4\u56de\u503c\u65f6\u8981\u7528void,B\u5f62\u53c2\u65e0\u7c7b\u578b\uff0cC\u5f62\u53c2y\u6ca1\u6709\u7c7b\u578b\n\uff0c\u6240\u4ee5\u9009\u62e9D\u9879\u3002",
      "optionB": "T add(x,y)",
      "type": "1",
      "optionA": "add(T x,T y)",
      "question": "\u5b9e\u73b0\u4e24\u4e2a\u76f8\u540c\u7c7b\u578b\u6570\u52a0\u6cd5\u7684\u51fd\u6570\u6a21\u677f\u7684\u58f0\u660e\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114321c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5305\u542b3\u4e2a\u5b57\u7b26",
      "optionC": "\u5305\u542b2\u4e2a\u5b57\u7b26",
      "optionAnswer": "B",
      "answer": "char a ='\\82',\u5b9a\u4e49\u5b57\u7b26\u91cfa,char\u578b\u53d8\u91cf\u503c\u4e3a1\u4e2a\u5b57\u8282\u957f\u5ea6,\u5e76\u4ece\u53f3\u4fa7\u5f00\u59cb\u8fd0\u7b97,\u6240\u4ee5a\u7684\u503c\u5e94\u4e3a'2',\u56e0\u6b64B\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "\u5305\u542b1\u4e2a\u5b57\u7b26",
      "type": "1",
      "optionA": "\u8bf4\u660e\u4e0d\u5408\u6cd5",
      "question": "\u82e5\u6709\u5b9a\u4e49\u8bed\u53e5\uff1a char a ='\\82'; \u5219\u53d8\u91cfa",
      "title": "C&C++"
    },
    {
      "answer": "\u4e0b\u62c9\u65f6\u89e6\u53d1\uff1aonPause\uff08\uff09\uff0conStop\uff08\uff09\n\u5f39\u51fadialog\uff1aonPause\uff08\uff09",
      "ID": "55f2e51de4b0152a61143398",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\uff08Android\u5f00\u53d1\u9009\u505a\uff09\u5173\u4e8eActivity\u7684\u751f\u547d\u5468\u671f\uff0c\u4e0b\u62c9statusbar\u65f6\uff0c\u684c\u9762Activity\u4f1a\u89e6\u53d1\u54ea\u51e0\u4e2a\u751f\u547d\u5468\u671f\uff1f\u7cfb\u7edf\u5173\u673a\u65f6\uff0c\u5f39\u51fa\u5173\u673aDialog\u4e4b\u540e\uff0c\u6b64\u65f6\uff0c\u684c\u9762Activity\u4f1a\u89e6\u53d1\u54ea\u51e0\u4e2a\u751f\u547d\u5468\u671f\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143262",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u90fd\u4e0d\u5bf9",
      "optionC": "1",
      "optionAnswer": "B",
      "answer": "A a1; //\u8c03\u7528A\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\na1=10; //\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u8c03\u7528\u6784\u9020\u51fd\u6570A(int)\u8fdb\u884c\u9690\u5f0f\u8f6c\u5316\uff0c\u4e4b\u540e\u5c06\u5f15\u7528\u4f20\u7ed9operator=\uff08\uff09",
      "optionB": "12",
      "type": "1",
      "optionA": "2",
      "question": "\u6709\u5982\u4e0b\u7a0b\u5e8f\u6bb5\uff1a\n\nclass A\n{\n    public:\n        A()\n        {\n            printf(\u201c0\u201d);\n        }\n        A(int a)\n        {\n            printf(\u201c1\u201d);\n        }\n        A& operator=(const A& a)\n        {\n            printf(\u201c2\u201d);\n            return*this;\n        }\n}\nint main()\n{\n    A al;\n    al=10;\n}\n\u5219\u7a0b\u5e8f\u8f93\u51fa\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de812",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "suieneG",
      "optionC": "run-time error",
      "optionAnswer": "A",
      "answer": "A.\u4e3b\u8981\u6709\u4e24\u4e2a\u77e5\u8bc6\u70b9\uff0c\u4e00\u4e2a\u662f\u9012\u5f52\uff0c\u76f8\u5f53\u4e8e\u6808\u662fFILO\uff0c\u53e6\u4e00\u4e2a\u8003\u5bdf\u70b9\u662fprint(++s)\uff0c\u6307\u9488\u5148\u79fb\u52a8\u7136\u540e\u8c03\u7528\u51fd\u6570\u3002",
      "optionB": "neius",
      "type": "1",
      "optionA": "suiene",
      "question": "\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u662f\uff1f\uff08\u6ce8\uff1aprint\u5df2\u7ecf\u58f0\u660e\u8fc7\uff09main(){     \n    char str[]=\"Geneius\";\n    print (str);\n} \nprint(char *s){\n  if(*s){\n       print(++s);\n       printf(\"%c\",*s); \n}\n}",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c66",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u76f8\u540c\u7c7b\u6a21\u677f\u7684\u4e0d\u540c\u5b9e\u4f8b\u4e00\u822c\u6ca1\u6709\u8054\u7cfb\uff0c\u800c\u6d3e\u751f\u7c7b\u5404\u79cd\u7c7b\u4e4b\u95f4\u6709\u5144\u5f1f\u7236\u5b50\u7b49\u5173\u7cfb",
      "optionC": "\u4ece\u52a8\u6001\u6027\u80fd\u770b\uff0c \u7ee7\u627f\u7c7b\u7cfb\u6bd4\u6a21\u677f\u7c7b\u7cfb\u5177\u6709\u66f4\u591a\u7684\u52a8\u6001\u7279\u6027",
      "optionAnswer": "D",
      "answer": "\u7c7b\u662f\u76f8\u540c\u7c7b\u578b\u4e8b\u7269\u7684\u62bd\u8c61\uff0c\u5177\u6709\u4e0d\u540c\u7684\u64cd\u4f5c\u3002\u800c\u6a21\u677f\u662f\u4e0d\u540c\u7c7b\u578b\u7684\u4e8b\u7269\uff0c\u5177\u4f53\u76f8\u540c\n\u7684\u64cd\u4f5c\u7684\u62bd\u8c61\u3002\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u540e\uff0c\u5404\u4e2a\u5bf9\u8c61\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002\u800c\u7c7b\u5bf9\u8c61\u662f\u901a\u8fc7\u6d3e\u751f\u3001\u7ee7\u627f\u7b49\u5173\u7cfb\n\u7684\u5173\u7cfb\u3002",
      "optionB": "\u4ece\u7c7b\u7cfb\u7684\u6210\u5458\u770b\uff0c\u6a21\u677f\u7c7b\u7cfb\u7684\u6210\u5458\u6bd4\u7ee7\u627f\u7c7b\u7cfb\u7684\u6210\u5458\u8f83\u4e3a\u7a33\u5b9a",
      "type": "1",
      "optionA": "\u6a21\u677f\u548c\u7ee7\u627f\u90fd\u53ef\u4ee5\u6d3e\u751f\u51fa\u4e00\u4e2a\u7c7b\u7cfb",
      "question": "\u4e0b\u5217\u6709\u5173\u6a21\u677f\u548c\u7ee7\u627f\u7684\u53d9\u8ff0\u6b63\u786e\u7684\u662f \uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "TCP/IP\u534f\u8bae\n\u4ece\u4e0a\u5f80\u4e0b\u4f9d\u6b21\u4e3a\uff1a\u5e94\u7528\u5c42\uff0c\u4f20\u8f93\u5c42\uff0c\u7f51\u7edc\u5c42\uff0c\u7f51\u7edc\u63a5\u53e3\u5c42",
      "ID": "55f2e51ee4b0152a611433d5",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c6d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u7c7bA\u7684\u6210\u5458\u51fd\u6570\u4e0d\u5f97\u8bbf\u95ee\u7c7bB\u7684\u6210\u5458",
      "optionC": "\u7c7bA\u7684\u6210\u5458\u5373\u7c7bB\u7684\u6210\u5458",
      "optionAnswer": "A",
      "answer": "\u53cb\u5143\u5173\u7cfb\u4e0d\u80fd\u88ab\u7ee7\u627f\uff0c\u53cb\u5143\u5173\u7cfb\u662f\u5355\u5411\u7684\uff0c\u53cb\u5143\u5173\u7cfb\u4e0d\u5177\u6709\u4f20\u9012\u6027\u3002\u4f46\u662f\u53cb\u5143\u51fd\u6570\n\u4e0d\u662f\u7c7b\u7684\u6210\u5458\uff0c\u6240\u4ee5\u9009\u62e9A\u9879\u3002",
      "optionB": "\u7c7bB\u7684\u6210\u5458\u5373\u7c7bA\u7684\u6210\u5458",
      "type": "1",
      "optionA": "\u7c7bB\u4e0d\u4e00\u5b9a\u662f\u7c7bA\u7684\u53cb\u5143",
      "question": "\u5982\u679c\u7c7bA\u88ab\u8bf4\u660e\u6210\u7c7bB\u7684\u53cb\u5143\uff0c\u5219\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114320b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "while\u5faa\u73af\u7684\u6761\u4ef6\u5fc5\u987b\u662f\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u5e94\u8be5\u4e3an!=0.",
      "optionC": "*p++\u4f7f\u5f97p\u5728\u89e3\u5f15\u7528\u4e4b\u524d\u589e\u5927\uff0c\u56e0\u4e3a\u81ea\u589e\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u6bd4\u53d6\u5740\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u9ad8\u3002",
      "optionAnswer": "C",
      "answer": "A\u540c\u7ea7\u8fd0\u7b97\u7b26\uff0c\u81ea\u53f3\u5411\u5de6\uff0c*p++\u76f8\u5f53\u4e8e*(p++),\u6b63\u786e\u7684\u5e94\u8be5\u662f(*p)++",
      "optionB": "\u6570\u7ec4\u7684\u503c\u662f\u4e00\u4e2a\u4e0d\u80fd\u6539\u53d8\u7684\u503c\uff0c\u6240\u4ee5p\u4e0d\u80fd\u76f4\u63a5\u88ab\u4fee\u6539\u3002\u5e94\u8be5\u4f7f\u7528\u4e00\u4e2a\u548cp\u76f8\u5173\u8054\u7684\u6307\u9488\u6765\u5b8c\u6210\u8fd9\u4e2a\u64cd\u4f5c\u3002",
      "type": "1",
      "optionA": "*p++\u4f7f\u5f97p\u5728\u89e3\u5f15\u7528\u4e4b\u524d\u589e\u5927\uff0c\u56e0\u4e3a*\u548c++\u4e24\u4e2a\u8fd0\u7b97\u7b26\u6709\u76f8\u540c\u7684\u4f18\u5148\u7ea7\u5e76\u6309\u81ea\u53f3\u5411\u5de6\u7684\u65b9\u5f0f\u7ed3\u5408\u3002",
      "question": "\u51fd\u6570\u4f5c\u7528\uff1a\u5c06\u6574\u578b\u6570\u7ec4p\u4e2dn\u4e2a\u6570\u636e\u589e\u5927\n\nvoid increment_ints (int p [ ], int n)\n{\n  assert(p != NULL);  /* \u786e\u4fddp\u4e0d\u4e3a\u7a7a\u6307\u9488 */\n  assert(n >= 0);  /* \u786e\u4fddn\u4e0d\u4e3a\u8d1f\u6570 */\n  while (n)  /* \u5faa\u73afn\u6b21. */\n  {\n    *p++;          /* \u589e\u5927p*/\n    p++, n--;      /* p\u6307\u5411\u4e0b\u4e00\u4f4d\uff0cn\u51cf1 */\n  }\n}\n\u4ee5\u4e0a\u4ee3\u7801\u7684\u5b9e\u73b0\u6709\u9519\u8bef\uff0c\u4e0b\u9762\u54ea\u53e5\u8bdd\u7684\u8868\u8ff0\u662f\u6b63\u786e\u7684\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c03",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "MyA(MyA)",
      "optionC": "MyA(MyA&)",
      "optionAnswer": "C",
      "answer": "\u590d\u5236\u5373\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4f7f\u7528\u5bf9\u8c61\u7684\u5f15\u7528\u4f5c\u5f62\u53c2\uff0c\u9632\u6b62\u4e34\u65f6\u4ea7\u751f\u4e00\u4e2a\u5bf9\u8c61\uff0cA\u65e0\u53c2\u6784\u9020\u51fd\n\u6570\uff0cB\u662f\u6307\u9488\u4f5c\u4e3a\u5f62\u53c2\uff0cD\u9879\u662f\u5bf9\u8c61\uff0c\u6240\u4ee5\u9009\u62e9C\u9879\u3002",
      "optionB": "MyA(MyA*)",
      "type": "1",
      "optionA": "MyA()",
      "question": "\u7c7bMyA\u7684\u62f7\u8d1d\u521d\u59cb\u5316\u6784\u9020\u51fd\u6570\u662f \uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "\u4e8c\u53c9\u6811t\u4e2d\u5177\u6709\u975e\u7a7a\u7684\u5de6\u3001\u53f3\u4e24\u4e2a\u513f\u5b50\u7684\u7ed3\u70b9\u4e2a\u6570N2\uff1b\u53ea\u6709\u975e\u7a7a\u5de6\u513f\u5b50\u7684\u4e2a\u6570NL\uff1b\u53ea\u6709\u975e\u7a7a\u53f3\u513f\u5b50\u7684\u7ed3\u70b9\u4e2a\u6570NR\u548c\u53f6\u5b50\u7ed3\u70b9\u4e2a\u6570N0\u3002N2\uff0cNL,NR\u3001N0\u90fd\u662f\u5168\u5c40\u91cf\uff0c\u4e14\u5728\u8c03\u7528count(t)\u4e4b\u524d\u90fd\u7f6e\u4e3a0\u3002",
      "ID": "55f2e51de4b0152a61143370",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bbet\u662f\u7ed9\u5b9a\u7684\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u4e0b\u9762\u7684\u9012\u5f52\u7a0b\u5e8fcount(t)\u7528\u4e8e\u6c42\u5f97\uff1a\ntypedef struct node\n{\n    int data;\n    struct node *lchild,*rchild;\n}node;\n \nint N2,NL,NR,N0;\nvoid count(node *t)\n {\n     if (t->lchild!=NULL)\n         if (t->rchild!=NULL) N2++;\n         else NL++;\n     else if (t->rchild!=NULL) NR++;\n     else N0++;\n     if(t->lchild!=NULL) count(t->lchild);\n     if(t->rchild!=NULL) count(t->rchild);\n }/* call form :if(t!=NULL) count(t);*/",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7ee",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "-1",
      "optionC": "1",
      "optionAnswer": "D",
      "answer": "\u672c\u9898\u8003\u67e5\u4f4d\u8fd0\u7b97\u4e2d\u6309\u4f4d\u53d6\u53cd,0\u6309\u4f4d\u53d6\u53cd\u5c31\u662f\uff0d1,\u6240\u4ee5\u9009\u9879D\u6b63\u786e\u3002",
      "optionB": "0",
      "type": "1",
      "optionA": "8",
      "question": "#include <stdio.h>\nmain(){\n    int i=0;\n    i=\uff5ei;\n    printf(\"%d\\n\",i);\n\uff5d\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f?",
      "title": "C&C++"
    },
    {
      "answer": "\u4e09\u4e2a\u57fa\u672c\u5143\u7d20\uff1a\n\u5c01\u88c5\n\u7ee7\u627f\n\u591a\u6001\n\u4e94\u4e2a\u57fa\u672c\u539f\u5219\uff1a\n\u5355\u4e00\u804c\u8d23\u539f\u5219\uff08Single-Resposibility Principle\uff09:\u4e00\u4e2a\u7c7b\uff0c\u6700\u597d\u53ea\u505a\u4e00\u4ef6\u4e8b\uff0c\u53ea\u6709\u4e00\u4e2a\u5f15\u8d77\u5b83\u7684\u53d8\u5316\u3002\u5355\u4e00\u804c\u8d23\u539f\u5219\u53ef\u4ee5\u770b\u505a\u662f\u4f4e\u8026\u5408\u3001\u9ad8\u5185\u805a\u5728\u9762\u5411\u5bf9\u8c61\u539f\u5219\u4e0a\u7684\u5f15\u7533\uff0c\u5c06\u804c\u8d23\u5b9a\u4e49\u4e3a\u5f15\u8d77\u53d8\u5316\u7684\u539f\u56e0\uff0c\u4ee5\u63d0\u9ad8\u5185\u805a\u6027\u6765\u51cf\u5c11\u5f15\u8d77\u53d8\u5316\u7684\u539f\u56e0\u3002\n\u5f00\u653e\u5c01\u95ed\u539f\u5219\uff08Open-Closed principle\uff09:\u8f6f\u4ef6\u5b9e\u4f53\u5e94\u8be5\u662f\u53ef\u6269\u5c55\u7684\uff0c\u800c\u4e0d\u53ef\u4fee\u6539\u7684\u3002\u4e5f\u5c31\u662f\uff0c\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5c01\u95ed\u7684\u3002\nLiskov\u66ff\u6362\u539f\u5219\uff08Liskov-Substituion Principle\uff09:\u5b50\u7c7b\u5fc5\u987b\u80fd\u591f\u66ff\u6362\u5176\u57fa\u7c7b\u3002\u8fd9\u4e00\u601d\u60f3\u4f53\u73b0\u4e3a\u5bf9\u7ee7\u627f\u673a\u5236\u7684\u7ea6\u675f\u89c4\u8303\uff0c\u53ea\u6709\u5b50\u7c7b\u80fd\u591f\u66ff\u6362\u57fa\u7c7b\u65f6\uff0c\u624d\u80fd\u4fdd\u8bc1\u7cfb\u7edf\u5728\u8fd0\u884c\u671f\u5185\u8bc6\u522b\u5b50\u7c7b\uff0c\u8fd9\u662f\u4fdd\u8bc1\u7ee7\u627f\u590d\u7528\u7684\u57fa\u7840\u3002\n\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\uff08Dependecy-Inversion Principle\uff09:\u4f9d\u8d56\u4e8e\u62bd\u8c61\u3002\u5177\u4f53\u800c\u8a00\u5c31\u662f\u9ad8\u5c42\u6a21\u5757\u4e0d\u4f9d\u8d56\u4e8e\u5e95\u5c42\u6a21\u5757\uff0c\u4e8c\u8005\u90fd\u540c\u4f9d\u8d56\u4e8e\u62bd\u8c61\uff1b\u62bd\u8c61\u4e0d\u4f9d\u8d56\u4e8e\u5177\u4f53\uff0c\u5177\u4f53\u4f9d\u8d56\u4e8e\u62bd\u8c61\u3002\n\u63a5\u53e3\u9694\u79bb\u539f\u5219\uff08Interface-Segregation Principle\uff09:\u4f7f\u7528\u591a\u4e2a\u5c0f\u7684\u4e13\u95e8\u7684\u63a5\u53e3\uff0c\u800c\u4e0d\u8981\u4f7f\u7528\u4e00\u4e2a\u5927\u7684\u603b\u63a5\u53e3\u3002",
      "ID": "55f2e51de4b0152a61143365",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u4e2a\u57fa\u672c\u5143\u7d20\uff0c\u4e94\u4e2a\u57fa\u672c\u539f\u5219",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114321f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "t=2 y=3",
      "optionC": "t=2 y=2",
      "optionAnswer": "A",
      "answer": "||\u524d\u9762\u7684\u4e3a\u771f\u65f6\u5176\u540e\u7684\u5c31\u4e0d\u4f1a\u518d\u6267\u884c\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de1.",
      "optionB": "t=1 y=3",
      "type": "1",
      "optionA": "t=1 y=2",
      "question": "\u8bbex\u3001y\u3001t\u5747\u4e3aint\u578b\u53d8\u91cf\uff0c\u5219\u6267\u884c\u8bed\u53e5\uff1at=3; x=y=2; t=x++||++y;?\u540e\uff0c\u53d8\u91cft\u548cy\u7684\u503c\u5206\u522b\u4e3a____",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143218",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u5168\u90fd\u4e0d\u6b63\u786e",
      "optionC": "Hell",
      "optionAnswer": "A",
      "answer": "buffer\u662f\u6570\u7ec4\uff0csizeof\uff08buffer\uff09=6\uff0c\u6240\u4ee5\u5faa\u73af\u6267\u884c5\u6b21\u3002s\u662f\u6307\u5411char\u7c7b\u578b\u7684\u6307\u9488\uff0cs+i\u8868\u793a\u5c06s\u6307\u5411\u9996\u5143\u7d20\u540e\u7b2ci\u4e2a\u4f4d\u7f6e\uff0c*\uff08s+i\uff09\u5c31\u662fs[i]\u3002\u6240\u4ee5buffer\u4e3ahello\u3002",
      "optionB": "Hello World!",
      "type": "1",
      "optionA": "Hello",
      "question": "\u5982\u4e0b\u4ee3\u7801\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f#include<stdio.h>\nchar buffer[6] = {0};\nchar *mystring(){  \n    char *s = \"Hello world\";\n    for(int i = 0;i<(sizeof(buffer) - 1);i++){\n    buffer[i] = *(s+i);\n    }\n    return buffer;\n}\nint main(int args,char**argv){\n    printf(\"%s\\n\",mystring());\n    return 0;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431fb",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u591a\u7ee7\u627f\u7c7b",
      "optionC": "\u542b\u6709\u7eaf\u865a\u51fd\u6570",
      "optionAnswer": "C",
      "answer": "\u3010\u89e3\u6790\u3011\u62bd\u8c61\u57fa\u7c7b\u662f\u6307\u542b\u6709\u7eaf\u865a\u51fd\u6570\uff0c\u4e0d\u80fd\u591f\u5b9e\u4f8b\u5316\u7684\u57fa\u7c7b\u3002",
      "optionB": "\u6d3e\u751f\u7c7b",
      "type": "1",
      "optionA": "\u5d4c\u5957\u7c7b",
      "question": "\u62bd\u8c61\u57fa\u7c7b\u662f\u6307\uff08 \uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c11",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51fd\u6570\u4ee3\u7801\u591a\u3001\u4e0d\u5e38\u8c03\u7528",
      "optionC": "\u51fd\u6570\u4ee3\u7801\u5c11\u3001\u9891\u7e41\u8c03\u7528",
      "optionAnswer": "C",
      "answer": "\u5185\u8054\u51fd\u6570\u5177\u6709\u7a0b\u5e8f\u4ee3\u7801\u5c11\u3001\u9891\u7e41\u8c03\u7528\u548c\u6267\u884c\u6548\u7387\u9ad8\u7684\u7279\u5f81\uff0c\u6240\u4ee5\u9009\u62e9C\u9879\u3002",
      "optionB": "\u51fd\u6570\u4f53\u542b\u6709\u9012\u5f52\u8bed\u53e5",
      "type": "1",
      "optionA": "\u51fd\u6570\u4f53\u542b\u6709\u5faa\u73af\u8bed\u53e5",
      "question": "\u9002\u5b9c\u91c7\u7528inline\u5b9a\u4e49\u51fd\u6570\u60c5\u51b5\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "\u4f7f\u7528\u9012\u5f52\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528\u524d\u5e8f\u904d\u5386\uff0c\u9996\u5148\u5206\u522b\u8ba1\u7b97\u5de6\u53f3\u5b50\u6811\u5404\u81ea\u7684\u5b50\u6811\u548c\uff0c\u7136\u540e\u8bb0\u5f55\u76ee\u524d\u6700\u5927\u7684\uff1b\n\u518d\u52a0\u5165\u5f53\u524d\u7684\u7236\u8282\u70b9\uff0c\u518d\u8ba1\u7b97\u7236\u8282\u70b9\u5f00\u5934\u7684\u5b50\u6811\u662f\u5426\u6700\u5927\uff1b\u8be5\u5c42\u9012\u5f52\u4e0a\u53bb\u5373\u53ef\u3002\npublic class MaxSumSubTree {\n    class TreeNode{\n        TreeNode left,right;\n        int tag;\n        TreeNode(int tag){\n            this.tag = tag;\n        }\n    }\n\n    private TreeNode maxRoot = new TreeNode(0);\n    public int find(TreeNode root){\n        if(root==null){\n            return 0;\n        } else{\n            int lSum = find(root.left);\n            int rSum = find(root.right);\n            if(maxRoot.tag<lSum)\n                maxRoot = root.left;\n            if(maxRoot.tag<rSum)\n                maxRoot = root.right;\n            return root.tag+lSum+rSum;\n        }\n    }\n}\n",
      "ID": "55f2e51de4b0152a61143355",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6709\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c \u8282\u70b9\u5168\u90e8\u4e3a\u6574\u6570\uff0c\u5982\u4f55\u627e\u5230\u4e00\u4e2a\u5b50\u6811\uff0c\u5b83\u6240\u6709\u8282\u70b9\u7684\u548c\u6700\u5927\uff1f\u8981\u6c42\u7f16\u7a0b\u5e8f\u5b9e\u73b0\u3002",
      "title": "C&C++"
    },
    {
      "answer": "#include<sdio.h>\n#include<string.h>\nchar *FindNuber(char* out,char*in)\n{\nchar *max=NULL,*p=NULL,*q=NULL;\nint i=0,j=0;\np=in;\nwhile(*p){\np++;\nif((*p)>=0&&(*p)<=9)\n{\nq=p;\nwhile((*p)>=0&&(*p)<=9)\n{\ni++;\np++;\n}\n}\nif(i>j){\nstrncpy(max,q,i);\nj=i;\ni=0;\n}\n}\nout=max;\nreturn out;\n}",
      "ID": "55f2e51ee4b0152a611433ca",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6c42\u51fa\u4e00\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u6570\u5b57\u4e32\u3002\u6bd4\u5982as123cdf1234f\uff0c\u8fd4\u56de1234\uff0cchar* FindNumber(char * out,char *in)\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u6ee1\u8db3a[j]-a[i] <= L && a[j+1]-a[i] > L\u8fd9\u4e24\u4e2a\u6761\u4ef6\u7684j\u4e0ei\u4e2d\u95f4\u7684\u6240\u6709\u70b9\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c\uff0c\u5373j-i+1\u6700\u5927\uff0c\u65b9\u6cd5\u5f88\u7b80\u5355\uff1a\u76f4\u63a5\u4ece\u5de6\u5230\u53f3\u626b\u63cf\uff0c\u4e24\u4e2a\u6307\u9488i\u548cj\uff0ci\u4ece\u4f4d\u7f6e0\u5f00\u59cb\uff0cj\u4ece\u4f4d\u7f6e1\u5f00\u59cb\uff0c\u5982\u679ca[j] - a[i] <= L\u5219j++\u5e76\u8bb0\u5f55\u4e2d\u95f4\u7ecf\u8fc7\u7684\u70b9\u4e2a\u6570\uff0c\u5982\u679ca[j] - a[i] > L\u5219j--\u56de\u9000\uff0c\u8986\u76d6\u70b9\u4e2a\u6570-1\u56de\u5230\u521a\u597d\u6ee1\u8db3\u6761\u4ef6\u7684\u65f6\u5019\uff0c\u5c06\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5927\u503c\u4e0e\u6240\u6c42\u6700\u5927\u503c\u6bd4\u8f83\uff0c\u7136\u540ei++,j++\u76f4\u5230\u6c42\u51fa\u6700\u5927\u7684\u70b9\u4e2a\u6570\u3002\n\u6709\u4e24\u70b9\u9700\u8981\u6ce8\u610f\uff1a\n\uff081\uff09\u8fd9\u91cc\u53ef\u80fd\u6ca1\u6709i\u548cj\u4f7f\u5f97a[j] - a[i]\u521a\u597d\u7b49\u4e8eL\u7684\uff0c\u6240\u4ee5\u5224\u65ad\u6761\u4ef6\u4e0d\u80fd\u4e3aa[j] - a[i] = L\u3002\n\uff082\uff09\u53ef\u80fd\u5b58\u5728\u4e0d\u540c\u7684\u8986\u76d6\u70b9\u4f46\u8986\u76d6\u7684\u957f\u5ea6\u76f8\u540c\uff0c\u6b64\u65f6\u53ea\u9009\u7b2c\u4e00\u6b21\u8986\u76d6\u7684\u70b9\u3002\n// \u6c42\u6700\u5927\u8986\u76d6\u70b9  \n#include <stdio.h>\nint maxCover(int a[], int n, int L){\n    int count = 2, maxCount = 1, start;\n    int i = 0, j = 1;\n    while(i < n && j < n){\n        while((j < n) && (a[j] - a[i] <= L))\n        {\n            j++;\n            count++;\n        }\n        // \u9000\u56de\u5230\u6ee1\u8db3\u6761\u4ef6\u7684j\n        j--;\n        count--;\n        if(maxCount < count)\n        {\n            start = i;\n            maxCount = count;\n        }\n        i++;\n        j++;    \n    }\n    printf(\"covered point: \");\n    for(i = start; i < start + maxCount; i++)\n    {\n        printf(\"%d \", a[i]);\n    }\n    printf(\"\\n\"); return maxCount;\n}\nint main()\n{\n    // test  \n    int a[] = {1, 3, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 21};\n    printf(\"max count: %d\\n\\n\", maxCover(a, 13, 8)); int b[] = {1,2,3,4,5,100,1000};\n    printf(\"max count: %d\\n\", maxCover(b, 7, 8)); return 0;\n}",
      "ID": "55f2e51ee4b0152a611433ab",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6570\u8f74\u4e0a\u4ece\u5de6\u5230\u53f3\u6709 n \u4e2a\u70b9 a[0],a[1],??,a[n-1],\u7ed9\u5b9a\u4e00\u6839\u957f\u5ea6\u4e3a L \u7684\u7ef3\u5b50,\u6c42\u7ef3\u5b50\u6700\u591a\u80fd \u8986\u76d6\u5176\u4e2d\u7684\u51e0\u4e2a\u70b9\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143129",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "exponential",
      "optionC": "quadratic",
      "optionAnswer": "A",
      "answer": "\u56e0\u4e3ae\u662f\u4e0d\u65ad\u5730\u9664\u4ee52\uff0c\u6240\u4ee5\u8c03\u7528\u6b21\u6570\u5e94\u8be5\u662f\u4ee52\u4e3a\u5e95\u7684\u5bf9\u6570\uff01",
      "optionB": "linear",
      "type": "1",
      "optionA": "logarithmic",
      "question": "Consider the following definition of a recursive function, power, that will perform exponentiation.\n\nint power(int b, int e) {\n    if (e == 0)\n        return 1;\n    if (e %2 == 0)\n        return power (b * b, e / 2);\n    return b * power(b * b, e / 2);\n}\nAsymptotically (\u6e10\u8fdb\u5730) in terms of the exponent e, the number of calls to power that occur as a result of the call power(b, e) is",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114322b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6307\u5411\u5b57\u7b26\u4e32\u7684\u5e38\u91cf\u6307\u9488\uff1b",
      "optionC": "\u6307\u5411\u5b57\u7b26\u4e32\u5e38\u91cf\u7684\u6307\u9488\uff1b",
      "optionAnswer": "C",
      "answer": "\u8fd9\u91cc\u4e3b\u8981\u662f\u8003\u5bdfconst\u7684\u77e5\u8bc6\u3002\nconst\u4fee\u9970\u7d27\u8ddf\u5728\u5b83\u4e4b\u540e\u7684\u5185\u5bb9\uff0c\n\u5728\u8fd9\u91cc\uff0c\u5c31\u662f\u4fee\u9970\u7684char\uff0c\u6240\u4ee5\u8fd9\u91ccconst char\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0cptr\u662f\u6307\u5411\u5b57\u7b26\u4e32\u5e38\u91cf\u7684\u6307\u9488",
      "optionB": "\u6307\u5411\u5b57\u7b26\u7684\u5e38\u91cf\u6307\u9488\uff1b",
      "type": "1",
      "optionA": "\u6307\u5411\u5b57\u7b26\u5e38\u91cf\u7684\u6307\u9488\uff1b",
      "question": "\u4e0b\u5217\u8bf4\u660e\u4e2d const char *ptr\uff1bptr\u5e94\u8be5\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "int maxArea(vector<int>& height) {\n    int water = 0;\n    int i = 0, j = height.size() - 1;\n    while (i < j) {\n        int h = min(height[i], height[j]);\n        water = max(water, (j - i) * h);\n        while (height[i] <= h && i < j) i++;\n        while (height[j] <= h && i < j) j--;\n    }\n    return water;\n}",
      "ID": "55f2e51ce4b0152a6114332e",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5bf9\u4e8e\u975e\u8d1f\u5e8f\u5217a1\u3001a2\u3001\u2026\u2026\u3001an\uff0c\u5728\u6570\u8f74\u4e0a\u505a\u5782\u7ebf\u8fde\u63a5\u70b9\uff08i\uff0c0\uff09\u548c\uff08i\uff0cai\uff09\u3002\u9009\u62e9\u8fd9\u6837\u7684\u4e24\u6761\u7ebf\u548cx\u8f74\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a\u5bb9\u5668\uff0c\u6211\u4eec\u4ee5\u9762\u79ef\u4ee3\u8868\u6240\u88c5\u7684\u6c34\uff0c\u6c42\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6784\u6210\u7684\u5bb9\u5668\u80fd\u88c5\u7684\u6700\u5927\u9762\u79ef\u3002\u6bd4\u5982\u9009\u62e9a2=3\u3001a5=6\uff0c\u5219\u6240\u88c5\u7684\u9762\u79ef\u4e3a9.",
      "title": "C&C++"
    },
    {
      "answer": "\u5173\u952e\u662f\u6570\u636e\u7ed3\u6784\uff1a\u5c3e\u7ed3\u70b9\u7684next\u6307\u9488\u6307\u5411\u5934\u7ed3\u70b9\u7684\u5355\u94fe\u8868\u2014\u2014\u5faa\u73af\u94fe\u8868\uff0c\u7136\u540e\u662f\u5b9a\u4e49\u5728\u8fd9\u4e2a\u94fe\u8868\u4e0a\u7684\u5220\u9664\u64cd\u4f5c\u3002\u67e5\u627e\u8f93\u51fa\u6309\u7528\u6237\u8f93\u5165\u8fdb\u884c\u5c31OK\u4e86",
      "ID": "55f2e51ee4b0152a611433d8",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7528\u6237\u8f93\u5165 M,N \u503c,\u4ece 1 \u81f3 N \u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570,\u6bcf\u6570\u5230 M \u8f93\u51fa\u8be5\u6570\u503c,\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199\u51fa C \u7a0b\u5e8f\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143238",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6570\u7ec4\u53ea\u80fd\u901a\u8fc7\u503c\u53c2\u6570\u548c\u5730\u5740\u53c2\u6570\u4e24\u79cd\u65b9\u5f0f\u4f20\u9012\u7ed9\u51fd\u6570",
      "optionC": "\u6570\u7ec4\u7684\u5927\u5c0f\u5fc5\u987b\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a",
      "optionAnswer": "C",
      "answer": "? \u6570\u7ec4\u53ef\u4ee5\u4e5f\u52a8\u6001\u5b9e\u73b0\uff0cint n; cin>>n,int *p=new int[n]; \u6307\u9488\u4f20\u9012\u4e5f\u662f\u4f20\u5730\u5740",
      "optionB": "\u957f\u5ea6\u4e3an\u7684\u6570\u7ec4\uff0c\u4e0b\u6807\u7684\u8303\u56f4\u662f0-n-1",
      "type": "1",
      "optionA": "\u5728C++\u8bed\u8a00\u4e2d\u6570\u7ec4\u7684\u540d\u5b57\u5c31\u662f\u6307\u5411\u8be5\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488",
      "question": "\u4e0b\u9762\u5173\u4e8e\u6570\u7ec4\u7684\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c07",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "Y,X\uff1bY,X",
      "optionC": "Y,X\uff1bX,Y",
      "optionAnswer": "A",
      "answer": "\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u5fc5\u987b\u5bf9\u8fd9\u4e09\u7c7b\u6210\u5458\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5176\u6267\u884c\u987a\u5e8f\uff1a\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\n\uff1b\u8c03\u7528\u5b50\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\uff1b\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4f53\u3002\u6790\u6784\u51fd\u6570\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u4e5f\u8981\u5bf9\u57fa\u7c7b\u548c\u6210\u5458\u5bf9\u8c61\n\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f46\u5b83\u7684\u6267\u884c\u8fc7\u7a0b\u4e0e\u6784\u9020\u51fd\u6570\u6b63\u597d\u76f8\u53cd\uff0c\u5373\u5bf9\u6d3e\u751f\u7c7b\u65b0\u589e\u666e\u901a\u6210\u5458\u8fdb\u884c\u6e05\u7406\uff1b\u8c03\u7528\u6210\u5458\n\u5bf9\u8c61\u6790\u6784\u51fd\u6570\uff0c\u5bf9\u6d3e\u751f\u7c7b\u65b0\u589e\u7684\u6210\u5458\u5bf9\u8c61\u8fdb\u884c\u6e05\u7406\uff1b\u8c03\u7528\u57fa\u7c7b\u6790\u6784\u51fd\u6570\uff0c\u5bf9\u57fa\u7c7b\u8fdb\u884c\u6e05\u7406\uff0c\u6240\u4ee5\n\u9009\u62e9A\u9879\u3002",
      "optionB": "X,Y\uff1bX,Y",
      "type": "1",
      "optionA": "X,Y\uff1bY,X",
      "question": "\u5047\u8bbeClassY:publicX\uff0c\u5373\u7c7bY\u662f\u7c7bX\u7684\u6d3e\u751f\u7c7b\uff0c\u5219\u8bf4\u660e\u4e00\u4e2aY\u7c7b\u7684\u5bf9\u8c61\u65f6\u548c\u5220\u9664Y\u7c7b\u5bf9\u8c61\u65f6\n\uff0c\u8c03\u7528\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u6b21\u5e8f\u5206\u522b\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "\u5f88\u660e\u663e\u7684\u5361\u7279\u5170\u6570 \nh(n)=C(2n,n)/(n+1)\np = h(n) / c(2n,n) = 1/\uff08n+1\uff09",
      "ID": "55f2e51ee4b0152a611433ba",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4e00\u666f\u533a\u9700\u8981\u95e8\u79685\u5143\uff0c\u552e\u7968\u5458\u6ca1\u6709\u96f6\u94b1\uff0c\u5047\u8bbe\u8fd9\u4e00\u5929\u4f1a\u67652N\u4e2a\u4eba\uff0c\u5176\u4e2dN\u4e2a\u4eba\u4f1a\u7ed95\u5143\u94b1\uff0cN\u4e2a\u4eba\u7ed910\u5143\uff0c\u95ee\u6240\u6709\u4eba\u90fd\u4e0d\u9700\u8981\u7b49\u5f85\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "3:01",
      "ID": "55f2e51ee4b0152a611433b7",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4e00\u5806\u786c\u5e01\uff0c\u4e00\u4e2a\u673a\u5668\u4eba\uff0c\u5982\u679c\u662f\u53cd\u7684\u5c31\u7ffb\u6b63\uff0c\u5982\u679c\u662f\u6b63\u7684\u5c31\u629b\u63b7\u4e00\u6b21\uff0c\u65e0\u7a77\u591a\u6b21\u540e\uff0c\u6c42\u6b63\u53cd\u7684\u6bd4\u4f8b\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u7a0b\u5e8f\u4e2d\u7684\u4e3b\u7ebf\u7a0b\u5411\u5404\u4e2a\u5b50\u7ebf\u7a0b\u53d1\u9001\u4e00\u4e2a\u9000\u51fa\u6d88\u606f\u4fe1\u53f7\uff0c\u5404\u4e2a\u7ebf\u7a0b\u6536\u5230\u8fd9\u4e2a\u6d88\u606f\u4fe1\u53f7\u540e\u9000\u51fa\u7ebf\u7a0b\u51fd\u6570\uff0c\u5219\u53ef\u4ee5\u5b89\u5168\u6709\u6548\u7684\u63a8\u51fa\u6240\u6709\u7684\u7ebf\u7a0b\u3002",
      "ID": "55f2e51ee4b0152a611433bc",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5047\u8bbe\u4f60\u5728\u7f16\u5199\u4e00\u4e2a\u4f7f\u7528\u591a\u7ebf\u7a0b\u6280\u672f\u7684\u7a0b\u5e8f,\u5f53\u7a0b\u5e8f\u4e2d\u6b62\u8fd0\u884c\u65f6,\u9700\u8981\u600e\u6837\u4e00 \u4e2a\u673a\u5236\u6765\u5b89\u5168\u6709\u6548\u7684\u4e2d\u6b62\u6240\u6709\u7684\u7ebf\u7a0b?\u8bf7\u63cf\u8ff0\u5176\u5177\u4f53\u6d41\u7a0b.",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c72",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6790\u6784\u51fd\u6570",
      "optionC": "\u6784\u9020\u51fd\u6570",
      "optionAnswer": "C",
      "answer": "\u5b9a\u4e49\u6784\u9020\u51fd\u6570\u4f5c\u7528\u5c31\u662f\u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u800c\u6790\u6784\u51fd\u6570\u91ca\u653e\u5bf9\u8c61\u7a7a\u95f4\u3002\u865a\u51fd\u6570\u7528\u4e8e\u5b8c\u6210\u591a\n\u6001\u6027\uff0c\u53cb\u5143\u589e\u52a0\u8bbf\u95ee\u65b9\u4fbf\u6027\u3002",
      "optionB": "\u865a\u51fd\u6570",
      "type": "1",
      "optionA": "\u53cb\u5143\u51fd\u6570",
      "question": "\u5728\u7c7b\u7684\u5b9a\u4e49\u4e2d\uff0c\u7528\u4e8e\u4e3a\u5bf9\u8c61\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5bf9\u7c7b\u7684\u6570\u636e\u6210\u5458\u8fdb\u884c\u521d\u59cb\u5316\u5e76\u6267\u884c\u5176\u4ed6\u5185\u90e8\u7ba1\u7406\u64cd\u4f5c\u7684\u51fd\u6570\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "\u5185\u5b58\u65ad\u70b9\u901a\u8fc7\u5c06\u76ee\u6807\u5730\u5740\u6240\u5728\u9875\u5c5e\u6027\u6539\u4e3aPAGE_NOACCESS\uff0c\u5f53\u4f60\u5c1d\u8bd5\u6267\u884c\u5230\u76ee\u6807\u5730\u5740\u65f6\u5c31\u4f1a\u4ea7\u751f\u5f02\u5e38\uff0c\u8c03\u8bd5\u5668\u5c31\u4f1a\u4e2d\u65ad\u4e0b\u6765\u6216\u8005\u5c06\u76ee\u6807\u5730\u5740\u5185\u5b58\u6539\u4e3a0xCC (INT 3)\u6307\u4ee4\uff0c\u5f53\u6267\u884c\u5230\u8be5\u5730\u5740\u65f6\u5019\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad\uff0c\u8c03\u8bd5\u5668\u5c31\u4f1a\u6682\u505c\u4e0b\u6765\u3002",
      "ID": "55f2e51de4b0152a6114334a",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bf7\u89e3\u91ca\u4e0b\u5e38\u89c1\u5229\u7528\u5185\u5b58\u65ad\u70b9\u8c03\u8bd5\u7684\u539f\u7406?",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7f2",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u90fd\u4e0d\u5bf9",
      "optionC": "1",
      "optionAnswer": "B",
      "answer": "A a1; //\u8c03\u7528A\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\na1=10; //\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u8c03\u7528\u6784\u9020\u51fd\u6570A(int)\u8fdb\u884c\u9690\u5f0f\u8f6c\u5316\uff0c\u4e4b\u540e\u5c06\u5f15\u7528\u4f20\u7ed9operator=\uff08\uff09",
      "optionB": "12",
      "type": "1",
      "optionA": "2",
      "question": "class A\n{\n    public:\n        A()\n        {\n            printf(\u201c0\u201d);\n        }\n        A(int a)\n        {\n            printf(\u201c1\u201d);\n        }\n        A& operator=(const A& a)\n        {\n            printf(\u201c2\u201d);\n            return*this;\n        }\n}\nint main()\n{\n    A al;\n    al=10;\n}\n\u5219\u7a0b\u5e8f\u8f93\u51fa\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a6114312e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "m%n m/=n",
      "optionC": "m%n m%=n",
      "optionAnswer": "D",
      "answer": "\u5206\u89e3\u8d28\u56e0\u6570\u662f\u5c06\u4e00\u4e2a\u6570\u5dee\u5206\u6210\u4e3a\u51e0\u4e2a\u8d28\u6570\u76f8\u4e58\uff0c\u9996\u5148\u627e\u5230\u4e00\u4e2an\u53ef\u4ee5\u88abm\u6574\u9664\uff0c\u6574\u9664\u5c31\u662f\u4f59\u6570\u4e3a\u96f6\u624d\u80fd\u8df3\u51fa\u5faa\u73af\uff0c\u800c\u5982\u679c\u53ea\u662f\u505a\u9664\u6cd5 \u53ea\u6709\u5f53m<n\u7684\u65f6\u5019\u624d\u4f1a\u51fa\u73b0\u7b49\u4e8e0.\u8fd9\u4e0eif\u7684\u6761\u4ef6\u5224\u65ad\u76f8\u4e92\u51b2\u7a81\u3002",
      "optionB": "m/n   m%=n",
      "type": "1",
      "optionA": "m/n   m/=n",
      "question": "\u4ee5\u4e0bprim\u51fd\u6570\u7684\u529f\u80fd\u662f\u5206\u89e3\u8d28\u56e0\u6570\u3002\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u5e94\u8be5\u4e3a\uff1f\n\nvoid prim(int m, int n)\n {\n     if (m >= n)\n     {\n         while (        ) n++;\n         (     );\n         prim(m, n);\n         cout << n << endl;\n     }\n }",
      "title": "C&C++"
    },
    {
      "answer": "\u9664\u4e86\u6574\u578b\uff0c\u679a\u4e3e\u7c7b\u578b\uff0c\u5b57\u7b26\u578b\uff0c\u5176\u4ed6\u7684\u90fd\u4e0d\u884c\u3002\u8b6c\u5982\uff1a\u5b57\u7b26\u4e32\uff0c\u6d6e\u70b9\u578b\u8fd9\u4e9b\u90fd\u4e0d\u53ef\u4ee5\u4f5c\u4e3aswitch\u7684\u53c2\u6570\u7c7b\u578b\u3002",
      "ID": "55f2e51ee4b0152a611433d7",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55e429cfe4b0152a610c833b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "BSS segment",
      "optionC": "global variable",
      "optionAnswer": "A",
      "answer": "\u9009A",
      "optionB": "static variable",
      "type": "1",
      "optionA": "code segment",
      "question": "When a dll is loaded into memory, which part(s) can be shared between processes",
      "title": "C&C++"
    },
    {
      "ID": "55e429cfe4b0152a610c833f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "385",
      "optionC": "390",
      "optionAnswer": "D",
      "answer": "\u5ea6\u4e3a2\u7684\u8282\u70b9 = \u5ea6\u4e3a0\u7684\u8282\u70b9 - 1\n\u5ea6\u4e3a0\u7684\u8282\u70b9\u5c31\u662f\u53f6\u5b50\u8282\u70b9\n\u603b\u7ed3\u70b9\u6570 = \u5ea6\u4e3a0\u8282\u70b9 + \u5ea6\u4e3a1\u8282\u70b9 + \u5ea6\u4e3a2\u8282\u70b9\n\u5b8c\u5168\u4e8c\u53c9\u6811\u5ea6\u4e3a1\u7684\u8282\u70b9\u67091\u4e2a\n\u6240\u4ee5\uff1a\u603b\u7ed3\u70b9\u6570 = \u5ea6\u4e3a0\u8282\u70b9 + 1 + \u5ea6\u4e3a0\u8282\u70b9 - 1\n\u6240\u4ee5\uff1a\u603b\u7ed3\u70b9\u6570 = \u53f6\u5b50 * 2\n\u53f6\u5b50 = 770/2 = 385",
      "optionB": "375",
      "type": "1",
      "optionA": "380",
      "question": "\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\u6709770\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5176\u53f6\u5b50\u7684\u4e2a\u6570\u4e3a?",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143157",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "test(0.5)",
      "optionC": "test(2+\u2019d\u2019)",
      "optionAnswer": "D",
      "answer": "0.5\u7c7b\u578b\u6a21\u7cca\uff0c\u65e2\u5339\u914dint\u7c7b\u578b\u4e5f\u5339\u914dfloat\u7c7b\u578b",
      "optionB": "test(\u2018c\u2019);",
      "type": "1",
      "optionA": "test(1);",
      "question": "\u6709\u51fd\u6570\u5b9a\u4e49\uff1a \nvoid test(int a){} \nvoid test(float a){} \n\u5219\u4ee5\u4e0b\u8c03\u7528\u9519\u8bef\u7684\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431f3",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u8bf4\u6cd5\u90fd\u4e0d\u6b63\u786e",
      "optionC": "\u4e0d\u5408\u6cd5",
      "optionAnswer": "B",
      "answer": "1\u3001int(*p)[4];------ptr\u4e3a\u6307\u5411\u542b4\u4e2a\u5143\u7d20\u7684\u4e00\u7ef4\u6574\u5f62\u6570\u7ec4\u7684\u6307\u9488\u53d8\u91cf\uff08\u662f\u6307\u9488\uff09\n2\u3001int *p[4];-------\u5b9a\u4e49\u6307\u9488\u6570\u7ec4p\uff0c\u5b83\u75314\u4e2a\u6307\u5411\u6574\u578b\u6570\u636e\u7684\u6307\u9488\u5143\u7d20\u7ec4\u6210\uff08\u662f\u6570\u7ec4\uff09\n3\u3001int(*)[4];--------\u5b9e\u9645\u4e0a\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u3002\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\uff08int(*p)[4];\uff09",
      "optionB": "\u4e00\u4e2a\u6307\u5411\u5143\u7d20\u4e2a\u6570\u4e3a3\u7684int\u6570\u7ec4\u7684\u6307\u9488",
      "type": "1",
      "optionA": "\u4e00\u4e2a\u6307\u5411int\u5143\u7d20\u5927\u5c0f\u4e3a3\u7684\u6307\u9488\u6570\u7ec4",
      "question": "int (*p)[3] p\u7684\u542b\u4e49\u662f\u4ec0\u4e48?",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c0d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e0d\u53d7\u4fdd\u62a4",
      "optionC": "\u53d7\u4fdd\u62a4",
      "optionAnswer": "B",
      "answer": "\u7ee7\u627f\u65b9\u5f0f\u7684\u4e0d\u540c\u6d3e\u751f\u7c7b\u6210\u5458\u7684\u6743\u9650\u4e5f\u4e0d\u540c\uff0c\u91c7\u7528\u516c\u6709\u7ee7\u627f\uff0c\u9664\u4e86\u79c1\u6709\u65e0\u6cd5\u8bbf\u95ee\u5916\n\uff0c\u516c\u6709\u3001\u4fdd\u62a4\u5728\u6d3e\u751f\u7c7b\u4e2d\u4fdd\u6301\u4e0d\u53d8\uff0c\u6240\u4ee5\u9009\u62e9B\u9879\u3002",
      "optionB": "\u4fdd\u6301\u4e0d\u53d8",
      "type": "1",
      "optionA": "\u53d7\u9650\u5236",
      "question": "\u5728\u516c\u6709\u7ee7\u627f\u7684\u60c5\u51b5\u4e0b\uff0c\u57fa\u7c7b\u7684\u516c\u6709\u6216\u4fdd\u62a4\u6210\u5458\u5728\u6d3e\u751f\u7c7b\u4e2d\u7684\u8bbf\u95ee\u6743\u9650\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u63d0\u4f9b\u4e09\u79cd\u89e3\u9898\u601d\u8def\uff1a\u9996\u5148\u4e0d\u59a8\u8bbe\u7b2ci\u4e2a\u52a0\u6cb9\u7ad9\u4e0e\u4e4b\u540e\u52a0\u6cb9\u7ad9\u8ddd\u79bb\u4e3ag[i]/w\uff0c\u8fd9\u6837\u76f8\u5f53\u4e8e\u6bcf\u516c\u91cc\u6d88\u80171\u5347\u6cb9\uff0c\u8fd9\u91cc\u7684\u5047\u8bbe\u548c\u91cf\u7eb2\u7f29\u653e\u5e76\u4e0d\u5f71\u54cd\u5b9e\u9645\u7ed3\u679c\uff0c\u53ea\u662f\u7b80\u5316\u8ba1\u7b97\u3002\n\n\u65b9\u6cd5\u4e00\uff1a\u4ece\u5de6\u5f80\u53f3\u904d\u5386\uff0c\u8bb0\u4f4f\u6cb9\u91cf\u548c\u6700\u5c11\u7684\u4f4d\u7f6e\uff0c\u4ece\u5176\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u51fa\u53d1\u3002\n\nint selectGasStation_1(const vector<int> &a, const vector<int> &g, const int n) {\n    int res = 0, min = N[0] - g[0], sum = min;\n    for (int i = 1; i < n; ++i)\n    {\n        sum += N[i] - g[i];\n        if (sum < min) {\n            min = sum;\n            res = i;\n        }\n    }\n    return sum >= 0 ? (res + 1) % n : -1;\n}\n\n\u65b9\u6cd5\u4e8c\uff1a\u5f00\u8f9f\u4e00\u4e2a\u957f\u5ea6\u4e3aN\u7684\u6570\u7ec4v\uff0c\u8bb0\u5f55N[i]-g[i]\u3002\u4ece\u540e\u5f80\u524d\u904d\u5386\u6570\u7ec4v\u3002\u5982\u679cv[i]\u5c0f\u4e8e\u96f6\uff0c\u5c06\u5176\u4e0ev[i-1]\u5408\u5e76\uff0c\u56e0\u4e3a\u6b64\u65f6i\u4e0d\u53ef\u80fd\u4f5c\u4e3a\u8d77\u70b9\u3002\u5982\u679cv[i]\u4e0d\u5c0f\u4e8e\u96f6\uff0c\u8bb0\u5165sum\uff0c\u5e76\u8bb0\u5f55\u8be5\u4f4d\u7f6epos\uff08\u6709\u53ef\u80fd\u4f5c\u4e3a\u8d77\u70b9\uff09\u3002\u6700\u540e\uff0c\u5982\u679cv[0]\u5927\u4e8e\u7b49\u4e8e\u96f6\uff0c\u8bf4\u660e\u6574\u4e2a\u8def\u6bb5\u5df2\u7ecf\u6ca1\u6709\u8d1f\u7684v[i]\u3002\u8fd4\u56de0\u5373\u53ef\u3002\u5982\u679cv[0]+sum>=0\uff0c\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u52a0\u6cb9\u7ad9\uff0c\u8fd4\u56depos\u3002\u5426\u5219\uff0c\u8fd4\u56de-1\u3002\n\nint selectGasStation_2(const vector<int> &a, const vector<int> &g, const int n) {\n    int v[n];\n    for (int i = 0; i < n; ++i)\n        v[i] = N[i] - g[i];\n    int sum = 0, pos = -1;\n    for (int i = n-1; i > 0; --i)\n    {\n        if (v[i] >= 0) {\n            sum += v[i];\n            pos = i;\n        } else {\n            v[i-1] += v[i];\n        }\n    }\n    if (v[0] >= 0) return 0;\n    else if (v[0] + sum >= 0) return pos;\n    else return -1;\n}\n\n\u65b9\u6cd5\u4e09\uff1a\u5f00\u8f9f\u4e00\u4e2a\u957f\u5ea6\u4e3a2*n-1\u7684\u6570\u7ec4v\uff0c\u8bb0\u5f55N[i]-g[i]\uff08\u73af\u8f6c\u5316\u4e3a\u7ebf\u6027\uff09\u3002\u4f7f\u7528\u4e24\u4e2a\u6307\u9488start\u548cend\u3002\u5982\u679c[start, end]\u533a\u95f4\u548c\u5c0f\u4e8e0\uff0c\u4ee4start = end + 1\u5e76\u7ee7\u7eed\u3002\u76f4\u81f3\u627e\u5230\u957f\u5ea6\u4e3aN\u7684\u533a\u95f4[start, end]\uff0c\u5e76\u4e14\u533a\u95f4\u548c\u5927\u4e8e\u7b49\u4e8e0\u3002\u627e\u5230\u8fd4\u56destart\u3002\n\nint selectGasStation_3(const vector<int> &a, const vector<int> &g, const int n) {\n    int v[2 * n];\n    for (int i = 0; i < n; ++i)\n    {\n        v[i] = N[i] - g[i];\n        v[i+n] = N[i] - g[i];\n    }\n    int sum = 0;\n    for (int start = 0, end = 0; start <= n && end < 2 * n; end++)\n    {\n        if (sum + v[end] < 0) {\n            start = end + 1;\n            sum = 0;\n        } else {\n            if (end - start == n - 1) \n                return start;\n            sum += v[end];\n        }\n    }\n    return -1;\n}\n\n\u4ee5\u4e0a\u4e09\u79cd\u89e3\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3aO(n)\uff0c\u5e94\u8be5\u6ee1\u8db3\u6700\u82db\u523b\u7684\u6548\u7387\u8981\u6c42\u4e86\u3002",
      "ID": "55f2e51de4b0152a61143381",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u73b0\u6709\u4e00\u5706\u73af\u5f62\u8def\uff0c\u8def\u4e0a\u6709n\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u7b2ci\u4e2a\u52a0\u6cb9\u7ad9\u50a8\u5b58\u6709Ni\u5347\u5bb9\u91cf\u7684\u6cb9\uff0c\u6bcf\u4e24\u4e2a\u52a0\u6cb9\u7ad9\u4e4b\u95f4\u6709\u4e00\u5b9a\u7684\u8ddd\u79bb\uff08km\uff09\uff0c\u4e00\u6c7d\u8f66\u521d\u59cb\u65e0\u6cb9\uff0c\u8be5\u8f66\u6bcf\u516c\u91cc\u6d88\u8017w\u5347\u6cb9\uff0c\u8bf7\u95ee\u8be5\u8f66\u4ece\u54ea\u4e2a\u52a0\u6cb9\u7ad9\u51fa\u53d1\u53ef\u4ee5\u7ed5\u8be5\u73af\u5f62\u8def\u884c\u9a76\u4e00\u5708\u3002\u7ed9\u51fa\u6240\u6709\u7684\u7b97\u6cd5\u53ca\u65f6\u95f4\u7684\u590d\u6742\u5ea6\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u53ef\u4ee5\u6709\u4e24\u4e2a\u65b9\u6cd5\uff1a\u5982\u679c\u53ef\u4ee5\u7834\u574f\u94fe\u8868m_pNext,\u90a3\u53ef\u4ee5\u4e00\u4e2a\u5faa\u73af\u5c06\u6240\u6709m_pNext\u6307\u5411\u4e0a\u4e00\u4e2a\u63a5\u70b9\uff0c\u7136\u540e\u4e00\u4e2a\u5faa\u73af\u8f93\u51fa\uff0c\u7136\u540e\u518d\u8fd8\u539f\u63a5\u70b9\u3002\n\u4e2a\u4eba\u89c9\u5f97\u8fd9\u4e2a\u592a\u590d\u6742\u3002\n\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u9012\u5f52\u6216\u501f\u52a9\u6808\u6765\u505a\u3002\uff08\u6240\u6709\u9012\u5f52\u90fd\u53ef\u4ee5\u901a\u8fc7\u6808\u6765\u8f6c\u6210\u975e\u9012\u5f52\uff09\n\nvoid PutRlist(const listNode * pNode)\n{\n    if\uff08!pNode\uff09 return;\n    PutRlist(pNode->m_pNext);\n    //\u8f93\u51fa\u3002\n    std::cout<<pNode->m_nKey<< \"<-\";\n}",
      "ID": "55f2e51de4b0152a61143390",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4ece\u5c3e\u5230\u5934\u8f93\u51fa\u94fe\u8868\n\u9898\u76ee\uff1a\u8f93\u5165\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u7ed3\u70b9\uff0c\u4ece\u5c3e\u5230\u5934\u53cd\u8fc7\u6765\u8f93\u51fa\u6bcf\u4e2a\u7ed3\u70b9\u7684\u503c\u3002\u94fe\u8868\u7ed3\u70b9\u5b9a\u4e49\u5982\u4e0b\uff1a\nstruct ListNode\n{\n    int  m_nKey;\n    ListNode *m_pNext;\n};",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c61",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "5",
      "optionC": "4",
      "optionAnswer": "B",
      "answer": "(exp1,exp2)\u3001(exp3,exp4,exp5)\u8868\u793a\u662f\u4e24\u4e2a\u9017\u53f7\u8868\u8fbe\u5f0f\uff0c\u503c\u662f\u6700\u540e\u4e00\u4e2a\u503c\uff0c\u76f8\u5f53\u4e8e\u4e24\u4e2a",
      "optionB": "2",
      "type": "1",
      "optionA": "1",
      "question": "\u51fd\u6570\u8c03\u7528func((exp1,exp2),(exp3,exp4,exp5))\u4e2d\u6240\u542b\u5b9e\u53c2\u7684\u4e2a\u6570\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7f4",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "4",
      "optionC": "3",
      "optionAnswer": "A",
      "answer": "\u6bcf\u4e2a\u5b57\u7b26\u53d8\u91cf\u88ab\u5206\u914d\u4e00\u4e2a\u5b57\u8282\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u56e0\u6b64A\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "2",
      "type": "1",
      "optionA": "1",
      "question": "C\u8bed\u8a00\u4e2dchar\u7c7b\u578b\u6570\u636e\u5360\u5b57\u8282\u6570\u4e3a?",
      "title": "C&C++"
    },
    {
      "ID": "55f2dfa6e4b0152a61142e2e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "1",
      "optionC": "0",
      "optionAnswer": "B",
      "answer": "\u8fd0\u884c\u53ef\u77e5",
      "optionB": "-1",
      "type": "1",
      "optionA": "-2",
      "question": "Initialize integer i as 0, what's the value of i after the following operation?  i += i > 0 ? i++ : i --;  ",
      "title": "C&C++"
    },
    {
      "ID": "55e429cfe4b0152a610c833d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "700",
      "optionC": "500",
      "optionAnswer": "A",
      "answer": "A\u548cB\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f100\uff0c\u90a3\u8bdd\u8d39\u7684\u65f6\u95f4\u5c31\u662f100/(40+60)=1,\u800c\u9e3d\u5b50\u7684\u901f\u5ea6\u662f400\uff0c\u90a3\u98de\u884c\u8def\u7a0b\u5c31\u662f400*1=400",
      "optionB": "600",
      "type": "1",
      "optionA": "400",
      "question": "\u4e24\u4e2a\u4eba\uff0cA\u7684\u901f\u5ea6\u4e3aa\uff0cB\u7684\u901f\u5ea6\u4e3ab,\u5728\u4e00\u76f4\u8def\u4e0a\u76f8\u5411\u800c\u884c\u3002\u5728A\u3001B\u8ddd\u79bb\u4e3as\u7684\u65f6\u5019\uff0cA\u653e\u51fa\u4e00\u4e2a\u9e3d\u5b50C\uff0c\u901f\u5ea6\u4e3ac\uff0cC\u98de\u5230B\u540e\uff0c\u7acb\u5373\u6389\u5934\u98de\u5411A\uff0c\u9047\u5230A\u5728\u6389\u5934\u98de\u5411B......\u5c31\u8fd9\u6837\u5728AB\u4e4b\u95f4\u98de\u6765\u98de\u53bb\uff0c\u76f4\u5230A\u3001B\u76f8\u9047\uff0c\u5047\u8bbea=40\uff0c b=60\uff0c c=400\uff0c s=100\uff0c\u8fd9\u671f\u95f4\u9e3d\u5b50\u5171\u98de\u884c\u8def\u7a0b\u4e3a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114320c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "E7H",
      "optionC": "E6H",
      "optionAnswer": "D",
      "answer": "\u5341\u8fdb\u5236\u6570-25\u7684\u539f\u7801\u4e3a10011001\uff0c\u53cd\u7801\u4e3a11100110\uff0c\u8865\u7801\u662f\u53cd\u7801\u52a01\uff0c\u5373\u4e3a11100111\uff0c\u8f6c\u5316\u4e3a\u5341\u516d\u8fdb\u5236\u5373\u4e3aE7",
      "optionB": "99H",
      "type": "1",
      "optionA": "67H",
      "question": "\u5047\u8bbe\u5bc4\u5b58\u5668\u4e3a8\u4f4d\uff0c\u7528\u8865\u7801\u5f62\u5f0f\u5b58\u50a8\u673a\u5668\u6570\uff0c\u5305\u62ec\u4e00\u4f4d\u7b26\u53f7\u4f4d\uff0c\u90a3\u4e48\u5341\u8fdb\u5236\u6570-25\u5728\u5bc4\u5b58\u5668\u8868\u793a\u4e3a\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143256",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "0",
      "optionC": "Error",
      "optionAnswer": "A",
      "answer": "\u5982\u679c\u53ea\u662f\u5355\u5355\u4e0a\u9762\u7684\u4ee3\u7801  \u7f16\u8bd1\u9519\u8bef\n\u5982\u679c\u662f\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\uff0c\u8fd0\u884c\u6b63\u786e\n\n##############################\n#define a 10 \n\nvoid foo();  // \u51fd\u6570\u58f0\u660e\n\nint main(){ \n   printf(\"%d..\",a); \n   foo(); \n   printf(\"%d\",a); \n} \n\nvoid foo(){ \n   #undef a \n   #define a 50 \n}\n\n/out:Excersizes.exe \nExcersizes.obj \n10..10[Finished in 0.4s\n##################################\n#define a 10 \n\nvoid foo(){ \n   #undef a \n   #define a 50 \n}\nint main(){ \n   printf(\"%d..\",a); \n   foo(); \n   printf(\"%d\",a); \n} \n\n/out:Excersizes.exe \nExcersizes.obj \n50..50[Finished in 0.5s]\n####################################",
      "optionB": "10..50",
      "type": "1",
      "optionA": "10..10",
      "question": "\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f?\n\n#define a 10\n \nvoid foo(); \nmain(){\n \n  printf(\"%d..\",a);\n   foo();\n   printf(\"%d\",a);\n}\nvoid foo(){\n   #undef a\n   #define a 50\n}",
      "title": "C&C++"
    },
    {
      "answer": "4",
      "ID": "55f2e51de4b0152a6114339b",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4e94\u5bf9\u592b\u5987\u7532,\u4e59,\u4e19,\u4e01,\u620a\u4e3e\u884c\u5bb6\u5ead\u805a\u4f1a \u6bcf\u4e00\u4e2a\u4eba\u90fd\u53ef\u80fd\u548c\u5176\u4ed6\u4eba\u63e1\u624b, \u4f46\u592b\u5987\u4e4b\u95f4\u7edd\u5bf9\u4e0d\u63e1\u624b. \u805a\u4f1a\u7ed3\u675f\u65f6, \u7532\u5148\u751f\u95ee\u5176\u4ed6\u4eba: \u5404\u63e1\u4e86\u51e0\u6b21\u624b? \u5f97\u5230\u7684\u7b54\u6848\u662f: 0,1,2,3,4,5,6,7,8. \u8bd5\u95ee: \u7532\u592a\u592a\u63e1\u4e86___\u6b21\u624b?",
      "title": "C&C++"
    },
    {
      "answer": "x&7",
      "ID": "55f2e51de4b0152a61143357",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "x\u4e3a\u6574\u578b\uff0c\u8bf7\u7528\u4f4d\u8fd0\u7b97\u5b9e\u73b0x%8?",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c17",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u9759\u6001\u6210\u5458\u51fd\u6570",
      "optionC": "\u865a\u51fd\u6570",
      "optionAnswer": "B",
      "answer": "\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u88ab\u7ee7\u627f\u3002",
      "optionB": "\u6784\u9020\u51fd\u6570",
      "type": "1",
      "optionA": "\u5e38\u6210\u5458\u51fd\u6570",
      "question": "C++\u7c7b\u4f53\u7cfb\u4e2d\uff0c\u4e0d\u80fd\u88ab\u6d3e\u751f\u7c7b\u7ee7\u627f\u7684\u6709\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c6a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u9759\u6001\u6570\u636e\u6210\u5458\u4e0d\u80fd\u901a\u8fc7\u7c7b\u7684\u5bf9\u8c61\u8c03\u7528",
      "optionC": "\u7c7b\u7684\u6bcf\u4e2a\u5bf9\u8c61\u6709\u81ea\u5df1\u7684\u9759\u6001\u6570\u636e\u6210\u5458",
      "optionAnswer": "D",
      "answer": "\u9759\u6001\u6210\u5458\u5c5e\u4e8e\u7c7b\u7684\u5373\u6240\u6709\u5bf9\u8c61\u6240\u5171\u4eab\u7684\uff0c\u53ea\u80fd\u5728\u5916\u90e8\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4f7f\u7528\u65f6\u53ef\u4ee5\u4f7f\u7528\n\u5f62\u5f0f\u6709\u4e24\u79cd\uff0c\u7c7b\u540d::\u9759\u6001\u6210\u5458\u6216\u8005\u5bf9\u8c61.\u9759\u6001\u6210\u5458\u3002\u6240\u4ee5\u9009\u62e9D\u9879\u3002",
      "optionB": "\u9759\u6001\u6570\u636e\u6210\u5458\u8981\u5728\u6784\u9020\u51fd\u6570\u5185\u521d\u59cb\u5316",
      "type": "1",
      "optionA": "\u9759\u6001\u6570\u636e\u6210\u5458\u662f\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u6240\u5171\u6709\u7684",
      "question": "\u4e0b\u5217\u5173\u4e8e\u9759\u6001\u6570\u636e\u6210\u5458\u7684\u63cf\u8ff0\u4e2d\u6b63\u786e\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c87",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "fstream infile(\u201cd:\\\\file.dat\u201d, ios::in| ios::out);",
      "optionC": "ofstream infile(\u201cd:\\file.dat\u201d, ios::out);",
      "optionAnswer": "D",
      "answer": "\u6253\u5f00\u6587\u4ef6\u5199\u5165\u6570\u636e\u53ef\u7528\u201cios::out\u201d\uff0c\u6587\u4ef6\u540d\u4e66\u5199\u65f6\u7528\u5230\u4e24\u4e2a\u201c\\\u201d\uff0c\u662f\u56e0\u4e3a\u8f6c\u4e49\u5b57\u7b26\u201c\\\\\u201d\u4ee3\u8868\u4e00\u4e2a\u201c\\\u201d",
      "optionB": "ifstream infile(\u201cd:\\\\file.dat\u201d, ios::in);",
      "type": "1",
      "optionA": "ifstream infile(\u201cd:\\file.dat\u201d, ios::in);",
      "question": "\u8981\u6c42\u6253\u5f00\u6587\u4ef6 d:\\file.dat\uff0c\u53ef\u5199\u5165\u6570\u636e\uff0c\u6b63\u786e\u7684\u8bed\u53e5\u662f  \uff08  \uff09",
      "title": "C&C++"
    },
    {
      "answer": "7",
      "ID": "55f2e51ee4b0152a6114339c",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8d5b\u9a6c\uff0c\u670925\u5339\u9a6c\uff0c\u6bcf\u6b21\u53ea\u80fd5\u5339\u9a6c\u8fdb\u884c\u6bd4\u8d5b\uff0c\u6bd4\u8d5b\u53ea\u80fd\u5f97\u52305\u5339\u9a6c\u4e4b\u95f4\u7684\u5feb\u6162\u7a0b\u5ea6\uff0c\u800c\u4e0d\u662f\u901f\u5ea6\uff0c\u8bf7\u95ee\uff0c\u6700\u5c11\u8981\u6bd4___\u6b21\uff0c\u624d\u80fd\u83b7\u5f97\u6700\u5feb\u7684\u524d3\u5339\u9a6c\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143229",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u8054\u5408\u53d8\u91cf\u5360\u6709\u7684\u5185\u5b58\u7a7a\u95f4\u662f\u8be5\u8054\u5408\u6210\u5458\u5360\u6709\u6700\u5927\u5185\u5b58\u7a7a\u95f4\u7684\u6210\u5458\u6240\u9700\u7684\u5b58\u50a8\u7a7a\u95f4",
      "optionC": "\u8054\u5408\u7684\u6210\u5458\u5728\u67d0\u4e00\u4e2a\u65f6\u523b\u53ea\u6709\u5f53\u524d\u7684\u662f\u6709\u6548\u7684",
      "optionAnswer": "A",
      "answer": "1. \u7ed3\u6784\u548c\u8054\u5408\u90fd\u662f\u7531\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6210\u5458\u7ec4\u6210, \u4f46\u5728\u4efb\u4f55\u540c\u4e00\u65f6\u523b, \u8054\u5408\u4e2d\u53ea\u5b58\u653e\u4e86\u4e00\u4e2a\u88ab\u9009\u4e2d\u7684\u6210\u5458\uff08\u6240\u6709\u6210\u5458\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09, \u800c\u7ed3\u6784\u7684\u6240\u6709\u6210\u5458\u90fd\u5b58\u5728\uff08\u4e0d\u540c\u6210\u5458\u7684\u5b58\u653e\u5730\u5740\u4e0d\u540c\uff09\u3002\n2. \u5bf9\u4e8e\u8054\u5408\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c, \u5c06\u4f1a\u5bf9\u5176\u5b83\u6210\u5458\u91cd\u5199, \u539f\u6765\u6210\u5458\u7684\u503c\u5c31\u4e0d\u5b58\u5728\u4e86, \u800c\u5bf9\u4e8e\u7ed3\u6784\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\u3002",
      "optionB": "\u8054\u5408\u7684\u6210\u5458\u662f\u5171\u5740\u7684",
      "type": "1",
      "optionA": "\u8054\u5408\u53d8\u91cf\u5b9a\u4e49\u65f6\u4e0d\u53ef\u521d\u59cb\u5316",
      "question": "\u4e0b\u5217\u5173\u4e8e\u8054\u5408\u7684\u63cf\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u65b9\u6848\u4e00\uff1a\n\u4f7f\u7528\u6808\uff0c\u78b0\u5230\u5de6\u62ec\u53f7\u5165\u6808\uff0c\u78b0\u5230\u53f3\u62ec\u53f7\u51fa\u6808\uff0c\u770b\u6700\u540e\u6808\u662f\u5426\u7a7a\uff0c\u662f\u5426\u8fd8\u6709\u672a\u5339\u914d\u5b8c\u7684\u53f3\u62ec\u53f7\u3002\n\u65b9\u6848\u4e8c\uff1a\n\u601d\u8def\u540c\u4e0a\uff0c\u4f46\u662f\u68c0\u67e5\u538b\u6808\u65f6\u8981\u5bf9\u62ec\u53f7\u505a\u4f18\u5148\u7ea7\u68c0\u67e5\u3002",
      "ID": "55f2e51de4b0152a61143350",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5047\u8bbe\u6709\u5982\u4e0b\u5b57\u7b26\u4e32\uff1a (234453)[234]{2324} \u73b0\u5728\uff0c\u8981\u6c42\u7f16\u7a0b\u5206\u6790\u5176\u62ec\u53f7\u914d\u5bf9\u662f\u5426\u6b63\u786e\u3002\u8bf7\u81ea\u884c\u9009\u62e9\u4e0b\u5217\u4e24\u79cd\u65b9\u6848\u4e4b\u4e00\u5b9e\u73b0\u8be5\u7a0b\u5e8f\uff1a\n\u65b9\u6848\u4e00\uff1a\u4e0d\u8003\u8651\u62ec\u53f7\u4f18\u5148\u7ea7\uff0c\u53ea\u8003\u8651\u914d\u5bf9\u6b63\u786e\u6027\uff1b\u65b9\u6848\u4e8c\uff1a\u8003\u8651\u62ec\u53f7\u4f18\u5148\u7ea7\uff0c\u6bd4\u5982{1[2\uff083\uff094]5} \u662f\u6b63\u786e\u7684\u3002\u4f46\u662f[1{2}3]\u662f\u4e0d\u6b63\u786e\u7684\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143211",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "func_a \u548cfunc_b \u5206\u914d\u7684\u5185\u5b58\u4f1a\u81ea\u52a8\u521d\u59cb\u53160",
      "optionC": "func_b \u5b58\u5728\u5185\u5b58\u6cc4\u9732",
      "optionAnswer": "B",
      "answer": "\u6808\u4e0a\u7684\u6570\u636e\u662f\u4e00\u4e2a\u968f\u673a\u503c\uff0c\u4e00\u822c\u662f0xcccccccc,\u800c\u5806\u4e0a\u7684\u5185\u5b58\u5982\u679c\u4e0d\u8c03\u7528\u76f8\u5e94\u7684\u6784\u9020\u51fd\u6570\u6216\u8005\u663e\u793a\u521d\u59cb\u5316\u5b83\u662f\u4e0d\u4f1a\u88ab\u521d\u59cb\u5316\u7684",
      "optionB": "func_b \u4f7f\u7528\u4e86\u592a\u591a\u7684\u6808\uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u5728\u8fd0\u884c\u65f6\u5019\u5d29\u6e83\u3002",
      "type": "1",
      "optionA": "func_a \u83b7\u5f97\u4e34\u65f6\u5185\u5b58\u7684\u65b9\u5f0f\u6548\u7387\u901a\u5e38\u66f4\u9ad8\u3002",
      "question": "\u8bf7\u9605\u8bfb\u4e0b\u9762\u4ee3\u7801\u7247\u6bb5\u5e76\u4e14\u56de\u7b54\u95ee\u9898\uff1a\n\n#define SIZE_20M (20*1024*1024)\nvoid func_a()\n{\n    char *tmp = malloc(SIZE_20M)\n    return;\n}\nvoid func_b()\n{\n    char temp[SIZE_20M];\n    //...do something using temp\n    return;\n}\n\n\u5173\u4e8e\u8fd9\u6bb5\u4ee3\u7801\uff0c\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114325d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5e38\u91cf\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u503c\u4e0d\u80fd\u88ab\u6539\u53d8\u7684\u91cf",
      "optionC": "\u5b9a\u4e49\u7b26\u53f7\u5e38\u91cf\u5fc5\u987b\u7528\u7c7b\u578b\u540d\u6765\u8bbe\u5b9a\u5e38\u91cf\u7684\u7c7b\u578b",
      "optionAnswer": "C",
      "answer": "\u6570\u503c\u578b\u5e38\u91cf\u6709\u6574\u578b\u5e38\u91cf,\u5b9e\u578b\u5e38\u91cf,\u4e0d\u8bba\u662f\u6574\u578b\u5e38\u91cf\u8fd8\u662f\u5b9e\u578b\u5e38\u91cf\u90fd\u6709\u6b63\u503c\u548c\u8d1f\u503c\u4e4b\u5206,\u6240\u4ee5A\u6b63\u786e\u3002\u5728C\u8bed\u8a00\u7684\u9884\u7f16\u8bd1\u5904\u7406\u4e2d,\u53ef\u4ee5\u7528\u7b26\u53f7\u540d\u4ee3\u8868\u4e00\u4e2a\u5e38\u91cf,\u5b9a\u4e49\u65f6\u4e0d\u5fc5\u6307\u5b9a\u5e38\u91cf\u7c7b\u578b,\u6240\u4ee5C\u9519\u8bef,B\u6b63\u786e\u3002\u5e38\u91cf\u7684\u5b9a\u4e49\u5c31\u662f\u5e38\u91cf\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u503c\u4e0d\u997f\u80fd\u591f\u88ab\u6539\u53d8\u7684\u91cf,\u6240\u4ee5D\u6b63\u786e\u3002",
      "optionB": "\u5e38\u91cf\u53ef\u4ee5\u7528\u4e00\u4e2a\u7b26\u53f7\u540d\u6765\u4ee3\u8868",
      "type": "1",
      "optionA": "\u6570\u503c\u578b\u5e38\u91cf\u6709\u6b63\u503c\u548c\u8d1f\u503c\u7684\u533a\u5206",
      "question": "\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u9519\u8bef\u7684\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7f8",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "0",
      "optionC": "16",
      "optionAnswer": "D",
      "answer": "func(1)=0\uff0c\u56e0\u4e3a\u6ca1\u6709break\u8bed\u53e5\uff0cswitch\u4e2d\u4f1a\u4e00\u76f4\u8ba1\u7b97\u5230b=0\u3002\u8fd9\u662f\u63d0\u9192\u6211\u4eec\u4e0d\u8981\u5fd8\u4e86break\u3002",
      "optionB": "20",
      "type": "1",
      "optionA": "30",
      "question": "int func(int a)\n{\n    int b;\n    switch (a)\n    {\n        case 1: b = 30;\n        case 2: b = 20;\n        case 3: b = 16;\n        default: b = 0;\n    }\n    return b;\n}\n\u5219func(1) = ?",
      "title": "C&C++"
    },
    {
      "answer": "\u7b97\u6cd5\u601d\u60f3\uff1a\u5f53\u7136\u6700\u76f4\u63a5\u7684\u65b9\u6cd5\u662f\u91c7\u7528\u66b4\u529b\u6cd5\uff0c\u4eceN+1\u5f00\u59cb\u9010\u6b65\u52a01\u5224\u65ad\u662f\u5426\u662f\u4e0d\u91cd\u590d\u6570\uff0c\u662f\u5c31\u9000\u51fa\u5faa\u73af\u8f93\u51fa\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e00\u822c\u662f\u4e0d\u53ef\u53d6\u7684\uff0c\u4f8b\u5982N=11000000\uff0c\u4f60\u8981\u4e00\u4e2a\u4e2a\u7684\u52a01\u8981\u52a0\u523012010101\uff0c\u4e00\u5171\u5faa\u73af\u767e\u4e07\u6b21\uff0c\u6bcf\u6b21\u90fd\u8981\u91cd\u590d\u5224\u65ad\u662f\u5426\u662f\u4e0d\u91cd\u590d\u6570\uff0c\u6548\u7387\u6781\u5176\u4f4e\u4e0b\uff0c\u56e0\u6b64\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u8fd9\u91cc\u6211\u91c7\u7528\u7684\u65b9\u6cd5\u662f\uff1a\u4eceN+1\u7684\u6700\u9ad8\u4f4d\u5f80\u53f3\u5f00\u59cb\u5224\u65ad\u4e0e\u5176\u6b21\u9ad8\u4f4d\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u53d1\u73b0\u76f8\u7b49\u7684\uff08\u5373\u4e3a\u91cd\u590d\u6570\uff09\u5219\u5c06\u6b21\u9ad8\u4f4d\u52a01\uff0c\u6ce8\u610f\u8fd9\u91cc\u53ef\u80fd\u8fdb\u4f4d\uff0c\u59828921\u2014>9021\uff0c\u540e\u9762\u7684\u76f4\u63a5\u7f6e\u4e3a010101...\u5f62\u5f0f\uff0c\u59821121\u2014>1201\uff0c\u6b64\u65f6\u4fbf\u5b8c\u6210\u201c\u4e0d\u91cd\u590d\u6570\u201d\u7684\u521d\u6b65\u6784\u9020\uff0c\u4f46\u6b64\u65f6\u7684\u201c\u4e0d\u91cd\u590d\u6570\u201d\u4e0d\u4e00\u5b9a\u662f\u771f\u6b63\u7684\u4e0d\u91cd\u590d\u7684\u6570\uff0c\u56e0\u4e3a\u53ef\u80fd\u8fdb\u4f4d\u540e\u7684\u6b21\u9ad8\u4f4d\u53d8\u4e3a0\u6216\u8fdb\u4f4d\u540e\u53d8\u621000\uff0c\u59829921\u2014>10001\uff0c\u6b64\u65f6\u9700\u8981\u518d\u6b21\u5faa\u73af\u5224\u65ad\u91cd\u65b0\u6784\u9020\u76f4\u81f3\u6ee1\u8db3\u6761\u4ef6\u5373\u53ef\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5faa\u73af\u7684\u6b21\u6570\u6bd4\u8f83\u5c11\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\n\nSource Code\uff1a\n// \u6c42\u6bd4\u6307\u5b9a\u6570\u5927\u4e14\u6700\u5c0f\u7684\u201c\u4e0d\u91cd\u590d\u6570\u201d\n#include <stdio.h>void minNotRep(int n)\n{\n    // \u9700\u8981\u591a\u6b21\u5224\u65ad\n    while(1)\n    {\n        int a[20], len = 0, i, b = 0;\n        // flag\u4e3atrue\u8868\u793a\u662f\u201c\u91cd\u590d\u6570\u201d\uff0c\u4e3afalse\u8868\u793a\u8868\u793a\u662f\u201c\u4e0d\u91cd\u590d\u6570\u201d\n       bool flag = false;\n       // \u5c06n\u7684\u5404\u4f4d\u4e0a\u6570\u5b57\u5b58\u5230\u6570\u7ec4a\u4e2d\n        while(n)\n        {\n           a[len++] = n % 10;\n            n = n / 10;\n        }\n        // \u4ece\u9ad8\u4f4d\u5f00\u59cb\u904d\u5386\u662f\u5426\u6709\u91cd\u590d\u4f4d\n        for(i = len - 1; i > 0; i--)\n       {\n           // \u6709\u91cd\u590d\u4f4d\u5219\u6b21\u9ad8\u4f4d\u52a01\uff08\u6700\u9ad8\u4f4d\u6709\u53ef\u80fd\u8fdb\u4f4d\u4f46\u8fd9\u91cc\u4e0d\u9700\u8981\u989d\u5916\u5904\u7406\uff09\n            if(a[i] == a[i - 1] && !flag)\n           {\n                a[i - 1]++;\n               flag = true;\n            }\n            else if(flag)\n           {\n                // \u5c06\u91cd\u590d\u4f4d\u540e\u9762\u7684\u4f4d\u7f6e\u4e3a0101...\u5f62\u5f0f\n                a[i - 1] = b;\n                b = (b == 0) ? 1 : 0;\n            }\n        }\n       // \u91cd\u7ec4\u5404\u4f4d\u6570\u5b57\u4e3an\uff0c\u5982\u679c\u662f\u201c\u4e0d\u91cd\u590d\u6570\u201d\u5219\u8f93\u51fa\u9000\u51fa\u5426\u5219\u7ee7\u7eed\u5224\u65ad\n        for(i = len - 1; i >= 0; i--)\n        {\n            n = n * 10 + a[i];\n        }\n       if(!flag)\n        {\n            printf(\"%d\\n\", n);\n           break;\n       }\n    }\n}\nint main()\n{\n    int N;\n    while(scanf(\"%d\", &N))\n    {\n        minNotRep(N + 1);\n   }\n   return 0;\n}</stdio.h>",
      "ID": "55f2e51ee4b0152a611433a9",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9aN\u662f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u6c42\u6bd4N\u5927\u7684\u6700\u5c0f\u201c\u4e0d\u91cd\u590d\u6570\u201d\uff0c\u8fd9\u91cc\u7684\u4e0d\u91cd\u590d\u662f\u6307\u6ca1\u6709\u4e24\u4e2a\u76f8\u7b49\u7684\u76f8\u90bb\u4f4d\uff0c\u59821102\u4e2d\u768411\u662f\u76f8\u7b49\u7684\u4e24\u4e2a\u76f8\u90bb\u4f4d\u6545\u4e0d\u662f\u4e0d\u91cd\u590d\u6570\uff0c\u800c12301\u662f\u4e0d\u91cd\u590d\u6570\u3002",
      "title": "C&C++"
    },
    {
      "answer": "DQFXAPBNMYCW",
      "ID": "55f2e51de4b0152a6114336f",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bbe\u6709\u5b57\u6bcd\u5e8f\u5217{Q,D,F,X,A,P,N,B,Y,M,C,W}\uff0c\u8bf7\u5199\u51fa\u6309\u4e8c\u8def\u5f52\u5e76\u65b9\u6cd5\u5bf9\u8be5\u5e8f\u5217\u8fdb\u884c\u4e00\u8d9f\u626b\u63cf\u540e\u7684\u7ed3\u679c\u4e3a___\u3002\n(\u8f93\u51fa\u7ed3\u679c\u8bf7\u6309\u7167\u4ee5\u4e0b\u683c\u5f0f\uff1aABCDEFG\uff0c\u5b57\u6bcd\u4e4b\u95f4\u6ca1\u6709\u9017\u53f7)",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431ef",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u90fd\u4e0d\u5bf9",
      "optionC": "\u8fd0\u884c",
      "optionAnswer": "A",
      "answer": "const\u7528\u6765\u8bf4\u660e\u6240\u5b9a\u4e49\u7684\u53d8\u91cf\u662f\u53ea\u8bfb\u7684\u3002 \u8fd9\u4e9b\u5728\u7f16\u8bd1\u671f\u95f4\u5b8c\u6210\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f7f\u7528\u5e38\u6570\u76f4\u63a5\u66ff\u6362\u6389\u5bf9\u6b64\u53d8\u91cf\u7684\u5f15\u7528",
      "optionB": "\u94fe\u63a5",
      "type": "1",
      "optionA": "\u7f16\u8bd1",
      "question": "c++\u4e2d\uff0c\u58f0\u660econst int i,\u662f\u5728\u54ea\u4e2a\u9636\u6bb5\u505a\u5230 i\u53ea\u53ef\u8bfb\u7684\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143222",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "hellotheword",
      "optionC": "hello",
      "optionAnswer": "B",
      "answer": "a\u662f\u6307\u9488\u7684\u6570\u7ec4 \nchar** p = a; //char** p = &a[0] \np++;//p\u662f\u6307\u9488\u81ea\u589e+4\uff0c\u800ca\u4e2d\u5143\u7d20\u662f\u6307\u9488\uff0c\u6bcf\u4e2a\u6b63\u597d\u56db\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64p++\u540e\u6070\u597dp= &a[1] *p=a[1];\u8f93\u51fa\"the\"\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3aB",
      "optionB": "the",
      "type": "1",
      "optionA": "theworld",
      "question": "\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a\n\n#include\nvoid main()\n{\n       char* a[ ] = { \"hello\", \"the\", \"world\"};\n       char** pa = a;\n       pa++;\n       cout<<\u201d*pa<<endl;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114324a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "20",
      "optionC": "60",
      "optionAnswer": "B",
      "answer": "\u8fd9\u4e2a\u9898\u7684\u4e3a\u96be\u4e4b\u5904\u5462\uff0c\u5c31\u5728\u4e8e\u524d\u9762\u5b9a\u4e49\u7ed3\u6784\u4f53\u91cc\u9762\u7528\u5230\u7684\u5192\u53f7\uff0c\u5982\u679c\u4f60\u80fd\u7406\u89e3\u8fd9\u4e2a\u7b26\u53f7\u7684\u542b\u4e49\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u5f88\u597d\u89e3\u51b3\u4e86\u3002\u8fd9\u91cc\u7684\u5192\u53f7\u76f8\u5f53\u4e8e\u5206\u914d\u51e0\u4f4d\u7a7a\u95f4\uff0c\u4e5f\u5373\u5728\u5b9a\u4e49\u7ed3\u6784\u4f53\u7684\u65f6\u5019\uff0c\u5206\u914d\u7684\u6210\u5458a 4\u4f4d\u7684\u7a7a\u95f4\uff0c b 5\u4f4d\uff0cc 7\u4f4d\uff0c\u4e00\u5171\u662f16\u4f4d\uff0c\u6b63\u597d\u4e24\u4e2a\u5b57\u8282\u3002\u4e0b\u9762\u753b\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u610f\uff1a\n\u53d8\u91cf\u540d  \u4f4d\u6570\ntest    15 14 13 12 11 10 9 |8 7 6 5 4 |3 2 1 0\ntest.a                      |          |0 0 1 0\ntest.b                      |0 0 0 1 1 |\ntest.c   0  0  0  0  0  0 0 |          |\n\u5728\u6267\u884ci=*((short *)&test); \u65f6\uff0c\u53d6\u4ece\u5730\u5740&test\u5f00\u59cb\u4e24\u4e2a\u5b57\u8282\uff08short\u5360\u4e24\u4e2a\u5b57\u8282\uff09\u7684\u5185\u5bb9\u8f6c\u5316\u4e3ashort\u578b\u6570\u636e\uff0c\u5373\u4e3a0x0032\uff0c\u518d\u8f6c\u4e3aint\u578b\u4e3a0x00000032\uff0c\u537350",
      "optionB": "50",
      "type": "1",
      "optionA": "30",
      "question": "\u5199\u51fa\u4e0b\u5217\u7a0b\u5e8f\u5728X86\u4e0a\u7684\u8fd0\u884c\u7ed3\u679c\n\nstruct mybitfields\n{\n    unsigned short a : 4;\n    unsigned short b : 5;\n    unsigned short c : 7;\n} test\n \nvoid main(void)\n{\n    int i;\n    test.a = 2;\n    test.b = 3;\n    test.c = 0;\n \n    i = *((short *)&test);\n    printf(\"%d\\n\", i);\n}",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c10",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6784\u9020\u51fd\u6570\u5fc5\u987b\u6307\u5b9a\u7c7b\u578b\u8bf4\u660e",
      "optionC": "\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u8bbe\u7f6e\u9ed8\u8ba4\u53c2\u6570",
      "optionAnswer": "D",
      "answer": "\u6784\u9020\u51fd\u6570\u65e0\u8fd4\u56de\u7c7b\u578b\u4e0d\u80fd\u7ee7\u627f\u4f46\u53ef\u4ee5\u91cd\u8f7d\uff0c\u6240\u4ee5\u9009\u62e9D\u9879\u3002",
      "optionB": "\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u91cd\u8f7d",
      "type": "1",
      "optionA": "\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u540d\u4e0e\u7c7b\u540d\u76f8\u540c",
      "question": "\u6784\u9020\u51fd\u6570\u4e0d\u5177\u5907\u7684\u7279\u5f81\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114325a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5f53\u4f7f\u7528free\u91ca\u653e\u6389\u4e00\u4e2a\u6307\u9488\u5185\u5bb9\u540e\uff0c\u6307\u9488\u53d8\u91cf\u7684\u503c\u88ab\u7f6e\u4e3aNULL",
      "optionC": "\u91ce\u6307\u9488\u662f\u6307\u5411\u672a\u5206\u914d\u6216\u8005\u5df2\u91ca\u653e\u7684\u5185\u5b58\u5730\u5740",
      "optionAnswer": "D",
      "answer": "\u7f16\u8bd1\u5668\u4e0d\u4f1a\u81ea\u52a8\u7f6eNULL\uff0c\u9700\u8981\u7a0b\u5e8f\u5458\u624b\u52a8\u7f6eNULL\uff0c\u5426\u5219free\u4f1a\u4ea7\u751f\u91ce\u6307\u9488\u3002",
      "optionB": "\u6307\u9488\u7684\u6570\u636e\u7c7b\u578b\u58f0\u660e\u7684\u662f\u6307\u9488\u5b9e\u9645\u6307\u5411\u5185\u5bb9\u7684\u6570\u636e\u7c7b\u578b",
      "type": "1",
      "optionA": "32\u4f4d\u7cfb\u7edf\u4e0b\u4efb\u4f55\u7c7b\u578b\u6307\u9488\u7684\u957f\u5ea6\u90fd\u662f4\u4e2a\u5b57\u8282",
      "question": "\u4ee5\u4e0b\u5bf9C\u8bed\u8a00\u7684\u201d\u6307\u9488\u201c\u63cf\u8ff0\u4e0d\u6b63\u786e\u7684\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114325c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "32\u4f4d\u4e0b\uff1a4,4,2^32     64\u4f4d\u4e0b\uff1a4,4,2^64",
      "optionC": "32\u4f4d\u4e0b\uff1a4,4,2^32     64\u4f4d\u4e0b\uff1a4,8,2^64",
      "optionAnswer": "C",
      "answer": "\u7279\u522b\u662fint\u76f8\u5173\u7684\u7c7b\u578b\u5728\u4e0d\u540c\u4f4d\u6570\u673a\u5668\u7684\u5e73\u53f0\u4e0b\u957f\u5ea6\u4e0d\u540c\u3002C99\u6807\u51c6\u5e76\u4e0d\u89c4\u5b9a\u5177\u4f53\u6570\u636e\u7c7b\u578b\u7684\u957f\u5ea6\u5927\u5c0f\uff0c\u53ea\u89c4\u5b9a\u7ea7\u522b\u3002\u4f5c\u4e0b\u6bd4\u8f83\uff1a  \n\uff081\uff0916\u4f4d\u5e73\u53f0  \nchar         1\u4e2a\u5b57\u82828\u4f4d \nshort        2\u4e2a\u5b57\u828216\u4f4d \nint             2\u4e2a\u5b57\u828216\u4f4d \nlong         4\u4e2a\u5b57\u828232\u4f4d \n\u6307\u9488         2\u4e2a\u5b57\u828216\u4f4d  \n\uff082\uff0932\u4f4d\u5e73\u53f0  \nchar         1\u4e2a\u5b57\u82828\u4f4d \nshort        2\u4e2a\u5b57\u828216\u4f4d \nint             4\u4e2a\u5b57\u828232\u4f4d \nlong         4\u4e2a\u5b57\u828232\u4f4d\nlong long    8\u4e2a\u5b57\u828264\u4f4d  \n\u6307\u9488         4\u4e2a\u5b57\u828232\u4f4d  \n\uff083\uff0964\u4f4d\u5e73\u53f0  \nchar     1\u4e2a\u5b57\u8282 \nshort     2\u4e2a\u5b57\u8282\n int                 4\u4e2a\u5b57\u8282  \nlong             8\u4e2a\u5b57\u8282\uff08\u533a\u522b\uff09 \nlong long    8\u4e2a\u5b57\u8282  \n\u6307\u9488             8\u4e2a\u5b57\u8282\uff08\u533a\u522b\uff09",
      "optionB": "32\u4f4d\u4e0b\uff1a4,4,\u4e0d\u9650\u5236   64\u4f4d\u4e0b\uff1a4,8,\u4e0d\u9650\u5236",
      "type": "1",
      "optionA": "32\u4f4d\u4e0b\uff1a4,4,2^32     64\u4f4d\u4e0b\uff1a8,8,2^64",
      "question": "\u4ee5\u4e0b\u7cfb\u7edf\u4e2d\uff0cint\u7c7b\u578b\u5360\u51e0\u4e2a\u5b57\u8282\uff0c\u6307\u9488\u5360\u51e0\u4e2a\u5b57\u8282\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u4f7f\u7528\u7684\u6700\u5927\u5185\u5b58\u7a7a\u95f4\u662f\u591a\u5927\uff1a",
      "title": "C&C++"
    },
    {
      "answer": "*/3 14-15 * * 1,2,3,4,5 /home/script/check.sh\n\u5468\u4e00\u5230\u5468\u4e94\u6bcf\u592914-15\u70b9\u5185\uff0c\u6bcf\u96943\u5206\u949f\u6267\u884c\u4e00\u6b21check.sh\u811a\u672c\nLinux crontab\u5b9a\u65f6\u6267\u884c\u4efb\u52a1 \n\u57fa\u672c\u683c\u5f0f : \n*\u3000\u3000*\u3000\u3000*\u3000\u3000*\u3000\u3000*\u3000\u3000command \n\u5206\u3000\u65f6\u3000\u65e5\u3000\u6708\u3000\u5468\u3000\u547d\u4ee4 \n\u7b2c1\u5217\u8868\u793a\u5206\u949f1\uff5e59 \u6bcf\u5206\u949f\u7528*\u6216\u8005 */1\u8868\u793a \n\u7b2c2\u5217\u8868\u793a\u5c0f\u65f61\uff5e23\uff080\u8868\u793a0\u70b9\uff09 \n\u7b2c3\u5217\u8868\u793a\u65e5\u671f1\uff5e31 \n\u7b2c4\u5217\u8868\u793a\u6708\u4efd1\uff5e12 \n\u7b2c5\u5217\u6807\u8bc6\u53f7\u661f\u671f0\uff5e6\uff080\u8868\u793a\u661f\u671f\u5929\uff09 \n\u7b2c6\u5217\u8981\u8fd0\u884c\u7684\u547d\u4ee4",
      "ID": "55f2e51ce4b0152a6114332a",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u73b0\u6709/home/script/check.sh\u811a\u672c\uff0c\u8981\u6c42\u6bcf\u5468\u4e00\u5230\u5468\u4e9414\u70b9\u5185\u6bcf\u4e09\u5206\u949f\u8fd0\u884c\u4e00\u6b21\uff0c\u76f8\u5e94\u7684crontab\u914d\u7f6e\u662f()",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143131",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u90fd\u4e0d\u5bf9",
      "optionC": "\u8fd0\u884c",
      "optionAnswer": "A",
      "answer": "const\u7528\u6765\u8bf4\u660e\u6240\u5b9a\u4e49\u7684\u53d8\u91cf\u662f\u53ea\u8bfb\u7684\u3002 \u8fd9\u4e9b\u5728\u7f16\u8bd1\u671f\u95f4\u5b8c\u6210\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f7f\u7528\u5e38\u6570\u76f4\u63a5\u66ff\u6362\u6389\u5bf9\u6b64\u53d8\u91cf\u7684\u5f15\u7528\u3002",
      "optionB": "\u94fe\u63a5",
      "type": "1",
      "optionA": "\u7f16\u8bd1",
      "question": "c++\u4e2d\uff0c\u58f0\u660econst int i,\u662f\u5728\u54ea\u4e2a\u9636\u6bb5\u505a\u5230 i\u53ea\u53ef\u8bfb\u7684\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c15",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u7ee7\u627f",
      "optionC": "\u662f\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e0e\u53e6\u4e00\u4e2a\u7c7b\u7684\u5173\u7cfb",
      "optionAnswer": "D",
      "answer": "\u53cb\u5143\u53ef\u4ee5\u662f\u51fd\u6570\u4e0e\u7c7b\u7684\u5173\u7cfb\u5373\u53cb\u5143\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u7c7b\u4e0e\u7c7b\u7684\u5173\u7cfb\u5373\u53cb\u5143\u7c7b\uff0c\u4f46\u53cb\u5143\u4e0d\n\u80fd\u7ee7\u627f\uff0c\u662f\u5355\u5411\u6027\uff0c\u4e14\u4e0d\u5177\u6709\u4f20\u9012\u6027\u3002\u53cb\u5143\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u4e2d\u6240\u6709\u6210\u5458\uff0c\u63d0\u9ad8\u4e86\u8bbf\u95ee\u7684\u65b9\u4fbf\u6027\u3002\u56e0\u6b64\n\u9009\u62e9D\u9879\u3002",
      "optionB": "\u662f\u7c7b\u4e0e\u7c7b\u7684\u5173\u7cfb",
      "type": "1",
      "optionA": "\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387",
      "question": " \u53cb\u5143\u5173\u7cfb\u4e0d\u80fd\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7eb",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "1",
      "optionC": "0.5",
      "optionAnswer": "C",
      "answer": "",
      "optionB": "0.25",
      "type": "1",
      "optionA": "0",
      "question": "#include <stdio.h > \nmain()\n{ \n    double x=2.0,y;\n    if(x<0.0)y=0.0;\n    else if((x<5.0)&&(! x)) y=1.0/(x+2.0);\n    if(x<10.0)y=1.0/x;\n    else if y=10.0;\n    printf(\"\uff05f\\n\",y);\n}\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55f2dfa6e4b0152a61142e2a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "None of the above.",
      "optionC": "Multiple threads mar cause deadlock,while multiple processes won't cause deadlock.",
      "optionAnswer": "B",
      "answer": "B\u662f\u5bf9\u7684\uff0cAC\u90fd\u6709\u9519",
      "optionB": "Changes to the main thread(cancellation\uff0cpriority change\uff0cetc.) may affect the behavior of the other threads of the process; Changes to the parent process does not affect child processes.",
      "type": "1",
      "optionA": "Threads share the same address space of the parent process;Processes share the same address space of the parent process.",
      "question": "Which statement(s) is(are) correct about thread and process\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143249",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e00\u4e2a\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u5fc5\u987b\u662f\u62bd\u8c61\u65b9\u6cd5",
      "optionC": "\u7eaf\u865a\u51fd\u6570\u548c\u865a\u51fd\u6570\u7684\u533a\u522b\u5728\u4e8e\u524d\u8005\u4e0d\u5305\u542b\u5b9a\u4e49\uff0c\u800c\u540e\u8005\u53ef\u4ee5\u5305\u542b\u51fd\u6570\u4f53\u3002",
      "optionAnswer": "D",
      "answer": "\u62bd\u8c61\u7c7b \uff1a \u7c7b\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u65b9\u6cd5\u662f\u62bd\u8c61\u65b9\u6cd5\uff0c\u5219\u8be5\u7c7b\u5c31\u662f\u62bd\u8c61\u7c7b\n\u63a5\u53e3 \uff1a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u5168\u90e8\u90fd\u662f\u62bd\u8c61\u65b9\u6cd5\u3002 ",
      "optionB": "c++\u4e2d\u6ca1\u6709\u63a5\u53e3\u7684\u6982\u5ff5\uff0c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u662f\u7eaf\u865a\u7c7b\uff0c\u5bf9\u5e94\u7684\u662fjava\u7684\u63a5\u53e3",
      "type": "1",
      "optionA": "c++\u865a\u7c7b\u76f8\u5f53\u4e0ejava\u91cc\u9762\u7684\u62bd\u8c61\u7c7b",
      "question": "\u4e0b\u8ff0\u6709\u5173c++\u7684\u865a\u7c7b\u548cjava\u63a5\u53e3\u7684\u63cf\u8ff0\uff0c\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u7528\u6808\u6765\u51fa\u73b0\uff0c\u51e1\u662f\u5de6\u62ec\u53f7\u5c31\u538b\u6808\uff0c\u51e1\u662f\u53f3\u62ec\u53f7\u5c31\u51fa\u6808\uff0c\u6700\u540e\u5982\u679c\u6808\u4e3a\u7a7a\u5c31\u5339\u914d\u6b63\u786e",
      "ID": "55f2e51ee4b0152a611433a0",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5224\u65ad\u4e00\u4e2a\u62ec\u53f7\u5b57\u7b26\u4e32\u662f\u5426\u5339\u914d\u6b63\u786e\uff0c\u5982\u679c\u62ec\u53f7\u6709\u591a\u79cd\uff0c\u600e\u4e48\u505a\uff1f\u5982\uff08\uff08[]\uff09\uff09\u6b63\u786e\uff0c[[(()\u9519\u8bef\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143200",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e24\u8005\u53ef\u80fd\u7b49\u4ef7",
      "optionC": "#include <filename.h>\u641c\u7d22\u8303\u56f4\u6bd4#include \u201cfilename.h\u201d\u5c0f",
      "optionAnswer": "B",
      "answer": "#include\"\"\u4ece\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u5f00\u59cb\u641c\u7d22\uff0c\u7136\u540e\u6269\u5c55\u5230\u6807\u51c6\u5e93\u8def\u5f84\u3002?",
      "optionB": "#include \u201cfilename.h\u201d\u53ea\u641c\u7d22\u7528\u6237\u5de5\u4f5c\u8def\u5f84",
      "type": "1",
      "optionA": "#include <filename.h>\u53ea\u641c\u7d22\u6807\u51c6\u5e93\u8def\u5f84",
      "question": "\u5bf9\u4e8e#include ??<filename.h>?\u548c #include \u201cfilename.h\u201d\uff0c\u4ee5\u4e0b\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff08 \uff09\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de81c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e0d\u786e\u5b9a",
      "optionC": "8",
      "optionAnswer": "B",
      "answer": "\u6307\u9488\u662f\u591a\u5c11\u4f4d\u53ea\u8981\u770b\u5730\u5740\u603b\u7ebf\u7684\u4f4d\u6570\u5c31\u884c\u4e86\u300280386\u4ee5\u540e\u7684\u673a\u5b50\u90fd\u662f32\u7684\u6570\u636e\u603b\u7ebf\u3002\u6240\u4ee5\u6307\u9488\u7684\u4f4d\u6570\u5c31\u662f4\u4e2a\u5b57\u8282\u4e86\u3002",
      "optionB": "4",
      "type": "1",
      "optionA": "2",
      "question": "\u4e00\u4e2a32\u4f4d\u7684\u673a\u5668,\u8be5\u673a\u5668\u7684\u6307\u9488\u662f\u591a\u5c11\u5b57\u8282?",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de800",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002",
      "optionC": "\u5220\u9664\u7a7a\u6307\u9488\u662f\u65e0\u5bb3\u7684\uff0c\u4e0d\u80fd\u5220\u9664\u5f15\u7528\u3002",
      "optionAnswer": "B",
      "answer": "\u58f0\u660e\u4e00\u4e2a\u5f15\u7528\u7684\u540c\u65f6\uff0c\u5982\u679c\u4e0d\u662f\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u6216\u8fd4\u56de\u503c\uff0c\u5fc5\u987b\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u660e\u786e\u5f15\u7528\u662f\u54ea\u4e2a\u53d8\u91cf\u7684\u522b\u540d\uff0c\u5f15\u7528\u4e00\u65e6\u6210\u4e3a\u67d0\u4e2a\u53d8\u91cf\u7684\u522b\u540d\u540e\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u53ef\u6539\u53d8\u8fd9\u79cd\u6307\u4ee3\u5173\u7cfb\u3002",
      "optionB": "\u6307\u9488\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u5f15\u7528\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002",
      "type": "1",
      "optionA": "\u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002",
      "question": "\u5173\u4e8e\u5f15\u7528\u4e0e\u6307\u9488\u7684\u533a\u522b\uff0c\u4e0b\u9762\u53d9\u8ff0\u9519\u8bef\u7684\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143212",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "3,5",
      "optionC": "6,7",
      "optionAnswer": "C",
      "answer": "const\u5728\u524d\uff0c\u5185\u5bb9\u4e0d\u80fd\u53d8\uff1b\nconst\u5728\u540e\uff0c\u6307\u9488\u4e0d\u80fd\u53d8\uff1b\nconst* \uff0c\u6307\u9488\u6307\u5411\u4e3a\u5e38\u91cf\uff1b\n*const \uff0c\u6307\u9488\u672c\u8eab\u4e3a\u5e38\u91cf\u3002\n",
      "optionB": "1,3,5,6",
      "type": "1",
      "optionA": "1,2,3,4,5,6,7",
      "question": "\u8bf7\u627e\u51fa\u4e0b\u9762\u7a0b\u5e8f\u4e2d\u6709\u54ea\u4e9b\u9519\u8bef\uff1a\n\nint main()\n{\n   int i=10;\n   int j=1;\n   const int *p1;//(1)\n   int const *p2=&i; //(2)\n   p2=&j;//(3)\n   int *const p3=&i;//(4)\n   *p3=20;//(5)\n   *p2=30;//(6)\n   p3=&j;//(7)\nreturn 0;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c89",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u53cd\u5bf9\u79f0\u6027",
      "optionC": "\u4f20\u9012\u6027",
      "optionAnswer": "C",
      "answer": "\u4efb\u4f55\u4e00\u4e2a\u7c7b\u90fd\u53ef\u4ee5\u6d3e\u751f\u51fa\u4e00\u4e2a\u65b0\u7c7b\uff0c\u6d3e\u751f\u7c7b\u4e5f\u53ef\u4ee5\u518d\u6d3e\u751f\u51fa\u65b0\u7c7b\uff0c\u518d\u6b21\u6d3e\u751f\u51fa\u7684\u65b0\u7c7b\u4e5f\u5177\u6709\u4e4b\u524d\u57fa\u7c7b\u7684\u6210\u5458\uff0c\u56e0\u6b64\u7ee7\u627f\u5177\u6709\u4f20\u9012\u6027\u3002",
      "optionB": "\u5bf9\u79f0\u6027",
      "type": "1",
      "optionA": "\u81ea\u53cd\u6027",
      "question": "\u5728C++\u4e2d\uff0c\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u7ee7\u627f\u5173\u7cfb\u5177\u6709\uff08  \uff09",
      "title": "C&C++"
    },
    {
      "answer": "int n = INT_MIN;\ndo\n{\n    if(0 != f(n))\n    {\n        //error\n        break;\n     }\n}\nwhile(n++ != INT_MIN);\n\nif(n != INT_MIN) error;//",
      "ID": "55f2e51de4b0152a61143395",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6709\u4e00\u4e2a\u51fd\u6570\u201cint f(int n)\u201d\uff0c\u8bf7\u7f16\u5199\u4e00\u6bb5\u7a0b\u5e8f\u8c03\u8bd5\u51fd\u6570f(n)\u662f\u5426\u603b\u662f\u8fd4\u56de0\uff0c\u5e76\u6dfb\u52a0\u5fc5\u8981\u7684\u6ce8\u89c6\u548c\u8bf4\u660e\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431f8",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "A::f() A::f()const",
      "optionC": "A::f() B::f()const",
      "optionAnswer": "B",
      "answer": "\u7c7bA\u4e2d\u7684f\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u7ed1\u5b9a\u3002\n\u56e0\u6b64\u7b2c\u4e00\u6b21\u8c03\u7528a->f()\u7684\u65f6\u5019\u8c03\u7528\u7684\u662f\u5176\u5b9e\u9645\u7c7b\u578bB\u7684f()\u51fd\u6570\uff0c\u8f93\u51faB::f() \n\u7b2c\u4e8c\u6b21\u8c03\u7528\uff0c\u5e38\u6307\u9488\u8c03\u7528const\u51fd\u6570\uff0c\u8f93\u51fa A::f()const",
      "optionB": "B::f() A::f()const",
      "type": "1",
      "optionA": "B::f() B::f()const",
      "question": "What's the output of the following code?(3 Points)\n\nclass A\n{\n    public:\n    virtual void f()\n    {\n        cout<<\"A::f()\"<<endl;\n    }\n    void f() const {\n        cout<<\u201cA::f() const\"<<endl;\n    }\n}\nclass B : A\n{\n    public:\n    void f(){\n        cout<<\u201cB::f()\u201d<<endl;\n    }\n}\ng(const a* a)\n{\n    a->f();\n}\nint main()\n{\n    A* a = new B();\n    a->f();\n    g(a);\n    delete a ;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c29",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5b57\u7b26\u578b\u51fd\u6570",
      "optionC": "\u865a\u51fd\u6570",
      "optionAnswer": "C",
      "answer": "\u4f7f\u7528\u5173\u952e\u5b57static\u58f0\u660e\u7684\u6210\u5458\u51fd\u6570\u5c31\u662f\u9759\u6001\u6210\u5458\u51fd\u6570\uff0c\u9759\u6001\u6210\u5458\u51fd\u6570\u4e5f\u5c5e\u4e8e\u6574\u4e2a\u7c7b\n\u800c\u4e0d\u5c5e\u4e8e\u7c7b\u4e2d\u7684\u67d0\u4e2a\u5bf9\u8c61\uff0c\u5b83\u662f\u8be5\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u7684\u6210\u5458\u51fd\u6570\u3002\n\u9759\u6001\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u5728\u7c7b\u4f53\u5185\u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u5728\u7c7b\u5916\u5b9a\u4e49\u3002\u5f53\u5728\u7c7b\u5916\u5b9a\u4e49\u65f6\uff0c\u8981\u6ce8\u610f\u4e0d\u80fd\u4f7f\u7528\nstatic\u5173\u952e\u5b57\u4f5c\u4e3a\u524d\u7f00\u3002\n\u7531\u4e8e\u9759\u6001\u6210\u5458\u51fd\u6570\u5728\u7c7b\u4e2d\u53ea\u6709\u4e00\u4e2a\u62f7\u8d1d\uff08\u526f\u672c\uff09\uff0c\u56e0\u6b64\u5b83\u8bbf\u95ee\u5bf9\u8c61\u7684\u6210\u5458\u65f6\u8981\u53d7\u5230\u4e00\u4e9b\u9650\u5236\uff1a\u9759\n\u6001\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7c7b\u4e2d\u8bf4\u660e\u7684\u9759\u6001\u6210\u5458\uff0c\u4f46\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u7c7b\u4e2d\u8bf4\u660e\u7684\u975e\u9759\u6001\u6210\u5458\uff1b\u82e5\u8981\u8bbf\n\u95ee\u975e\u9759\u6001\u6210\u5458\u65f6\uff0c\u5fc5\u987b\u901a\u8fc7\u53c2\u6570\u4f20\u9012\u7684\u65b9\u5f0f\u5f97\u5230\u76f8\u5e94\u7684\u5bf9\u8c61\uff0c\u518d\u901a\u8fc7\u5bf9\u8c61\u6765\u8bbf\u95ee\u3002\u865a\u51fd\u6570\u662f\u975e\u9759\n\u6001\u7684\u3001\u975e\u5185\u8054\u7684\u6210\u5458\u51fd\u6570\u3002\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u88ab\u8bf4\u660e\u4e3a\u865a\u51fd\u6570\u3002",
      "optionB": "\u6d6e\u70b9\u51fd\u6570",
      "type": "1",
      "optionA": "\u6574\u578b\u51fd\u6570",
      "question": "\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8bf4\u660e\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "package com.yuzhouwan.changeSourceString;\n\nimport static org.junit.Assert.assertEquals;\n\nimport org.junit.Test;\n\n/**\n * \n * \u7ed9\u5b9a\u4e00\u4e2a\u539f\u4e32\u548c\u76ee\u6807\u4e32\uff0c\u80fd\u5bf9\u6e90\u4e32\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a<br>\n * 1.\u5728\u7ed9\u5b9a\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26 <br>\n * 2.\u66ff\u6362\u4efb\u610f\u5b57\u7b26 <br>\n * 3.\u5220\u9664\u4efb\u610f\u5b57\u7b26 \u8981\u6c42\u5b8c\u6210\u4e00\u4e0b\u51fd\u6570\uff0c\u8fd4\u56de\u6700\u5c11\u7684\u64cd\u4f5c\u6570\uff0c\u4f7f\u5f97\u6e90\u4e32\u8fdb\u884c\u8fd9\u4e9b\u64cd\u4f5c\u540e\u7b49\u4e8e\u76ee\u6807\u4e32\u3002\u6e90\u4e32\u548c\u76ee\u6807\u4e32\u957f\u5ea6\u90fd\u5c0f\u4e8e2000\u3002<br>\n * \n * @author asdf2015\n * \n */\npublic class ChangeStringTest {\n\n    /**\n     * \u8fd4\u56de\u4ece\u6e90\u5b57\u7b26\u4e32\u5230\u76ee\u6807\u5b57\u7b26\u4e32\u7684\u6700\u5c0f\u64cd\u4f5c\u6570 source: \u6e90\u5b57\u7b26\u4e32 target\uff1a\u76ee\u6807\u5b57\u7b26\u4e32 \u8fd4\u56de\uff1a\u6700\u5c0f\u64cd\u4f5c\u6570\n     */\n    public int minOperationCount(String source, String target) {\n        int operator = 0;\n        char[] sChars = source.toCharArray();\n        char[] tChars = target.toCharArray();\n\n        int sLen = sChars.length;\n        int tLen = tChars.length;\n        int len = sLen > tLen ? sLen : tLen;\n\n        if (sLen == 0 || tLen == 0)\n            return len;\n\n        for (int j = 0, i = 0; i <= len;) {\n\n            if (i >= sLen)\n                return operator + len - j;\n            if (j >= tLen)\n                return operator + len - i;\n\n            if (sChars[i] != tChars[j]) {\n\n                if (j + 1 < tLen && sChars[i] == tChars[j + 1]) {\n                    source = addChar(source, i, tChars[j]);\n                    i++;\n                    j += 2;\n                } else if (i + 1 < sLen && sChars[i + 1] == tChars[j]) {\n                    source = deteleChar(source, i);\n                    i += 2;\n                    j++;\n                } else {\n                    source = replaceChar(source, i, sChars[j]);\n                    i++;\n                    j++;\n                }\n                operator++;\n\n            } else {\n                i++;\n                j++;\n            }\n        }\n        return operator;\n    }\n\n    @Test\n    public void testMinOperationCount() {\n        assertEquals(0, minOperationCount(\"a\", \"a\"));\n        assertEquals(1, minOperationCount(\"\", \"a\"));\n        assertEquals(1, minOperationCount(\"a\", \"ab\"));\n        assertEquals(1, minOperationCount(\"ad\", \"ab\"));\n        assertEquals(1, minOperationCount(\"ad\", \"a\"));\n        assertEquals(2, ",
      "ID": "55f2e51de4b0152a61143383",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u4e00\u4e2a\u539f\u4e32\u548c\u76ee\u6807\u4e32\uff0c\u80fd\u5bf9\u6e90\u4e32\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a \n1.\u5728\u7ed9\u5b9a\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26 \n2.\u66ff\u6362\u4efb\u610f\u5b57\u7b26 \n3.\u5220\u9664\u4efb\u610f\u5b57\u7b26 \u8981\u6c42\u5b8c\u6210\u4e00\u4e0b\u51fd\u6570\uff0c\u8fd4\u56de\u6700\u5c11\u7684\u64cd\u4f5c\u6570\uff0c\u4f7f\u5f97\u6e90\u4e32\u8fdb\u884c\u8fd9\u4e9b\u64cd\u4f5c\u540e\u7b49\u4e8e\u76ee\u6807\u4e32\u3002\u6e90\u4e32\u548c\u76ee\u6807\u4e32\u957f\u5ea6\u90fd\u5c0f\u4e8e2000\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u5faa\u73af\u7684\u9012\u5f52\u8c03\u7528\u5bfc\u81f4\u7684,\u5982\u679c\u4f7f\u7528\u7684\u5927\u6570\u636e\u7ed3\u6784\u7684\u5c40\u90e8\u53d8\u91cf,\u4e5f\u53ef\u80fd\u5bfc\u81f4",
      "ID": "55f2e51ee4b0152a611433d1",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "int arrive_time[] = new int[] { 10, 12, 15, 17, 18, 19, 19, 20, 25 };\nint process_time[] = new int[] { 1, 18, 10, 19, 16, 8, 6, 7, 3 };\nint total = 0, lastTime = 0;\nint atms[] = new int[] { 0, 0, 0, 0 };\nfor (int i = 0; i < process_time.length; i++) {\n        int time = arrive_time[i] - lastTime;\n        for (int j = 0; j < atms.length; j++) {\n            atms[j] -= time;\n    }\n    lastTime = arrive_time[i];\n    boolean wait = true;\n    for (int j = 0; j < atms.length; j++) {\n        if (atms[j] <= 0) {\n            atms[j] = process_time[i];\n            wait = false;\n            break;\n        }\n    }\n    if (wait) {\n        int temp = atms[0];\n        for (int j = 0; j < atms.length; j++) {\n            for (int j2 = j + 1; j2 < atms.length; j2++) {\n                if (atms[j2] < atms[j]) {\n                    temp = atms[j2];\n                    atms[j2] = atms[j];\n                    atms[j] = temp;\n        }\n    }\n}\n        total += atms[0];\n        atms[0] += process_time[i];\n    }\n}\nSystem.out.println((double) total / arrive_time.length);",
      "ID": "55f2e51de4b0152a6114337b",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u94f6\u884c\u53d6\u6b3e\u6392\u961f\u6a21\u62df \n\u5047\u8bbe\u94f6\u884c\u67094\u4e2a\u67dc\u53f0\uff0c\u5047\u8bbe\u67d0\u5929\u6709200\u4f4d\u5ba2\u6237\u6765\u529e\u7406\u4e1a\u52a1\uff0c\u6bcf\u4e2a\u5ba2\u6237\u5230\u8fbe\u94f6\u884c\u7684\u65f6\u95f4\u548c\u4e1a\u52a1\u5904\u7406\u65f6\u95f4\u5206\u522b\u7528\u4e24\u4e2a\u6570\u7ec4arrive_time \u548c process_time \u6765\u63cf\u8ff0\u3002 \n\u8bf7\u5199\u7a0b\u5e8f\u8ba1\u7b97\u6240\u6709\u5ba2\u6237\u7684\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\uff0c\u5047\u8bbe\u6bcf\u4e2a\u5ba2\u6237\u5728\u53bb\u5230\u8425\u4e1a\u90e8\u4e4b\u540e\u5148\u62ff\u53f7\u6392\u961f\uff0c\u7136\u540e\u5728\u4efb\u610f\u4e00\u4e2a\u67dc\u53f0\u6709\u7a7a\u95f2\u7684\u65f6\u5019\uff0c\u53f7\u7801\u6570\u6700\u5c0f\u7684\u5ba2\u6237\u4e0a\u53bb\u529e\u7406\uff0c\u5047\u8bbe\u6240\u6709\u7684\u5ba2\u6237\u62ff\u5230\u53f7\u7801\u4e4b\u540e\u4e0d\u4f1a\u56e0\u4e3a\u94f6\u884c\u4f17\u6240\u5468\u77e5\u7684\u6162\u800c\u5931\u53bb\u8010\u5fc3\u8d70\u6389\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143158",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "Func(&(*a))",
      "optionC": "Func(*a)",
      "optionAnswer": "A",
      "answer": "C++\u4e2d&\u6709\u53e6\u5916\u4e00\u4e2a\u542b\u4e49\uff0c\u7528\u6765\u58f0\u660e\u5f15\u7528\uff0c&\u4e0d\u662f\u5730\u5740\u8fd0\u7b97\u7b26\uff0c\u800c\u662f\u7c7b\u578b\u6807\u8bc6\u7b26\u7684\u4e00\u90e8\u5206\u3002\u5c31\u50cf\u58f0\u660echar*\u6307\u7684\u662f\u6307\u5411char\u7684\u6307\u9488\u4e00\u6837\uff0cint &\u6307\u7684\u662f\u6307\u5411int\u7684\u5f15\u7528\uff0c\u53d8\u91cf\u548c\u53d8\u91cf\u7684\u5f15\u7528\u6307\u5411\u76f8\u540c\u7684\u503c\u548c\u5185\u5b58\u5355\u5143\uff0c\u5f15\u7528\u76f8\u5f53\u4e8e\u53d8\u91cf\u7684\u522b\u540d\u3002\u56e0\u6b64\u5728\u53c2\u6570\u4f20\u9012\u65f6\u4e5f\u53ea\u9700\u8981\u4f20\u9012\u53d8\u91cf\u540d\u5373\u53ef\uff0c\u5373Func(a)\u3002\u5b83\u7684\u5f62\u5f0f\u4e0a\u770b\u8d77\u6765\u4e0e\u503c\u4f20\u9012\u76f8\u540c\uff0c\u4f46\u5b83\u4f20\u9012\u53c2\u6570\u65f6\u4e0d\u590d\u5236\u526f\u672c\uff0c\u4e0e\u6307\u9488\u4e00\u6837\u53ef\u4ee5\u4fee\u6539\u4e3b\u8c03\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u4e14\u4f7f\u7528\u8d77\u6765\u66f4\u65b9\u4fbf\u3002",
      "optionB": "Func(&a)",
      "type": "1",
      "optionA": "Func(a)",
      "question": "\u67d0\u51fd\u6570\u7533\u660e\u5982\u4e0b\uff1a\nvoid Func(int &nVal1);\n\u6709int a,\u4e0b\u9762\u4f7f\u7528\u6b63\u786e\u7684\u4e3a\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c1d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u82e5\u6587\u4ef6\u5b58\u5728\uff0c\u6253\u5f00\u5931\u8d25\uff1b\u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5efa\u7acb\u4e00\u4e2a\u65b0\u6587\u4ef6",
      "optionC": "\u82e5\u6587\u4ef6\u5b58\u5728\uff0c\u5c06\u6587\u4ef6\u5199\u6307\u9488\u5b9a\u4f4d\u4e8e\u6587\u4ef6\u9996\uff1b\u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5efa\u7acb\u4e00\u4e2a\u65b0\u6587\u4ef6",
      "optionAnswer": "A",
      "answer": "ios::binary\uff0c\u91c7\u7528\u4e8c\u8fdb\u5236\u5f62\u5f0f\uff0cios::app\u5b9a\u4f4d\u5230\u6587\u4ef6\u5c3e\u90e8\u3002",
      "optionB": "\u82e5\u6587\u4ef6\u5b58\u5728\uff0c\u5c06\u5176\u7f6e\u4e3a\u7a7a\u6587\u4ef6\uff1b\u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u6253\u5f00\u5931\u8d25",
      "type": "1",
      "optionA": "\u82e5\u6587\u4ef6\u5b58\u5728\uff0c\u5c06\u6587\u4ef6\u5199\u6307\u9488\u5b9a\u4f4d\u4e8e\u6587\u4ef6\u5c3e\uff1b\u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5efa\u7acb\u4e00\u4e2a\u65b0\u6587\u4ef6",
      "question": "\u8bed\u53e5ofstream f(\u201cTEMP.DAT\u201d,ios::app\uff5cios::binary)?\u7684\u529f\u80fd\u662f\u5efa\u7acb\u6d41\u5bf9\u8c61f\uff0c\u8bd5\u56fe\u6253\n\u5f00\u6587\u4ef6TEMP.DAT \u5e76\u4e0e\u4e4b\u8fde\u63a5\uff0c\u5e76\u4e14\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114321d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "5",
      "optionC": "18",
      "optionAnswer": "A",
      "answer": "\u672c\u9898\u8003\u67e5\u4f4d\u8fd0\u7b97\u4e2d\u6309\u4f4d\u6216\u8fd0\u7b97\u7b26,\u6216\u8fd0\u7b97\u53ea\u8981\u4e24\u4e2a\u6bd4\u8f83\u7684\u4f4d\u4e2d\u6709\u4e00\u4e2a\u4e3a1,\u5426\u5219\u7ed3\u679c\u4e3a0,,13\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a00001101,5\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a00000101,\u6216\u540e00001101,\u537313,\u9009\u9879A\u6b63\u786e\u3002",
      "optionB": "15",
      "type": "1",
      "optionA": "13",
      "question": "\u82e5\u6709\u4e00\u4e0b\u7a0b\u5e8f\n\n#include<stdio.h>\nmain(){\n    int c;\n    c=13 | 5;\n    printf(\"%d\\n\",C);\n\uff5d\n\u5219\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "// ---------------------------------------------------   \n//  \u6ce81: \u4e00\u822c\u8981\u6c42\u4e00\u4e2a\u89e3,\u6b64\u7a0b\u5e8f\u662f\u5f97\u5230\u6240\u6709\u89e3   \n//  \u6ce82: \u7531\u4e8e32\u4f4dunsigned int\u9650\u5236,\u6700\u591a32\u4e2a\u7269\u54c1                           \n// ---------------------------------------------------   \n  \n#include \"stdafx.h\"   \n#include <iostream>   \nusing   namespace  std;  \n  \n// \u7269\u54c1\u603b\u6570   \nconst   int  N_ITEM = 5;  \n  \n// \u80cc\u5305\u80fd\u88c5\u7684\u91cd\u91cf   \nconst   int  BAG = 15;  \n  \n// \u521d\u59cb\u5316\u6bcf\u4e2a\u7269\u54c1\u7684\u91cd\u91cf   \nint  item[N_ITEM] = {2, 3, 5, 7, 8};  \n  \n// \u6807\u8bb0\u6570\u7ec4   \nint  flag[N_ITEM] = {0, 0, 0, 0, 0};  \n  \n// \u7ed3\u679c\u8ba1\u6570\u5668   \nint  resultCount = 0;  \n  \n// \u6253\u5370\u7ed3\u679c   \nvoid  Print();  \n  \nint  main()  \n{  \n    // \u6253\u5370\u5df2\u77e5\u6761\u4ef6   \n    cout << \"BAG Weight:\"  << BAG << endl;  \n    cout << \"Item Number:\"  << N_ITEM << endl;  \n  \n    for  ( int  i=0; i!=N_ITEM; i++)  \n    {  \n        cout << \"Item.\"  << i+1 <<  \" W=\"  << item[i] <<  \"\\t\" ;  \n    }  \n  \n    cout << endl;  \n  \n    unsigned int  count = 0;  \n    unsigned int  all_count = 1;  \n  \n    for  ( int  i=0; i!=N_ITEM; i++)  \n    {  \n        all_count *= 2;//all_count\u8bb0\u5f55\u53ef\u80fd\u89e3\u7684\u4e2a\u6570   \n    }  \n  \n    while  (1)  \n    {  \n        // \u6a21\u62df\u9012\u5f52...\u5217\u4e3e\u6240\u6709flag\u6570\u7ec4\u53ef\u80fd   \n        // \u5176\u5b9e\u5c31\u8fd9\u4e2afor\u5faa\u73af\u662f\u5173\u952e   \n        for  ( int  i=0; i!=N_ITEM; i++)  \n        {  \n            if  ( 0 == flag[i] )  \n            {  \n                flag[i] = 1;  \n                continue ;  \n            }             \n            else    \n            {  \n                flag[i] = 0;  \n                break ;  \n            }  \n        }  \n          \n        // \u672c\u6b21\u91cd\u91cf,\u521d\u59cb\u53160   \n        int  temp = 0;  \n  \n        // \u6309\u6807\u8bb0\u8ba1\u7b97\u6240\u6709\u9009\u4e2d\u7269\u54c1\u91cd\u91cf\u548c   \n        for  ( int  i=0; i!=N_ITEM; i++)  \n        {  \n            if  ( 1 == flag[i] )  \n            {  \n                temp += item[i];  \n            }  \n        }  \n  \n        // \u6ee1\u8db3\u80cc\u5305\u91cd\u91cf\u5c31\u6253\u5370   \n        if  ( temp == BAG )  \n        {  \n            resultCount++;  \n            Print();  \n        }         \n  \n        // \u5982\u679c\u904d\u5386\u4e86\u6240\u6709\u60c5\u51b5\u5c31break\u6389while(1)\u5faa\u73af   \n        count++;  \n        if  (count == all_count)  \n        {  \n            break ;  \n        }  \n    }  \n  \n    return  0;  \n}  \n  \nvoid  Print() ",
      "ID": "55f2e51de4b0152a61143385",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u201c\u80cc\u5305\u9898\u76ee\u201d\u7684\u57fa\u672c\u63cf\u8ff0\u662f\uff1a\u6709\u4e00\u4e2a\u80cc\u5305\uff0c\u80fd\u76db\u653e\u7684\u7269\u54c1\u603b\u91cd\u91cf\u4e3aS,\u8bbe\u6709N\u4ef6\u7269\u54c1\uff0c\u5176\u91cd\u91cf\u5206\u522b\u4e3aw1\uff0cw2\uff0c\u2026\uff0cwn\uff0c\u5e0c\u671b\u4eceN\u4ef6\u7269\u54c1\u4e2d\u9009\u62e9\u82e5\u5e72\u7269\u54c1\uff0c\u6240\u9009\u7269\u54c1\u7684\u91cd\u91cf\u4e4b\u548c\u6070\u80fd\u653e\u8fdb\u8be5\u80cc\u5305\uff0c\u5373\u6240\u9009\u7269\u54c1\u7684\u91cd\u91cf\u4e4b\u548c\u5373\u662fS\u3002\u9012\u5f52\u548c\u975e\u9012\u5f52\u89e3\u6cd5\u90fd\u80fd\u6c42\u5f97\u201c\u80cc\u5305\u9898\u76ee\u201d\u7684\u4e00\u7ec4\u89e3\uff0c\u8bd5\u5199\u51fa\u201c\u80cc\u5305\u9898\u76ee\u201d\u7684\u975e\u9012\u5f52\u89e3\u6cd5",
      "title": "C&C++"
    },
    {
      "answer": "1\u548c2 \u5148\u8fc7\u30021\u8fd4\u56de\uff0c5\u548c10\u5148\u8fc7\uff0c2\u8fd4\u56de\uff0c1\u548c2\u4e00\u8d77\u8fc7\u3002\u4e00\u5171\u65f6\u95f4=2+1+10+2+2=17\u5206\u949f",
      "ID": "55f2e51de4b0152a61143392",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6709ABCD\u56db\u4e2a\u4eba\u8981\u5728\u591c\u91cc\u8fc7\u4e00\u5ea7\u6865\uff0c\u4ed6\u4eec\u901a\u8fc7\u8fd9\u5ea7\u6865\u5206\u522b\u9700\u8981\u8017\u65f61\u30012\u30015\u300110\u5206\u949f\uff0c\u73b0\u5728\u53ea\u6709\u4e00\u652f\u624b\u7535\uff0c\u8fc7\u6865\u65f6\u5fc5\u987b\u5e26\u6709\u624b\u7535\uff0c\u5e76\u4e14\u540c\u65f6\u6700\u591a\u53ea\u80fd\u4e24\u4e2a\u4eba\u4e00\u8d77\u8fc7\u6865\u3002\u8bf7\u95ee\u5982\u4f55\u5b89\u6392\u80fd\u591f\u8ba9\u56db\u4e2a\u4eba\u5c3d\u5feb\u90fd\u8fc7\u6865\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143265",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "10",
      "optionC": "9",
      "optionAnswer": "B",
      "answer": "\u672c\u9898\u8003\u67e5\u5b8f\u5b9a\u4e49,\u5b8f\u5b9a\u4e49\u53ea\u662f\u505a\u4e2a\u7b80\u5355\u7684\u66ff\u6362,\u6267\u884cSQR( k+m )/SQP( k+m )=k+m*k+m/k+m*k+m=15/2, a/ = SQR( k+m )\u7684\u7ed3\u679c\u4e3a1, \u9009\u9879B\u6b63\u786e\u3002",
      "optionB": "1",
      "type": "1",
      "optionA": "0",
      "question": "\u6709\u4ee5\u4e0b\u7a0b\u5e8f\n\n#include <stdio.h>\n#define SQR( X ) X * X\nmain( )\n{\n    int a=10, k=2, m=1;\n    a / = SQR( k+m )/SQR( k+m );\n    printf( \"%d\\n\" ,a );\n}\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f?",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143127",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u7c7b\u662f\u5177\u6709\u5171\u540c\u884c\u4e3a\u7684\u82e5\u5e72\u5bf9\u8c61\u7684\u7edf\u4e00\u63cf\u8ff0\u4f53",
      "optionC": "\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\uff0c\u4e00\u4e2a\u5bf9\u8c61\u5fc5\u987b\u5c5e\u4e8e\u4e00\u4e2a\u5df2\u77e5\u7684\u7c7b",
      "optionAnswer": "A",
      "answer": "c\u8bed\u8a00\u4e2d\u7ed3\u6784\u4f53\u65e0\u6210\u5458\u51fd\u6570\uff0c\u800cc++\u4e2d\u7684\u7c7b\u662f\u6709\u6210\u5458\u51fd\u6570\u7684",
      "optionB": "\u7c7b\u548c\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u62bd\u8c61\u548c\u5177\u4f53\u7684\u5173\u7cfb",
      "type": "1",
      "optionA": "\u7c7b\u5c31\u662fC\u8bed\u8a00\u4e2d\u7684\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u5bf9\u8c61\u5c31\u662fC\u8bed\u8a00\u4e2d\u7684\u7ed3\u6784\u4f53\u53d8\u91cf",
      "question": "\u4e0b\u9762\u5173\u4e8e\u7c7b\u548c\u5bf9\u8c61\u7684\u63cf\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "answer": "vector<int> findSeq(unsigned __int64* file_length,int n, unsigned block_length)\n{\n    vector<int> seqnums;\n    unsigned __int64 totalSize = 0;\n    int preSeq=-1;\n    for(int i=0; i<n;i++){\n        totalSize += file_length[i];\n        int seq = totalSize/block_length;\n        if(!(totalSize%block_length)){\n        seq--;\n        }\n       if(preSeq==seq){\n            if(seqnums.empty()||seqnums.back()!=seq){\n                  seqnums.push_back(seq);\n            }\n       }\n preSeq = seq;\n    }\n    return seqnums;\n}",
      "ID": "55f2e51ee4b0152a611433b4",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6709n\u4e2a\u6587\u4ef6\u7684\u957f\u5ea6\u8bb0\u8f7d\u5728\u4e00\u4e2a\u65e0\u7b26\u53f764\u4f4d\u6574\u6570\u6570\u7ec4\u4e2dunsigned__int64 file_length[n]\uff0c\u628a\u8fd9n \u4e2a\u6587\u4ef6\u4ece\u903b\u8f91\u4e0a\u6309\u5e8f\u9996\u5c3e\u62fc\u63a5\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a\u903b\u8f91\u4e0a\u7684\u5927\u6587\u4ef6\uff0c\u7136\u540e\u4ee5\u6bcf\u5757\u957f\u5ea6\u4e3aunsigned block_length\u628a\u8fd9\u4e2a\u903b\u8f91\u4e0a\u7684\u5927\u6587\u4ef6\u5212\u5206\u6210\u5927\u5c0f\u76f8\u7b49\u7684\u6570\u636e\u5757\uff08\u5f53\u7136\uff0c\u6700\u540e\u4e00\u5757\u6709\u53ef\u80fd\u6bd4block_length\u5c0f\uff09\uff0c\u8bf7\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u628a\u8fb9\u754c\u5757\u7684\u5e8f\u53f7\u96c6\u5408\u8fd4\u56de\u7ed9\u51fd\u6570\u7684\u8c03\u7528\u8005\uff08\u7b2c\u4e00\u4e2a\u6570\u636e\u5757\u5e8f\u53f7\u4e3a0\uff09\u3002\n\u6ce8\uff1a\u8fb9\u754c\u5757\u6307\u7684\u662f\u8de8\u591a\u4e2a\u6587\u4ef6\u7684\u6570\u636e\u5757\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de822",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "hello",
      "optionC": "\u7a0b\u5e8f\u5d29\u6e83",
      "optionAnswer": "C",
      "answer": "GetMemory(char *p);\u8fd9\u91cc*p\u662f\u5f62\u53c2,\u662f\u5c40\u90e8\u53d8\u91cf\n\u4e0d\u80fd\u8bb2malloc\u7533\u8bf7\u7684\u5730\u5740\u6307\u9488\u8fd4\u56de\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u9732\n\u66f4\u4e25\u91cd\u7684\u662f\u6267\u884cGetMemory(str);\u540estr\u4f9d\u7136\u4e3aNULL\n\u6267\u884cstrcpy(str, 'hello world');\u5c31\u4f1a\u51fa\u9519",
      "optionB": "\u663e\u793a\u4e3a\u4e71\u7801",
      "type": "1",
      "optionA": "hello world",
      "question": "\u8fd0\u884c\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u4f1a\u51fa\u73b0\u7684\u60c5\u51b5\u662f:()void GetMemory(char *p)\n{\n    p = (char *)malloc(100);\n}\nvoid Test(void)\n{\n    char *str = NULL;\n    GetMemory(str);\n    strcpy(str, 'hello world');\n    printf(str);\n}",
      "title": "C&C++"
    },
    {
      "answer": "40",
      "ID": "55f2e51de4b0152a6114339a",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5c0f\u652f\u6b32\u7528\u79ef\u5206\u5151\u6362\u5b89\u4ed4\u5a03\u5a03\u3002\u5151\u6362\u7684\u89c4\u5219\u662f10\u79ef\u5206\u53ef\u4ee5\u5151\u4e00\u4e2a\u5b89\u4ed4\u5e76\u8fd4\u8fd85\u79ef\u5206\u3002\u5c0f\u652f\u6709200\u79ef\u5206\uff0c\u6700\u591a\u53ef\u4ee5\u5151\u5230___\u4e2a\u5b89\u4ed4\uff1f(\u5047\u8bbe\u53ef\u4ee5\u501f\u79ef\u5206)",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de817",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "map\u7684\u5220\u9664\u64cd\u4f5c\u53ea\u4f1a\u5bfc\u81f4\u6307\u5411\u88ab\u5220\u9664\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5931\u6548",
      "optionC": "vector\u7684\u5220\u9664\u64cd\u4f5c\u53ea\u4f1a\u5bfc\u81f4\u6307\u5411\u88ab\u5220\u9664\u5143\u7d20\u53ca\u540e\u9762\u7684\u8fed\u4ee3\u5668\u5931\u6548",
      "optionAnswer": "A",
      "answer": "\u56e0\u4e3a\u7531 Vector \u7684 iterator \u548c listIterator \u65b9\u6cd5\u6240\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u662f\u5feb\u901f\u5931\u8d25\u7684?\uff1a\u5982\u679c\u5728\u8fed\u4ee3\u5668\u521b\u5efa\u540e\u7684\u4efb\u610f\u65f6\u95f4\u4ece\u7ed3\u6784\u4e0a\u4fee\u6539\u4e86\u5411\u91cf\uff08\u901a\u8fc7\u8fed\u4ee3\u5668\u81ea\u8eab\u7684 remove \u6216 add \u65b9\u6cd5\u4e4b\u5916\u7684\u4efb\u4f55\u5176\u4ed6\u65b9\u5f0f\uff09\uff0c\u5219\u8fed\u4ee3\u5668\u5c06\u629b\u51fa ConcurrentModificationException\u3002",
      "optionB": "map\u7684\u63d2\u5165\u64cd\u4f5c\u4e0d\u4f1a\u5bfc\u81f4\u8fed\u4ee3\u5668\u5931\u6548",
      "type": "1",
      "optionA": "vector\u7684\u63d2\u5165\u64cd\u4f5c\u4e0d\u4f1a\u5bfc\u81f4\u8fed\u4ee3\u5668\u5931\u6548",
      "question": "\u4e0b\u9762\u5173\u4e8e\u8fed\u4ee3\u5668\u5931\u6548\u7684\u63cf\u8ff0\u54ea\u4e2a\u662f\u9519\u8bef\u7684\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c68",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "double",
      "optionC": "void",
      "optionAnswer": "C",
      "answer": "\u65e0\u5f62\u53c2\u6216\u65e0\u8fd4\u56de\u503c\u90fd\u53ef\u4ee5\u7528void\u6765\u58f0\u660e\uff0cint char double\u5206\u522b\u662f\u6574\u578b\u3001\u5b57\u7b26\u578b\u548c\u5b9e\u578b\u3002",
      "optionB": "char",
      "type": "1",
      "optionA": "int",
      "question": "\u5728C++\u4e2d\u4e0d\u8fd4\u56de\u4efb\u4f55\u7c7b\u578b\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143223",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "19",
      "optionC": "16",
      "optionAnswer": "D",
      "answer": "5 * add(3, 4)\n\u5bf9\u4e8e\u5b8f\uff0c\u7f16\u8bd1\u5668\u4f1a\u76f4\u63a5\u66ff\u6362\uff0c\u6240\u4ee5\u4e0a\u8ff0\u8868\u8fbe\u5f0f\u53d8\u62105 * 3 + 4 = 19",
      "optionB": "25",
      "type": "1",
      "optionA": "23",
      "question": "\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f\uff1a\uff08 \uff09\n\n#define add(a,b) a+b\nint main()\n{\n    printf(\u201c % d\\n\u201d, 5 * add(3, 4));\n    return 0;\n}\n",
      "title": "C&C++"
    },
    {
      "answer": "1.\u901a\u8fc7\u62d3\u6251\u6392\u5e8f\u6765\u5efa\u7acb\u6267\u884c\u987a\u5e8f.\n2. \u5bf9\u4e8e\u65e0\u5173\u8054\u7684\u62d3\u6251\u8282\u70b9\u53ef\u4ee5\u5e76\u53d1\u6267\u884c",
      "ID": "55f2e51ee4b0152a611433d9",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7528 C \u8bed\u8a00\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u6267\u884c\u4e00\u4e32\u4efb\u52a1\u3002\u4efb\u52a1\u662f\u4e92\u76f8\u4f9d\u8d56\u7684\u3002\u6bd4\u5982 B \u4efb\u52a1\u4f9d\u8d56 A \u4efb \u52a1\uff0c\u5219 A \u5b8c\u6210 B \u624d\u80fd\u6267\u884c\u3002\u4e0d\u8003\u8651\u5e76\u53d1\u9650\u5236\uff0c\u5047\u8bbe\u6240\u6709\u7684\u4efb\u52a1\u90fd\u80fd\u4e00\u6b21\u6267\u884c\u6210\u529f\uff0c \u6240\u6709\u7684\u4efb\u52a1\u6267\u884c\u65f6\u95f4\u90fd\u76f8\u7b49\u3002\u4efb\u52a1\u6570\u636e\u7ed3\u6784\u539f\u578b\u4e3a\uff1a\ntypedef struct {\n    //\u8be5\u4efb\u52a1\u7684 ID\n    int id;\n    //\u8be5\u4efb\u52a1\u4f9d\u8d56\u7684\u4efb\u52a1\u7684 ID\n    int *child;\n    //\u8be5\u4efb\u52a1\u4f9d\u8d56\u7684\u4efb\u52a1\u4e2a\u6570\n    int child_num;\n} task;\n \n// \u51fd\u6570\u539f\u578b\uff1a\nbool doschedule(task*pask\uff0cinttask_num);\n \n//\u4ee5\u4e0b\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff1a\nvoid dotask(int id); //\u6267\u884c\u4e00\u4e2a\u8fdb\u7a0b\n \n//\u7b49\u5f85 timeout \u65f6\u95f4\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6267\u884c\u6210\u529f\u7684\u4efb\u52a1\u7684 id\uff0c\u5982\u679c\u6ca1\u6709\u4efb\u52a1\u5728\u65f6\u95f4\u7247\u5185\u5b8c\u6210\uff0c\u5219\u8fd4\u56de-1\nint waittask(int timeout);\n \nbool killtask(int id); //\u6740\u6389\u4e00\u4e2a\u8fdb\u7a0b",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de810",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "16",
      "optionC": "15",
      "optionAnswer": "D",
      "answer": "func(5)=5+func(4)\nfunc(4)=4+func(3)\nfunc(3)=3+func(2)\nfunc(2)=2+func(1)\nfunc(1)=1+func(0)\nfunc(0)=1\n5+4+3+2+1+1=16",
      "optionB": "10",
      "type": "1",
      "optionA": "0",
      "question": "\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a:#include<iostream.h>\nint func(int n)\n{\n\u3000\u3000 if(n<1)\n       return 1;\n    else\n       return n+func(n-1);\n    return 0;\n}\nvoid main() {\n    cout<< func(5) <<endl;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114327c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "7 9",
      "optionC": "1 3",
      "optionAnswer": "A",
      "answer": "a\u6307\u5411\u4e09\u7ef4\u6570\u7ec4\uff0c&a+1\u6307\u5411\u6570\u7ec4\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u3002*(ptr-1)\u6307\u5411\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a12\u3002\na+1\u6307\u5411a[1][0][0]\u7684\u4f4d\u7f6e\uff0c\u8be5\u4f4d\u7f6e\u7684\u5143\u7d20\u4e3a7\u3002",
      "optionB": "1 6",
      "type": "1",
      "optionA": "7 12",
      "question": "\u6c42\u8f93\u51fa\u7ed3\u679c \nint a[2][2][3]= { {{1,2,3},{4,5,6}},{{7,8,9},{10,11,12}}};\nint *ptr=(int *)(&a+1);\nprintf(\u201c%d %d\u201d, *(int*)(a+1), *(ptr-1));",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143243",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u8986\u76d6\u662f\u6307\u4e0d\u540c\u7684\u51fd\u6570\u4f7f\u7528\u76f8\u540c\u7684\u51fd\u6570\u540d\uff0c\u4f46\u662f\u51fd\u6570\u7684\u53c2\u6570\u4e2a\u6570\u6216\u7c7b\u578b\u4e0d\u540c",
      "optionC": "\u9690\u85cf\u662f\u6307\u6d3e\u751f\u7c7b\u4e2d\u7684\u51fd\u6570\u628a\u57fa\u7c7b\u4e2d\u76f8\u540c\u540d\u5b57\u7684\u51fd\u6570\u5c4f\u853d\u6389\u4e86",
      "optionAnswer": "D",
      "answer": "\u4f7f\u7528\u76f8\u540c\u51fd\u6570\u540d\u4f46\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\u6216\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\u5e94\u8be5\u662f\u51fd\u6570\u91cd\u8f7d\uff0c\u51fd\u6570\u8986\u76d6\u53d1\u751f\u5728\u7236\u7c7b\u4e0e\u5b50\u7c7b\u4e4b\u95f4\uff0c\u5176\u51fd\u6570\u540d\u3001\u53c2\u6570\u7c7b\u578b\u3001\u8fd4\u56de\u503c\u7c7b\u578b\u5fc5\u987b\u540c\u7236\u7c7b\u4e2d\u7684\u76f8\u5bf9\u5e94\u88ab\u8986\u76d6\u7684\u51fd\u6570\u4e25\u683c\u4e00\u81f4\uff0c\u8986\u76d6\u51fd\u6570\u548c\u88ab\u8986\u76d6\u51fd\u6570\u53ea\u6709\u51fd\u6570\u4f53\u4e0d\u540c\uff0c\u5f53\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8c03\u7528\u5b50\u7c7b\u4e2d\u8be5\u540c\u540d\u51fd\u6570\u65f6\u4f1a\u81ea\u52a8\u8c03\u7528\u5b50\u7c7b\u4e2d\u7684\u8986\u76d6\u7248\u672c\uff0c\u800c\u4e0d\u662f\u7236\u7c7b\u4e2d\u7684\u88ab\u8986\u76d6\u51fd\u6570\u7248\u672c\uff0c\u8fd9\u79cd\u673a\u5236\u5c31\u53eb\u505a\u51fd\u6570\u8986\u76d6\u3002",
      "optionB": "\u7ee7\u627f\u53ef\u4ee5\u4f7f\u7528\u73b0\u6709\u7c7b\u7684\u6240\u6709\u529f\u80fd\uff0c\u5e76\u5728\u65e0\u9700\u91cd\u65b0\u7f16\u5199\u539f\u6765\u7684\u7c7b\u7684\u60c5\u51b5\u4e0b\u5bf9\u8fd9\u4e9b\u529f\u80fd\u8fdb\u884c\u6269\u5c55",
      "type": "1",
      "optionA": "\u5c01\u88c5\uff0c\u628a\u5ba2\u89c2\u4e8b\u7269\u5c01\u88c5\u6210\u62bd\u8c61\u7684\u7c7b\uff0c\u5e76\u4e14\u7c7b\u53ef\u4ee5\u628a\u81ea\u5df1\u7684\u6570\u636e\u548c\u65b9\u6cd5\u53ea\u8ba9\u53ef\u4fe1\u7684\u7c7b\u6216\u8005\u5bf9\u8c61\u64cd\u4f5c\uff0c\u5bf9\u4e0d\u53ef\u4fe1\u7684\u8fdb\u884c\u4fe1\u606f\u9690\u85cf",
      "question": "\u4e0b\u9762\u6709\u5173\u7ee7\u627f\u3001\u591a\u6001\u3001\u7ec4\u5408\u7684\u63cf\u8ff0\uff0c\u8bf4\u6cd5\u9519\u8bef\u7684\u662f?",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a6114315e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6ca1\u6709\u529e\u6cd5\u80fd\u505a\u5230",
      "optionC": "\u5c06\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u5747\u8bbe\u4e3a\u79c1\u6709",
      "optionAnswer": "B",
      "answer": "[ \u7f16 \u8bd1\u5668\u5728\u4e3a\u7c7b\u5bf9\u8c61\u5206\u914d\u6808\u7a7a\u95f4\u65f6\uff0c\u4f1a\u5148\u68c0\u67e5\u7c7b\u7684\u6790\u6784\u51fd\u6570\u7684\u8bbf\u95ee\u6027\uff0c\u5176\u5b9e\u4e0d\u5149\u662f\u6790\u6784\u51fd\u6570\uff0c\u53ea\u8981\u662f\u975e\u9759\u6001\u7684\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u90fd\u4f1a\u8fdb\u884c\u68c0\u67e5\u3002\u5982\u679c\u7c7b\u7684\u6790\u6784\u51fd\u6570\u662f\u79c1\u6709\u7684\uff0c\u5219\u7f16\u8bd1\u5668\u4e0d\u4f1a\u5728\u6808\u7a7a\u95f4\u4e0a\u4e3a\u7c7b\u5bf9\u8c61\u5206\u914d\u5185\u5b58\u3002 \u56e0\u6b64\uff0c \u5c06\u6790\u6784\u51fd\u6570\u8bbe\u4e3a\u79c1\u6709\uff0c\u7c7b\u5bf9\u8c61\u5c31\u65e0\u6cd5\u5efa\u7acb\u5728\u6808\uff08\u9759\u6001\uff09\u4e0a\u4e86\uff0c\u53ea\u80fd\u5728\u5806\u4e0a\uff08\u52a8\u6001new\uff09\u5206\u914d\u7c7b\u5bf9\u8c61 \u3002]",
      "optionB": "\u5c06\u6790\u6784\u51fd\u6570\u8bbe\u4e3a\u79c1\u6709",
      "type": "1",
      "optionA": "\u5c06\u6784\u9020\u51fd\u6570\u8bbe\u4e3a\u79c1\u6709",
      "question": "\u5728C++\u4e2d\uff0c\u4e3a\u4e86\u8ba9\u67d0\u4e2a\u7c7b\u53ea\u80fd\u901a\u8fc7new\u6765\u521b\u5efa\uff08\u5373\u5982\u679c\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\uff0c\u7f16\u8bd1\u5668\u5c06\u62a5\u9519\uff09\uff0c\u5e94\u8be5\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143221",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "xycdBCD",
      "optionC": "ABabcz",
      "optionAnswer": "D",
      "answer": "\u539f\u578b\uff1achar  *strcat  ( char  *dest, const  char  *src)\n    \u7528\u6cd5\uff1a#include  <string.h>\n    \u529f\u80fd\uff1a\u8fde\u63a5\u4e24\u4e2a\u5b57\u7b26\u4e32\uff1bstrcat()\u4f1a\u5c06\u53c2\u6570src\u5b57\u7b26\u4e32 \u62f7\u8d1d\u5230 \u53c2\u6570dest\u6240\u6307\u7684\u5b57\u7b26\u4e32\u5c3e\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570dest\u8981\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u5bb9\u7eb3\u8981\u62f7\u8d1d\u7684\u5b57\u7b26\u4e32\u3002\n    \u8bf4\u660e\uff1astrcat()\u8fd4\u56dedest\u7684\u5b57\u7b26\u4e32\u8d77\u59cb\u5730\u5740\u3002",
      "optionB": "abcABz",
      "type": "1",
      "optionA": "xyabcAB",
      "question": "\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f#include<iostream>\nusing namespace std;\n \nint main()\n{\n    char p1[10] = \"abcd\", *p2, str[10] = \"xyz\";\n    \n    p2 = \"ABCD\";\n    strcpy(str + 2, strcat(p1 + 2, p2 + 1));\n    printf(\" %s\", str);\n}",
      "title": "C&C++"
    },
    {
      "answer": "#include\"iostream\"\n#include\"math.h\"\n#define MAX 100\nusing namespace std;\nint main(int argc, char* argv[])\n{\n    int N;\n    double D[MAX],sum=0,SumD[MAX];\n    cin>>N;\n    for(int i=0;i<N;i++)\n    {\n        cin>>D[i];\n        sum+=D[i];\n        SumD[i] = sum;\n    }\n    while(true)\n    {\n        int a,b;\n        cin>>a>>b;\n        if(a>N||b>N)\n            break;\n        float temp = fabs(SumD[a-1]-SumD[b-1]);\n        cout<<\"result: \"<<(temp>(sum-temp)?(sum-temp):temp)<<endl;\n    }\n    return 0;\n}",
      "ID": "55f2e51de4b0152a6114337c",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u67d0\u73af\u5f62\u516c\u8def\u4e0a\u6709N\u4e2a\u7ad9\u70b9\uff0c\u5206\u522b\u8bb0\u4e3aA1......An\uff0c\u4eceAi\u5230A\uff08 i+1\uff09\u7684\u8ddd\u79bb\u4e3aDi\u3002An\u5230A1\u7684\u8ddd\u79bb\u4e3aDo\uff0c\u5047\u8bbeDo=Dn=1\uff0c\u4fdd\u5b58\u5728\u6570\u7ec4D\uff08N\uff09\u4e2d\uff0c\u73b0\u5728\u8981\u6c42\u4f60\u4e0e\u4e00\u4e2a\u51fd\u6570\uff0c\u80fd\u591f\u9ad8\u6548\u7684\u8ba1\u7b97\u51fa\u516c\u8def\u4e0a\u4efb\u610f\u4e24\u70b9\u7684\u6700\u8fd1\u8ddd\u79bb\uff0c\u8981\u6c42\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0d\u80fd\u8d85\u8fc7O(N)\u3002\n\nconst int N=100;\ndouble D(N);\n...\nVoid preprocess(){\n//Write your code here,        (1)\n}\ndouble Distance(int i, int j){\n// Write your code bere         (2)\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143264",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "1",
      "optionC": "0.5",
      "optionAnswer": "C",
      "answer": "\u672c\u9898\u91cd\u70b9\u8003\u67fbif\u8bed\u53e5,\u53d8\u91cfx\u548cy\u5747\u4e3adouble\u7c7b\u578b,\u7531\u4e8e\u53d8\u91cfx\u8d4b\u503c\u4e3a2.0,\u56e0\u6b64\u6267\u884cif((x<5.0)&&(! x)),\u5373\u6761\u4ef6\u4e3a0,\u7ee7\u7eed\u6267\u884cif(x<10.0),\u6761\u4ef6\u4e3a1,\u5373\u6267\u884cy=1.0/x;\u3002\u4f9d\u636eprintf ()\u51fd\u6570\u8f93\u51fa\u7c7b\u578b\u4e2df\u662f\u4ee5\u5c0f\u6570\u5f62\u5f0f\u8f93\u51fa\u5355\u3001\u53cc\u7cbe\u5ea6\u5b9e\u6570\u3002\u56e0\u6b64C\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "0.25",
      "type": "1",
      "optionA": "0",
      "question": "\u6709\u4ee5\u4e0b\u7a0b\u5e8f\n\n#include <stdio.h > \nmain()\n{ \n    double x=2.0,y;\n    if(x<0.0)y=0.0;\n    else if((x<5.0)&&(! x)) y=1.0/(x+2.0);\n    if(x<10.0)y=1.0/x;\n    else if y=10.0;\n    printf(\"\uff05f\\n\",y);\n}\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143261",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u90fd\u4e0d\u5bf9",
      "optionC": "\u7f16\u8bd1\u4e0d\u901a\u8fc7",
      "optionAnswer": "B",
      "answer": "\u56e0\u4e3astrlen() = 3, strlen(b) = 3;",
      "optionB": "a<=b",
      "type": "1",
      "optionA": "a>b",
      "question": "\u6709\u5982\u4e0b\u7a0b\u5e8f\u6bb5\uff1a\n\nchar a[] = \"xyz\", b[] = {'x', 'y', 'z'};\nif (strlen(a) > strlen(b))\n    printf(\"a > b\\n\");\nelse\n    printf(\"a <= b\\n\");\n\n\u5219\u7a0b\u5e8f\u8f93\u51fa\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a6114312c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "abddcccd",
      "optionC": "abcc",
      "optionAnswer": "D",
      "answer": "\u51fd\u6570\u4e2d\u5728??return?str;\u524d\u9762\u52a0\u4e00\u53e5*it1 = '\\0'\uff1b\u8fd9\u6837\u8f93\u51fa\u5c31\u662fabdd\uff0c\u6ca1\u6709\u8fd9\u53e5\u5c31\u662fabddcccd\u3002",
      "optionB": "abdd",
      "type": "1",
      "optionA": "abdcccd",
      "question": "What is the result of the following program?\n\nchar *f(char *str , char ch)\n{\n    char *it1 = str;\n    char *it2 = str;\n    while(*it2 != '\\0')\n    {\n        while(*it2 == ch)\n        {\n            it2++;\n        }\n        *it1++ = *it2++;\n     }\n     return str;\n}\n \nint main(void)\n{\nchar *a = new char[10];\nstrcpy(a , \"abcdcccd\");\ncout<<f(a, 'c');\nreturn 0;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c75",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4f7f\u7528\u6210\u5458\u540d\u9650\u5b9a\u6216\u8d4b\u503c\u517c\u5bb9\u89c4\u5219",
      "optionC": "\u4f7f\u7528\u4f5c\u7528\u57df\u5206\u8fa8\u8fd0\u7b97\u7b26\u6216\u865a\u57fa\u7c7b",
      "optionAnswer": "B",
      "answer": "\u89e3\u51b3\u4e8c\u4e49\u6027\u95ee\u9898\u4e3b\u8981\u8981\u4e24\u79cd\u65b9\u6cd5\uff1a(1)\u8d4b\u503c\u517c\u5bb9\u89c4\u5219\uff1b(2)\u865a\u57fa\u7c7b\u3002",
      "optionB": "\u4f7f\u7528\u4f5c\u7528\u57df\u5206\u8fa8\u8fd0\u7b97\u7b26\u6216\u6210\u5458\u540d\u9650\u5b9a",
      "type": "1",
      "optionA": "\u53ea\u80fd\u4f7f\u7528\u4f5c\u7528\u57df\u5206\u8fa8\u8fd0\u7b97\u7b26",
      "question": "\u89e3\u51b3\u5b9a\u4e49\u4e8c\u4e49\u6027\u95ee\u9898\u7684\u65b9\u6cd5\u6709\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143135",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "int i=0;printf(\u201c%d%d\\n\u201d,i++,i--);",
      "optionC": "char *p=\u201dhello\u201d;char ch=*p++;",
      "optionAnswer": "C",
      "answer": "\u5e94\u8be5\u9009C\u5427\u3002\u5176\u4ed6\u90fd\u662f\u672a\u5b9a\u4e49\u884c\u4e3a\u3002\nA\uff0cD\uff1a\u8868\u8fbe\u5f0f\u7684\u5148\u540e\u987a\u5e8f\uff0c\u662f\u7531\u7f16\u8bd1\u5668\u51b3\u5b9a\u7684\uff0c\u6709\u53ef\u80fd\u4e0d\u540c\nB\uff1a\u5e38\u91cf\u5b57\u7b26\u4e32\u4e0d\u80fd\u4fee\u6539\uff0c\u6307\u9488\u6539\u4e3a\u6570\u7ec4\u53ef\u4ee5\u3002",
      "optionB": "char *p=\u201dhello\u201d;p[1]=\u2019E\u2019;",
      "type": "1",
      "optionA": "Int i=0;i=(i++);",
      "question": "\u4e0b\u5217 C \u4ee3\u7801\u4e2d\uff0c\u4e0d\u5c5e\u4e8e\u672a\u5b9a\u4e49\u884c\u4e3a\u7684\u6709___",
      "title": "C&C++"
    },
    {
      "answer": "\u5728\u5904\u7406\u6d88\u606f\u4e8b\u4ef6\u7684\u65f6\u5019\uff0c\u5bf9WM_GETTEXT\u548cEM_GETLINE\u4e8b\u4ef6\u8fdb\u884c\u8fc7\u6ee4",
      "ID": "55f2e51de4b0152a6114334b",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5bf9\u4e8eEdit\u63a7\u4ef6\uff0c\u4f60\u5982\u4f55\u6293\u9632\u6b62\u5bc6\u7801\u6846\u5185\u5bb9\u88ab\u6293\u53d6\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431f6",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "float",
      "optionC": "char",
      "optionAnswer": "D",
      "answer": "switch\u8bed\u53e5\u540e\u7684\u63a7\u5236\u8868\u8fbe\u5f0f\u53ea\u80fd\u662fshort\u3001char\u3001int\u3001long\u6574\u6570\u7c7b\u578b\u548c\u679a\u4e3e\u7c7b\u578b\uff0c\u4e0d\u80fd\u662ffloat\uff0cdouble\u548cboolean\u7c7b\u578b",
      "optionB": "long",
      "type": "1",
      "optionA": "int",
      "question": "switch(c)\u8bed\u53e5\u4e2d\uff0cc\u4e0d\u53ef\u4ee5\u662f\u4ec0\u4e48\u7c7b\u578b\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "import java.util.ArrayList;\nimport java.util.Scanner;\n \npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String[] left,right;\n        String[] line;\n        String nextLine,outString;\n        while(sc.hasNext()){\n            nextLine = sc.nextLine();\n            //\u6709\u738b\u70b8\u5c31\u738b\u70b8\u6700\u5927\n            if(nextLine.contains(\"joker JOKER\")){\n                outString = \"joker JOKER\";\n            }else{\n                //\u62c6\u5206 \u5148\u62c6\u6210\u5de6\u53f3 \u518d\u62c6\u6210\u5355\u6392\n                line = nextLine.split(\"-\");\n                left = line[0].split(\" \");\n                right = line[1].split(\" \");\n                 \n                //\u70b8\u5f39\u6700\u5927\n                if(left.length == 4 && right.length != 4){\n                    outString = line[0];\n                }else if(right.length == 4 && left.length != 4){\n                    outString = line[1];\n                }\n                // \u724c\u6570\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\u6bd4\u8f83\u6700\u5c0f\u7684\u724c\u7684\u5927\u5c0f\uff0ccompare\u65b9\u6cd5\u8fd4\u56de\u724c\u6240\u5bf9\u5e94\u7684\u503c\n                else if(right.length == left.length){              \n                    if(count(left[0])>count(right[0])){\n                        outString = line[0];\n                    }\n                    else{\n                        outString = line[1];\n                    }      \n                }else{\n                    outString = \"ERROR\";\n                }\n            }\n             \n            System.out.println(outString);\n \n        }\n    }\n \n    //2-JOKER \u6309\u5927\u5c0f\u8fd4\u56de2-16\n    private static int count(String str) {\n        return \"345678910JQKA2jokerJOKER\".indexOf(str);}}",
      "ID": "55f2e51ce4b0152a61143326",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6251\u514b\u724c\u6e38\u620f\u5927\u5bb6\u5e94\u8be5\u90fd\u6bd4\u8f83\u719f\u6089\u4e86\uff0c\u4e00\u526f\u724c\u753154\u5f20\u7ec4\u6210\uff0c\u542b3~A\uff0c2\u54044\u5f20\uff0c\u5c0f\u738b1\u5f20\uff0c\u5927\u738b1\u5f20\u3002\u724c\u9762\u4ece\u5c0f\u5230\u5927\u7528\u5982\u4e0b\u5b57\u7b26\u548c\u5b57\u7b26\u4e32\u8868\u793a\uff08\u5176\u4e2d\uff0c\u5c0f\u5199joker\u8868\u793a\u5c0f\u738b\uff0c\u5927\u5199JOKER\u8868\u793a\u5927\u738b\uff09:) \n3 4 5 6 7 8 9 10 J Q K A 2 joker JOKER \n\u8f93\u5165\u4e24\u624b\u724c\uff0c\u4e24\u624b\u724c\u4e4b\u95f4\u7528\u201c-\u201d\u8fde\u63a5\uff0c\u6bcf\u624b\u724c\u7684\u6bcf\u5f20\u724c\u4ee5\u7a7a\u683c\u5206\u9694\uff0c\u201c-\u201d\u4e24\u8fb9\u6ca1\u6709\u7a7a\u683c\uff0c\u5982\uff1a4 4 4 4-joker JOKER\n\u8bf7\u6bd4\u8f83\u4e24\u624b\u724c\u5927\u5c0f\uff0c\u8f93\u51fa\u8f83\u5927\u7684\u724c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u6bd4\u8f83\u5173\u7cfb\u5219\u8f93\u51faERROR\n\n\u57fa\u672c\u89c4\u5219\uff1a\n\uff081\uff09\u8f93\u5165\u6bcf\u624b\u724c\u53ef\u80fd\u662f\u4e2a\u5b50\uff0c\u5bf9\u5b50\uff0c\u987a\u5b50\uff08\u8fde\u7eed5\u5f20\uff09\uff0c\u4e09\u4e2a\uff0c\u70b8\u5f39\uff08\u56db\u4e2a\uff09\u548c\u5bf9\u738b\u4e2d\u7684\u4e00\u79cd\uff0c\u4e0d\u5b58\u5728\u5176\u4ed6\u60c5\u51b5\uff0c\u7531\u8f93\u5165\u4fdd\u8bc1\u4e24\u624b\u724c\u90fd\u662f\u5408\u6cd5\u7684\uff0c\u987a\u5b50\u5df2\u7ecf\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff1b\n\uff082\uff09\u9664\u4e86\u70b8\u5f39\u548c\u5bf9\u738b\u53ef\u4ee5\u548c\u6240\u6709\u724c\u6bd4\u8f83\u4e4b\u5916\uff0c\u5176\u4ed6\u7c7b\u578b\u7684\u724c\u53ea\u80fd\u8ddf\u76f8\u540c\u7c7b\u578b\u7684\u5b58\u5728\u6bd4\u8f83\u5173\u7cfb\uff08\u5982\uff0c\u5bf9\u5b50\u8ddf\u5bf9\u5b50\u6bd4\u8f83\uff0c\u4e09\u4e2a\u8ddf\u4e09\u4e2a\u6bd4\u8f83\uff09\uff0c\u4e0d\u8003\u8651\u62c6\u724c\u60c5\u51b5\uff08\u5982\uff1a\u5c06\u5bf9\u5b50\u62c6\u5206\u6210\u4e2a\u5b50\uff09\n\uff083\uff09\u5927\u5c0f\u89c4\u5219\u8ddf\u5927\u5bb6\u5e73\u65f6\u4e86\u89e3\u7684\u5e38\u89c1\u89c4\u5219\u76f8\u540c\uff0c\u4e2a\u5b50\uff0c\u5bf9\u5b50\uff0c\u4e09\u4e2a\u6bd4\u8f83\u724c\u9762\u5927\u5c0f\uff1b\u987a\u5b50\u6bd4\u8f83\u6700\u5c0f\u724c\u5927\u5c0f\uff1b\u70b8\u5f39\u5927\u4e8e\u524d\u9762\u6240\u6709\u7684\u724c\uff0c\u70b8\u5f39\u4e4b\u95f4\u6bd4\u8f83\u724c\u9762\u5927\u5c0f\uff1b\u5bf9\u738b\u662f\u6700\u5927\u7684\u724c\uff1b\n\uff084\uff09\u8f93\u5165\u7684\u4e24\u624b\u724c\u4e0d\u4f1a\u51fa\u73b0\u76f8\u7b49\u7684\u60c5\u51b5\u3002\n\n\u7b54\u6848\u63d0\u793a\uff1a\n\uff081\uff09\u9664\u4e86\u70b8\u5f39\u548c\u5bf9\u738b\u4e4b\u5916\uff0c\u5176\u4ed6\u5fc5\u987b\u540c\u7c7b\u578b\u6bd4\u8f83\u3002\n\uff082\uff09\u8f93\u5165\u5df2\u7ecf\u4fdd\u8bc1\u5408\u6cd5\u6027\uff0c\u4e0d\u7528\u68c0\u67e5\u8f93\u5165\u662f\u5426\u662f\u5408\u6cd5\u7684\u724c\u3002\n\uff083\uff09\u8f93\u5165\u7684\u987a\u5b50\u5df2\u7ecf\u7ecf\u8fc7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u56e0\u6b64\u4e0d\u7528\u518d\u6392\u5e8f\u4e86.",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143214",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u548c\u5177\u4f53\u673a\u5668\u914d\u7f6e\u76f8\u5173",
      "optionC": "\u4e00\u6837",
      "optionAnswer": "B",
      "answer": "_beginthreadex()\u6bd4\u8f83\u4e8e?CreateThread()\u6709\u66f4\u9ad8\u7684\u7ebf\u7a0b\u5b89\u5168\u6027\uff0c\u4e0d\u4f1a\u9020\u6210\u591a\u4e2a\u7ebf\u7a0b\u5171\u7528\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u7684\u60c5\u51b5",
      "optionB": "_beginthreadex",
      "type": "1",
      "optionA": "CreateThread",
      "question": "\u5982\u679c\u8981\u5b9e\u73b0\u4e00\u4e2a\u591a\u7ebf\u7a0b(\u975eMFC)\u7a0b\u5e8f, \u9009\u62e9\u591a\u7ebf\u7a0bCRT, \u521b\u5efa\u7ebf\u7a0b\u7684\u65f6\u5019\u5e94\u8be5\u7528CreateThread\u8fd8\u662f_beginthreadex()\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u7b54\uff1atypedef char *String_t \u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\u522b\u540d\uff0c\u6709\u7c7b\u578b\u68c0\u67e5\u3002\u800c#define String_d char * \u53ea\u662f\u505a\u4e86\n\u4e2a\u7b80\u5355\u7684\u66ff\u6362\uff0c\u65e0\u7c7b\u578b\u68c0\u67e5\uff0c\u524d\u8005\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u5904\u7406\uff0c\u540e\u8005\u5728\u9884\u7f16\u8bd1\u7684\u65f6\u5019\u5904\u7406\u3002\n\u540c\u65f6\u5b9a\u4e49\u591a\u4e2a\u53d8\u91cf\u7684\u65f6\u5019\u6709\u533a\u522b\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u8fd9\u79cd\u4f7f\u7528\u65b9\u5f0fString_t a,b; String_d c,d; a,b ,c \u90fd\u662f\nchar*\u7c7b\u578b\uff0c\u800cd \u4e3achar \u7c7b\u578b\n\u7531\u4e8etypedef \u8fd8\u8981\u505a\u7c7b\u578b\u68c0\u67e5\u3002\u3002#define \u6ca1\u6709\u3002\u3002\u6240\u4ee5typedef \u6bd4#define \u5b89\u5168\u3002\u3002",
      "ID": "55f2e51ee4b0152a611433e0",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "typedef char *String_t; \u548c#define String_d char * \u8fd9\u4e24\u53e5\u5728\u4f7f\u7528\u4e0a\u6709\u4ec0\u4e48\u533a\u522b\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c1a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u53e6\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61",
      "optionC": "\u81ea\u8eab\u7c7b\u5bf9\u8c61\u7684\u5f15\u7528",
      "optionAnswer": "B",
      "answer": "\u7c7b\u7684\u5b9a\u4e49\uff0c\u5982\u679c\u6709\u81ea\u8eab\u7c7b\u5bf9\u8c61\uff0c\u4f7f\u5f97\u5faa\u73af\u5b9a\u4e49\uff0cB\u9879\u9519\u8bef\u3002\u5728\u7c7b\u4e2d\u5177\u6709\u81ea\u8eab\u7c7b\u7684\u6307\u9488\uff0c\u53ef\n\u4ee5\u5b9e\u73b0\u94fe\u8868\u7684\u64cd\u4f5c\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u7c7b\u4e2d\u53ef\u4ee5\u6709\u53e6\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\uff0c\u5373\u6210\u5458\u5bf9\u8c61\u3002\u6240\n\u4ee5\u9009\u62e9B\u9009\u9879\u3002",
      "optionB": "\u81ea\u8eab\u7c7b\u5bf9\u8c61",
      "type": "1",
      "optionA": "\u81ea\u8eab\u7c7b\u5bf9\u8c61\u7684\u6307\u9488",
      "question": "\u4e0b\u5217\u4e0d\u80fd\u4f5c\u4e3a\u7c7b\u7684\u6210\u5458\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143269",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "6385",
      "optionC": "6982",
      "optionAnswer": "D",
      "answer": "\u672c\u9898\u4e2d\u9996\u5148\u662f\u5c06\u4e8c\u7ef4\u5b57\u7b26\u6570\u7ec4c\u8d4b\u503c\u6307\u9488\u6570\u7ec4p,\u7136\u540e\u904d\u5386p\u627e\u5230\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5076\u6570\u4f4d\u7f6e\u7684\u5b57\u7b26\u5e76\u7ec4\u6210\u4e00\u4e2a\u6570\u503c\u8f93\u51fa,\u6839\u636e\u4ee3\u7801\u6267\u884c\u5373\u53ef\u5f97\u5230\u7ed3\u679c\u4e3a6385",
      "optionB": "9824",
      "type": "1",
      "optionA": "9284",
      "question": "\u6709\u4ee5\u4e0b\u7a0b\u5e8f\n\n#include<iostream>\nusing namespace std;\nint main ( )\n{\n    char c [2][5] = { \"6938\" , \"8254\" }, * p [2] ;\n    int s=0;\n    for (int  i =0 ; i < 2 ; i ++ )\n        p [i] = c [i] ;\n    for (int i = 0,j=0; i <4; i++,j+=2)\n    {   if (j>3)\n        {\n            j=0;\n        }\n        s = 10 * s + (p [i/2] [j]-'0');\n    }\n    cout<<s<<endl;\n    return 0;\n}\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c08",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4fdd\u62a4\u6210\u5458\u6216\u79c1\u6709\u6210\u5458",
      "optionC": "\u4fdd\u62a4\u6210\u5458",
      "optionAnswer": "A",
      "answer": "\u5728\u6d3e\u751f\u7c7b\u4e2d\u57fa\u7c7b\u7684\u4fdd\u62a4\u6216\u8005\u57fa\u7c7b\u516c\u6709\u90fd\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\uff0c\u57fa\u7c7b\u7684\u79c1\u6709\u6210\u5458\u53ea\u80fd\u662f\u57fa\u7c7b\n\u7684\u6210\u5458\u51fd\u6570\u6765\u8bbf\u95ee\u3002\u6240\u4ee5\u9009\u62e9A\u9879\u3002",
      "optionB": "\u516c\u6709\u6210\u5458",
      "type": "1",
      "optionA": "\u79c1\u6709\u6210\u5458",
      "question": "\u5728\u516c\u6709\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u7ee7\u627f\u6765\u7684\u67d0\u4e2a\u6210\u5458\uff0c\u5219\u8be5\u6210\u5458\u4e00\u5b9a\u662f\u57fa\u7c7b\u4e2d\n\u7684\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7fa",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "vector;",
      "optionC": "list;",
      "optionAnswer": "D",
      "answer": "vector\u662fSTL\u4e2d\u6700\u5e38\u89c1\u7684\u5bb9\u5668\uff0c\u5b83\u662f\u4e00\u79cd\u987a\u5e8f\u5bb9\u5668\uff0c\u652f\u6301\u968f\u673a\u8bbf\u95ee\u3002vector\u662f\u4e00\u5757\u8fde\u7eed\u5206\u914d\u7684\u5185\u5b58\uff0c\u4ece\u6570\u636e\u5b89\u6392\u7684\u89d2\u5ea6\u6765\u8bb2\uff0c\u548c\u6570\u7ec4\u6781\u5176\u76f8\u4f3c\uff0c\u4e0d\u540c\u7684\u5730\u65b9\u5c31\u662f\uff1a\u6570\u7ec4\u662f\u9759\u6001\u5206\u914d\u7a7a\u95f4\uff0c\u4e00\u65e6\u5206\u914d\u4e86\u7a7a\u95f4\u7684\u5927\u5c0f\uff0c\u5c31\u4e0d\u53ef\u518d\u6539\u53d8\u4e86\uff1b\u800cvector\u662f\u52a8\u6001\u5206\u914d\u7a7a\u95f4\uff0c\u968f\u7740\u5143\u7d20\u7684\u4e0d\u65ad\u63d2\u5165\uff0c\u5b83\u4f1a\u6309\u7167\u81ea\u8eab\u7684\u4e00\u5957\u673a\u5236\u4e0d\u65ad\u6269\u5145\u81ea\u8eab\u7684\u5bb9\u91cf\u3002vector\u7684\u6269\u5145\u673a\u5236\uff1a\u6309\u7167\u5bb9\u5668\u73b0\u5728\u5bb9\u91cf\u7684\u4e00\u500d\u8fdb\u884c\u589e\u957f\u3002vector\u5bb9\u5668\u5206\u914d\u7684\u662f\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6bcf\u6b21\u5bb9\u5668\u7684\u589e\u957f\uff0c\u5e76\u4e0d\u662f\u5728\u539f\u6709\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\u540e\u518d\u8fdb\u884c\u7b80\u5355\u7684\u53e0\u52a0\uff0c\u800c\u662f\u91cd\u65b0\u7533\u8bf7\u4e00\u5757\u66f4\u5927\u7684\u65b0\u5185\u5b58\uff0c\u5e76\u628a\u73b0\u6709\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u9010\u4e2a\u590d\u5236\u8fc7\u53bb\uff0c\u7136\u540e\u9500\u6bc1\u65e7\u7684\u5185\u5b58\u3002\u8fd9\u65f6\u539f\u6709\u6307\u5411\u65e7\u5185\u5b58\u7a7a\u95f4\u7684\u8fed\u4ee3\u5668\u5df2\u7ecf\u5931\u6548\uff0c\u6240\u4ee5\u5f53\u64cd\u4f5c\u5bb9\u5668\u65f6\uff0c\u8fed\u4ee3\u5668\u8981\u53ca\u65f6\u66f4\u65b0\u3002",
      "optionB": "set;",
      "type": "1",
      "optionA": "map\uff1b",
      "question": "STL\u4e2d\u7684\u54ea\u79cd\u7ed3\u6784\u5728\u589e\u52a0\u6210\u5458\u65f6\u53ef\u80fd\u4f1a\u5f15\u8d77\u539f\u6709\u6210\u5458\u7684\u5b58\u50a8\u4f4d\u7f6e\u53d1\u751f\uff1a",
      "title": "C&C++"
    },
    {
      "answer": "\u4f60\u7684\u7b2c\u4e00\u611f\u89c9\u6216\u8bb8\u662f\uff0c\u516c\u53f8\u5e94\u8be5\u96c7\u7528 100 \u591a\u4eba\uff0c\u6216\u8005 200 \u591a\u4eba\u5427\u3002\u7b54\u6848\u6216\u8bb8\u4f1a\u8ba9\u4f60\u5927\u5403\u4e00\u60ca\uff1a\u516c\u53f8\u5e94\u8be5\u96c7\u7528 365 \u4e2a\u4eba\u3002\u6ce8\u610f\uff0c\u96c7\u7528 365 \u4e2a\u4eba\u5e76\u4e0d\u610f\u5473\u7740\u5168\u4f53\u5458\u5de5\u5168\u5e74\u7684\u603b\u5de5\u4f5c\u65f6\u95f4\u4e3a 0 \uff0c\u56e0\u4e3a 365 \u4e2a\u4eba\u7684\u751f\u65e5\u90fd\u662f\u968f\u673a\u7684\uff0c\u6070\u597d\u6bcf\u5929\u90fd\u6709\u4e00\u4e2a\u4eba\u8fc7\u751f\u65e5\u7684\u6982\u7387\u6781\u5c0f\u6781\u5c0f\u3002\u4e0b\u9762\u6211\u4eec\u5c31\u6765\u8bc1\u660e\uff0c\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u4f18\u89e3\u5c31\u662f 365 \u4eba\u3002\n\u7531\u4e8e\u671f\u671b\u503c\u6ee1\u8db3\u7ebf\u6027\u5173\u7cfb\uff08\u5373\u5bf9\u4e8e\u968f\u673a\u53d8\u91cf X \u548c Y \u6709 E(X) + E(Y) = E(X+Y) \uff09\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u8ba9\u6bcf\u4e00\u5929\u5458\u5de5\u603b\u5de5\u4f5c\u65f6\u95f4\u7684\u671f\u671b\u503c\u6700\u5927\u5c31\u53ef\u4ee5\u4e86\u3002\u5047\u8bbe\u516c\u53f8\u91cc\u6709 n \u4e2a\u4eba\uff0c\u90a3\u4e48\u5728\u7279\u5b9a\u7684\u4e00\u5929\u91cc\uff0c\u6ca1\u6709\u4eba\u8fc7\u751f\u65e5\u7684\u6982\u7387\u662f (364/365)n \u3002\u56e0\u6b64\uff0c\u8fd9\u4e00\u5929\u7684\u671f\u671b\u603b\u5de5\u4f5c\u65f6\u95f4\u5c31\u662f n \u00b7 (364/365)n \u4e2a\u5de5\u4f5c\u65e5\u3002\u4e3a\u4e86\u8003\u5bdf\u51fd\u6570 n \u00b7 (364/365)n \u7684\u589e\u51cf\u6027\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b ((n+1) \u00b7 (364/365)n+1) / (n \u00b7 (364/365)n) \u7684\u503c\uff0c\u5b83\u7b49\u4e8e (364 \u00b7 (n+1)) / (365 \u00b7 n) \u3002\u5982\u679c\u5206\u5b50\u6bd4\u5206\u6bcd\u5c0f\uff0c\u89e3\u5f97 n > 364 \u3002\u53ef\u89c1\uff0c\u8981\u5230 n = 365 \u4ee5\u540e\uff0c\u51fd\u6570\u624d\u662f\u9012\u51cf\u7684\u3002\n\u7b54\u6848\uff1a365",
      "ID": "55f2e51de4b0152a6114336c",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u67d0\u516c\u53f8\u6709\u8fd9\u4e48\u4e00\u4e2a\u89c4\u5b9a\uff1a\u53ea\u8981\u6709\u4e00\u4e2a\u5458\u5de5\u8fc7\u751f\u65e5\uff0c\u5f53\u5929\u6240\u6709\u5458\u5de5\u5168\u90e8\u653e\u5047\u4e00\u5929\u3002\u4f46\u5728\u5176\u4f59\u65f6\u5019\uff0c\u6240\u6709\u5458\u5de5\u90fd\u6ca1\u6709\u5047\u671f\uff0c\u5fc5\u987b\u6b63\u5e38\u4e0a\u73ed\u3002\u5047\u8bbe\u4e00\u5e74\u6709365\u5929\uff0c\u6bcf\u4e2a\u5458\u5de5\u7684\u751f\u65e5\u90fd\u6982\u7387\u5747\u7b49\u5730\u5206\u5e03\u5728\u8fd9365\u5929\u91cc\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u516c\u53f8\u9700\u8981\u96c7\u7528\u591a\u5c11\u5458\u5de5\uff0c\u624d\u80fd\u8ba9\u516c\u53f8\u4e00\u5e74\u5185\u6240\u6709\u5458\u5de5\u7684\u603b\u5de5\u4f5c\u65f6\u95f4\u671f\u671b\u503c\u6700\u5927\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114322f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51fa\u9519",
      "optionC": "xy123ABC",
      "optionAnswer": "D",
      "answer": "strcat(p1,p2)\u51fa\u9519\uff0c\u56e0\u4e3ap1\u53ea\u88ab\u5206\u914d\u4e864\u4e2a\u5b57\u8282\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u5c06p2\u62fc\u63a5\u5728p1\u540e\u9762\u4f1a\u5f15\u8d77\u5185\u5b58\u6ea2\u51fa\u3002",
      "optionB": "z123ABC",
      "type": "1",
      "optionA": "xyz123ABC",
      "question": "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\n\nchar *p1= \u201c123\u201d, *p2 = \u201cABC\u201d, str\uff3b50\uff3d= \"xyz\";\nstrcpy\uff08str+2,strcat\uff08p1,p2\uff09\uff09;\ncout << str;",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de81a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "Java\u4f7f\u7528 finalize() \u65b9\u6cd5\u5728\u5783\u573e\u6536\u96c6\u5668\u8c61\u4ece\u5185\u5b58\u4e2d\u6e05\u9664\u51fa\u53bb\u4e4b\u524d\u505a\u5fc5\u8981\u7684\u6e05\u7406\u5de5\u4f5c",
      "optionC": "finally\u5728\u5f02\u5e38\u5904\u7406\u65f6\u63d0\u4f9b finally \u5757\u6765\u6267\u884c\u4efb\u4f55\u6e05\u9664\u64cd\u4f5c\u3002",
      "optionAnswer": "B",
      "answer": "final\u4fee\u9970\u7684\u65b9\u6cd5\u4e0d\u80fd\u88ab\u8986\u76d6\nfinal\u4fee\u9970\u7684\u5b57\u6bb5\u4e3a\u5e38\u91cf\nfinal\u4fee\u9970\u7684\u7c7b\u4e0d\u80fd\u88ab\u7ee7\u627f",
      "optionB": "\u5982\u679c\u4e00\u4e2a\u65b9\u6cd5\u88ab\u58f0\u660e\u4e3afinal\uff0c\u53ef\u4ee5\u88ab\u8986\u76d6",
      "type": "1",
      "optionA": "\u5982\u679c\u4e00\u4e2a\u7c7b\u88ab\u58f0\u660e\u4e3afinal\uff0c\u610f\u5473\u7740\u5b83\u4e0d\u80fd\u518d\u6d3e\u751f\u51fa\u65b0\u7684\u5b50\u7c7b\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u7236\u7c7b\u88ab\u7ee7\u627f",
      "question": "\u4e0b\u9762\u6709\u5173final, finally, finalize\u7684\u533a\u522b\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de819",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e00\u822c\u6765\u8bb2\u5728 32 \u4f4d\u7cfb\u7edf\u4e0b\uff0c\u5806\u5185\u5b58\u53ef\u4ee5\u8fbe\u52304G\u7684\u7a7a\u95f4\uff0c\u4f46\u662f\u5bf9\u4e8e\u6808\u6765\u8bb2\uff0c\u4e00\u822c\u90fd\u662f\u6709\u4e00\u5b9a\u7684\u7a7a\u95f4\u5927\u5c0f\u7684\u3002",
      "optionC": "\u5bf9\u4e8e\u5806\u6765\u8bb2\uff0c\u9891\u7e41\u7684 new/delete \u52bf\u5fc5\u4f1a\u9020\u6210\u5185\u5b58\u7a7a\u95f4\u7684\u4e0d\u8fde\u7eed\uff0c\u4ece\u800c\u9020\u6210\u5927\u91cf\u7684\u788e\u7247\uff0c\u4f7f\u7a0b\u5e8f\u6548\u7387\u964d\u4f4e\u3002\u5bf9\u4e8e\u6808\u6765\u8bb2\uff0c\u5219\u4e0d\u4f1a\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898",
      "optionAnswer": "B",
      "answer": "\u5806\u7684\u751f\u957f\u65b9\u5411\uff0c\u662f\u5411\u4e0a\u7684\uff0c\u4e5f\u5c31\u662f\u5185\u5b58\u5730\u5740\u589e\u52a0\u7684\u65b9\u5411\uff1b\u6808\u7684\u751f\u957f\u65b9\u5411\u662f\u5411\u4e0b\u7684\uff0c\u4e5f\u5c31\u662f\u5185\u5b58\u5730\u5740\u51cf\u5c0f\u7684\u65b9\u5411",
      "optionB": "\u5bf9\u4e8e\u5806\u6765\u8bb2\uff0c\u751f\u957f\u65b9\u5411\u662f\u5411\u4e0a\u7684\uff0c\u4e5f\u5c31\u662f\u5411\u7740\u5185\u5b58\u5730\u5740\u589e\u52a0\u7684\u65b9\u5411\uff1b\u5bf9\u4e8e\u6808\u6765\u8bb2\uff0c\u5b83\u7684\u751f\u957f\u65b9\u5411\u662f\u5411\u4e0b\u7684\uff0c\u662f\u5411\u7740\u5185\u5b58\u5730\u5740\u51cf\u5c0f\u7684\u65b9\u5411\u589e\u957f\u3002",
      "type": "1",
      "optionA": "\u5bf9\u4e8e\u6808\u6765\u8bb2\uff0c\u662f\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u7ba1\u7406\uff0c\u65e0\u9700\u6211\u4eec\u624b\u5de5\u63a7\u5236\uff1b\u5bf9\u4e8e\u5806\u6765\u8bf4\uff0c\u91ca\u653e\u5de5\u4f5c\u7531\u7a0b\u5e8f\u5458\u63a7\u5236",
      "question": "\u4e0b\u9762\u6709\u5173c++\u5185\u5b58\u5206\u914d\u5806\u6808\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u9898\u76ee\u4e0d\u96be\uff0c\u6ce8\u610f\u662f\u6bcf\u4e2a\u53f0\u9636\u6700\u591a\u80fd\u8df3\u9636\uff0c\u4e5f\u53ef\u4ee5\u5c11\u4e8e\uff0c\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cfmax\u7528\u4e8e\u5b58\u50a8\u8fd8\u80fd\u8df3\u591a\u5c11\u53f0\u9636\uff0c\u7136\u540e\u904d\u5386\u4e00\u904d\u6570\u7ec4\uff0c\u4e5f\u5c31\u662f\u4f9d\u6b21\u6a21\u62df\u8df3\u4e00\u4e2a\u53f0\u9636\uff0c\u8df3\u4e00\u6b21max-1\uff0c\u5982\u679c\u5f53\u524d\u53f0\u9636\u6240\u5141\u8bb8\u7684\u6700\u5927\u6b65\u6570\u5927\u4e8emax\uff0c\u5c31\u8ba9max\u7b49\u4e8e\u8be5\u6570\u3002\u5982\u679cmax\u7b49\u4e8e0\u8fd4\u56defalse\n\ndef canJump(self, nums):\n        maxStep=nums[0]\n        for i in range(1,len(nums)):\n            if maxStep==0:\n                return False\n            maxStep-=1\n            if maxStep<nums[i]:\n                maxStep=nums[i]\n        return True",
      "ID": "55f2e51de4b0152a6114335a",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6709\u4e00\u6392\u53f0\u9636\uff0c\u6bcf\u4e2a\u53f0\u9636\u4e0a\u6709\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u4ee3\u8868\u5728\u8be5\u53f0\u9636\u4e0a\u65f6\u80fd\u6700\u591a\u5411\u524d\u8df3\u51e0\u4e2a\u53f0\u9636\u3002\u4ece\u7b2c0\u4e2a\u53f0\u9636\u5f00\u59cb\u8df3\uff0c\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u5224\u65ad\u662f\u5426\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u53f0\u9636\u3002\n\u4f8b\u5982\uff1a 4 2 2 1 0 2 \u8fd4\u56de false\n            2 1 3 1 1 0 \u8fd4\u56de true\nbool jump(int array[], int size)\n{                 \n}",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de81d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "k \uff1d i - s",
      "optionC": "\ufe61k \uff1d i - s",
      "optionAnswer": "A",
      "answer": "fun\u51fd\u6570\u7684\u529f\u80fd\u662f\u6c42\u6570\u7ec4\u4e2d\u6700\u5927\u503c\u6240\u5728\u5143\u7d20\u7684\u4e0b\u6807\u3002\u901a\u8fc7for\u5faa\u73af\u8bed\u53e5,\u6bcf\u6b21\u5c06\u6700\u5927\u7684\u6570\u7ed9\ufe61k ,\u5373\ufe61k \uff1d i\u3002\u56e0\u6b64A\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "k \uff1d i",
      "type": "1",
      "optionA": "\ufe61k \uff1d i",
      "question": "\u4ee5\u4e0b\u7a0b\u5e8f\u8c03\u7528fun\u51fd\u6570\u6c42\u6570\u7ec4\u4e2d\u6700\u5927\u503c\u6240\u5728\u5143\u7d20\u7684\u4e0b\u6807\u3002\n#include <stdio.h>\nvoid fun ( int \ufe61s,int n,int \ufe61k )\n{\n    int i;\n    for ( i \uff1d 0 ,\ufe61k \uff1d i;i < n;i + + )\n    if( s [i] > s [\ufe61k] )   \n        ________ ;\n}\nmain ( )\n{\n    int a [5] \uff1d \uff5b1,6,2,8,0\uff5d , k;\n    fun ( a,5,&k );\n    printf (\"%d %d\uff3cn\",k,a [k] );\n}\n\u5728\u6a2a\u7ebf\u5904\u5e94\u586b\u5165\u7684\u5185\u5bb9\u662f?",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de816",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "4",
      "optionC": "3",
      "optionAnswer": "D",
      "answer": "&a\u662f\u6570\u7ec4\u6307\u9488\uff0c\u5176\u7c7b\u578b\u4e3aint(*)[4]; \n\u800c\u6307\u9488\u52a01\u8981\u6839\u636e\u6307\u9488\u7c7b\u578b\u52a0\u4e0a\u4e00\u5b9a\u7684\u503c\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488+1\u4e4b\u540e\u589e\u52a0\u7684\u5927\u5c0f\u4e0d\u540c\uff0ca\u662f\u957f\u5ea6\u4e3a4\u7684int\u6570\u7ec4\u6307\u9488\uff0c\u6240\u4ee5\u8981\u52a05*sizeof(int)\uff0c\u6240\u4ee5ptr\u5b9e\u9645\u662fa[4],\u4f46\u662fptr\u4e0e\uff08&a+1\uff09\u7c7b\u578b\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u8fd9\u70b9\u975e\u5e38\u91cd\u8981\uff0c\u6240\u4ee5ptr-1\u53ea\u4f1a\u51cf\u53bbsizeof(int*),a\uff0c&a\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u4f46\u610f\u601d\u5c31\u4e0d\u4e00\u6837\u4e86\uff0ca\u662f\u6570\u7ec4\u9996\u5730\u5740\uff0c\u4e5f\u5c31\u662fa[0]\u7684\u5730\u5740\uff0c&a\u662f\u5bf9\u8c61\uff08\u6570\u7ec4\uff09\u9996\u5730\u5740\uff0ca+1\u662f\u6570\u7ec4\u4e0b\u4e00\u5143\u7d20\u7684\u5730\u5740\uff0c\u5373a[1],&a+1\u662f\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5373a[4]",
      "optionB": "2",
      "type": "1",
      "optionA": "1",
      "question": "\u4e0b\u9762\u4ee3\u7801\u4f1a\u8f93\u51fa\u4ec0\u4e48\uff08\uff09int main(int argc, char **argv)\n{\n    int a[4] = {1, 2, 3, 4};\n    int *ptr = (int *)(&a + 1);\n    printf(\"%d\", *(ptr - 1));\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114325f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "x\u6570\u7ec4\u4e0ey\u6570\u7ec4\u7b49\u4ef7",
      "optionC": "x\u6570\u7ec4\u7684\u957f\u5ea6\u5c0f\u4e8ey\u6570\u7ec4\u7684\u957f\u5ea6",
      "optionAnswer": "A",
      "answer": "\u5bf9\u4e8e static char x [ ]= \"abcde\" ;\u800c\u8a00\uff0c\u957f\u5ea6\u4e3a6\uff0c\u56e0\u4e3a \"abcde\" \u662f\u5b57\u7b26\u4e32\uff0c\u672b\u5c3e\u9ed8\u8ba4\u6709'\\0'\u7ed3\u675f\u7b26\uff0c\u957f\u5ea6\u4e3a6\u3002\n\u5bf9\u4e8e static char y [ ]={ 'a' , 'b' , 'c' , 'd' , 'e' };\u800c\u8a00\uff0c\u662f\u5c06\u6bcf\u4e2a\u5b57\u7b26\u9010\u4e00\u8d4b\u503c\u5230y[]\u4e2d\uff0c\u6240\u4ee5\u957f\u5ea6\u4e3a5\u3002\n\u6240\u4ee5\uff0c\u7b54\u6848\u4e3aA    x\u6570\u7ec4\u7684\u957f\u5ea6\u5927\u4e8ey\u6570\u7ec4\u7684\u957f\u5ea6",
      "optionB": "x\u6570\u7ec4\u548cy\u6570\u7ec4\u7684\u957f\u5ea6\u76f8\u540c",
      "type": "1",
      "optionA": "x\u6570\u7ec4\u7684\u957f\u5ea6\u5927\u4e8ey\u6570\u7ec4\u7684\u957f\u5ea6",
      "question": "\u6709\u5b9a\u4e49\u5982\u4e0b\uff1a\nstatic char x[ ]= \"abcde\";\nstatic char y[ ]={ 'a', 'b', 'c', 'd', 'e'};\n\u5219\u6b63\u786e\u7684\u8bf4\u6cd5\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431f0",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "16 20",
      "optionC": "16 24",
      "optionAnswer": "C",
      "answer": "\u6839\u636e\u4ee5\u4e0b\u6761\u4ef6\u8fdb\u884c\u8ba1\u7b97\uff1a\n1\u3001  \u7ed3\u6784\u4f53\u7684\u5927\u5c0f\u7b49\u4e8e\u7ed3\u6784\u4f53\u5185\u6700\u5927\u6210\u5458\u5927\u5c0f\u7684\u6574\u6570\u500d\n2\u3001  \u7ed3\u6784\u4f53\u5185\u7684\u6210\u5458\u7684\u9996\u5730\u5740\u76f8\u5bf9\u4e8e\u7ed3\u6784\u4f53\u9996\u5730\u5740\u7684\u504f\u79fb\u91cf\u662f\u5176\u7c7b\u578b\u5927\u5c0f\u7684\u6574\u6570\u500d\uff0c\u6bd4\u5982\u8bf4double\u578b\u6210\u5458\u76f8\u5bf9\u4e8e\u7ed3\u6784\u4f53\u7684\u9996\u5730\u5740\u7684\u5730\u5740\u504f\u79fb\u91cf\u5e94\u8be5\u662f8\u7684\u500d\u6570\u3002\n3\u3001  \u4e3a\u4e86\u6ee1\u8db3\u89c4\u52191\u548c2\u7f16\u8bd1\u5668\u4f1a\u5728\u7ed3\u6784\u4f53\u6210\u5458\u4e4b\u540e\u8fdb\u884c\u5b57\u8282\u586b\u5145\uff01\n\nA\u4e2d\uff0ca\u53604\u4e2a\u5b57\u8282\uff0cb\u672c\u5e94\u53602\u4e2a\u5b57\u8282\uff0c\u4f46\u7531\u4e8ec\u53604\u4e2a\u5b57\u8282\uff0c\u4e3a\u4e86\u6ee1\u8db3\u6761\u4ef62\uff0cb\u591a\u5360\u75282\u4e2a\u5b57\u8282\uff0c\u4e3a\u4e86\u6ee1\u8db3\u6761\u4ef61\uff0cd\u5360\u75284\u4e2a\u5b57\u8282\uff0c\u4e00\u517116\u4e2a\u5b57\u8282\u3002\nB\u4e2d\uff0ca\u53608\u4e2a\u5b57\u8282\uff0cb\u53602\u4e2a\u5b57\u8282\uff0c\u4f46\u7531\u4e8ec\u53604\u4e2a\u5b57\u8282\uff0c\u4e3a\u4e86\u6ee1\u8db3\u6761\u4ef62\uff0cb\u591a\u5360\u75282\u4e2a\u5b57\u8282\uff0c\n\u5373abc\u5171\u5360\u75288+4+4=16\u4e2a\u5b57\u8282\uff0c\n\u4e3a\u4e86\u6ee1\u8db3\u6761\u4ef61\uff0cd\u5c06\u5360\u75288\u4e2a\u5b57\u8282\uff0c\u4e00\u517124\u4e2a\u5b57\u8282\u3002\n",
      "optionB": "12 12",
      "type": "1",
      "optionA": "12 16",
      "question": "class A\n{\n        int a;\n        short b;\n        int c;\n        char d;\n};\nclass B\n{\n        double a;\n        short b;\n        int c;\n        char d;\n};\n\n\u572832\u4f4d\u673a\u5668\u4e0a\u7528gcc\u7f16\u8bd1\u4ee5\u4e0a\u4ee3\u7801\uff0c\u6c42sizeof(A),sizeof(B)\u5206\u522b\u662f\u591a\u5c11\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143248",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "hite",
      "optionC": "white",
      "optionAnswer": "A",
      "answer": "\u56e0\u4e3a++p\u540e\uff0cp\u6307\u5411violet\u4e2d\u7684i\uff0c**p\u662f\u6307\u5411\u6570\u7ec4\u4e2d\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c**p+1\u540e\u6307\u5411\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08pink\uff09\u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u3002\u6253\u5370\u51fa\u6765\u5c31\u662fink",
      "optionB": "pink",
      "type": "1",
      "optionA": "ink",
      "question": "\u4e0b\u8ff0\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f______\u3002\n\n#include<stdio.h>\n \nint main()\n{\n    static char *s[] = {\"black\", \"white\", \"pink\", \"violet\"};\n    char **ptr[] = {s+3, s+2, s+1, s}, ***p;\n    p = ptr;\n    ++p;\n    printf(\"%s\", **p+1);\n    return 0;\n}",
      "title": "C&C++"
    },
    {
      "answer": "\u89e3\u9898\u601d\u8def\uff1a\n1\u3001\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u3002\u5b9a\u4e49\u4e00\u4e2asequenceGenerator\u5355\u4f8b\u7c7b\uff0c \u58f0\u660e\u4e00\u4e2agetSequence\u65b9\u6cd5\uff0c\u5c06sequence\u5e8f\u53f7\u4f9d\u6b21\u76f8\u52a0 \u3002\n\n2\u3001\u4ea7\u751f ID \u7684\u89c4\u5219\u662f\uff1a\u5c06 ID\u8bbe\u7f6e\u4e3a\u5b57\u7b26\u4e32\u3002ID =  \u5f53\u524d\u65e5\u671f+\u6574\u578bsequence\u3002\n\n\u4f2a\u4ee3\u7801\uff1a\n\npublic class SequenceGenerator {\n\nprivate SequenceGenerator generatorInstance = null;\n\nprivate long sequence = 0;\n\nprivate SequenceGenerator (){}\n\npublic static SequenceGenerator getInstance(){\n\n   if(generatorInstance == null){\n      synchoronized(this){\n       generatorInstance  = new SequenceGenerator ();\n   }\n   return generatorInstance  ;\n }\n}\n\npublic synchronized int getSequence(){\n      if(++sequence\u6ca1\u6709\u8d85\u8fc7long\u578b\u7684\u6700\u5927\u503c\uff09return sequence\uff1b\n    \n}\n}",
      "ID": "55f2e51de4b0152a61143356",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4e00\u822c\u5728\u5927\u578b\u7cfb\u7edf\u4e2d\uff0c\u90fd\u4f1a\u4e3a\u6bcf\u4e2a\u8d44\u6e90\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684ID\uff0c\u5728\u5927\u578b\u7cfb\u7edf\u4e2d\u8fd9\u4e2a\u5e76\u975e\u6613\u4e8b\uff0c\u76ee\u524d\u4eba\u4eba\u7f51\u4e00\u5929\u4ea7\u751f\u65b0\u9c9c\u4e8b\u5728\u5343\u4e07\u91cf\u7ea7\uff0c\u73b0\u5728\u7531\u4f60\u6765\u8bbe\u8ba1\u4e00\u4e2a\u4ea7\u751f\u65b0\u9c9c\u4e8bID\u7684\u6a21\u5757\u3002\u8981\u6c42\u5199\u51fa\u89e3\u9898\u601d\u8def\u548c\u4f2a\u4ee3\u7801\u3002\n\u62ff\u5206\u6cd5\u5b9d\uff1a\n1\uff09 \u65b0\u9c9c\u4e8bID\u7edd\u5bf9\u4e0d\u80fd\u91cd\u590d\n2\uff09\u4f60\u53ef\u4ee5\u501f\u52a9DB\u7b49\u8f85\u52a9\u5de5\u5177\uff0c\u63d0\u4f9bInsertDB\uff0c UpdateDB\uff0c QueryDB\u4e09API\u4f9b\u4f60\u4f7f\u7528\uff0c \u5047\u8bbe\u8bbf\u95eeDB\u4e0d\u4f1a\u6709\u5f02\u5e38\u3002\n3)  \u9ad8\u5e76\u53d1\u60c5\u51b5\u8981\u8003\u8651\uff0c \u63d0\u4f9bLock, Unlock\u4e24\u4e2aAPI\u4f9b\u4f60\u4f7f\u7528\u3002\n4\uff09 \u8981\u6c42\u5199\u51fa\u89e3\u9898\u601d\u8def\u548c\u4f2a\u4ee3\u7801\u51fa\u6765\u3002",
      "title": "C&C++"
    },
    {
      "answer": "1.\u6240\u6709\u7684query\u7ed3\u679c\u90fd\u653e\u5728\u786c\u76d8\n2.\u6240\u6709query\u5230query\u7ed3\u679c\u7684\u6620\u5c04\u5b58\u50a8\u5728\u5185\u5b58\n3.\u591a\u4f59\u5185\u5b58\u4f5c\u4e3a\u7f13\u5b58,\u7f13\u5b58\u6dd8\u6c70\u673a\u5236\u4e3a\u67e5\u8be2\u6b21\u6570\u548cLRU",
      "ID": "55f2e51ee4b0152a611433de",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u767e\u5ea6\u7684\u67d0\u670d\u52a1\u673a\u5236\u7c7b\u4f3c\u4e8e CS\uff08customer-server\uff09\uff0c\u6709\u65f6\u5019\u5927\u91cf\u7528\u6237\u8bbf\u95ee\u670d\u52a1\u5668 S\uff0c \u5bfc\u81f4 S \u8fd0\u884c\u6548\u7387\u7f13\u6162\u3002 \u4e3a\u4e86\u63d0\u5347\u6548\u7387\uff0c \u62df\u5728 C \u4e0a\u5229\u7528\u4e00\u4e9b\u7a7a\u4f59\u7684\u7ed3\u679c\u7a7a\u95f4\u4f5c\u4e3a\u7f13\u5b58\u3002 \u5df2\u77e5\u5728 C \u7684\u4e00\u53f0\u5ba2\u6237\u673a\u4e0a\uff0c\u6bcf\u5929\u63a5\u6536 1000w query\uff0c\u5176\u4e2d 500w uniq query\uff0c\u6bcf\u4e2a query 5KB\uff0c\u5ba2\u6237\u673a\u5185\u5b58 3GB\uff0c\u786c\u76d8 500GB\u3002\u505a\u51fa\u4e00\u4e2a\u65b9\u6848\uff0c\u8bf4\u660e\u7cfb\u7edf\u7ed3\u6784\u3001\u5b58\u50a8\u7ed3 \u6784\u3001\u6027\u80fd\u4f18\u5316\u7b49\u65b9\u9762\u7684\u8bbe\u8ba1\u3002",
      "title": "C&C++"
    },
    {
      "answer": "import java.util.ArrayList;\npublic class Test {\n    public static ArrayList<String> getSolution(int n) {\n        ArrayList<String> list = new ArrayList<String>();\n        list = recurse(n, 0, 2);\n        return list;\n    }\n    public static ArrayList<String> recurse(int n, int from, int to) {\n        ArrayList<String> list = new ArrayList<String>();\n        //\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5706\u76d8\n        if(n == 1) {\n            if(from == 0 && to == 1) {\n                list.add(\"move left to mid\");\n            } else if(from == 0 && to == 2) {\n                list.add(\"move left to right\");\n            } else if(from == 1 && to == 0) {\n                list.add(\"move mid to left\");\n            } else if(from == 1 && to == 2) {\n                list.add(\"move mid to right\");\n            } else if(from == 2 && to == 0) {\n                list.add(\"move right to left\");\n            } else if(from == 2 && to == 1) {\n                list.add(\"move right to mid\");\n            }\n        } else {\n            if(from == 0 && to == 1) {\n                //\u5148\u5c06n-1\u4e2a\u5706\u76d8\u4ece\u5de6\u8fb9\u642c\u5230\u53f3\u8fb9\n                list.addAll(recurse(n - 1, 0, 2));\n                //\u518d\u5c06\u6700\u5e95\u5c42\u7684\u5706\u76d8\u4ece\u5de6\u8fb9\u642c\u5230\u4e2d\u95f4\n                list.add(\"move left to mid\");\n                //\u6700\u540e\u5c06n-1\u4e2a\u5706\u76d8\u4ece\u53f3\u8fb9\u642c\u5230\u4e2d\u95f4\n                list.addAll(recurse(n - 1, 2, 1));\n            } else if(from == 0 && to == 2) {\n                //\u5148\u5c06n-1\u4e2a\u5706\u76d8\u4ece\u5de6\u8fb9\u642c\u5230\u4e2d\u95f4\n                list.addAll(recurse(n - 1, 0, 1));\n                //\u518d\u5c06\u6700\u5e95\u5c42\u7684\u5706\u76d8\u4ece\u5de6\u8fb9\u642c\u5230\u53f3\u8fb9\n                list.add(\"move left to right\");\n                //\u6700\u540e\u5c06n-1\u4e2a\u5706\u76d8\u4ece\u4e2d\u95f4\u642c\u5230\u53f3\u8fb9\n                list.addAll(recurse(n - 1, 1, 2));\n            } else if(from == 1 && to == 0) {\n                //\u5148\u5c06n-1\u4e2a\u5706\u76d8\u4ece\u4e2d\u95f4\u642c\u5230\u53f3\u8fb9\n                list.addAll(recurse(n - 1, 1, 2));\n                //\u518d\u5c06\u6700\u5e95\u5c42\u7684\u5706\u76d8\u4ece\u4e2d\u95f4\u642c\u5230\u5de6\u8fb9\n                list.add(\"move mid to left\");\n                //\u6700\u540e\u5c06n-1\u4e2a\u5706\u76d8\u4ece\u53f3\u8fb9\u642c\u5230\u5de6\u8fb9\n                list.addAll(recurse(n - 1, 2, 0));\n            } else if(from == 1 && to == 2) {\n                //\u5148\u5c06n-1\u4e2a\u5706\u76d8\u4ece\u4e2d\u95f4\u642c\u5230\u5de6\u8fb9\n                list.addAll(recurse(n - 1, 1, 0));\n         ",
      "ID": "55f2e51ce4b0152a6114332c",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5bf9\u4e8e\u4f20\u7edf\u7684\u6c49\u8bfa\u5854\u6e38\u620f\u6211\u4eec\u505a\u4e00\u4e2a\u62d3\u5c55\uff0c\u6211\u4eec\u6709\u4ece\u5927\u5230\u5c0f\u653e\u7f6e\u7684n\u4e2a\u5706\u76d8\uff0c\u5f00\u59cb\u65f6\u6240\u6709\u5706\u76d8\u90fd\u653e\u5728\u5de6\u8fb9\u7684\u67f1\u5b50\u4e0a\uff0c\u6309\u7167\u6c49\u8bfa\u5854\u6e38\u620f\u7684\u8981\u6c42\u6211\u4eec\u8981\u628a\u6240\u6709\u7684\u5706\u76d8\u90fd\u79fb\u5230\u53f3\u8fb9\u7684\u67f1\u5b50\u4e0a\uff0c\u8bf7\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\u6253\u5370\u6700\u4f18\u79fb\u52a8\u8f68\u8ff9\u3002\n\u7ed9\u5b9a\u4e00\u4e2aint n\uff0c\u8868\u793a\u6709n\u4e2a\u5706\u76d8\u3002\u8bf7\u8fd4\u56de\u4e00\u4e2astring\u6570\u7ec4\uff0c\u5176\u4e2d\u7684\u5143\u7d20\u4f9d\u6b21\u4e3a\u6bcf\u6b21\u79fb\u52a8\u7684\u63cf\u8ff0\u3002\u63cf\u8ff0\u683c\u5f0f\u4e3a\uff1a move from [left/mid/right] to [left/mid/right]\u3002\n\u6d4b\u8bd5\u6837\u4f8b\uff1a \u8f93\u5165\uff1a 1   \u8fd4\u56de\uff1amove from left to right",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c67",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "C++\u4e2d\u4e0d\u7ba1\uff03if\u540e\u7684\u5e38\u91cf\u8868\u8fbe\u5f0f\u662f\u5426\u4e3a\u771f\uff0c\u8be5\u90e8\u5206\u90fd\u9700\u8981\u7f16\u8bd1",
      "optionC": "C++\u7684\u7f16\u8bd1\u6307\u4ee4\u53ef\u4ee5\u4ee5#\u6216//\u5f00\u59cb",
      "optionAnswer": "B",
      "answer": "\u7f16\u8bd1\u6307\u4ee4\u4ee5\uff03\u4f5c\u4e3a\u5f00\u5934\uff0c\u53ea\u80fd\u4e00\u884c\u5199\u4e00\u6761\uff0c\uff03if\u6709\u9009\u62e9\u8fdb\u884c\u7f16\u8bd1\uff0c\u6240\u4ee5\u9009\u62e9B\u9879\u3002",
      "optionB": "#include\u6307\u4ee4\u4e2d\u7684\u6587\u4ef6\u540d\u53ef\u542b\u6709\u8def\u5f84\u4fe1\u606f",
      "type": "1",
      "optionA": "C++\u6bcf\u884c\u53ef\u4ee5\u5199\u591a\u6761\u7f16\u8bd1\u6307\u4ee4",
      "question": "\u6709\u5173C++\u7f16\u8bd1\u6307\u4ee4\uff0c\u4ee5\u4e0b\u53d9\u8ff0\u6b63\u786e\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143237",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "map\u7684\u5220\u9664\u64cd\u4f5c\u53ea\u4f1a\u5bfc\u81f4\u6307\u5411\u88ab\u5220\u9664\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5931\u6548",
      "optionC": "vector\u7684\u5220\u9664\u64cd\u4f5c\u53ea\u4f1a\u5bfc\u81f4\u6307\u5411\u88ab\u5220\u9664\u5143\u7d20\u53ca\u540e\u9762\u7684\u8fed\u4ee3\u5668\u5931\u6548",
      "optionAnswer": "A",
      "answer": "\u56e0\u4e3a\u7531 Vector \u7684 iterator \u548c listIterator \u65b9\u6cd5\u6240\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u662f\u5feb\u901f\u5931\u8d25\u7684 \uff1a\u5982\u679c\u5728\u8fed\u4ee3\u5668\u521b\u5efa\u540e\u7684\u4efb\u610f\u65f6\u95f4\u4ece\u7ed3\u6784\u4e0a\u4fee\u6539\u4e86\u5411\u91cf\uff08\u901a\u8fc7\u8fed\u4ee3\u5668\u81ea\u8eab\u7684 remove \u6216 add \u65b9\u6cd5\u4e4b\u5916\u7684\u4efb\u4f55\u5176\u4ed6\u65b9\u5f0f\uff09\uff0c\u5219\u8fed\u4ee3\u5668\u5c06\u629b\u51fa ConcurrentModificationException\u3002",
      "optionB": "map\u7684\u63d2\u5165\u64cd\u4f5c\u4e0d\u4f1a\u5bfc\u81f4\u8fed\u4ee3\u5668\u5931\u6548",
      "type": "1",
      "optionA": "vector\u7684\u63d2\u5165\u64cd\u4f5c\u4e0d\u4f1a\u5bfc\u81f4\u8fed\u4ee3\u5668\u5931\u6548",
      "question": "\u4e0b\u9762\u5173\u4e8e\u8fed\u4ee3\u5668\u5931\u6548\u7684\u63cf\u8ff0\u54ea\u4e2a\u662f\u9519\u8bef\u7684\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143245",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u53cb\u5143\u51fd\u6570\u662f\u6709\u5173\u952e\u5b57friend\u4fee\u9970\uff0c\u8c03\u7528\u7684\u65f6\u5019\u4e5f\u662f\u901a\u8fc7\u6307\u9488this\u8c03\u7528\u7684",
      "optionC": "\u7c7b\u7684\u6210\u5458\u51fd\u6570\u662f\u5c5e\u4e8e\u7c7b\u7684\uff0c\u8c03\u7528\u7684\u65f6\u5019\u662f\u901a\u8fc7\u6307\u9488this\u8c03\u7528\u7684",
      "optionAnswer": "D",
      "answer": "\u7c7b\u7684\u53cb\u5143\u51fd\u6570\u7684\u8bbf\u95ee\u6743\u9650\u8ddf\u7c7b\u5185\u90e8\u7684\u65b9\u6cd5\u76f8\u540c\uff0c\u4f46\u662f\u53cb\u5143\u51fd\u6570\u4e0d\u5c5e\u4e8e\u672c\u7c7b\u7684\u5bf9\u8c61\uff0c\u4e00\u822c\u5b83\u662f\u53e6\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u80fd\u901a\u8fc7\u672c\u7c7b\u7684this\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\u3002",
      "optionB": "\u53cb\u5143\u51fd\u6570\u548c\u7c7b\u7684\u6210\u5458\u51fd\u6570\u90fd\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u7684\u79c1\u6709\u6210\u5458\u53d8\u91cf\u6216\u8005\u662f\u6210\u5458\u51fd\u6570",
      "type": "1",
      "optionA": "\u53cb\u5143\u51fd\u6570\u53ef\u4ee5\u8ba9\u672c\u7c7b\u548c\u53cb\u5143\u7c7b\u5bf9\u8c61\u8c03\u7528",
      "question": "\u4e0b\u9762\u6709\u5173\u53cb\u5143\u51fd\u6570\u4e0e\u6210\u5458\u51fd\u6570\u7684\u533a\u522b\uff0c\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u8fd9\u4e2a\u95ee\u9898\u9700\u8981\u518d\u52a0\u4e00\u4e2a\u6761\u4ef6\uff1an\u4e3a\u5076\u6570\uff0c\u5e94\u4e3a\u5982\u679cn\u4e3a\u5076\u6570\uff0c\u5148\u62ff\u7684\u5fc5\u80dc\uff0c\u5982\u679cn\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u5148\u62ff\u7684\u5fc5\u8f93\u3002\n  \u601d\u8def\uff1a\u5047\u8bben\u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u5148\u62ff\u7684\u53ef\u4ee5\u51b3\u5b9a\u540e\u62ff\u6bcf\u6b21\u62ff\u7684\u786c\u5e01\u5728\u539f\u786c\u5e01\u4f4d\u7f6e\u4e2d\u4e0b\u6807\u4e3a\u5947\u6570\u6216\u8005\u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u5148\u62ff\u7684\u53ef\u4ee5\u6bd4\u8f83\u786c\u5e01\u5728\u5947\u6570\u4f4d\u7f6e\u7684\u9762\u989d\u4e4b\u548c \u548c \u5076\u6570\u4f4d\u7f6e\u7684\u9762\u989d\u4e4b\u548c\uff0c\u4ece\u800c\u4f7f\u5f97\u81ea\u5df1\u6bcf\u6b21\u62ff\u5947\u6570\u8fd8\u662f\u5076\u6570\u3002",
      "ID": "55f2e51ce4b0152a61143339",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6709n\u679a\u786c\u5e01\u6309\u71670\u5230n-1\u5bf9\u5b83\u4eec\u8fdb\u884c\u7f16\u53f7\uff0c\u5176\u4e2d\u7f16\u53f7\u4e3ai\u7684\u786c\u5e01\u9762\u989d\u4e3avi\uff0c\u4e24\u4e2a\u4eba\u8f6e\u6d41\u4ece\u5269\u4e0b\u786c\u5e01\u4e2d\u53d6\u51fa\u4e00\u679a\u786c\u5e01\u5f52\u81ea\u5df1\u6240\u6709\uff0c\u4f46\u6bcf\u6b21\u53d6\u786c\u5e01\u7684\u65f6\u5019\u53ea\u80fd\u53d6\u5269\u4e0b\u7684\u786c\u5e01\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u786c\u5e01\u6216\u8005\u7f16\u53f7\u6700\u5927\u7684\u786c\u5e01\uff0c\u5728\u4e24\u4e2a\u90fd\u91c7\u7528\u6700\u4f18\u7b56\u7565\u7684\u60c5\u51b5\u4e0b\uff0c\u4f5c\u4e3a\u5148\u53d6\u786c\u5e01\u7684\u4f60\u8bf7\u7f16\u5199\u7a0b\u5e8f\u8ba1\u7b97\u51fa\u4f60\u80fd\u83b7\u5f97\u786c\u5e01\u603b\u9762\u989d\u7684\u6700\u5927\u503c\uff1f\uff08\u8bf7\u7b80\u8ff0\u7b97\u6cd5\u539f\u7406\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5e76\u5b9e\u73b0\u5177\u4f53\u7684\u7a0b\u5e8f\uff09\uff0c\u8bed\u8a00\u4e0d\u9650\u3002int MaxValue(int v[],int n){\n}",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c8a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "virtual void fun(){};",
      "optionC": "virtual void fun();",
      "optionAnswer": "B",
      "answer": "A\u662f\u9519\u8bef\u7684\u5199\u6cd5\uff1bB\u662f\u7eaf\u865a\u51fd\u6570\uff1bC\u662f\u865a\u51fd\u6570\u7684\u58f0\u660e\uff1bD\u662f\u865a\u51fd\u6570\u7684\u5b9a\u4e49\u3002",
      "optionB": "virtual void fun()=0;",
      "type": "1",
      "optionA": "void fun()=0;",
      "question": "\u4e0b\u9762\u51fd\u6570\u539f\u578b\u58f0\u660e\u4e2d\uff0c\uff08  \uff09\u58f0\u660e\u4e86fun\u4e3a\u7eaf\u865a\u51fd\u6570",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a6114314f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51fd\u6570\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2aint func(int param)\u7684\u51fd\u6570\u3002",
      "optionC": "\u51fd\u6570\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2aint func(int* param)\u7684\u51fd\u6570\u3002",
      "optionAnswer": "D",
      "answer": "1\u3001\u9996\u5148*s[10]  \u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0cs \u662f\u4e00\u4e2a\u542b\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u6545\u53ef\u4ee5\u8fd9\u6837\u6765\u770b\u8fd9\u6761\u58f0\u660e\u8bed\u53e5\uff1a\u5047\u8bbe p \u7b49\u4ef7\u4e8e s[10],\u58f0\u660e\u8bed\u53e5\u53d8\u4e3a int (*p)(int);\n2\u3001\u89c2\u5bdf int (*p)(int), \u4ece\u540d\u5b57\u5f00\u59cb\uff0cp\u524d\u9762\u6709\u4e00\u4e2a * \uff0c\u56e0\u6b64 p \u662f\u6307\u9488\uff0c\u6709\u4fa7\u662f\u5f62\u53c2\u5217\u8868\uff0c\u8868\u793ap\u6307\u5411\u7684\u662f\u51fd\u6570\uff0c\u5728\u89c2\u5bdf\u5de6\u4fa7\uff0c\u51fd\u6570\u8fd4\u56de\u7684\u662f int\uff1b\n3\u3001\u5219 int (*p)(int) \u89e3\u8bfb\u4e3a\uff1a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u4e00\u4e2a int func(int param) \u7684\u51fd\u6570\uff1b\n4\u3001\u6545 int (*s[10])(int) :\u89e3\u8bfb\u4e3a\uff1a\u51fd\u6570\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a int func(int param)\u7684\u51fd\u6570\u3002",
      "optionB": "\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u957f\u5ea6\u4e3a10\u7684int\u6570\u7ec4",
      "type": "1",
      "optionA": "\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u957f\u5ea6\u4e3a1\u7684int\u6570\u7ec4",
      "question": "int (*s[10])(int) \u8868\u793a\u7684\u662f\u4ec0\u4e48\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u5148\u6c42\u6bcf\u4e2a\u5b50\u6811\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c,\u9012\u5f52\u5b9e\u73b0\u3002",
      "ID": "55f2e51de4b0152a61143386",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5199\u4e00\u4e2a\u51fd\u6570,\u8f93\u5165\u4e00\u4e2a\u4e8c\u53c9\u6811,\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u5b58\u653e\u4e86\u4e00\u4e2a\u6574\u6570\u503c,\u51fd\u6570\u8fd4\u56de\u8fd9\u68f5\u4e8c\u53c9\u6811\u4e2d\u76f8\u5dee\u6700\u5927\u7684\u4e24\u4e2a\u8282\u70b9\u95f4\u7684\u5dee\u503c\u7edd\u5bf9\u503c\u3002\u8bf7\u6ce8\u610f\u7a0b\u5e8f\u6548\u7387\u3002",
      "title": "C&C++"
    },
    {
      "answer": "C++\u8bed\u8a00: \u7535\u8bdd\u53f7\u7801\u5bf9\u5e94\u7684\u82f1\u8bed\u5355\u8bcd(\u6ce8\u610f\u6b64\u9898\u7684\u975e\u9012\u5f52\u505a\u6cd5)\n\n#include#include#define N 4 //\u7535\u8bdd\u53f7\u7801\u4e2a\u6570 \n  \nusing namespace std;\n  \nchar c[][10] = {\"\",\"\",\"ABC\",\"DEF\",\"GHI\",\"JKL\",\"MNO\",\"PQRS\",\"TUV\",\"WXYZ\"};//\u5b58\u50a8\u5404\u4e2a\u6570\u5b57\u6240\u80fd\u4ee3\u8868\u7684\u5b57\u7b26 \nint number[N] = {2, 4 ,7, 9}; //\u5b58\u50a8\u7535\u8bdd\u53f7\u7801 \nint total[10] = {0, 0, 3, 3, 3, 3, 3, 4, 3, 4}; //\u5404\u4e2a\u6570\u7ec4\u6240\u80fd\u4ee3\u8868\u7684\u5b57\u7b26\u603b\u6570 \nint answer[N]; //\u6570\u5b57\u76ee\u524d\u6240\u4ee3\u8868\u7684\u5b57\u7b26\u5728\u5176\u6240\u80fd\u4ee3\u8868\u7684\u5b57\u7b26\u96c6\u4e2d\u7684\u4f4d\u7f6e,\u521d\u59cb\u4e3a0 \n  \nvoid Search(int *number, int n); //\u975e\u9012\u5f52\u7684\u529e\u6cd5 \nvoid RecursiveSearch(int *number, int cur, char *ps, int n); //\u9012\u5f52\u7684\u529e\u6cd5\nint main()\n{\n        //Search(number, N); \n        char ps[N+1] = {0};\n        RecursiveSearch(number, 0, ps, N);\n        return 0;\n}\n  \n  \nvoid Search(int *number, int n)\n{\n        int i;\n        while(1)\n        {\n                for(i=0; i<n; ++i)=\"\" printf(\"%c\",=\"\" c[number[i]][answer[i]]);=\"\" printf(\"\\n\");=\"\" int=\"\" k=\"n-1;\" \u7528k\u548cwhile\u5faa\u73af\u6765\u89e3\u51b3\u6269\u5c55\u6027\u95ee\u9898,\u6a21\u62df\u4e86\u9012\u5f52=\"\" while(k=\"\">= 0)\n                {\n</n;>\n \n    <n; ++i)=\"\" printf(\"%c\",=\"\" c[number[i]][answer[i]]);=\"\" printf(\"\\n\");=\"\" int=\"\" k=\"n-1;\" \u7528k\u548cwhile\u5faa\u73af\u6765\u89e3\u51b3\u6269\u5c55\u6027\u95ee\u9898,\u6a21\u62df\u4e86\u9012\u5f52=\"\" while(k=\"\">                        if(answer[k] < total[number[k]]-1) { ++answer[k]; break; } else { answer[k] = 0; --k; } } if(k < 0) break; } } /*\u9012\u5f52\u7684\u89e3\u6cd5: number\u4e3a\u5b58\u50a8\u7535\u8bdd\u53f7\u7801\u7684\u6570\u7ec4,pos\u4e3a\u5f53\u524d\u5904\u7406\u7684\u6570\u5b57\u5728number\u4e2d\u7684\u4e0b\u6807,\u521d\u59cb\u4e3a0 *ps\u4e3a\u4e00\u5916\u90e8\u6570\u7ec4,\u7528\u4e8e\u5b58\u653e\u5b57\u6bcd,n\u4ee3\u8868\u7535\u8bdd\u53f7\u7801\u7684\u957f\u5ea6(\u4e2a\u6570) * \u6b64\u9012\u5f52\u7684\u65b9\u6cd5\u597d\u7406\u89e3,\u6bd4\u4e0a\u9762\u975e\u9012\u5f52\u7684\u529e\u6cd5\u597d\u5199\u6613\u61c2 * */ </n;>\n \n    <n; ++i)=\"\" printf(\"%c\",=\"\" c[number[i]][answer[i]]);=\"\" printf(\"\\n\");=\"\" int=\"\" k=\"n-1;\" \u7528k\u548cwhile\u5faa\u73af\u6765\u89e3\u51b3\u6269\u5c55\u6027\u95ee\u9898,\u6a21\u62df\u4e86\u9012\u5f52=\"\" while(k=\"\">\n</n;>\nvoid RecursiveSearch(int *number, int pos, char *ps, int n)\n{\n        int i;\n        for(i=0; i<total[number[pos]]; ++i)\n        {\n                ps[pos] = c[number[pos]][i];\n                if(pos == n-1)\n                        cout<<ps<<endl;\n                else\n                        RecursiveSearch(number, pos+1, ps, n);\n        }\n}",
      "ID": "55f2e51de4b0152a6114336a",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u73b0\u5728\u6709\u4e00\u4e2a\u624b\u673a\uff0c\u624b\u673a\u4e0a\u7684\u952e\u76d8\u4e0a\u6709\u8fd9\u6837\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c2\u5bf9\u5e94\"abc\",3\u5bf9\u5e94\"def\".....\u624b\u673a\u91cc\u9762\u6709\u4e00\u4e2auserlist\u7528\u6237\u5217\u8868\uff0c\u5f53\u6211\u4eec\u8f93\u5165942\u7684\u65f6\u5019\u51fa\u6765\u62fc\u97f3\u7684\u5bf9\u5e94\u53ef\u80fd\u662f\u201cxia\u201d\uff0c\u201czha\u201d\uff0c\u201cxi\u201d\uff0c\u201cyi\u201d\u7b49\uff0c\u5f53\u6211\u4eec\u8f93\u51659264\u7684\u65f6\u5019\u51fa\u6765\u662fyang\uff0c\u53ef\u80fd\u662f\u201c\u6837\u201d\uff0c\u201c\u6768\u201d\uff0c\u201c\u5f80\u201d\u7b49\uff0c\u73b0\u5728\u6211\u4eec\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u5b57\uff0c\u6bd4\u5982926\u7b49\uff0c\u8981\u5728\u7535\u8bdd\u7c3fuserlist\u4e2d\u67e5\u627e\u51fa\u5bf9\u5e94\u7684\u7528\u6237\u540d\u548c\u7535\u8bdd\u53f7\u7801\u5e76\u8fd4\u56de\u7ed3\u679c\u3002 C++\u8bed\u8a00: \u7535\u8bdd\u53f7\u7801\u5bf9\u5e94\u7684\u82f1\u8bed\u5355\u8bcd(\u6ce8\u610f\u6b64\u9898\u7684\u975e\u9012\u5f52\u505a\u6cd5)",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7f3",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "exponential",
      "optionC": "quadratic",
      "optionAnswer": "A",
      "answer": "\u56e0\u4e3ae\u662f\u4e0d\u65ad\u5730\u9664\u4ee52\uff0c\u6240\u4ee5\u8c03\u7528\u6b21\u6570\u5e94\u8be5\u662f\u4ee52\u4e3a\u5e95\u7684\u5bf9\u6570\uff01",
      "optionB": "linear",
      "type": "1",
      "optionA": "logarithmic",
      "question": "Consider the following definition of a recursive function, power, that will perform exponentiation.int power(int b, int e) {\n    if (e == 0)\n        return 1;\n    if (e %2 == 0)\n        return power (b * b, e / 2);\n    return b * power(b * b, e / 2);\n}\nAsymptotically (\u6e10\u8fdb\u5730) in terms of the exponent e, the number of calls to power that occur as a result of the call power(b, e) is",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143165",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e4b\u5916\u5199\u4e00\u6bb5\u4ee3\u7801\uff0c\u8c03\u7528\u8be5\u4ee3\u7801\u7684\u4e00\u4e9b\u6a21\u5757\uff0c\u5b8c\u6210\u65b0\u529f\u80fd\u9700\u6c42",
      "optionC": "\u4fee\u6539\u8001\u4ee3\u7801\u7684\u5185\u90e8\u903b\u8f91\uff0c\u6ee1\u8db3\u65b0\u7684\u9700\u6c42",
      "optionAnswer": "D",
      "answer": "A\uff1a\u5bf9\u539f\u6709\u4ee3\u7801\u5f71\u54cd\u592a\u5927\uff0c\u63a5\u53e3\u6539\u4e86\uff0c\u8981\u91cd\u6784\u6240\u6709\u6d89\u53ca\u7684\u4ee3\u7801\uff0c\u98ce\u9669\u592a\u5927\uff1b\nB\uff1a\u8c8c\u4f3c\u53ef\u4ee5\u3002\u9898\u610f\u201c\u5728\u9700\u8981\u5229\u7528\u5176\u5b9e\u73b0\u4e00\u4e2a\u65b0\u7684\u9700\u6c42\u201d\nC\uff1a \u4fee\u6539\u540e\u7684\u6d4b\u8bd5\u5de5\u4f5c\u91cf\u592a\u5927\uff0c\u5982\u679c\u6d4b\u8bd5\u4e0d\u5168\uff0c\u9690\u60a3\u5f88\u591a\nD\uff1a\u8fd9\u4e2a\u6bd4\u8f83\u5408\u9002\uff0c\u4e0d\u4f1a\u5f71\u54cd\u539f\u6709\u4ee3\u7801\u903b\u8f91\uff0c\u53ef\u4ee5\u5229\u7528\u5f53\u524d\u5df2\u6709\u7684\u4ee3\u7801\u6a21\u5757\u3002",
      "optionB": "\u5c06\u8001\u4ee3\u7801\u629b\u5f03\uff0c\u81ea\u5df1\u91cd\u65b0\u5b9e\u73b0\u7c7b\u4f3c\u7684\u903b\u8f91",
      "type": "1",
      "optionA": "\u4fee\u6539\u8001\u4ee3\u7801\u7684\u63a5\u53e3\uff0c\u6ee1\u8db3\u65b0\u7684\u9700\u6c42",
      "question": "\u6709\u4e00\u6bb5\u5e74\u4ee3\u4e45\u8fdc\u7684C++\u4ee3\u7801\uff0c\u5185\u90e8\u903b\u8f91\u590d\u6742\uff0c\u73b0\u5728\u9700\u8981\u5229\u7528\u5176\u5b9e\u73b0\u4e00\u4e2a\u65b0\u7684\u9700\u6c42\uff0c\u5047\u5b9a\u6709\u4ee5\u4e0b\u53ef\u884c\u7684\u65b9\u6848\uff0c\u5e94\u5f53\u4f18\u5148\u9009\u62e9",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143240",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "new\u548cmalloc\u90fd\u53ef\u7528\u4e8e\u7533\u8bf7\u52a8\u6001\u5185\u5b58\uff0cnew\u662f\u4e00\u4e2a\u64cd\u4f5c\u7b26\uff0cmalloc\u662f\u662f\u4e00\u4e2a\u51fd\u6570",
      "optionC": "new\u548cmalloc\u90fd\u662f\u4fdd\u7559\u5b57\uff0c\u4e0d\u9700\u8981\u5934\u6587\u4ef6\u652f\u6301",
      "optionAnswer": "C",
      "answer": "new/delete\u90fd\u662f\u8981\u5206\u4e24\u6b65\u64cd\u4f5c\u7684\uff1anew\u5206\u914d\u5185\u5b58\uff0c\u5e76\u4e14\u8c03\u7528\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u4e00\u4e2a\u5bf9\u8c61\uff1bdelete\u8c03\u7528\u76f8\u5e94\u7684\u6790\u6784\u51fd\u6570\uff0c\u7136\u540e\u91ca\u653e\u5185\u5b58\nmalloc/free\u53ea\u662f\u5206\u914d\u5185\u5b58/\u56de\u6536\u5185\u5b58\uff0c \u6240\u4ee5A\u3001B\u5bf9\uff1b\nmalloc\u9700\u8981\u5934\u6587\u4ef6\"stdlib.h\"\u6216\u8005\"malloc.h\" C\u9519\uff1b\nnew/delete\u90fd\u662f\u5185\u5efa\u7684\u64cd\u4f5c\u7b26\uff0c\u800cmalloc\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u51fd\u6570\u539f\u578b\u662f\uff1a\nvoid *malloc(unsigned int num_bytes);\n\u6240\u4ee5\u9009C",
      "optionB": "new   \u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u8c03\u7528\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u5e94\u7684delete\u8c03\u7528\u76f8\u5e94\u7684\u6790\u6784\u51fd\u6570\uff0cmalloc\u4ec5\u4ec5\u5206\u914d\u5185\u5b58\uff0cfree\u4ec5\u4ec5\u56de\u6536\u5185\u5b58",
      "type": "1",
      "optionA": "new \u5efa\u7acb\u7684\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c malloc\u5206\u914d\u7684\u662f\u4e00\u5757\u5185\u5b58.",
      "question": "\u4e0b\u9762\u6709\u5173malloc\u548cnew\uff0c\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff1f?",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de823",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "4 6",
      "optionC": "6 5",
      "optionAnswer": "D",
      "answer": "\u672c\u9898\u4e3b\u8981\u8003\u67e5\u4e86\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\u548c\u5b57\u7b26\u6570\u7ec4,strl\u4e3a\u4e00\u4e2a\u5b57\u7b26\u6307\u9488,\u6240\u4ee5sizeof\u4e3a4,str2\u4e3a\u5b57\u7b26\u6570\u7ec4,\u5176\u4e2d\u5305\u542b6\u4e2a\u5b57\u7b26,\u6240\u4ee5\u7b54\u6848\u4e3a4 6",
      "optionB": "5 5",
      "type": "1",
      "optionA": "5 6",
      "question": "\u572832\u4f4d\u7f16\u8bd1\u5668\u4e0a,\u8bbe\u6709\u5b9a\u4e49\nchar * strl = \"Hello\",str2[ ] = \"Hello\";\n\u5219\u4ee5\u4e0b\u8bed\u53e5\nprintf(\"%d %d\",sizeof(str),sizeof(str2));\n\u7684\u8f93\u51fa\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "answer": "1. \u6307\u9488\u662f\u4e00\u4e2a\u5b9e\u4f53\uff0c\u800c\u5f15\u7528\u4ec5\u662f\u4e2a\u522b\u540d\uff1b\n2. \u5f15\u7528\u4f7f\u7528\u65f6\u65e0\u9700\u89e3\u5f15\u7528(*)\uff0c\u6307\u9488\u9700\u8981\u89e3\u5f15\u7528\uff1b\n3. \u5f15\u7528\u53ea\u80fd\u5728\u5b9a\u4e49\u65f6\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e4b\u540e\u4e0d\u53ef\u53d8\uff1b\u6307\u9488\u53ef\u53d8\uff1b\n4. \u5f15\u7528\u6ca1\u6709 const\uff0c\u6307\u9488\u6709 const\uff1b\n5. \u5f15\u7528\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u6307\u9488\u53ef\u4ee5\u4e3a\u7a7a\uff1b\n6. \u201csizeof \u5f15\u7528\u201d\u5f97\u5230\u7684\u662f\u6240\u6307\u5411\u7684\u53d8\u91cf(\u5bf9\u8c61)\u7684\u5927\u5c0f\uff0c\u800c\u201csizeof \u6307\u9488\u201d\u5f97\u5230\u7684\u662f\u6307\u9488\u672c\u8eab(\u6240\u6307\u5411\u7684\u53d8\u91cf\u6216\u5bf9\u8c61\u7684\u5730\u5740)\u7684\u5927\u5c0f\uff1b\n7. \u6307\u9488\u548c\u5f15\u7528\u7684\u81ea\u589e(++)\u8fd0\u7b97\u610f\u4e49\u4e0d\u4e00\u6837\uff1b\n8.\u4ece\u5185\u5b58\u5206\u914d\u4e0a\u770b\uff1a\u7a0b\u5e8f\u4e3a\u6307\u9488\u53d8\u91cf\u5206\u914d\u5185\u5b58\u533a\u57df\uff0c\u800c\u5f15\u7528\u4e0d\u9700\u8981\u5206\u914d\u5185\u5b58\u533a\u57df\u3002",
      "ID": "55f2e51ee4b0152a611433cd",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "extern \u201cC\u201d\nC++\u8bed\u8a00\u4e3a\u4e86\u652f\u6301\u91cd\u6784\uff08\u91cd\u6784\u7684\u7279\u5f81?\uff1a\u76f8\u540c\u7684\u8303\u56f4\u3001\u76f8\u540c\u7684\u540d\u5b57\u3001\u4e0d\u540c\u7684\u53c2\u6570\uff09\uff0c\u5728\u7f16\u8bd1\u65f6\u5bf9\u51fd\u6570\u7684\u547d\u540d\u65b9\u5f0f\u8fdb\u884c\u4e86\u6539\u53d8\uff0c\u7f16\u8bd1\u540e\u7684\u540d\u5b57\u5305\u62ec\u4e00\u4e9b\u53c2\u6570\u7684\u4fe1\u606f\u3002extern \"C\"\u7684\u4f5c\u7528\uff0c\u5c31\u662f\u201c\u63d0\u793a\u201d\u7f16\u8bd1\u5668\uff0c\u4e0b\u9762\u7684\u6587\u4ef6\u548c\u51fd\u6570\uff0c\u8981\u7528C\u8bed\u8a00\u7684\u547d\u540d\u89c4\u5219\u8fdb\u884c\u3002",
      "ID": "55f2e51ce4b0152a61143334",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "C++\u8c03\u7528C\u8bed\u8a00\u5e93\u65f6\uff0c\u9700\u8981\u52a0()",
      "title": "C&C++"
    },
    {
      "answer": "(1)\u9996\u5148\u4e00\u5343\u4e07\u6761\u67e5\u8be2\u8bb0\u5f55\uff0c\u6bcf\u6761\u5b57\u7b26\u4e32\u957f0~255\uff0c\u800c\u9650\u5236\u5185\u5b58&lt; 1G\uff0c\u6240\u4ee5\u4e0d\u80fd\u628a\u4e00\u5343\u4e07\u6761\u8bb0\u5f55\u5168\u90e8\u653e\u8fdb\u5185\u5b58\u4e2d\u5904\u7406\uff0c\u7ecf\u8ba1\u7b97\uff0c1\u5343\u4e07\u6761\u8bb0\u5f55\u7684\u5927\u5c0f\u4e3a256Byte*10^8=0.25KB * 10^8=2.5*10^7KB\uff0c\u800c1G = 1024M = 1024*1024KB = 1.024*1.024*10^6KB\uff0c\u6240\u4ee5\u6211\u5c061\u5343\u4e07\u6761\u8bb0\u5f55\u5206\u621025\u6b21\u8bfb\u53d6\uff0c\u6bcf\u6b21\u8bfb\u53d640\u4e07\u6761\u8bb0\u5f55\uff0c\u4f7f\u7528\u54c8\u5e0c\u8868\u6765\u8ba1\u7b97\u51fa40\u4e07\u6761\u8bb0\u5f55\u91cd\u590d\u6b21\u6570\u6700\u5927\u7684\u524d10\u6761\u8bb0\u5f55\uff0c\u54c8\u5e0c\u8868\u7684key\u662f\u8bb0\u5f55\u5b57\u7b26\u4e32\uff0c\u503c\u662f\u91cd\u590d\u6b21\u6570\u3002\u8fd9\u683725\u6b21\u8bbf\u95ee\u5b8c1\u5343\u4e07\u6761\u8bb0\u5f55\uff0c\u5c06\u4f1a\u5f97\u5230250\u6761\u8bb0\u5f55\uff0c\u7136\u540e\u4f7f\u7528Map\u5b58\u50a8\u8fd9250\u6761\u8bb0\u5f55\uff0ckey\u662f\u91cd\u590d\u6b21\u6570\uff0c\u503c\u662f\u8bb0\u5f55\u5b57\u7b26\u4e32\uff0c\u6bd4\u8f83\u51fd\u6570\u662fgreater\u51fd\u6570\u5bf9\u8c61\uff0c\u4ece\u5927\u5230\u5c0f\u5b58\u50a8\u5728Map\u4e2d\uff0c\u524d10\u6761\u5373\u662f\u6700\u70ed\u95e8\u768410\u6761\u67e5\u8be2\u4e32\u3002 </div> <div> (2)\u590d\u6742\u5ea6\u5206\u6790\uff1aN + klogk < O(N)",
      "ID": "55f2e51ee4b0152a611433c7",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u641c\u7d22\u5f15\u64ce\u7684\u65e5\u5fd7\u8981\u8bb0\u5f55\u6240\u6709\u67e5\u8be2\u4e32,\u6709\u4e00\u5343\u4e07\u6761\u67e5\u8be2,\u4e0d\u91cd\u590d\u7684\u4e0d\u8d85\u8fc7\u4e09\u767e\u4e07\n\u8981\u7edf\u8ba1\u6700\u70ed\u95e8\u768410\u6761\u67e5\u8be2\u4e32. \u5185\u5b58<1G. \u5b57\u7b26\u4e32\u957f 0-255\n(1) \u4e3b\u8981\u89e3\u51b3\u601d\u8def\n(2) \u7b97\u6cd5\u53ca\u5176\u590d\u6742\u5ea6\u5206\u6790",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c84",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u52a8\u6001\u8054\u7f16\u662f\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u64cd\u4f5c\u51fd\u6570\u7684 ",
      "optionC": "\u52a8\u6001\u8054\u7f16\u8c03\u7528\u51fd\u6570\u64cd\u4f5c\u662f\u6307\u5411\u5bf9\u8c61\u7684\u6307\u9488\u6216\u5bf9\u8c61\u5f15\u7528      ",
      "optionAnswer": "D",
      "answer": "\u52a8\u6001\u8054\u7f16\u662f\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\u64cd\u4f5c\u51fd\u6570\u7684\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\u7ee7\u627f\u91cc\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3002",
      "optionB": "\u52a8\u6001\u8054\u7f16\u662f\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\u6240\u8c03\u7528\u7684\u51fd\u6570\u4ee3\u7801\u7684",
      "type": "1",
      "optionA": "\u52a8\u6001\u8054\u7f16\u662f\u4ee5\u865a\u51fd\u6570\u4e3a\u57fa\u7840\u7684    ",
      "question": "\u5173\u4e8e\u52a8\u6001\u8054\u7f16\u7684\u4e0b\u5217\u63cf\u8ff0\u4e2d\uff0c\uff08\uff09\u662f\u9519\u8bef\u7684",
      "title": "C&C++"
    },
    {
      "answer": "501",
      "ID": "55f2e51de4b0152a6114335d",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": " 2014! \u7684\u672b\u5c3e\u6709___\u4e2a0",
      "title": "C&C++"
    },
    {
      "answer": "#include <utility>\n#include <string.h>\nclassString\n{\npublic:\n    String():data_(newchar[1])\n    {\n        *data_ = '\\0';\n    }\n    String(const char * str):data_(newchar[strlen(str) + 1])\n    {\n        strcpy(data_, str);\n    }\n    String(const String & rhs)\n        : data_(newchar[rhs.size() + 1])\n    {\n        strcpy(data_, rhs.c_str());\n    }\n    /* Delegate constructor in C++11\n    String(const String& rhs):String(rhs.data_)\n    {\n    }\n    */\n    ~String()\n    {\n        delete[] data_;\n    }\n    /* Traditional:\n    String& operator=(const String& rhs)\n    {\n        String tmp(rhs);\n        swap(tmp);\n        return *this;\n    }\n    */\n    String &operator=(String rhs)// yes, pass-by-value\n    {\n        swap(rhs);\n        return*this;\n    }\n    // C++ 11\n    String(String &&rhs): data_(rhs.data_)\n    {\n        rhs.data_ = nullptr;\n    }\n    String &operator=(String && rhs)\n    {\n        swap(rhs);\n        return*this;\n    }\n    // Accessors\n    size_t size() const\n    {\n        return strlen(data_);\n    }\n    const char * c_str() const\n    {\n        return data_;\n    }\n    void swap(String & rhs)\n    {\n        std::swap(data_, rhs.data_);\n    }\nprivate:\n    char *data_;\n};",
      "ID": "55f2e51de4b0152a61143379",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bf7\u7528c++ \u5b9e\u73b0stl\u4e2d\u7684string\u7c7b\uff0c\u5b9e\u73b0\u6784\u9020\uff0c\u62f7\u8d1d\u6784\u9020\uff0c\u6790\u6784\uff0c\u8d4b\u503c\uff0c\u6bd4\u8f83\uff0c\u5b57\u7b26\u4e32\u76f8\u52a0\uff0c\u83b7\u53d6\u957f\u5ea6\u53ca\u5b50\u4e32\u7b49\u529f\u80fd\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de820",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "'\\09'",
      "optionC": "'a'",
      "optionAnswer": "D",
      "answer": "\u5b57\u7b26\u5e38\u91cf\u662f\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u4e00\u4e2a\u5b57\u7b26\u3002\u4f8b\u5982\uff1a'a'\u3001'='\u3001'+'\u7b49\u3002\u8f6c\u4e49\u5b57\u7b26\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5b57\u7b26\u5e38\u91cf\u3002\u8f6c\u4e49\u5b57\u7b26\u4ee5\u53cd\u659c\u7ebf\"\\\"\u5f00\u5934,\u540e\u8ddf\u4e00\u4e2a\u6216\u51e0\u4e2a\u5b57\u7b26\u3002D\u9009\u9879\u4e2d'\\09',\\0\u8868\u793a\u540e\u9762\u7684\u5b57\u7b26\u662f\u516b\u8fdb\u5236\u6570\u3002\u53c8\u51fa\u73b09\u6240\u4ee5\u662f\u975e\u6cd5\u7684,\u6545D\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "'\\b'",
      "type": "1",
      "optionA": "'\\007'",
      "question": "\u4ee5\u4e0b\u9009\u9879\u4e2d\u975e\u6cd5\u7684C\u8bed\u8a00\u5b57\u7b26\u5e38\u91cf\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u6392\u5217\u7528C\uff0c\u7ec4\u5408\u7528A\u3002\u65e2\u7136\u9898\u76ee\u8bf4\u662f\u65e0\u6570\u4e2a,\u5c31\u76f8\u5f53\u4e8e\u6709\u653e\u56de\u7684\u53d66\u4e2a\u4e0d\u540c\u989c\u8272\u7684\u7403\u3002\u56e0\u6b64\uff0c\u6240\u6709\u60c5\u51b5\u662f6^5=7776\uff0c\u5145\u5f53\u5206\u6bcd\n\nA5\u79cd\uff1aC65A55=720\nA4\u79cd\uff1aC64C41A55/2=3600\nA3\u79cd\uff1aC63[C31A55/(3!)+C32A55/(2!*2!)]=3000\nA2\u79cd\uff1aC62[C21A55/(4!)+C31A55/(3!*2!)]=450\nA1\u79cd\uff1aC61[A55/5!]=6\n\u7b97\u5b8c\u5728\u8349\u7a3f\u7eb8\u4e0a\u9a8c\u7b97\u4e00\u4e0b\u6709\u6ca1\u6709\u7b97\u6f0f\u6389\uff1aA5+A4+A3+A2+A1=7779=6^5,\u8bf4\u660e\u51c6\u786e\u65e0\u8bef\uff0c\n\n\u518d\u7b97\u6982\u7387\uff1a\nP5=A5/7776\nP4=A4/7776\n...",
      "ID": "55f2e51de4b0152a6114338e",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u67096\u79cd\u4e0d\u540c\u989c\u8272\u7684\u7403\uff0c\u5206\u522b\u8bb0\u4e3a1,2,3,4,5,6\uff0c\u6bcf\u79cd\u7403\u6709\u65e0\u6570\u4e2a\u3002\u73b0\u5728\u53d65\u4e2a\u7403\uff0c\u6c42\u5728\u4ee5\u4e0b\u7684\u6761\u4ef6\u4e0b\uff1a\n1\u30015\u79cd\u4e0d\u540c\u989c\u8272\uff0c\n2\u30014\u79cd\u4e0d\u540c\u989c\u8272\u7684\u7403\uff0c\n3\u30013\u79cd\u4e0d\u540c\u989c\u8272\u7684\u7403\uff0c \n4\u30012\u79cd\u4e0d\u540c\u989c\u8272\u7684\u7403\uff0c\n\u5b83\u4eec\u7684\u6982\u7387\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u8fd9\u6bb5\u4ee3\u7801\u662f\u5728\u56fa\u5b9a\u5b57\u7b26\u4e32\u91cc\u9762\u641c\u7d22\u5b57\u7b26 \u2018d\u2019\n\u7528C\u8bed\u8a00\u5b9e\u73b0\n\nif (strstr (\u201cHello, World!\u201d, \u201cd\u201d) != NULL))\n    exitProcess(1);\nexitProcess (0);",
      "ID": "55f2e51de4b0152a6114334e",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4ee5\u4e0b\u662f\u4e00\u6bb5\u6c47\u7f16\u4ee3\u7801\uff0c\u8bf7\u7528C\u8bed\u8a00\u5b9e\u73b0\u76f8\u540c\u529f\u80fd\u3002\n\n.data\nSourceStringdb \"Hello, World!\",0\n.code\nstart:\ncld\nxoreax, eax\nmovedi, offset SourceString\nmov al, 'd'\nmovecx, 13\nrepnescas\njz wow\ninvokeExitProcess, 0\nwow:\ninvokeExitProcess, 1\nend start",
      "title": "C&C++"
    },
    {
      "answer": "\u65b9\u6cd51\uff1a\n\nint main()\n\u3000{\n\u3000\u3000char* src = \"hello,world\";\n\u3000\u3000int len = strlen(src);\n\u3000\u3000char* dest = (char*)malloc(len+1);//\u8981\u4e3a\\0\u5206\u914d\u4e00\u4e2a\u7a7a\u95f4\n\u3000\u3000char* d = dest;\n\u3000\u3000char* s = &src[len-1];//\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\n\u3000\u3000while( len-- != 0 )\n\u3000\u3000*d++=*s--;\n\u3000\u3000*d = 0;//\u5c3e\u90e8\u8981\u52a0\\0\n\u3000\u3000printf(\"%s\\n\",dest);\n\u3000\u3000free(dest);// \u4f7f\u7528\u5b8c\uff0c\u5e94\u5f53\u91ca\u653e\u7a7a\u95f4\uff0c\u4ee5\u514d\u9020\u6210\u5185\u5b58\u6c47\u6cc4\u9732\n\u3000\u3000return 0;\n\u3000}\n\u65b9\u6cd52\uff1a\n\nmain()\n{\n\u3000\u3000\u3000char str[]=\"hello,world\";\n\u3000\u3000\u3000int len=strlen(str);\n\u3000\u3000\u3000char t;\n\u3000\u3000\u3000for(int i=0; i\u3000\u3000\u3000{\n\u3000\u3000\u3000\u3000t=str[i];\n\u3000\u3000\u3000\u3000str[i]=str[len-i-1]; str[len-i-1]=t;\n\u3000\u3000\u3000}\n\u3000\u3000\u3000printf(\"%s\",str);\n\u3000\u3000\u3000return 0;\n}",
      "ID": "55f2e51ee4b0152a611433b1",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u9519\u8bef\n\u8bf4\u660e\uff1a\u4ee5\u4e0b\u4ee3\u7801\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5012\u5e8f\uff0c\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d\n\n#include\"string.h\"\nmain()\n\u3000\u3000{\n\u3000\u3000 char*src=\"hello,world\";\n\u3000\u3000 char* dest=NULL;\n\u3000\u3000 int len=strlen(src);\n\u3000\u3000 dest=(char*)malloc(len);\n\u3000   char* d=dest;\n\u3000\u3000 char* s=src[len];\n\u3000\u3000 while(len--!=0)\n\u3000\u3000     d++=s--;\n\u3000\u3000 printf(\"%s\",dest);\n\u3000\u3000 return 0;\n\u3000}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431f9",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "fastcall",
      "optionC": "pascal",
      "optionAnswer": "A",
      "answer": "\u53ef\u53d8\u53c2\u6570\u51fd\u6570\u9700\u8981\u7531\u8c03\u7528\u8005\u6e05\u6808\uff0c\u56e0\u4e3a\u5f53\u524d\u51fd\u6570\u5e76\u4e0d\u77e5\u9053\u8981\u6709\u591a\u5c11\u53c2\u6570\u88ab\u4f20\u5165\uff0c\u6240\u4ee5\u5fc5\u987b\u7528cdcel",
      "optionB": "stdcall",
      "type": "1",
      "optionA": "cdecl",
      "question": "Which of the following calling convention(s) support(s) support variable-length parameter(e.g. printf)?",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c01",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "clog",
      "optionC": "cout",
      "optionAnswer": "A",
      "answer": "(1)\u6807\u51c6\u8f93\u5165\u6d41cin\uff1aistream\u7c7b\u7684\u5bf9\u8c61\u3002(2)\u6807\u51c6\u8f93\u51fa\u6d41cout\uff1aostream\u7c7b\u7684\u5bf9\u8c61\u3002\n(3)\u975e\u7f13\u51b2\u578b\u6807\u51c6\u51fa\u9519\u6d41cerr\uff1aostream\u7c7b\u7684\u5bf9\u8c61\u3002(4)\u7f13\u51b2\u578b\u6807\u51c6\u51fa\u9519\u6d41clog\uff1aostream\u7c7b\u7684\u5bf9\u8c61",
      "optionB": "cerr",
      "type": "1",
      "optionA": "cin",
      "question": "\u5728C++\u4e2d\uff0c\u4f7f\u7528\u6d41\u8fdb\u884c\u8f93\u5165\u8f93\u51fa\uff0c\u5176\u4e2d\u7528\u4e8e\u5c4f\u5e55\u8f93\u5165\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143208",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e00\u79cd\u7c7b\u578b\u5f53\u5b83\u81f3\u5c11\u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u884c\u4e3a,\u5219\u8fd9\u79cd\u7c7b\u578b\u662f\u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u5b50\u7c7b\u578b",
      "optionC": "\u5b50\u7c7b\u578b\u5c31\u662f\u6307\u6d3e\u751f\u7c7b\u662f\u57fa\u7c7b\u7684\u5b50\u7c7b\u578b",
      "optionAnswer": "D",
      "answer": "\u5b50\u7c7b\u578b\u5fc5\u987b\u662f\u5b50\u7c7b\u7ee7\u627f\u4e86\u7236\u7c7b\u7684\u6240\u6709\u53ef\u7ee7\u627f\u7279\u6027\uff0c\u4e5f\u5373\u516c\u6709\u7ee7\u627f\uff0c\u624d\u80fd\u8bf4\u662f\u5b50\u7c7b\u578b\uff0c\u5426\u5219\u5c31\u53ea\u662f\u5355\u7eaf\u7684\u5b50\u7c7b",
      "optionB": "\u5b50\u7c7b\u578b\u5173\u7cfb\u662f\u4e0d\u53ef\u9006\u7684",
      "type": "1",
      "optionA": "\u5728\u516c\u6709\u7ee7\u627f\u4e0b,\u6d3e\u751f\u7c7b\u662f\u57fa\u7c7b\u7684\u5b50\u7c7b\u578b",
      "question": "\u5173\u4e8e\u5b50\u7c7b\u578b\u7684\u63cf\u8ff0\u4e2d\uff0c\uff08 \uff09\u662f\u9519\u8bef\u7684\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a6114312a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "p=Test::fun",
      "optionC": "p=fun()",
      "optionAnswer": "D",
      "answer": "class MyClass {\npublic:\n    MyClass(int i = 0) { cout << 1; }\n    MyClass(const MyClass&x) { cout << 2; }\n    MyClass& operator=(const MyClass&x) { cout << 3; return*this; }\n    ~MyClass() { delete this; }\n    void fun(int) {}\n};\nint main(void)\n{\n    {\n        void (MyClass::*function)(int);\n        function = MyClass::fun;\n    }\n    system(\"pause\");\n    return 0;\n}",
      "optionB": "p=Test::fun()",
      "type": "1",
      "optionA": "p=fun",
      "question": "\u5df2\u77e5fun(int)\u662f\u7c7bTest\u7684\u516c\u6709\u6210\u5458\u51fd\u6570\uff0cp\u662f\u6307\u5411\u6210\u5458\u51fd\u6570fun()\u7684\u6307\u9488\uff0c\u91c7\u7528\uff08 \uff09\u662f\u6b63\u786e\u7684\u3002",
      "title": "C&C++"
    },
    {
      "answer": "1.\u7528\u6237\u8f93\u5165\u4e00\u4e9b\u5173\u952e\u5b57\u67e5\u8be2\u65f6\uff0c\u5c06\u7528\u6237\u7684\u76f8\u5173\u4fe1\u606f(ip,cookie,keyword,usernameetc.)\uff0c\u6682\u65f6\u5b58\u50a8\u3002\uff08\u4e34\u65f6\u5bf9\u8c61\uff0c\u4e34\u65f6\u6587\u4ef6\u7b49\u7b49\uff09\u3002\n2.\u5b9a\u65f6\u4ece\u6682\u65f6\u7f13\u5b58\u5904\uff0c\u4e00\u6b21\u884c\u8bfb\u53d6\uff0c\u5199\u5165\u5230\u6570\u636e\u5e93\u4e2d\u3002\n3.\u8bb0\u5f55\u4e0b\u6765\u5173\u952e\u5b57\u540e\uff0c\u9700\u8981\u5b9a\u65f6\u4ece\u6570\u636e\u5e93\u4e2d\u63d0\u53d6\u51fa\u6765\u3002\n4.\u6570\u636e\u5e93\u5b58\u50a8\u5efa\u8bae\u91c7\u7528Oracle\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6570\u636e\u91cf\u4f1a\u589e\u52a0\u5f88\u5feb\uff0c\u4e14\u5f88\u5927\u3002\u6700\u597d\u91c7\u7528\u5206\u8868\u5904\u7406\u3002\n5.\u5b9a\u65f6\u751f\u6210\u76f8\u5173\u5173\u952e\u5b57\u9875\u9762\uff0c\u53ef\u4ee5\u4e0e\u5b9a\u65f6\u5173\u952e\u5b57\u5199\u5165\u6570\u636e\u5e93\u653e\u5728\u4e00\u8d77\u3002",
      "ID": "55f2e51de4b0152a61143380",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4eac\u4e1c\u5546\u57ce\u7684\u5546\u54c1\u641c\u7d22\u529f\u80fd\u662f\u6574\u4e2a\u7f51\u7ad9\u67b6\u6784\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u6a21\u5757\u3002\u5f53\u7528\u6237\u5728\u641c\u7d22\u680f\u4e2d\u5199\u5165\u4ed6\u4eec\u60f3\u8981\u641c\u7d22\u7684\u5173\u952e\u5b57\u65f6\uff0c\u5f80\u5f80\u4f1a\u6709\u4e00\u4e9b\u70ed\u95e8\u7684\u5173\u952e\u8bcd\u51fa\u73b0\u5728\u63d0\u793a\u6846\u4e2d\u3002\u5bf9\u4e8e\u8fd9\u4e00\u529f\u80fd\u7684\u5b9e\u73b0\uff0c\u4f60\u8ba4\u4e3a\u9700\u8981\u6ce8\u610f\u4ec0\u4e48\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143259",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "struct B;struct A(B& _b;);struct B{A& _a;};",
      "optionC": "struct A{A& _a;};",
      "optionAnswer": "A",
      "answer": "struct\u6210\u5458\u7c7b\u578b\u4e0d\u53ef\u4ee5\u662f\u5b83\u81ea\u5df1\u3002\n\u56e0\u4e3a\u4f1a\u9012\u5f52\u5b9a\u4e49\u3002\n\u7406\u8bba\u4e0a\u8fd9\u6837\u5bfc\u81f4\u7ed3\u6784\u4f53\u7684\u5927\u5c0f\u4e0d\u80fd\u88ab\u8ba1\u7b97\uff08\u65e0\u9650\u5927\u5c0f\uff09\u3002\u6240\u4ee5\u4e0d\u80fd\u5728\u7ed3\u6784\u4f53\u91cc\u7684\u6210\u5458\u7c7b\u578b\u662f\u7ed3\u6784\u4f53\u672c\u8eab\u3002\n\u4f46\u662f\u6210\u5458\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u8be5\u7ed3\u6784\u4f53\u7684\u6307\u9488\u3002\u5c31\u50cf\u4f60\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u3002\u56e0\u4e3a\u6307\u9488\u7684\u5927\u5c0f\u662f\u5df2\u77e5\u7684\uff08\u968f\u7f16\u8bd1\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\u800c\u5b9a\uff09\u3002\n\u6240\u4ee5\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u8be5\u7ed3\u6784\u4f53\u7684\u6307\u9488\uff0c\u4f46\u4e0d\u662f\u8be5\u7ed3\u6784\u4f53\u3002",
      "optionB": "struct A{A* _a;};",
      "type": "1",
      "optionA": "struct A{A  _a};",
      "question": "\u4ee5\u4e0b\u5b9a\u4e49\u9519\u8bef\u7684\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114325e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "'\\09'",
      "optionC": "'a'",
      "optionAnswer": "D",
      "answer": "\u672c\u9898\u8003\u67e5\u5b57\u7b26\u5e38\u91cf,\u5b57\u7b26\u5e38\u91cf\u662f\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u4e00\u4e2a\u5b57\u7b26\u3002\u4f8b\u5982\uff1a'a'\u3001'='\u3001'+'\u7b49\u3002\u8f6c\u4e49\u5b57\u7b26\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5b57\u7b26\u5e38\u91cf\u3002\u8f6c\u4e49\u5b57\u7b26\u4ee5\u53cd\u659c\u7ebf\"\\\"\u5f00\u5934,\u540e\u8ddf\u4e00\u4e2a\u6216\u51e0\u4e2a\u5b57\u7b26\u3002D\u9009\u9879\u4e2d'\\09',\\0\u8868\u793a\u540e\u9762\u7684\u5b57\u7b26\u662f\u516b\u8fdb\u5236\u6570\u3002\u53c8\u51fa\u73b09\u6240\u4ee5\u662f\u975e\u6cd5\u7684,\u6545D\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "'\\b'",
      "type": "1",
      "optionA": "'\\007'",
      "question": "\u4ee5\u4e0b\u9009\u9879\u4e2d\u975e\u6cd5\u7684C\u8bed\u8a00\u5b57\u7b26\u5e38\u91cf\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de81f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5728\u4e00\u4e2a\u51fd\u6570\u5185\u7684\u590d\u5408\u8bed\u53e5\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u5728\u672c\u51fd\u6570\u8303\u56f4\u5185\u6709\u6548",
      "optionC": "\u5728\u4e00\u4e2a\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u53ea\u5728\u672c\u51fd\u6570\u8303\u56f4\u5185\u6709\u6548",
      "optionAnswer": "D",
      "answer": "\u81ea\u52a8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u4ec5\u9650\u4e8e\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u4e2a\u4f53\u5185\u3002\u5728\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u81ea\u52a8\u53d8\u91cf\uff0c\u53ea\u5728\u8be5\u51fd\u6570\u5185\u6709\u6548\u3002\u5728\u590d\u5408\u8bed\u53e5\u4e2d\u5b9a\u4e49\u7684\u81ea\u52a8\u53d8\u91cf\u53ea\u5728\u8be5\u590d\u5408\u8bed\u53e5\u4e2d\u6709\u6548\u3002\u81ea\u52a8\u53d8\u91cf\u5c5e\u4e8e\u52a8\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c\u53ea\u6709\u5728\u4f7f\u7528\u5b83\uff0c\u5373\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u51fd\u6570\u88ab\u8c03\u7528\u65f6\u624d\u7ed9\u5b83\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u5f00\u59cb\u5b83\u7684\u751f\u5b58\u671f\u3002\u51fd\u6570\u8c03\u7528\u7ed3\u675f\uff0c\u91ca\u653e\u5b58\u50a8\u5355\u5143\uff0c\u7ed3\u675f\u751f\u5b58\u671f\u3002\u56e0\u6b64\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u4e4b\u540e\uff0c\u81ea\u52a8\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u4fdd\u7559\u3002\u5728\u590d\u5408\u8bed\u53e5\u4e2d\u5b9a\u4e49\u7684\u81ea\u52a8\u53d8\u91cf\uff0c\u5728\u9000\u51fa\u590d\u5408\u8bed\u53e5\u540e\u4e5f\u4e0d\u80fd\u518d\u4f7f\u7528\uff0c\u5426\u5219\u5c06\u5f15\u8d77\u9519\u8bef\u3002",
      "optionB": "\u51fd\u6570\u4e2d\u7684\u5f62\u5f0f\u53c2\u6570\u662f\u5c40\u90e8\u53d8\u91cf",
      "type": "1",
      "optionA": "\u5728\u4e0d\u540c\u7684\u51fd\u6570\u4e2d\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u540d\u5b57\u7684\u53d8\u91cf",
      "question": "\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u4e0d\u6b63\u786e\u7684\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a6114313f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "int *ip=new int(12);\nfor(int i=0;i<12;++i){\nip[i]=i;\n}\ndelete []ip;",
      "optionC": "double *a=new double[1];\n//.... \ndelete a;",
      "optionAnswer": "C",
      "answer": "new \u548cdelete \u914d\u5957\u4f7f\u7528  free\u548cmalloc\u914d\u5957\u4f7f\u7528 AB\u9519\u8bef\nD\u662f\u56e0\u4e3a\u7533\u8bf7\u7684\u662f\u4e00\u4e2a\u5143\u7d20\uff0c\u540e\u9762\u8ddf\u768412\u662f\u521d\u59cb\u5316\u503c\uff0c\u800c\u4e0d\u662f\u6570\u7ec4\uff0c\u6240\u4ee5\u9519\u8bef\u3002\nnew\u548cdelete\u4e0efree\u548cmalloc\u7684\u5dee\u522b\u662f\u524d\u97622\u4e2a\u4f1a\u5206\u522b\u8c03\u7528\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570",
      "optionB": "int *ip=static_cast<int*>(malloc(sizeof(int)));\n*ip=10;\n//.....\ndelete ip;",
      "type": "1",
      "optionA": "int *a=new int(12);\n//..... \nfree(a);",
      "question": "\u4ee5\u4e0b\u6d89\u53ca\u5230\u5185\u5b58\u7ba1\u7406\u7684\u4ee3\u7801\u6bb5\u4e2d\uff0c\u6ca1\u9519\u8bef\u7684\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143235",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "rand()%(n-i)>m   m++",
      "optionC": "rand()%(n-i)>=m   m++",
      "optionAnswer": "B",
      "answer": "\u4e3a\u4e86\u65b9\u4fbf\u89e3\u91ca\u5047\u8bben\u7b49\u4e8e10\uff0cm\u7b49\u4e8e5\uff1a\n\u7b2c\u4e00\u6b21rand()%(n-0)\u7684\u4f59\u6570\u8303\u56f4\u662f0~9,\u6709\u53ef\u80fd\u5c0f\u4e8em(=5)\uff0c\u53ef\u4ee5\u8f93\u51fai=0\uff1b\u968f\u540ei++,m--\n\u7b2c\u4e8c\u6b21rand()%(n-1)\u7684\u4f59\u6570\u8303\u56f4\u662f0~8,\u6709\u53ef\u80fd\u5c0f\u4e8em(=4)\uff0c\u53ef\u4ee5\u8f93\u51fai=1\uff1b\u968f\u540ei++,m--\n...\n\u7b2c\u4e94\u6b21rand()%(n-4)\u7684\u4f59\u6570\u8303\u56f4\u662f0~5,\u6709\u53ef\u80fd\u5c0f\u4e8em(=1)\uff0c\u53ef\u4ee5\u8f93\u51fai=4\uff1b\u968f\u540ei++,m--\u5f97\u5230i=5,m=0\n\n\u7b2c\u516d\u6b21rand()%(n-5)\u7684\u4f59\u6570\u8303\u56f4\u662f0~4,\u4e0d\u53ef\u80fd\u5c0f\u4e8em(=0)\uff0c\u7b97\u6cd5\u7ed3\u675f\u3002\n\n\u5018\u82e5rand()%(n-i)<=m\uff0c\u5219\u7b2c\u516d\u6b21\u8fd8\u6ee1\u8db3\u6761\u4ef6\uff0c\u610f\u5473\u7740\u591a\u8f93\u51fa\u7684\u4e00\u6b21\uff1b\n\n\u800crand()%(n-i)>=m\uff0c\u5c06\u4f1a\u56e0\u4e3a\u5224\u65ad\u6761\u4ef6\u4e0d\u6ee1\u8db3\u800c\u63d0\u65e9\u9000\u51fa\u3002\u56e0\u6b64\u9009B",
      "optionB": "rand()%(n-i)<m   m--",
      "type": "1",
      "optionA": "rand()%(n-i)<=m   m--",
      "question": "\u4e0b\u9762\u7684\u7a0b\u5e8f\u53ef\u4ee5\u4ece0....n-1\u4e2d\u968f\u673a\u7b49\u6982\u7387\u7684\u8f93\u51fam\u4e2a\u4e0d\u91cd\u590d\u7684\u6570\u3002\u8fd9\u91cc\u6211\u4eec\u5047\u8bben\u8fdc\u5927\u4e8em\n\nknuth(int n, int m)\n{ \n    srand((unsigned int)time(0)); \n    for (int i = 0; i < n; i++) { \n        if ( ) { \n            cout << i << endl;\n            ( );\n        }\n     }\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143219",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "int a [ 10 ] ;",
      "optionC": "int * a ;",
      "optionAnswer": "B",
      "answer": "\u672c\u9898\u8003\u67e5typedef\u7684\u4f7f\u7528\u65b9\u6cd5,typedef\u5bf9\u5df2\u5b58\u5728\u7684\u7c7b\u578b\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u540d\u5b57,\u5176\u4e2d\u672c\u9898\u4e2dint * \u7528T\u6765\u4ee3\u66ff,\u6240\u4ee5\u5b9a\u4e49T a[ 10 ];\u5c31\u76f8\u5f53\u4e8e\u662fint * a[10];\u9009\u9879B\u6b63\u786e\u3002",
      "optionB": "int * a [ 10 ] ;",
      "type": "1",
      "optionA": "int ( * a ) [ 10 ] ;",
      "question": "\u82e5\u6709\u5b9a\u4e49\n\ntypedef int * T; \nT a[10]; \n\u5219a\u7684\u5b9a\u4e49\u4e0e\u4e0b\u9762\u54ea\u4e2a\u8bed\u53e5\u7b49\u4ef7?",
      "title": "C&C++"
    },
    {
      "answer": "int BinarySearch(char **ar,int begin,int end,char *v)\n{\n    int result=-1;\n    while(begin <= end)\n    {\n        int mid=begin+(end-begin)/2;\n        if(strcmp(ar[mid],v) > 0)\n            end=mid-1;\n        else if(strcmp(ar[mid],v) < 0)\n            begin=mid+1;\n        else\n        {\n            if(result < mid)\n                result=mid;\n            begin=mid+1;\n        }\n    }\n    return result;\n}",
      "ID": "55f2e51ee4b0152a611433b2",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4ee5\u4e0b\u4ee3\u7801\u529f\u80fd\uff1a\u627e\u51fa\u4e00\u4e2a\u6709\u5e8f(\u5b57\u5178\u5e8f)\u5b57\u7b26\u4e32\u6570\u7ec4arr\u4e2d\u503c\u7b49\u4e8e\u5b57\u7b26\u4e32v\u7684\u5143\u7d20\u7684\u7b26\u53f7\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5143\u7d20\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u5219\u8fd4\u56de\u5176\u4e2d\u5e8f\u53f7\u6700\u5927\u7684\u3002\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u6240\u6709\u9519\u8bef\uff0c\u76f4\u63a5\u5728\u4ee3\u7801\u53f3\u4fa7\u7a7a\u767d\u5904\u4fee\u6539\n\nInt bisearch(char**arr, int b, int e, char*v){\n    Int minIndex = b, maxIndex = e, midIndex;\n    while(minIndex<maxindex){\n        midIndex=(minIndex+maxIndex)/2;\n        if(strcmp(arr[midIndx],v<=0)){\n            minIndex = midIndex;\n        }else{\n            maxIndex=minIndex;\n        }\n   }\n        \n    if(!strcmp(arr[maxIndex],v)){\n        return maxIndex;\n    }else{\n        return -1;\n    }\n}",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c69",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u53d8\u91cfSample\u4e0ea\u6309\u4f4d\u4e0e\u7684\u7ed3\u679c\u4f5c\u4e3a\u51fd\u6570Set\u7684\u53c2\u6570",
      "optionC": "\u5c06a\u7684\u5730\u5740\u8d4b\u7ed9\u53d8\u91cfSet",
      "optionAnswer": "B",
      "answer": "\u6210\u5458\u51fd\u6570\u4f7f\u7528\u5bf9\u8c61\u7684\u5f15\u7528\u4f5c\u4e3a\u5f62\u53c2\u3002\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\u5c06\u5df2\u77e5\u5bf9\u8c61\u7684\u6240\u6709\u6570\u636e\u6210\u5458\u7684\n\u503c\u62f7\u8d1d\u7ed9\u76f8\u5e94\u5bf9\u8c61\u7684\u6240\u6709\u6570\u636e\u6210\u5458\uff0c\u4e0d\u4f1a\u5efa\u7acb\u4e34\u65f6\u5bf9\u8c61\uff0c\u8fd9\u91cc\u662f\u5bf9\u8c61\u7684\u5f15\u7528\u6240\u4ee5\u9009\u62e9B\u3002",
      "optionB": "a\u662f\u7c7bSample\u7684\u5bf9\u8c61\u5f15\u7528\uff0c\u7528\u6765\u4f5c\u51fd\u6570Set\uff08\uff09\u7684\u5f62\u53c2",
      "type": "1",
      "optionA": "\u6307\u5411\u7c7bSample\u7684\u540d\u4e3aa\u7684\u6307\u9488",
      "question": "\u82e5Sample\u7c7b\u4e2d\u7684\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u8bf4\u660e\u5982\u4e0b\uff1avoid set(Sample& a)\uff0c\u5219Sample& a\u7684\u542b\u4e49\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143154",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "* strp",
      "optionC": "strp[3]",
      "optionAnswer": "B",
      "answer": "\u672c\u9898\u8003\u67e5\u5b57\u7b26\u4e32\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570,\u672c\u9898\u4e2dp\u4f5c\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\u4f20\u5165fun\u4e2d,p\u6307\u5411\u7684\u5185\u5bb9\u5e76\u6ca1\u6709\u53d1\u751f\u53d8\u5316,\u6240\u4ee5\u9009\u9879B\u6b63\u786e\u3002",
      "optionB": "strp",
      "type": "1",
      "optionA": "str[0]",
      "question": "\u82e5\u6709\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\n\nchar str[4][12]={\"aa\", \"bbb\", \"cccc\", \"d\"},*strp[4];\nint i;\nfor(i=0;i<4;i++) \n    strp[i]=str[i];\n\u4e0d\u80fd\u6b63\u786e\u5f15\u7528\u5b57\u7b26\u4e32\u7684\u9009\u9879\u662f",
      "title": "C&C++"
    },
    {
      "answer": "\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027\u3002\n\u6240\u8c13\u201c\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u201d\uff0c\u5b9e\u9645\u4e0a\u662f\u6307\u64cd\u4f5c\u7cfb\u7edf\u5de5\u4f5c\u65f6\uff0c\u5176\u5404\u79cd\u8d44\u6e90\u53ef\u4ee5\u6839\u636e\u9700\u8981\u968f\u65f6\u8fdb\u884c\u52a8\u6001\u5206\u914d\u3002\u7531\u4e8e\u5404\u79cd\u8d44\u6e90\u53ef\u4ee5\u8fdb\u884c\u52a8\u6001\u5206\u914d\uff0c\u56e0\u6b64\u5176\u5904\u7406\u4e8b\u52a1\u7684\u80fd\u529b\u8f83\u5f3a\u3001\u901f\u5ea6\u8f83\u5feb\u3002 \u5e94\u8be5\u8bf4\uff0c\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u662f\u5728\u65e9\u671f\u7684\u64cd\u4f5c\u7cfb\u7edf\u57fa\u7840\u4e0a\u53d1\u5c55\u8d77\u6765\u7684\uff0c\u65e9\u671f\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u5404\u79cd\u8d44\u6e90\u90fd\u662f\u4e8b\u5148\u5df2\u7ecf\u5206\u914d\u597d\u7684\uff0c\u5de5\u4f5c\u671f\u95f4\u8fd9\u4e9b\u8d44\u6e90\u4e0d\u80fd\u518d\u91cd\u65b0\u8fdb\u884c\u5206\u914d\u3002\u56e0\u6b64\u5176\u5904\u7406\u4e8b\u52a1\u7684\u80fd\u529b\u8f83\u5dee\u3001\u901f\u5ea6\u8f83\u6162\uff0c\u73b0\u5728\u5219\u79f0\u4e4b\u4e3a\u201c\u975e\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u201d\u3002\u4f46\u201c\u975e\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u201d\u8bde\u751f\u65f6\uff0c\u5176\u529f\u80fd\u3001\u6027\u80fd\u7b49\u5728\u5f53\u65f6\u4e5f\u662f\u975e\u5e38\u5f3a\u7684\uff0c\u4eba\u4eec\u5728\u672a\u8ba4\u8bc6\u5230\u66f4\u597d\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u524d\u5e76\u4e0d\u5c06\u5176\u8fd9\u6837\u79f0\u547c\u3002\u5c06\u6765\u5982\u679c\u65b0\u7684\u3001\u529f\u80fd\u66f4\u5f3a\u7684\u3001\u5b9e\u65f6\u6027\u80fd\u66f4\u9ad8\u7684\u64cd\u4f5c\u7cfb\u7edf\u51fa\u73b0\uff0c\u4e5f\u8bb8\u73b0\u5728\u79f0\u4e4b\u4e3a\u201c\u5b9e\u65f6\u201d\u7684\u64cd\u4f5c\u7cfb\u7edf\u5219\u53ef\u80fd\u5c06\u8ba9\u4f4d\u4e8e\u65b0\u7684\u201c\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u201d\u4e86\u3002\u4ece\u8fd9\u65b9\u9762\u8bb2\u201c\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u201d\u662f\u4e00\u4e2a\u76f8\u5bf9\u7684\u6982\u5ff5\u7684",
      "ID": "55f2e51ee4b0152a611433ce",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027",
      "title": "C&C++"
    },
    {
      "answer": "(a):\u6839\u636euid,msg\u5206\u5e93\u8bb0\u5f55\u7528\u6237\u7684\u6d88\u606f.\u76f4\u63a5\u901a\u8fc7sql\u67e5\u8be2\u5b9e\u73b0\n\n(b):A follow B, B\u53d1\u6d88\u606f\u7684\u65f6\u5019\u4e3b\u52a8\u53d1\u9001\u6d88\u606fid\u5230A\u7684\u65b0\u9c9c\u4e8b\u5217\u8868.\n\u5982\u679cA\u662f\u50f5\u6b7b\u7528\u6237\u5c31\u901a\u8fc7\u62c9\u7684\u65b9\u5f0f,\u767b\u9646\u540e\u83b7\u53d6\u6240\u6709\u5173\u6ce8\u7528\u6237\u7684\u5fae\u8584",
      "ID": "55f2e51ee4b0152a611433a4",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5fae\u535a\u4e0a\uff0c\u6bcf\u4e2a\u7528\u6237\u53ef\u4ee5\u53d1\u9001\u4e00\u6761\u6d88\u606f\uff0c\u53ef\u4ee5 follow \u53e6\u4e00\u4e2a\u7528\u6237\uff0c \u5f53\u7528\u6237\u53d1\u9001\u6d88\u606f\u65f6\uff0c\u6240\u6709 follow \u4ed6\u7684\u7528\u6237\u90fd\u80fd\u770b\u89c1\u8fd9\u6761\u6d88\u606f\u3002\u5982 A follow B\uff0c\u5219 B \u7684\u6d88\u606f\uff0cA \u90fd\u80fd\u770b\u89c1\u3002\n\u5b9e\u73b0\u4e00\u4e2a\u5fae\u535a\u5ba2\u6d88\u606f\u5b58\u50a8\u7cfb\u7edf\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u53f0\u673a\u5668\u6765\u6ee1\u8db3\u6027\u80fd\u8981\u6c42\uff0c \u53ef\u4ee5\u518d\u6d77\u91cf\u7684\u7528\u6237\u548c\u6d88\u606f\u4e0b\uff0c\u5feb\u901f\u7684\u5b9e\u73b0\u4ee5\u4e0b\u4e24\u79cd\u67e5\u8be2\uff1a\na\uff09\u7ed9\u5b9a\u4e00\u4e2a\u7528\u6237\uff0c\u67e5\u8be2\u4ed6\u53d1\u9001\u7684\u6d88\u606f\uff0c\u6309\u6d88\u606f\u53d1\u9001\u65f6\u95f4\u6392\u5e8f\uff0c\u65b0 \u7684\u6d88\u606f\u5728\u524d\u3002\nb\uff09\u7ed9\u5b9a\u4e00\u4e2a\u7528\u6237\uff0c\u67e5\u8be2\u4ed6 follow \u7684\u6240\u6709\u4eba\u7684\u6d88\u606f\uff0c\u6309\u6d88\u606f\u53d1\u9001\u65f6 \u95f4\u6392\u5e8f\uff0c\u65b0\u7684\u6d88\u606f\u5728\u524d.",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143155",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u8d4b\u503c\u64cd\u4f5c\u51fd\u6570",
      "optionC": "\u975e\u9759\u6001\u6210\u5458\u51fd\u6570",
      "optionAnswer": "A",
      "answer": "\u6784\u9020\u51fd\u6570\u662f\u4e0d\u80fd\u88ab\u7ee7\u627f\u7684,\u4f46\u662f\u53ef\u4ee5\u88ab\u8c03\u7528,\u5982\u679c\u7236\u7c7b\u91cd\u65b0\u5b9a\u4e49\u4e86\u6784\u9020\u51fd\u6570,\u4e5f\u5c31\u662f\u6ca1\u6709\u4e86\u9ed8\u8ba4\u7684\u6784\u9020\u51fd\u6570,\u5b50\u7c7b\u521b\u5efa\u81ea\u5df1\u7684\u6784\u9020\u51fd\u6570\u7684\u65f6\u5019\u5fc5\u987b\u663e\u5f0f\u7684\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002\u800c\u5176\u4f59\u7684\u4e09\u4e2a\u5728\u6211\u4eec\u5e73\u5e38\u7684\u4f7f\u7528\u4e2d\u90fd\u53ef\u4ee5\u88ab\u7ee7\u627f\u4f7f\u7528\u3002",
      "optionB": "\u9759\u6001\u6210\u5458\u51fd\u6570",
      "type": "1",
      "optionA": "\u6784\u9020\u51fd\u6570",
      "question": "C++\u7c7b\u4f53\u7cfb\u4e2d\uff0c\u4e0d\u80fd\u88ab\u6d3e\u751f\u7c7b\u7ee7\u627f\u7684\u6709?",
      "title": "C&C++"
    },
    {
      "answer": "400",
      "ID": "55f2e51de4b0152a61143388",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4e24\u4e2a\u4eba\uff0cA\u7684\u901f\u5ea6\u4e3aa\uff0cB\u7684\u901f\u5ea6\u4e3ab,\u5728\u4e00\u76f4\u8def\u4e0a\u76f8\u5411\u800c\u884c\u3002\u5728A\u3001B\u8ddd\u79bb\u4e3as\u7684\u65f6\u5019\uff0cA\u653e\u51fa\u4e00\u4e2a\u9e3d\u5b50C\uff0c\u901f\u5ea6\u4e3ac\uff0cC\u98de\u5230B\u540e\uff0c\u7acb\u5373\u6389\u5934\u98de\u5411A\uff0c\u9047\u5230A\u5728\u6389\u5934\u98de\u5411B......\u5c31\u8fd9\u6837\u5728AB\u4e4b\u95f4\u98de\u6765\u98de\u53bb\uff0c\u76f4\u5230A\u3001B\u76f8\u9047\uff0c\u5047\u8bbea=40\uff0c b=60\uff0c c=400\uff0c s=100\uff0c\u8fd9\u671f\u95f4\u9e3d\u5b50\u5171\u98de\u884c\u8def\u7a0b\u4e3a?",
      "title": "C&C++"
    },
    {
      "answer": "a\u4e2d\u5947/\u5076\u6570\u7684\u6570\u91cf\u5fc5\u6709\u5176\u4e00\u4e0d\u5c0f\u4e8e\u957f\u5ea6\u7684\u4e00\u534a\u6240\u4ee5\u5fc5\u7136\u6709\u89e3\uff0c\u627e\u5230\u4e0d\u7b26\u5408\u7684\u4e24\u4e2a\u4ea4\u6362\n\n#include <algorithm>\nusing namespace std;\nclass Solution {\npublic:\n    /**\n     *  \u5947\u6570\u4f4d\u4e0a\u90fd\u662f\u5947\u6570\u6216\u8005\u5076\u6570\u4f4d\u4e0a\u90fd\u662f\u5076\u6570\n     *  \u8f93\u5165\uff1a\u6570\u7ec4arr\uff0c\u957f\u5ea6\u5927\u4e8e2\n     *  len\uff1aarr\u7684\u957f\u5ea6\n     *  \u5c06arr\u8c03\u6574\u6210\u5947\u6570\u4f4d\u4e0a\u90fd\u662f\u5947\u6570\u6216\u8005\u5076\u6570\u4f4d\u4e0a\u90fd\u662f\u5076\u6570\n     */\n    void oddInOddEvenInEven(vector<int>& arr, int len) {\n        int i = 0, j = 1;\n        while(i < len && j < len){\n            while(i < len && (arr[i] & 1) == 0) i += 2;\n            while(j < len && (arr[j] & 1) == 1) j += 2;\n            if(i < len && j < len) swap(arr[i], arr[j]);\n        }\n    }\n};",
      "ID": "55f2e51de4b0152a61143342",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e0d\u5c0f\u4e8e2\u7684\u6570\u7ec4arr\u3002 \u5199\u4e00\u4e2a\u51fd\u6570\u8c03\u6574arr\uff0c\u4f7farr\u4e2d\u8981\u4e48\u6240\u6709\u7684\u5076\u6570\u4f4d\u4e0a\u90fd\u662f\u5076\u6570\uff0c\u8981\u4e48\u6240\u6709\u7684\u5947\u6570\u4f4d\u4e0a\u90fd\u662f\u5947\u6570\u4e0a\u3002 \u8981\u6c42\uff1a\u5982\u679c\u6570\u7ec4\u957f\u5ea6\u4e3aN\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8bf7\u8fbe\u5230O(N)\uff0c\u989d\u5916\u7a7a\u95f4\u590d\u6742\u5ea6\u8bf7\u8fbe\u5230O(1),\u4e0b\u68070,2,4,6...\u7b97\u4f5c\u5076\u6570\u4f4d,\u4e0b\u68071,3,5,7...\u7b97\u4f5c\u5947\u6570\u4f4d\uff0c\u4f8b\u5982[1,2,3,4]\u8c03\u6574\u4e3a[2,1,4,3]\u5373\u53ef",
      "title": "C&C++"
    },
    {
      "answer": "Java \u548c C++ \u90fd\u662f\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u4f46\u4ed6\u4eec\u4e5f\u5b58\u5728\u7740\u4e00\u4e9b\u533a\u522b\n\n1\u3001Java \u4e0d\u652f\u6301\u591a\u7ee7\u627f\n2\u3001Java \u6ca1\u6709\u6307\u9488\u548c\u5f15\u7528\n3\u3001c++ \u9700\u8981\u7a0b\u5e8f\u5458\u624b\u52a8\u7ba1\u7406\u5806\u5185\u5b58\uff0cJava\u6709\u81ea\u52a8\u5783\u573e\u56de\u6536\u673a\u5236\n\nJava\u8fd0\u884c\u5728java\u865a\u62df\u673a\u4e0a\uff0c\u901f\u5ea6\u76f8\u5bf9\u8f83\u6162\uff0c\u5728\u5b9e\u65f6\u6027\u8981\u6c42\u9ad8\u7684\u573a\u5408\u5e94\u8be5\u7528c++\njava\u901a\u5e38\u5728\u624b\u673a\u4e0a\u5e94\u7528\u7684\u6bd4\u8f83\u591a\u3002",
      "ID": "55f2e51de4b0152a61143374",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "JAVA\u548cC++\u7684\u533a\u522b\u662f\u4ec0\u4e48?\u5206\u522b\u7528\u5728\u4ec0\u4e48\u60c5\u666f\u6bd4\u8f83\u597d?",
      "title": "C&C++"
    },
    {
      "answer": "\u6d4b\u8bd5\u6587\u4ef6\u7684\u5185\u5bb9\u8f93\u51fa\u7684\u662fstruct_pitem\u7ed3\u6784\u4e2d\u7684priority\u5b57\u6bb5\u768416\u8fdb\u5236\u5f62\u5f0f\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u6b63\u597d\u662f\u901a\u8fc7pqueue_insert\u51fd\u6570\u653e\u5165\u5230pqueue\u7ed3\u6784\u4e2d\u7684prio3\u3001prio1\u3001prio2\u7684\u503c\u3002\u901a\u8fc7\u89c2\u5bdf\u6d4b\u8bd5\u6587\u4ef6\u4e2d\u6bcf\u4e00\u884c\u7684\u503c\u53ef\u4ee5\u53d1\u73b0\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u5e8f\u5217\u4e3aprio3\u3001prio2\u3001prio1\uff0c\u8ddf\u63d2\u5165\u5b57\u7b26\u4e32\u7684\u987a\u5e8f\u5e76\u4e0d\u4e00\u81f4\uff0c\u8bf4\u660epqueue\u65e2\u4e0d\u662f\u5148\u8fdb\u5148\u51fa\uff08\u961f\u5217\uff09\uff0c\u4e5f\u4e0d\u662f\u540e\u8fdb\u5148\u51fa\uff08\u6808\uff09\u3002\n\n\u53e6\u5916\uff0c\u901a\u8fc7\u89c2\u5bdf\u6d4b\u8bd5\u6587\u4ef6\u53ef\u4ee5\u53d1\u73b0\u6d4b\u8bd5\u6587\u4ef6\u4e2d\u7684\u5b57\u7b26\u4e32\u662f\u6309\u7167\u4ece\u5c0f\u5230\u5927\u6392\u5217\u7684\uff0c\u800c\u4e14struct_pitem\u4e2d\u7684priority\u5b57\u6bb5\u542b\u4e49\u53ef\u4ee5\u7406\u89e3\uff0c\u8fd9\u662f\u4e00\u4e2a\u4f18\u5148\u7ea7\u961f\u5217\uff0cpriority\u5b57\u6bb5\u4ee3\u8868\u961f\u5217\u7684\u4f18\u5148\u7ea7\uff0cpriority\u5b57\u6bb5\u8d8a\u5c0f\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002\n\n\u7406\u89e3\u4e86\u961f\u5217\u7684\u7ed3\u6784\u540e\uff0c\u5c31\u53ef\u4ee5\u5199\u51fa\u63d2\u5165\u7684\u4ee3\u7801\u4e86\u3002\n\npitem *pqueue_insert(pqueue pq, pitem *item)\n{\n    if (!item)\n    {\n        return NULL;\n    }\n     \n    if (pq->count == 0)\n    {\n        pq->items = item;\n        count++;\n        return pq->items;\n    }\n     \n    // \u67e5\u627e\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\n    pitem *iter, *item2, *item_before = NULL;\n    iter = pqueue_iterator(pq);\n    for(item2=pqueue_next(&iter); item2!=NULL; item2=pqueue_next(&iter))\n    {\n        int result = 0;\n        for (int i=0; i<8; i++)\n        {\n            if (item[i] < item2[i])\n            {\n                result = -1;\n            }\n            else if (item[i] < item2[i])\n            {\n                result = 1;\n            }\n        }\n         \n        if (result == -1)\n        {\n            break;\n        }\n        item_before = item2;\n    }\n     \n    if (!item_before)\n    {\n        // item\u9700\u8981\u63d2\u5165\u5230\u961f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\n        item_before = pq->items;\n        pq->items = item;\n        item->next = item_before;\n    }\n    else\n    {\n        pitem *tmp = item_before->next;\n        item_before->next = item;\n        item->next = tmp;\n    }\n    pq->count++;\n    return item;\n}",
      "ID": "55f2e51de4b0152a6114333c",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6709pqueue.h\u5982\u4e0b\n\n#ifndef HEADER_PQUEUE_H\n#define HEADER_PQUEUE_H\ntypedef struct_pqueue{\n    pitem *items;\n     int count;\n}pqueue_s;\ntypedef struct_pqueue *pqueue;\ntypedef struct_pitem{\n    unsigned char priority[8];\n    void *data;\n    struct_pitem *next;\n}pitem;\ntypedef struct_pitem *piterator;\npitem *pitem_new(unsigned char *prio64be,void *data);\nvoid pitem_free(pitem *item);\n  \npqueue pqueue_new(void);\nvoid pqueue_free(pqueue pq);\npitem *pqueue_insert(pqueue pq,pitem *item);\npitem *pqueue_peek(pqueue pq);\npitem *pqueue_pop(pqueue pq);\npitem *pqueue_find(pqueue pq,unsigned char *prio64be);\npitem *pqueue_iterator(pqueue pq);\npitem *pqueue_next(piterator *iter);\nint pqueue_size(pqueue pq);\n#endif /*! HEADER_PQUEUE_H */\npq_test.c\u5982\u4e0b\uff1a\n\n#include<stdlib.h>\n#include<string.h>\n#include\"pqueue.h\"\n/*remember to change expected.txt if you change there values*/\nunsigned char prio1[8]=\"supercal\";\nunsigned char prio2[8]=\"ifragili\";\nunsigned char prio3[8]=\"sticexpi\";\nstatic void\npqueue_print(pqueue pq)\n{\n     pitem *iter,*item;\n     iter=pqueue_iterator(pq);\n     for(item=pqueue_next(&iter);item!=NULL;\n         item=pqueue_next(&iter)){\n         printf(\"item\\t%02x%02x%02x%02x%02x%02x%02x%02x\\n\",\n             item ->priority[0],item->priority[1],\n             item ->priority[2],item->priority[3],\n             item ->priority[4],item->priority[5],\n             item ->priority[6],item->priority[7],\n         }\n}\nint main(void)\n{\n     pitem *item;\n     pqueue pq;\n     pq=pqueue_new();\n     item=pitem_new(prio3,NULL);\n     pqueue_insert(pq,item);\n  \n     item=pitem_new(prio1,NULL);\n     pqueue_insert(pq,item);\n  \n     item=pitem_new(prio2,NULL);\n     pqueue_insert(pq,item);\n     item=pqueue_find(pq,prio1);\n     fprintf(stderr,\"found %p\\n\",item->priority);\n     item=pqueue_find(pq,prio2);\n     fprintf(stderr,\"found %p\\n\",item->priority);\n  \n     item=pqueue_find(pq,prio3);\n     fprintf(stderr,\"found %p\\n\",item->priority);\n      \n     pqueue_print(pq);\n     for(item=pqueue_pop(pq);item!=NULL;item=pqueue_pop(pq))\n     pitem_free(item);\n  \n     pqueue_free(pq);\n     return 0;\n}\npq_test.sh\u5982\u4e0b\uff1a\n\n#!/bin/sh\nset -e\n./pq_test | cmp $srcdir/pq_expected.txt-\npq_expected.txt\u5982\u4e0b\uff1a\nitem 6966726167696c69\nitem 7374696365787069\nitem 737570657263616c\n\n1.\u6839\u636e\u6d4b\u8bd5\u4ee3\u7801\u63cf\u8ff0pqueue\u7684\u5de5\u4f5c\u539f\u7406\u3002\n2.\u8bf7\u5b9e\u73b0 pitem *pqueue_insert(pqueue pq,pitem *item);",
      "title": "C&C++"
    },
    {
      "ID": "55f2dfa6e4b0152a61142e2b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "None of the above",
      "optionC": "Port numbers below 1024 are called well-known ports and are reserved for standard services. For example,port 21 is reserved for FTP protocol, and port 25 is for SMTP protocol.",
      "optionAnswer": "C",
      "answer": "C\u662f\u6b63\u786e\u7684",
      "optionB": "TCP supports multicasting.",
      "type": "1",
      "optionA": "TCP provides a way for applications to send encapsulated IP datagrams and send them without having to establish a connection.",
      "question": "Which statement(s) below regarding TCP(Transmission Control Protocol) is(are) correct?",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de818",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "char?str[]?=?{\"a\",?\"b\"};",
      "optionC": "char?str[2][3]={{'a','b'},{'e','d'},{'e','f'}};",
      "optionAnswer": "B",
      "answer": "A\u4e2d\u5b57\u7b26\u53d8\u91cf\u4e0d\u80fd\u5b58\u653e\u5b57\u7b26\u4e32\uff0cC\u4e2d\u7ef4\u5ea6\u9519\u4e86\uff0cD\u548cA\u7684\u95ee\u9898\u4e00\u6837",
      "optionB": "char?str[2][3]={\"a\",\"b\"};",
      "type": "1",
      "optionA": "char?str[2]?=?{\"a\",\"b\"};",
      "question": "\u4e0b\u9762\u5173\u4e8e\u6570\u7ec4\u7684\u521d\u59cb\u5316\u6b63\u786e\u7684\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114324b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "p=A\u6216p=&A[0][0]",
      "optionC": "p=A[0]\u6216p=&A[0][0]",
      "optionAnswer": "C",
      "answer": "int A[10][10];\n    int *p;\n     \n    //p = A;//\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\n    //cout<<p<<\",\"<<*p<<endl;\n    p = A[0];\n    cout<<p<<\",\"<<*p<<endl;\n    //p = A[0][0]; //\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\n    //cout<<p<<\",\"<<*p<<endl;\n    p = &A[0][0];\n    cout<<p<<\",\"<<*p<<endl;\n \n\u7b54\u6848\u4e3aC",
      "optionB": "p=A[0]\u6216p=A[0][0]",
      "type": "1",
      "optionA": "p=A\u6216p=A[0]",
      "question": "\u8981\u4f7f\u6307\u9488\u53d8\u91cfp\u6307\u54112\u7ef4\u6570\u7ec4A\u7684\u7b2c1\u4e2a\u5143\u7d20\uff0c\u6b63\u786e\u7684\u8d4b\u503c\u8868\u8fbe\u5f0f\u662f\uff08\uff09\u3002",
      "title": "C&C++"
    },
    {
      "answer": "//\u4e8c\u5206\u6cd5\u6c42\u89e3\n//a^b = (a ^ (b/2))^2\nint GetPow(int a, int b) {\n    if (b == 1 || b == 0) {\n        return a;\n    }\n    if (b % 2) {\n        return ((int) (pow((float) GetPow(a, b / 2), 2) * a) % 1000);\n    } else {\n        return ((int) (pow((float) GetPow(a, b / 2), 2)) % 1000);\n    }\n}",
      "ID": "55f2e51ee4b0152a611433a3",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u4e24\u4e2a\u6570A\u3001B\uff080\uff0c<a,b<100000\uff09\uff0c\u6c42A^B\u4e2d\u6700\u540e\u4e09\u4f4d\u6570\u662f\u591a\u5c11\u3002\u8bf7\u7b80\u8981\u63cf\u8ff0\u4f60\u7684\u601d\u8def\u3002</a,b< ",
      "title": "C&C++"
    },
    {
      "ID": "55f2dfa6e4b0152a61142e2c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "DES",
      "optionC": "RC4",
      "optionAnswer": "A",
      "answer": "MD5\u662f\u4e0d\u53ef\u9006\u52a0\u5bc6\uff0c\u4e0d\u53ef\u4ee5\u7528\u6765\u52a0\u5bc6\u6587\u672c\uff0cDES\u548cRC4\u662f\u5bf9\u79f0\u52a0\u5bc6\uff0cRSA\u662f\u4e0d\u5bf9\u79f0\u52a0\u5bc6\uff0c\u90fd\u53ef\u4ee5\u7528\u4e8e\u6587\u672c\u52a0\u5bc6\u3002",
      "optionB": "RSA",
      "type": "1",
      "optionA": "MD5",
      "question": "Which of the following method(s) CANNOT be used for Text-encryption:",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c7f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6d3e\u751f\u7c7b\u6307\u9488\u8c03\u7528\u865a\u51fd\u6570",
      "optionC": "\u57fa\u7c7b\u5bf9\u8c61\u8c03\u7528\u865a\u51fd\u6570",
      "optionAnswer": "A",
      "answer": "\u4f7f\u7528\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u7531\u6307\u5411\u6216\u5f15\u7528\u7684\u5bf9\u8c61\u6765\u51b3\u5b9a\u8c03\u7528\u4e0d\u540c\u7c7b\u7684\u865a\u51fd\u6570\u3002\u6240\u4ee5\u9009\n\u62e9A\u3002",
      "optionB": "\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8c03\u7528\u865a\u51fd\u6570",
      "type": "1",
      "optionA": "\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u865a\u51fd\u6570",
      "question": "\u8981\u91c7\u7528\u52a8\u6001\u591a\u6001\u6027\uff0c\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c0a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4fdd\u8bc1\u57fa\u7c7b\u516c\u6709\u6210\u5458\u5728\u5b50\u7c7b\u4e2d\u53ef\u4ee5\u88ab\u8bbf\u95ee\u3002",
      "optionC": "\u4fdd\u8bc1\u57fa\u7c7b\u4fdd\u62a4\u6210\u5458\u5728\u5b50\u7c7b\u4e2d\u53ef\u4ee5\u88ab\u8bbf\u95ee\u3002",
      "optionAnswer": "A",
      "answer": "this\u6307\u9488\u662f\u9690\u85cf\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u6307\u9488\u6765\u8bbf\u95ee\u8c03\u7528\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\u3002\u57fa\u7c7b\u7684\u6210\u5458\u5728\u6d3e\u751f\n\u7c7b\u4e2d\u80fd\u5426\u8bbf\u95ee\uff0c\u4e0e\u7ee7\u627f\u65b9\u5f0f\u6709\u5173\uff0c\u4e0ethis\u6ca1\u6709\u5173\u7cfb\u3002\u6240\u4ee5\u9009\u62e9A\u9879\u3002",
      "optionB": "\u4fdd\u8bc1\u57fa\u7c7b\u79c1\u6709\u6210\u5458\u5728\u5b50\u7c7b\u4e2d\u53ef\u4ee5\u88ab\u8bbf\u95ee\u3002",
      "type": "1",
      "optionA": "\u4fdd\u8bc1\u6bcf\u4e2a\u5bf9\u8c61\u62e5\u6709\u81ea\u5df1\u7684\u6570\u636e\u6210\u5458\uff0c\u4f46\u5171\u4eab\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u7684\u4ee3\u7801",
      "question": "\u5173\u4e8ethis\u6307\u9488\u4f7f\u7528\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143146",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "8",
      "optionC": "2",
      "optionAnswer": "A",
      "answer": "\u6570\u7ec4\u4e3a3\u884c4\u5217\u5982\u4e0b\n3 4 0 0\n2 8 6 0\n0 0 0 0\na[1][2]\u6c42\u7684\u662f\u7b2c\u4e8c\u884c\u7b2c\u4e09\u5217\u7684\u503c\uff0c\u6240\u4ee5\u4e3a6",
      "optionB": "4",
      "type": "1",
      "optionA": "6",
      "question": "\u5047\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u7684\u5b9a\u4e49\u8bed\u53e5\u4e3a\u201cint a[3][4]={{3,4},{2,8,6}};\u201d\uff0c\u5219\u5143\u7d20a[1][2]\u7684\u503c\u4e3a",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c28",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u91cd\u8f7d\u51fd\u6570\u540d\u53ef\u4ee5\u4e0d\u540c",
      "optionC": "\u91cd\u8f7d\u51fd\u6570\u5fc5\u987b\u6709\u4e0d\u540c\u7684\u5f62\u53c2\u5217\u8868",
      "optionAnswer": "C",
      "answer": "\u51fd\u6570\u7684\u91cd\u8f7d\u5fc5\u987b\u51fd\u6570\u540d\u76f8\u540c\u800c\u5f62\u53c2\u7c7b\u578b\u6216\u4e2a\u6570\u4e0d\u540c\uff0c\u4e0e\u8fd4\u56de\u503c\u65e0\u5173\u3002",
      "optionB": "\u91cd\u8f7d\u51fd\u6570\u53c2\u6570\u4e2a\u6570\u5fc5\u987b\u76f8\u540c",
      "type": "1",
      "optionA": "\u91cd\u8f7d\u51fd\u6570\u5fc5\u987b\u5177\u6709\u4e0d\u540c\u7684\u8fd4\u56de\u503c\u7c7b\u578b",
      "question": "\u4e0b\u5217\u6709\u5173\u91cd\u8f7d\u51fd\u6570\u7684\u8bf4\u6cd5\u4e2d\u6b63\u786e\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55e429cfe4b0152a610c8343",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u96be\u5ea6",
      "optionC": "\u73b0\u5b9e\u6027",
      "optionAnswer": "B",
      "answer": "\u7b97\u6cd5\u7684\u8ba1\u7b97\u91cf\u7684\u5927\u5c0f\u79f0\u4e3a\u8ba1\u7b97\u7684\uff08B. \u590d\u6742\u6027 \uff09\u3002",
      "optionB": "\u590d\u6742\u6027",
      "type": "1",
      "optionA": "\u6548\u7387",
      "question": "\u7b97\u6cd5\u7684\u8ba1\u7b97\u91cf\u7684\u5927\u5c0f\u79f0\u4e3a\u8ba1\u7b97\u7684()",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7fd",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u90fd\u4e0d\u5bf9",
      "optionC": "\u94fe\u63a5\u9519\u8bef",
      "optionAnswer": "A",
      "answer": "\u8c03\u7528\u9759\u6001\u51fd\u6570\u672c\u8eab\u4e0d\u4f1a\u6267\u884c\u6784\u9020\u51fd\u6570\uff0c \u4f46?get?()\u5b9e\u4f8b\u5316\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6240\u4ee5\u5728get\uff08\uff09\u91cc\u9762\u8c03\u7528\u4e86\u6784\u9020\u51fd\u6570\u3002",
      "optionB": "\u7f16\u8bd1\u9519\u8bef",
      "type": "1",
      "optionA": "\u8f93\u51faA()",
      "question": "\u7f16\u8bd1\u8fd0\u884c\u5982\u4e0b\u7a0b\u5e8f\u4f1a\u51fa\u73b0\u4ec0\u4e48\u7ed3\u679c<p class=\"p0\">\n    #include <iostream>\nusing namespace std;\n \nclass A\n{\n    A()\n    {\n        printf(\"A()\");\n    }\npublic:\n    static A &get()\n    {\n        static A a;\n        return a;\n    }\n};\nint main()\n{\n    A::get();\n    return 0;\n}\n \n \n</p>",
      "title": "C&C++"
    },
    {
      "answer": "\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 4 5\nstrlen\u53ea\u662f\u5bf9\u4f20\u9012\u7ed9Func \u51fd\u6570\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u6c42\u957f\u5ea6\uff0c\u8ddfstr_arg\u4e2d\u7684\u90a3\u4e2a2 \u662f\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u7684\uff0c \u5373\u4f7f\u628a2 \u6539\u4e3a200 \u4e5f\u662f\u4e0d\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u7684",
      "ID": "55f2e51ee4b0152a611433e3",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\u591a\u5c11\uff1f\nvoid Func(char str_arg[2])\n{\n int m = sizeof(str_arg); //\u6307\u9488\u7684\u5927\u5c0f\u4e3a4\n int n = strlen(str_arg); //\u5bf9\u6570\u7ec4\u6c42\u957f\u5ea6\uff0cstr_arg \u540e\u9762\u7684\u90a3\u4e2a2\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\uff0c\u6570\u7ec4\u5df2\u7ecf\u9000\u5316\u4e3a\u6307\u9488\u4e86\n printf(\"%d\\n\",m);\n printf(\"%d\\n\",n);\n}\nint main(void)\n{\n char str[]=\"Hello\";\n Func(str);\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143260",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "foobarb_fpp",
      "optionC": "barfoob_foo",
      "optionAnswer": "A",
      "answer": "A *p=newB;// A\u7c7b\u6307\u9488\u6307\u5411\u4e00\u4e2a\u5b9e\u4f8b\u5316\u5bf9\u8c61B\uff0c B\u7c7b\u7ee7\u627fA\u7c7b\uff0c\u5148\u8c03\u7528\u7236\u7c7b\u7684\u65e0\u53c2\u6784\u9020\u51fd\u6570\uff0cbar()\u8f93\u51fabar\uff0cB\u7c7b\u6ca1\u6709\u81ea\u5df1\u663e\u793a\u5b9a\u4e49\u7684\u6784\u9020\u51fd\u6570\u3002\np->foo();//\u6267\u884cB\u7c7b\u91cc\u7684foo()\u51fd\u6570\uff0c\u56e0\u4e3afoo\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u76f4\u63a5\u8c03\u7528\u7236\u7c7b\u7684foo\u51fd\u6570\uff0c\u8f93\u51fafoo\np->bar();//\u6267\u884cB\u7c7b\u7684bar()\u51fd\u6570, \u8be5\u51fd\u6570\u4e3a\u865a\u51fd\u6570\uff0c\u8c03\u7528\u5b50\u7c7b\u7684\u5b9e\u73b0\uff0c\u8f93\u51fab_bar",
      "optionB": "foobarb_bar",
      "type": "1",
      "optionA": "barfoob_bar",
      "question": "\u6709\u5982\u4e0bC++\u4ee3\u7801\uff1a\n\nstruct A{\n  void foo(){printf(\"foo\");}\n  virtual void bar(){printf(\"bar\");}\n  A(){bar();}\n};\nstruct B:A{\n  void foo(){printf(\"b_foo\");}\n  void bar(){printf(\"b_bar\");}\n};\n\u90a3\u4e48 \n1\n2\n3\nA *p=new B;\np->foo();\np->bar();\n\u8f93\u51fa\u4e3a\uff1a  ",
      "title": "C&C++"
    },
    {
      "answer": "-5",
      "ID": "55f2e51ee4b0152a6114339d",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5e97\u4e3b\u9500\u552e\u7535\u8bdd\u5361\uff0c\u4ed6\u4ee560\u5143\u7684\u4ef7\u683c\u5404\u9500\u552e\u4e86\u4e24\u5f20\u3002\u5176\u4e2d\u4e00\u5f20\u662f\u8d5a\u4e8620%\uff0c\u53e6\u4e00\u5f20\u662f\u4e8f\u4e8620%\u3002 \u8bf7\u95ee\u4ed6\u603b\u5171\u8d5a\u4e86____\u94b1(\u4e8f\u4e86\u7684\u8bdd\u8bf7\u7528\u8d1f\u6570\u8868\u793a)\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "#define LONG_MAX 2147483647L  \n#define LONG_MIN (-2147483647L-1L)\n#include<stdio.h>\nlong strtol ( char *  nptr, char  **  endptr, int  base   )  {\n      const char *s = nptr;\n     unsigned long acc;\n      unsigned char c;\n    unsigned long cutoff;\n     int neg = 0,any, cutlim;\n//\u5224\u65ad\u6b63\u8d1f\u53f7   \n  do{ c = *s++;\n      } while (c==' ');\n      if (c == '-')\n    {\n          neg = 1;\n         c = *s++;\n    }\n      else if (c == '+')\n          c = *s++;\n//\u5224\u65ad\u8fdb\u5236\u6570\n      if ((base == 0 || base == 16) &&\n          c == '0' && (*s == 'x' || *s == 'X'))\n      {\n          c = s[1];\n          s += 2;\n          base = 16;\n      }\n      if (base == 0)\n          base = c == '0' ? 8 : 10;\n  \n//\u6ea2\u51fa\u5904\u7406\n     cutoff = neg ? -(unsigned long) LONG_MIN : LONG_MAX;\n     cutlim = cutoff % (unsigned long) base;\n      cutoff /= (unsigned long) base;\n      for (acc = 0, any = 0;; c = *s++)\n      {\n         if (c>='0'&&c<='9')\n              c -= '0';\n          else if ((c>='A'&&c<='Z')||(c>='a'&&c<='z'))\n             c -= (c>='A'&&c<='Z') ? 'A' - 10 : 'a' - 10;\n          else\n              break;\n          if ((int) c >= base)\n              break;\n          if (any < 0 || acc > cutoff || acc == cutoff && (int) c > cutlim)\n              any = -1;\n          else\n          {\n              any = 1;\n              acc *= base;\n             acc += c;\n          }\n      }\n//\u8d85\u8fc7\u8303\u56f4\u5219\u8f93\u51farange error\n     if (any < 0)\n      {\n        // acc = neg ? LONG_MIN : LONG_MAX;\n          //errno = ERANGE;\n    printf(\"range error.\\n\");\n      }\n      else if (neg)\n          acc = -acc;\n      if (endptr != 0)\n         *endptr = any ?(char *) ( s - 1) : (char *) nptr;\n      return acc;\n }\nint main(){\n char*nptr=\"-0x12G 00,\";char  *endptr[100];int  base=0;\n long n= strtol ( nptr,   endptr, base) ;\n printf(\"n=%ld\\nendptr=%s\\n\",n,*endptr);\n}",
      "ID": "55f2e51de4b0152a61143389",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5b9e\u73b0strtol\u51fd\u6570\uff0c\u5176\u539f\u578b\u5982\u4e3aint strtol(const char *num_str, char **endptr, int base)\uff0cnum_str\u5b58\u653e\u5f85\u8f6c\u6362\u7684\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u662f\u8d1f\u6570\u4e5f\u53ef\u4ee5\u662f\u6b63\u6570\uff1bendptr\u6307\u5411\u7b2c\u4e00\u4e2a\u975e\u6cd5\u5b57\u7b26\u7684\u5730\u5740\uff0c\u5982\u679cendptr\u4e3anull\u5219\u4e0d\u6307\u5411\u7b2c\u4e00\u4e2a\u975e\u6cd5\u5b57\u7b26\u7684\u5730\u5740\uff1bbase\u7528\u4e8e\u6307\u793a\u8fdb\u5236\uff0c\u82e5base\u4e3a0\uff0c\u5219\u6839\u636enum_str\u7684\u6307\u793a\u6765\u8f6c\u6362\u3002\u51fd\u6570\u5fc5\u987b\u68c0\u67e5\u6ea2\u51fa\uff0c\u5982\u679c\u6b63\u6570\u6ea2\u51fa\uff0c\u8fd4\u56deint_max\uff1b\u82e5\u8d1f\u6570\u6ea2\u51fa\uff0c\u8fd4\u56deint_min\u3002",
      "title": "C&C++"
    },
    {
      "answer": "int getLongestSubString(char* query, char* text){\n int imax = INT_MIN;\n int m = strlen(query);\n int n = strlen(text);\n vector<vector<int>> temp(m, vector<int>(n, 0));\n \n for (int i = 0; i < m; i ++){\n  for (int j = 0; j < n; j ++){\n   if (query[i] == text[j]){\n    if (i == 0 || j == 0){\n     temp[i][j] = 1;\n    }\n    else{\n     temp[i][j] = temp[i - 1][j - 1] + 1;\n    }\n    \n    imax = max(imax, temp[i][j]);\n   }\n  }\n }\n \n return imax;\n}",
      "ID": "55f2e51ce4b0152a61143332",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u4e00\u4e2aquery\u548c\u4e00\u4e2atext\uff0c\u5747\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u8981\u6c42\u5728text\u4e2d\u627e\u51fa\u4ee5\u540c\u6837\u7684\u987a\u5e8f\u8fde\u7eed\u51fa\u73b0\u5728query\u4e2d\u7684\u6700\u957f\u8fde\u7eed\u5b57\u6bcd\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u4f8b\u5982\uff0cquery\u4e3a \"acbac\",text\u4e3a\"acaccbabb\",\u90a3\u4e48text\u4e2d\u7684\"cba\"\u4e3a\u6700\u957f\u7684\u8fde\u7eed\u51fa\u73b0\u5728query\u4e2d\u7684\u5b57\u6bcd\u5e8f\u5217\uff0c\u56e0\u6b64\uff0c\u8fd4\u56de\u7ed3\u679c\u5e94\u8be5\u4e3a\u5176\u957f\u5ea63\u3002\u8bf7\u6ce8\u610f\u7a0b\u5e8f\u6548\u7387\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u7c7b\u578b\u58f0\u660e\u7b26\u5728C\u8bed\u8a00\u91cc\u9762\u4e3b\u8981\u6709\u4e09\u4e2a\u7528\u9014\uff1a\n1.\u58f0\u660e\u9759\u6001\u5c40\u90e8\u53d8\u91cf\n2.\u58f0\u660e\u9759\u6001\u5916\u90e8\u5168\u5c40\u53d8\u91cf\n3.\u58f0\u660e\u9759\u6001\u5916\u90e8\u51fd\u6570",
      "ID": "55f2e51ee4b0152a611433cc",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09",
      "title": "C&C++"
    },
    {
      "answer": "# include <string.h>\n#include <stdio.h>\n#include <iostream>\n#include <stdlib.h>\nint fun1(int x)\n{\n int count  = 0;\n while(x)\n {\n  count++;\n  x=x&(x-1);\n }\n return count;\n}\nvoid swap(int *i,int *j)\n{\n *i = *i^*j;\n *j = *i^*j;\n *i = *i^*j;\n}\nint main()\n{\n  int n =5;\n  int a[n];\n  int x;\n  int count1,count2;\n  for (int i = 0; i < n; ++i)\n  {\n  printf(\"please input the number:\\n\");\n  std::cin>>x;\n  a[i] = x;\n  }\n  for (int i = 1; i < n; ++i)\n  {\n   for (int j = n-1; j >=i; --j)\n   {\n      count1 = fun1(a[j]);\n      count2 = fun1(a[j-1]);\n      if(count1 == count2) \n      {\n       if(a[j]<a[j-1])   swap(&a[j],&a[j-1]);\n       else continue;\n      }\n      else if(count1 < count2)   swap(&a[j],&a[j-1]);\n      else continue;\n   }\n  for (int i = 0; i < n; ++i)\n  {\n   std::cout<<a[i]<<\"  \";\n  }\n  printf(\"\\n\");\n  }\n\n}",
      "ID": "55f2e51de4b0152a6114335f",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5bf9\u4e00\u4e2aunsigned int32\u578b\u6570\u7ec4a\u8fdb\u884c\u6392\u5e8f\uff0c\u8bb0ni\u4e3aa[i]\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\"1\"\u7684\u6570\u91cf\uff0c\u6307\u5b9a\u6392\u5e8f\u7b56\u7565\u5982\u4e0b\uff1a\na)            \u5982\u679cni < nj\uff0c\u5219a[i]\u6392\u5728a[j]\u524d\u9762\nb)           \u5982\u679cni == nj\uff0c\u6309\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f",
      "title": "C&C++"
    },
    {
      "answer": "\u7b2c\u4e00--\u4e94\u5c40\uff1a\u5206\u62105\u4e2a\u7ec4\uff0c\u53ef\u4ee5\u5f97\u51fa5\u4e2a\u7ec4\u7684\u7b2c\u4e00\u540d\n\u7b2c\u516d\u5c40\uff1a5\u4e2a\u7b2c\u4e00\u540d\u4e00\u8d77\u8dd1\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f97\u51fa\u6700\u5feb\u7684\u90a3\u4e00\u5339\u3002\n\u7b2c\u4e03\u5c40\uff1a\u53ef\u80fd\u6210\u4e3a2\uff0c3\u540d\u7684\u518d\u8d5b\u4e00\u6b21\uff0c\u5305\u62ec\u6700\u5feb\u7ec4\u76842\uff0c3\u540d\uff0c\u6b21\u5feb\u7ec4\u76841\uff0c2\u540d\uff0c\u7b2c\u4e09\u5feb\u7ec4\u7684\u7b2c1\u540d\u3002\n\n\u6240\u4ee5\u4e00\u5171\u662f7\u6b21",
      "ID": "55f2e51de4b0152a61143393",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "25\u5339\u9a6c\u8d5b\u8dd1\uff0c\u6bcf\u6b21\u53ea\u80fd\u8dd15\u5339\u9a6c\uff0c\u6700\u5feb\u80fd\u8d5b\u51e0\u6b21\u627e\u51fa\u8dd1\u5f97\u6700\u5feb\u76843\u5339\u9a6c\uff1f\u8d5b\u8dd1\u4e0d\u80fd\u8ba1\u65f6\uff0c\u5e76\u5047\u8bbe\u6bcf\u5339\u9a6c\u7684\u901f\u5ea6\u662f\u6052\u5b9a\u4e0d\u53d8\u7684\u3002\u8bf7\u7ed9\u51fa\u7b54\u6848\u5e76\u63cf\u8ff0\u6bd4\u8d5b\u8fc7\u7a0b\u3002",
      "title": "C&C++"
    },
    {
      "answer": "5",
      "ID": "55f2e51ce4b0152a61143328",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4e00\u4e2a\u5177\u67093\u4e2a\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u53ef\u4ee5\u6709___\u79cd\u5f62\u6001",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143242",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e00\u4e2a\u53c2\u6570\u4e0d\u53ef\u4ee5\u65e2\u662fconst\u53c8\u662fvolatile",
      "optionC": "volatile\u9002\u7528\u4e8e\u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\u88ab\u51e0\u4e2a\u4efb\u52a1\u5171\u4eab\u7684\u53d8\u91cf",
      "optionAnswer": "D",
      "answer": "\u4e00\u4e2a\u53c2\u6570\u65e2\u53ef\u4ee5\u662fconst\u8fd8\u53ef\u4ee5\u662fvolatile. \u4e00\u4e2a\u4f8b\u5b50\u662f\u53ea\u8bfb\u7684\u72b6\u6001\u5bc4\u5b58\u5668\u3002\u5b83\u662fvolatile\u56e0\u4e3a\u5b83\u53ef\u80fd\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u6539\u53d8\u3002\u5b83\u662fconst\u56e0\u4e3a\u7a0b\u5e8f\u4e0d\u5e94\u8be5\u8bd5\u56fe\u53bb\u4fee\u6539\u5b83\u3002",
      "optionB": "\u4f18\u5316\u5668\u5728\u7528\u5230volatile\u53d8\u91cf\u65f6\u5fc5\u987b\u6bcf\u6b21\u90fd\u5c0f\u5fc3\u5730\u91cd\u65b0\u8bfb\u53d6\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u91cc\u7684\u5907\u4efd",
      "type": "1",
      "optionA": "\u5f53\u8bfb\u53d6\u4e00\u4e2a\u53d8\u91cf\u65f6\uff0c\u4e3a\u63d0\u9ad8\u5b58\u53d6\u901f\u5ea6\uff0c\u7f16\u8bd1\u5668\u4f18\u5316\u65f6\u6709\u65f6\u4f1a\u5148\u628a\u53d8\u91cf\u8bfb\u53d6\u5230\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d\uff1b\u4ee5\u540e\u518d\u53d6\u53d8\u91cf\u503c\u65f6\uff0c\u5c31\u76f4\u63a5\u4ece\u5bc4\u5b58\u5668\u4e2d\u53d6\u503c",
      "question": "\u4e0b\u9762\u6709\u5173volatile\u8bf4\u6cd5\u9519\u8bef\u7684\u6709\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114324c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u591a\u7ee7\u627f",
      "optionC": "\u975e\u6cd5\u7ee7\u627f",
      "optionAnswer": "D",
      "answer": "\u591a\u91cd\u7ee7\u627f\uff1a\u6307\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u540c\u65f6\u7ee7\u627f\u591a\u4e2a\u57fa\u7c7b\u7684\u884c\u4e3a\u4f55\u7279\u5f81\u884c\u4e3a\uff0c\u4f46\u5bb9\u6613\u51fa\u73b0\u4e8c\u4e49\u6027",
      "optionB": "\u5355\u7ee7\u627f",
      "type": "1",
      "optionA": "\u5faa\u73af\u7ee7\u627f",
      "question": "\u4e00\u4e2a\u7c7b\u5982\u679c\u6709\u4e00\u4e2a\u4ee5\u4e0a\u7684\u57fa\u7c7b\u5c31\u53eb\u505a\uff08\uff09\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c14",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u7ee7\u627f",
      "optionC": "\u662f\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e0e\u53e6\u4e00\u4e2a\u7c7b\u7684\u5173\u7cfb",
      "optionAnswer": "D",
      "answer": "\u53cb\u5143\u53ef\u4ee5\u662f\u51fd\u6570\u4e0e\u7c7b\u7684\u5173\u7cfb\u5373\u53cb\u5143\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u7c7b\u4e0e\u7c7b\u7684\u5173\u7cfb\u5373\u53cb\u5143\u7c7b\uff0c\u4f46\u53cb\u5143\u4e0d\n\u80fd\u7ee7\u627f\uff0c\u662f\u5355\u5411\u6027\uff0c\u4e14\u4e0d\u5177\u6709\u4f20\u9012\u6027\u3002\u53cb\u5143\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u4e2d\u6240\u6709\u6210\u5458\uff0c\u63d0\u9ad8\u4e86\u8bbf\u95ee\u7684\u65b9\u4fbf\u6027\u3002\u56e0\u6b64\n\u9009\u62e9D\u9879\u3002",
      "optionB": "\u662f\u7c7b\u4e0e\u7c7b\u7684\u5173\u7cfb",
      "type": "1",
      "optionA": "\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387",
      "question": "\u53cb\u5143\u5173\u7cfb\u4e0d\u80fd\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c21",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6570\u636e\u62bd\u8c61",
      "optionC": "\u7ee7\u627f\u673a\u5236",
      "optionAnswer": "C",
      "answer": "\u7ee7\u627f\u6307\u5728\u539f\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\u4ea7\u751f\u65b0\u7c7b\u3002\u6570\u636e\u5c01\u88c5\u5373\u6570\u636e\u548c\u64cd\u4f5c\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u7c7b\u3002\n\u4fe1\u606f\u7684\u9690\u85cf\uff0c\u901a\u8fc7\u8bbf\u95ee\u6743\u9650\u6765\u5b9e\u73b0\u3002\u6570\u636e\u62bd\u8c61\uff0c\u5c06\u4e8b\u7269\u7684\u7279\u5f81\u62bd\u8c61\u4e3a\u6570\u636e\u6210\u5458\u6216\u670d\u52a1\u3002\u56e0\u6b64\u9009\u62e9\nC\u9879\u3002",
      "optionB": "\u6570\u636e\u5c01\u88c5",
      "type": "1",
      "optionA": "\u4fe1\u606f\u9690\u85cf",
      "question": "\u5982\u679c\u4ece\u539f\u6709\u7c7b\u5b9a\u4e49\u65b0\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "\u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002 \u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c\u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c\u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c\u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c\u3002\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6\nstatic\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;\nstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d",
      "ID": "55f2e51ee4b0152a611433c4",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431fd",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "C#",
      "optionC": "objectC",
      "optionAnswer": "B",
      "answer": "A\uff0cC\uff0cD\u90fd\u662f\u7c7bC\u8bed\u8a00\uff0cB\u4e0d\u662f\nPython\u662f\u89e3\u91ca\u6267\u884c\u7684\uff0c\u5176\u4ed6\u8bed\u8a00\u90fd\u9700\u8981\u5148\u7f16\u8bd1",
      "optionB": "Python",
      "type": "1",
      "optionA": "JAVA",
      "question": "\u4ece\u8fd0\u884c\u5c42\u9762\u4e0a\u6765\u770b\uff0c\u4ece\u56db\u4e2a\u9009\u9879\u9009\u51fa\u4e0d\u540c\u7684\u4e00\u4e2a\u3002",
      "title": "C&C++"
    },
    {
      "answer": "10\uff0c12\uff0c120",
      "ID": "55f2e51ee4b0152a611433c3",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9\n    <span class=\"s1\">int main() {\n \n        <span class=\"s1\">int a, b, c, d;\n \n        a = 10;\n \n        b = a++;\n \n        c = ++a;\n \n        d = 10 * a++;\n \n        <span class=\"s2\">printf(<span class=\"s3\">\"b\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\"<span class=\"s2\">\uff0cb\uff0cc\uff0cd);\n \n        <span class=\"s1\">return 0;\n \n    }\n \n</span></span></span></span></span></span>",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c78",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6570\u636e\u62bd\u8c61",
      "optionC": "\u5b9a\u4e49\u65b0\u7c7b",
      "optionAnswer": "C",
      "answer": "\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u4e2d\u7684\u7c7b\u7684\u7279\u70b9\uff1a\u62bd\u8c61\u3001\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u591a\u6001\u7b49\uff0c\u7ee7\u627f\u7528\u4e8e\u5bf9\u7c7b\u7684\u6269\u5c55\n\uff0c\u6240\u4ee5\u9009\u62e9C\u9879\u3002",
      "optionB": "\u6570\u636e\u5c01\u88c5",
      "type": "1",
      "optionA": "\u4fe1\u606f\u9690\u85cf",
      "question": "\u7ee7\u627f\u673a\u5236\u7684\u4f5c\u7528\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "#include <iostream>\n \nusing namespace std;\n \nint getMax(int *pScore, int low, int high)\n{\n    if(low > high)\n    {\n        high = low ^ high;\n        low = low ^ high;\n        high = low ^ high;\n    }\n    int maxScore = pScore[low];\n    for(int i = low + 1; i <= high; ++i)\n    {\n        if(maxScore < pScore[i])\n        {\n            maxScore = pScore[i];\n        }\n    }\n \n    return maxScore;\n}\n \nint main()\n{\n    int N = 0;\n    int M = 0;\n    while(cin >> N >> M)\n    {\n        int *pScore = new int[N + 1];\n        for(int i = 1; i <= N; ++i)\n        {\n            cin >> pScore[i];\n        }\n \n        for(int i = 0; i < M; ++i)\n        {\n            char ch = '\\0';\n            int low = 0;\n            int high = 0;\n \n            cin >> ch >> low >> high;\n \n            if('Q' == ch)\n            {\n                cout << getMax(pScore, low, high) << endl;\n            }\n            else if('U' == ch)\n            {\n                pScore[low] = high;\n            }\n            else\n            {\n                // continue;\n            }\n        }\n \n        delete[] pScore;\n    }\n \n    return 0;\n}",
      "ID": "55f2e51ce4b0152a61143324",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8001\u5e08\u60f3\u77e5\u9053\u4ece\u67d0\u67d0\u540c\u5b66\u5f53\u4e2d\uff0c\u5206\u6570\u6700\u9ad8\u7684\u662f\u591a\u5c11\uff0c\u73b0\u5728\u8bf7\u4f60\u7f16\u7a0b\u6a21\u62df\u8001\u5e08\u7684\u8be2\u95ee\u3002\u5f53\u7136\uff0c\u8001\u5e08\u6709\u65f6\u5019\u9700\u8981\u66f4\u65b0\u67d0\u4f4d\u540c\u5b66\u7684\u6210\u7ee9.",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143279",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51e0\u5c0f\u65f6",
      "optionC": "\u51e0\u5206\u949f",
      "optionAnswer": "D",
      "answer": "\u8ba1\u7b97\u6267\u884c\u6b21\u6570\u5f97\u5230\u9012\u63a8\u516c\u5f0f\nf(n)=f(n-1)+....+f(0)\nf(n)=2(f(n-2)+...+f(0))\nf(n)=2^2(f(n-3)+...+f(0))\n...\nf(n)=2^(n-1)f(0)=2^(n-1)\nf(35)=2^34  \u5927\u6539100\u591a\u4ebf\n\u8ba1\u7b97\u673a\u5e94\u8be5\u662f\u6bcf\u79d2\u51e0\u767e\u4e07\u6b21\n\u6240\u4ee5\u7b97\u4e0b\u6765\u9700\u8981\u51e0\u4e2a\u5c0f\u65f6",
      "optionB": "\u51e0\u79d2",
      "type": "1",
      "optionA": "\u51e0\u6beb\u79d2",
      "question": "\u5728\u4e00\u53f0\u4e3b\u6d41\u914d\u7f6e\u7684PC\u673a\u4e0a\uff0c\u8c03\u7528f(35)\u6240\u9700\u7684\u65f6\u95f4\u5927\u6982\u662f_______\u3002\n\nint f(int x) {\n    int s=0;\n    while(x-- >0)   s+=f(x);\n    return max(s,1);\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143149",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "k=3 a=14",
      "optionC": "k=6 a=11",
      "optionAnswer": "B",
      "answer": "\u5f53k=0\u65f6,\u6267\u884cwhile\u4e00\u6b21,\u5f97\u5230k=1,a\u4e3a2;\u5f53k=1\u65f6,\u6267\u884cwhile\u4e00\u6b21,\u5f97\u5230k=2,a\u4e3a4;\u5f53k=2\u65f6,\u6267\u884cwhile\u4e00\u6b21,\u5f97\u5230k=3,a=7;\u5f53k=3\u65f6,\u6267\u884cwhile\u4e00\u6b21,\u5f97\u5230k=4,a\u4e3a12;\u6240\u4ee5\u7b54\u6848\u4e3aB\u9009\u9879\u3002",
      "optionB": "k=4 a=12",
      "type": "1",
      "optionA": "k=5 a=15",
      "question": "\u6709\u4ee5\u4e0b\u7a0b\u5e8f\n#include<stdio. h>\nmain()\n{ \n    char *s=\"12134\";\n    int k=0, a=0;\n    while(s[k+1])\n    { \n       k++;\n       if(k%2= =0)\n       {\n            a=a+(s[k]-'0'+1);\n            continue;    \n       }\n       a=a+(s[k]-'0');\n    }\n    printf(\"k=%d a=%d\\n\",k,a);\n}\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f?",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c7a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u53d8\u91cfp\u7684\u503c\u4e3a100",
      "optionC": "\u53d8\u91cfp\u53ea\u53ef\u4ee5\u6307\u5411\u4e00\u4e2a\u6574\u578b\u53d8\u91cf",
      "optionAnswer": "D",
      "answer": "\u6307\u9488\u53d8\u91cf\u5982\u540c\u5176\u4ed6\u53d8\u91cf\u4e00\u6837\uff0c\u5728\u4f7f\u7528\u4e4b\u524d\u5fc5\u987b\u5148\u58f0\u660e\u3002\u58f0\u660e\u6307\u9488\u53d8\u91cf\u7684\u683c\u5f0f\u4e3a\uff1a\n<\u7c7b\u578b\u540d>*<\u53d8\u91cf\u540d>;\n\u5176\u4e2d\uff0c<\u7c7b\u578b\u540d>\u662f\u6307\u9488\u53d8\u91cf\u6240\u6307\u5411\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u5b83\u53ef\u4ee5\u662fC++\u8bed\u8a00\u9884\u5b9a\u4e49\u7684\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u662f\u7528\u6237\n\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002<\u53d8\u91cf\u540d>\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u6807\u8bc6\u7b26\u3002\u7b26\u53f7*\u8868\u793a<\u53d8\u91cf>\u662f\u6307\u9488\u53d8\u91cf\u3002\u800c\u4e0d\u662f\u666e\u901a\u53d8\u91cf\n\u3002 *\u8868\u793a\u6307\u9488\uff0cp\u662f\u53d8\u91cf\uff0cp\u6307\u5411\u4e00\u4e2a\u6574\u578b\u7684\u53d8\u91cf\uff0c\u503c\u4e3aa\u7684\u5730\u5740\u503c\uff0c*p=100\u3002",
      "optionB": "\u53d8\u91cfp\u7ecf\u521d\u59cb\u5316\uff0c\u83b7\u5f97\u53d8\u91cfa\u7684\u5730\u5740",
      "type": "1",
      "optionA": "\u58f0\u660e\u53d8\u91cfp\uff0c\u5176\u4e2d*\u8868\u793ap\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf",
      "question": "\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff0c\u5219\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff08\uff09int a=100,*p=&a;",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a6114312b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6790\u6784\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570",
      "optionC": "\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570",
      "optionAnswer": "B",
      "answer": "\u6240\u8c13\u865a\u51fd\u6570\u5c31\u662f\u591a\u6001\u60c5\u51b5\u4e0b\u53ea\u6267\u884c\u4e00\u4e2a,\u800c\u4ece\u7ee7\u627f\u7684\u6982\u5ff5\u6765\u8bb2,\u603b\u662f\u8981\u5148\u6784\u9020\u7236\u7c7b\u5bf9\u8c61,\u7136\u540e\u624d\u80fd\u662f\u5b50\u7c7b\u5bf9\u8c61,\u5982\u679c\u6784\u9020\u51fd\u6570\u8bbe\u4e3a\u865a\u51fd\u6570,\u90a3\u4e48\u5f53\u4f60\u5728\u6784\u9020\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u65f6\u5c31\u4e0d\u5f97\u4e0d\u663e\u793a\u7684\u8c03\u7528\u6784\u9020,\u8fd8\u6709\u4e00\u4e2a\u539f\u56e0\u5c31\u662f\u4e3a\u4e86\u9632\u9519,\u8bd5\u60f3\u5982\u679c\u4f60\u5728\u5b50\u7c7b\u4e2d\u4e00\u4e0d\u5c0f\u5fc3\u91cd\u5199\u4e86\u4e2a\u8ddf\u7236\u7c7b\u6784\u9020\u51fd\u6570\u4e00\u6837\u7684\u51fd\u6570,\u90a3\u4e48\u4f60\u7684\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u5c06\u88ab\u8986\u76d6,\u4e5f\u5373\u4e0d\u80fd\u5b8c\u6210\u7236\u7c7b\u7684\u6784\u9020.\u5c31\u4f1a\u51fa\u9519.\n\u5728\u6784\u9020\u51fd\u6570\u4e0d\u8981\u8c03\u7528\u865a\u51fd\u6570\u3002\u5728\u57fa\u7c7b\u6784\u9020\u7684\u65f6\u5019\uff0c\u865a\u51fd\u6570\u662f\u975e\u865a\uff0c\u4e0d\u4f1a\u8d70\u5230\u6d3e\u751f\u7c7b\u4e2d\uff0c\u65e2\u662f\u91c7\u7528\u7684\u9759\u6001\u7ed1\u5b9a\u3002\u663e\u7136\u7684\u662f\uff1a\u5f53\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u5b50\u7c7b\u7684\u5bf9\u8c61\u65f6\uff0c\u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u6784\u9020\u5b50\u7c7b\u4e2d\u57fa\u7c7b\u90e8\u5206\uff0c\u5b50\u7c7b\u8fd8\u6ca1\u6709\u6784\u9020\uff0c\u8fd8\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u5982\u679c\u5728\u57fa\u7c7b\u7684\u6784\u9020\u4e2d\u8c03\u7528\u865a\u51fd\u6570\uff0c\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\u5c31\u662f\u8c03\u7528\u4e00\u4e2a\u8fd8\u6ca1\u6709\u88ab\u521d\u59cb\u5316\u7684\u5bf9\u8c61\uff0c\u90a3\u662f\u5f88\u5371\u9669\u7684\uff0c\u6240\u4ee5C++\u4e2d\u662f\u4e0d\u53ef\u4ee5\u5728\u6784\u9020\u7236\u7c7b\u5bf9\u8c61\u90e8\u5206\u7684\u65f6\u5019\u8c03\u7528\u5b50\u7c7b\u7684\u865a\u51fd\u6570\u5b9e\u73b0\u3002\u4f46\u662f\u4e0d\u662f\u8bf4\u4f60\u4e0d\u53ef\u4ee5\u90a3\u4e48\u5199\u7a0b\u5e8f\uff0c\u4f60\u8fd9\u4e48\u5199\uff0c\u7f16\u8bd1\u5668\u4e5f\u4e0d\u4f1a\u62a5\u9519\u3002\u53ea\u662f\u4f60\u5982\u679c\u8fd9\u4e48\u5199\u7684\u8bdd\u7f16\u8bd1\u5668\u4e0d\u4f1a\u7ed9\u4f60\u8c03\u7528\u5b50\u7c7b\u7684\u5b9e\u73b0\uff0c\u800c\u662f\u8fd8\u662f\u8c03\u7528\u57fa\u7c7b\u7684\u5b9e\u73b0\u3002\n\n\u5728\u6790\u6784\u51fd\u6570\u4e2d\u4e5f\u4e0d\u8981\u8c03\u7528\u865a\u51fd\u6570\u3002\u5728\u6790\u6784\u7684\u65f6\u5019\u4f1a\u9996\u5148\u8c03\u7528\u5b50\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u6790\u6784\u6389\u5bf9\u8c61\u4e2d\u7684\u5b50\u7c7b\u90e8\u5206\uff0c\u7136\u540e\u5728\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u6790\u6784\u57fa\u7c7b\u90e8\u5206\uff0c\u5982\u679c\u5728\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u91cc\u9762\u8c03\u7528\u865a\u51fd\u6570\uff0c\u4f1a\u5bfc\u81f4\u5176\u8c03\u7528\u5df2\u7ecf\u6790\u6784\u4e86\u7684\u5b50\u7c7b\u5bf9\u8c61\u91cc\u9762\u7684\u51fd\u6570\uff0c\u8fd9\u662f\u975e\u5e38\u5371\u9669\u7684\u3002",
      "optionB": "\u6d3e\u751f\u5173\u7cfb\u4e2d\u7684\u57fa\u7c7b\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570",
      "type": "1",
      "optionA": "\u6784\u9020\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570",
      "question": "\u4ee5\u4e0b\u54ea\u4e2a\u505a\u6cd5\u662f\u6b63\u786e\u7684\uff1a\uff08 \uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a6114314a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "void f(int *ret) { int a[3] = {1, 2, 3}; ret = a; return; }",
      "optionC": "vector<int> f() {vector<int> v(3); return v; }",
      "optionAnswer": "C",
      "answer": "\u56e0\u4e3aC\u4e0d\u5b58\u5728\u5185\u5b58\u6cc4\u9732\u7684\u95ee\u9898\u4e14\u53ef\u4ee5\u5f97\u5230\u60f3\u8981\u7ed3\u679c\uff0c\u4f46\u6240\u6709\u9009\u9879\u90fd\u662f\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\u7684\uff0c\u65e0\u8bed\u6cd5\u9519\u8bef\u3002A\u662f\u5185\u5b58\u6cc4\u9732\uff0c\u6ca1\u6709delete\uff0cB\u6570\u7ec4\u662f\u4e34\u65f6\u7684\uff0c\u6839\u672c\u4f20\u4e0d\u5230\u4e3b\u8c03\u51fd\u6570\u91cc\uff0cD\u7684\u95ee\u9898\u540cB\u4e00\u6837\u3002",
      "optionB": "int *f() { int a[3] = {1, 2, 3}; return a; }",
      "type": "1",
      "optionA": "int f() { int *a = new int(3); return *a; }",
      "question": "Which of following C++ code is correct?",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114320e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "inline",
      "optionC": "extern",
      "optionAnswer": "D",
      "answer": "D.  A.virtual \u8868\u793a\u865a\u51fd\u6570   B.mutable \u548cconst\u662f\u53cd\u4e49\u8bcd,mutable\u53ea\u80fd\u7531\u4e8e\u4fee\u9970\u7c7b\u7684\u975e\u9759\u6001\u6570\u636e\u6210\u5458\nC,extern\u8868\u793a\u5916\u90e8\u7684,\u8bf4\u660e\u4f5c\u7528\u57df",
      "optionB": "mutable",
      "type": "1",
      "optionA": "virtual",
      "question": "\u5185\u8054\u51fd\u6570\u7528\u4ec0\u4e48\u4f5c\u6807\u8bc6?",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143234",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "NAN",
      "optionC": "\u7f16\u8bd1\u9519\u8bef",
      "optionAnswer": "B",
      "answer": "\u9009B\n/\u548c%\u4f18\u5148\u7ea7\u4e00\u6837\uff0c\u4ece\u5de6\u5230\u53f3\u8ba1\u7b97\uff0c150/50=3,3%5=3,\u6240\u4ee5\u7ed3\u679c\u4e3a3",
      "optionB": "3",
      "type": "1",
      "optionA": "5",
      "question": "\u4e0b\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f?\nmain(){\n        printf(\"%d\",150/50%5);\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143266",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "Open The Door",
      "optionC": "open the door",
      "optionAnswer": "C",
      "answer": "\u5b57\u7b26\u4e32\u8f93\u5165\u51fd\u6570gets\u7684\u529f\u80fd\u662f\u4ece\u6807\u51c6\u8f93\u5165\u8bbe\u5907\u952e\u76d8\u4e0a\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u9996\u5148\u4f7f\u6307\u9488\u53d8\u91cfp\u6307\u5411\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u6bcd,while\u5faa\u73af\u8bed\u53e5\u4e2d\u5bf9\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\u8fdb\u884cfun\u51fd\u6570\u64cd\u4f5c\u3002fun\u51fd\u6570\u7684\u529f\u80fd\u662f,\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5927\u5199\u5b57\u6bcd\u53d8\u5c0f\u5199\u5b57\u6bcd\u3002\u5c06\u5904\u7406\u7ed3\u679c\u8fd4\u56de\u4e3b\u51fd\u6570,\u4e3b\u51fd\u6570\u901a\u8fc7putchar( )\u5b57\u7b26\u8f93\u51fa\u51fd\u6570\u8fdb\u884c\u8f93\u51fa\u3002\u56e0\u6b64C\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "oPEN tHE dOOR",
      "type": "1",
      "optionA": "OPEN THE DOOR",
      "question": "\u6709\u4ee5\u4e0b\u7a0b\u5e8f\n\n#include <stdio.h>\nchar fun(char *c)\n{\n     if(*c<=`Z`&& *c>=`A`)\n        *c-=`A`-`a`;\n     return *c;\n}\nmain()\n{\n    char s[81],*p=s;\n    gets(s);\n    while(*p)\n    {\n        *p = fun(p);\n        putchar( *p);\n        p++;\n    }\n    printf(\"\\n\");\n}\n\u82e5\u8fd0\u884c\u65f6\u4ece\u952e\u76d8\u4e0a\u8f93\u5165OPEN THE DOOR<\u56de\u8f66>,\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f?",
      "title": "C&C++"
    },
    {
      "answer": "\u7b80\u5355\u533a\u95f4\u52a8\u6001\u89c4\u5212\uff0cdp(l,r)\u8868\u793a\u5728[l,r]\u8fd9\u6bb5\u533a\u95f4\u5148\u624b\u80fd\u83b7\u5f97\u7684\u6700\u5927\u503c\uff0cdp(l,r)=sum(l,r)-min(dp(l+1,r), dp(l, r-1))\uff0c\u7b54\u6848\u4e3amax(dp(0,len), sum(0,len)-dp(0,len))\uff0cO(N^2)\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\n\n#define MIN(a, b) ((a) < (b) ? (a) : (b))\nclass Solution {\npublic:\n /**\n *  \u5f97\u5230\u786c\u5e01\u535a\u5f08\u95ee\u9898\u7684\u83b7\u80dc\u5206\u503c\n *  \u8f93\u5165\uff1a\u4ee3\u8868\u786c\u5e01\u6392\u5217\u60c5\u51b5\u7684\u6570\u7ec4arr\n *  \u8fd4\u56de\uff1a\u786c\u5e01\u535a\u5f08\u95ee\u9898\u7684\u83b7\u80dc\u5206\u503c\n */\n int getWinValue(vector<int> arr, int len) {\n        if(len <= 0) return 0;\n        vector<int> sum(arr);\n        vector<vector<int> > dp(len, vector<int>(len, 0));\n        for(int i = 0; i < len; ++i){\n            if(i > 0) sum[i] += sum[i - 1];\n            dp[i][i] = arr[i];\n        }\n        for(int L = 1; L < len; ++L) for(int i = 0; i + L < len; ++i){\n            int j = i + L;\n            dp[i][j] = sum[j] - sum[i] + arr[i] - MIN(dp[i + 1][j], dp[i][j - 1]);\n        }\n        return sum[len - 1] - MIN(dp[0][len - 1], sum[len - 1] - dp[0][len - 1]);\n    }\n};",
      "ID": "55f2e51de4b0152a61143344",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u9762\u503c\u4e3a\u6b63\u6570\u7684\u786c\u5e01\u653e\u7f6e\u6210\u4e00\u6392\uff0c\u73a9\u5bb61\u548c\u73a9\u5bb62\u8f6e\u6d41\u62ff\u8d70\u786c\u5e01\uff0c\u89c4\u5b9a\u6bcf\u4e2a\u73a9\u5bb6\u5728\u62ff\u786c\u5e01\u65f6\uff0c\u53ea\u80fd\u62ff\u8d70\u6700\u5de6\u6216\u6700\u53f3\u7684\u786c\u5e01\u3002 \u4f8b\u5982\uff1a \u786c\u5e01\u9762\u503c\u4e0e\u6392\u5217\u4e3a\uff1a1,2,3,4,5\uff0c\u73b0\u5728\u8f6e\u5230\u73a9\u5bb61\u62ff\u786c\u5e01\u3002 \u5728\u5f53\u524d\u72b6\u6001\u4e0b\uff0c\u73a9\u5bb61\u53ea\u80fd\u62ff\u8d701\u62165\uff0c \u5982\u679c\u73a9\u5bb61\u62ff\u8d701\uff0c\u5219\u6392\u5217\u53d8\u4e3a2,3,4,5\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u73a9\u5bb62\u53ef\u4ee5\u62ff\u8d702\u62165\uff0c\u7136\u540e\u7ee7\u7eed\u8f6e\u5230\u73a9\u5bb61\u62ff\u786c\u5e01... \u5982\u679c\u73a9\u5bb61\u62ff\u8d705\uff0c\u5219\u6392\u5217\u53d8\u4e3a1,2,3,4\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u73a9\u5bb62\u53ef\u4ee5\u62ff\u8d701\u62164\uff1b\u7136\u540e\u7ee7\u7eed\u8f6e\u5230\u73a9\u5bb61\u62ff\u786c\u5e01... \u6e38\u620f\u6309\u7167\u8fd9\u4e2a\u89c4\u5219\u8fdb\u884c\uff0c\u76f4\u5230\u6240\u6709\u7684\u786c\u5e01\u88ab\u62ff\u5b8c\uff0c\u6bcf\u4e2a\u73a9\u5bb6\u83b7\u5f97\u7684\u5206\u6570\u662f\u5404\u81ea\u62ff\u8d70\u786c\u5e01\u7684\u603b\u548c\u3002 \u6e38\u620f\u80dc\u8d1f\u7684\u89c4\u5b9a\uff1a \u5982\u679c\u73a9\u5bb61\u6700\u540e\u83b7\u5f97\u7684\u5206\u6570\u5927\u4e8e\u73a9\u5bb62\uff0c\u5219\u73a9\u5bb61\u83b7\u80dc\uff1b \u5982\u679c\u73a9\u5bb62\u6700\u540e\u83b7\u5f97\u7684\u5206\u6570\u5927\u4e8e\u73a9\u5bb61\uff0c\u5219\u73a9\u5bb62\u83b7\u80dc\uff1b \u56e0\u4e3a\u73a9\u5bb61\u5148\u62ff\u786c\u5e01\uff0c\u6240\u4ee5\u5982\u679c\u6700\u540e\u4e24\u4eba\u83b7\u5f97\u5206\u6570\u4e00\u6837\u5219\u73a9\u5bb62\u83b7\u80dc\uff1b \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4arr\uff0c\u8868\u793a\u786c\u5e01\u7684\u9762\u503c\u548c\u6392\u5217\u72b6\u51b5\uff0c\u8bf7\u8fd4\u56de\u6700\u7ec8\u83b7\u80dc\u8005\u7684\u5206\u6570\u3002 \u4f8b\u5b50\uff1a arr=[8,7,5,3] \u73a9\u5bb61\u5c06\u83b7\u80dc\uff0c\u5206\u6570\u4e3a13 \u6240\u4ee5\u8fd4\u56de13 arr=[1,9,1] \u73a9\u5bb62\u5c06\u83b7\u80dc\uff0c\u5206\u6570\u4e3a9 \u6240\u4ee5\u8fd4\u56de9",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143206",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "(unsigned long)(2-3)*1",
      "optionC": "sizeof(3)<<(sizeof(2)<<(sizeof(1)))",
      "optionAnswer": "C",
      "answer": "sizeof(1) sizeof(2) sizeof(3) \u90fd\u662f4 \u90a3\u4e484*2^(4*(2^4)) = 2^ 66 \u5927\u4e8eD\u9009\u9879\u76842^32-1",
      "optionB": "3<<(2<<sizeof(1))",
      "type": "1",
      "optionA": "2*3*sizeof(1)",
      "question": "\u7ed9\u4f601\u30012\u30013 \u8fd9\u4e09\u4e2a\u6570\u5b57\uff0c\u53ef\u4ee5\u4f7f\u7528C\u7684\u5404\u79cd\u8fd0\u7b97\u7b26\uff0c\u4f60\u80fd\u8868\u793a\u7684\u6700\u5927\u7684\u6574\u6570\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431f4",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "*(a[1]+1)",
      "optionC": "*(&a[1]+1)",
      "optionAnswer": "C",
      "answer": "\u5728\u4e8c\u7ef4\u6570\u7ec4\u4e2da[1]\u8868\u793a\u7684\u662fa[1][0]\u7684\u5730\u5740\uff0c\u6570\u7ec4\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u5b58\u50a8\uff0c\u6240\u4ee5a[1]+1\u8868\u793a\u7684\u662fa[1][1]\u7684\u5730\u5740\uff0c\u6240\u4ee5D\u53ef\u4ee5\u53d6\u5f97\u6b63\u786e\u7684\u503c\uff1b\n\u6307\u9488\u64cd\u4f5c*(a+1)\u4e0ea[1]\u7b49\u4ef7\uff0c\u6240\u4ee5B\u4e5f\u53ef\u4ee5\u53d6\u5f97\u6b63\u786e\u7684\u503c\uff1b\n\u4e8c\u7ef4\u6570\u7ec4\u5728\u5185\u5b58\u4e2d\u662f\u884c\u4f18\u5148\u5b58\u50a8\u7684\uff0c\u6240\u4ee5A\u4e2da[0][0]\u7684\u5730\u5740\u52a05\u53ef\u4ee5\u53d6\u5f97\u6b63\u786e\u503c\uff1b\nC\u9009\u9879\u9519\u8bef\uff0c\u5e94\u6539\u4e3a*(&a[1][0]+1)\uff0c\u56e0\u4e3aa[1]\u5c31\u8868\u793aa[1][0]\u7684\u5730\u5740\u3002",
      "optionB": "*(*(a+1)+1)",
      "type": "1",
      "optionA": "*(&a[0][0]+5)",
      "question": "int a[3][4]\uff0c\u4e0b\u9762\u54ea\u4e2a\u4e0d\u80fd\u8868\u793a a[1][1]?",
      "title": "C&C++"
    },
    {
      "answer": "\u7cfb\u7edf\u524d\u53f0\uff1a\n\u7528JS\u76d1\u63a7input\u8f93\u5165\u6846\u7684\u5185\u5bb9\u53d8\u5316\uff0c\u7528\u6237\u8f93\u5165\u6216\u8005\u5220\u9664\u5b57\u7b26\uff08\u8f93\u5165\u4e32\u7684\u53d1\u751f\u53d8\u5316\uff09\u5c31\u89e6\u53d1\u5f02\u6b65Javascript\u63d0\u4ea4\u8f93\u5165\u5185\u5bb9\u5230\u540e\u53f0\uff0c\u5f15\u53d1\u540e\u53f0\u67e5\u8be2\u3002\u7136\u540e\u518d\u8bb2\u67e5\u8be2\u7ed3\u679c\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u524d10\u6761query\u5c55\u73b0\u7ed9\u7528\u6237\u63d0\u793a\u3002\n\n\u7cfb\u7edf\u540e\u53f0\uff1a\n\u9996\u5148\u670926\u53f0\u670d\u52a1\u5668\u5206\u522b\u5b58\u50a826\u4e2a\u5b57\u6bcd\u5f00\u5934\u7684query\u3002\u6240\u4ee5\u9996\u5148\u8981\u8bbe\u8ba1\u4e00\u4e2a\u63a5\u6536\u7528\u6237\u8bf7\u6c42\u7684\u670d\u52a1\u5668\uff0c\u8fd9\u53f0\u670d\u52a1\u5668\u53ef\u4ee5\u6839\u636e\u7528\u6237\u8bf7\u6c42\u7684\u9996\u5b57\u6bcd\u5c06\u67e5\u8be2\u8bf7\u6c42\u5206\u53d1\u7ed9\u5bf9\u5e9426\u53f0\u670d\u52a1\u5668\u4e2d\u7684\u4e00\u4e2a\uff08\u76f8\u5f53\u4e8e\u67e5\u8be2\u8bf7\u6c42\u7684\u8def\u7531\u529f\u80fd\uff09\u3002\n\u7136\u540e\u5c31\u662f\u8fd926\u53f0\u67e5\u8be2\u670d\u52a1\u5668\u5982\u4f55\u8bbe\u8ba1\u7684\u95ee\u9898\u4e86\u3002\n\u5047\u8bbequery\u4e0d\u8d85\u8fc710\u4ebf\u6761\uff0c\u6bcf\u4e2aquery\u4e0d\u8d85\u8fc750\u5b57\u8282\u3002\u4e5f\u5c31\u662fquery\u6587\u4ef6\u4e0d\u8d85\u8fc750G\uff0c\u5206\u572826\u53f0\u673a\u5668\u4e0a\u4e5f\u5c31\u662f\u6bcf\u53f0\u673a\u5668\u4e0a\u7684query\u6587\u4ef6\u4e0d\u8d85\u8fc72G\u3002\n\u6bcf\u4e2a\u673a\u5668\u4e0a\u7ef4\u62a4\u7740\u4e00\u5f20\u54c8\u5e0c\u8868\uff0c\u5bf9\u4e8e\u6bcf\u6761query, \u5728\u54c8\u5e0c\u8868\u8868\u4e2d\u5b58\u653e\u5176\u5730\u5740\u3002\u6536\u5230\u6bcf\u4e2aquery\u505ahash\u8fd0\u7b97\u53ef\u4ee5\u627e\u5230query\u5bf9\u5e94\u7684\u5730\u5740\u3002\u5bf9\u5e94\u6bcf\u4e2aquery\u5b58\u50a8\u4e24\u9879\u4fe1\u606f\uff0c\u5373query\u672c\u8eab\u548c\u88ab\u67e5\u8be2\u6b21\u6570\uff0c\u4e5f\u5c31\u662f\u7c7b\u4f3cquery:times\u8fd9\u6837\u7684\u5b58\u50a8\u683c\u5f0f\u3002\n\u4e0b\u9762\u505a\u9884\u5904\u7406\uff1a26\u53f0\u673a\u5668\u90fd\u5bf9\u81ea\u8eab\u5b58\u50a8\u7684query\u8fdb\u884c\u904d\u5386\uff0c\u5206\u522b\u627e\u51faa\u5230z\u5f00\u5934query\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684top10\uff0c\u8fd9\u6837\u7684\u67e5\u8be2\u4e00\u6b21\u904d\u5386\u5c31\u80fd\u627e\u5230\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08N\uff09\u3002\u7136\u540e\u5bf9\u627e\u5230\u7684top10\u5728\u5185\u5b58\u4e2d\u6784\u5efa\u4e00\u4e2a\u6700\u5c0f\u5806\u3002\u5176\u4ed6\u975etop10\u7684query\u65e0\u9700\u505a\u6392\u5e8f\u5904\u7406\u3002\u5230\u8fd9\u91cc\u9884\u5904\u7406\u5b8c\u6210\u3002\n\u7136\u540e\u8bf4\u67e5\u8be2\u8fc7\u7a0b\uff0c\u67e5\u8be2\u5206\u4e3a\u4e24\u7c7b\uff0c\n1\uff0c\u4ee5\u7ed9\u51fa\u641c\u7d22\u63d0\u793a\u7684\u5f02\u6b65Javascript\u63d0\u4ea4\u7684\u67e5\u8be2\uff0c\u8fd9\u79cd\u67e5\u8be2\u76f4\u63a5\u8fd4\u56de\u6700\u5c0f\u5806\u4e2d\u768410\u4e2aquery\u8bcd\u6761\u5373\u53ef\u3002\n2\uff0c\u7528\u6237\u6700\u7ec8\u63d0\u4ea4\u7684\u67e5\u8be2\uff08\u5373\u7528\u6237\u8f93\u5165\u5b8c\u6bd5\u70b9\u51fb\u641c\u7d22\u6309\u94ae\u63d0\u4ea4\u7684\u67e5\u8be2\uff09\uff0c\u8fd9\u79cd\u67e5\u8be2\u7684query\u662f\u7528\u6237\u6700\u7ec8\u67e5\u8be2\u7684\u8bcd\u6761\uff0c\u8fd9\u6837\u7684\u67e5\u8be2\u5e94\u8be5\u5f15\u8d77\u540e\u53f0\u5b58\u50a8\u7684\u5bf9\u5e94query\u9891\u7387\u7684\u53d8\u5316\u3002\u5f53\u4e00\u4e2aquery\u5230\u8fbe\u7684\u65f6\u5019\uff0c\u5148\u7528hash\u8fd0\u7b97\u627e\u5230\u4ed6\u7684\u4f4d\u7f6e\u548c\u5bf9\u5e94\u7684\u9891\u7387\uff0chash\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(1),\u7136\u540e\u5bf9\u5e94\u7684\u6b21\u6570+1\uff0c\u7136\u540e\u7528\u8fd9\u4e2a+1\u7684\u6b21\u6570\u4e0e\u6700\u5c0f\u5806\u4e2d\u9996\u4e2a\u5143\u7d20\u6bd4\u8f83\uff0c\u5982\u679c\u5927\u4e8e\u6700\u5c0f\u5806\u9996\u4e2a\u5143\u7d20\uff0c\u4e0e\u6700\u5c0f\u5806\u4e2d\u9996\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u7136\u540e\u6700\u5c0f\u5806\u505a\u66f4\u65b0\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u6700\u5c0f\u5806\u7684\u7279\u6027\u3002\u5426\u5219\u4e0d\u64cd\u4f5c\u3002\u8fd9\u6837\u6700\u5c0f\u5806\u4e2d\u7ef4\u62a4\u768410\u4e2aquery\u59cb\u7ec8\u662f\u8fd9\u53f0\u673a\u5668\u4e0a\u9891\u7387\u6700\u9ad8\u7684\uff0c\u67e5\u8be2\u65f6\u8fd4\u56de\u8fd910\u4e2aquery\u8bcd\u6761\u5373\u53ef\u3002",
      "ID": "55f2e51de4b0152a6114333e",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5316\u7684\u641c\u7d22\u63d0\u793a\u7cfb\u7edf\u3002\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u4e86\u7528\u6237query\u7684\u65e5\u5fd7\u6587\u4ef6\uff0c\u5bf9\u4e8e\u8f93\u5165\u7684\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u4e32s\uff0c\u8f93\u51fa\u4ee5s\u4e3a\u524d\u7f00\u7684\u5728\u65e5\u5fd7\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u524d10\u6761query\u3002\n\u7531\u4e8e\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u5047\u8bbe\u81f3\u5c11\u670926\u53f0\u673a\u5668\uff0c\u6bcf\u4e2a\u673a\u5668\u5b58\u50a8\u4ee526\u4e2a\u5b57\u6bcd\u5f00\u5934\u7684query\u65e5\u5fd7\u6587\u4ef6\uff08\u5982\u673a\u56681\u5b58\u7684\u662fa\u5b57\u6bcd\u5f00\u5934\u7684\uff0c\u673a\u56682\u5b58\u7684\u662f\u4ee5b\u5b57\u6bcd\u5f00\u5934\u7684\u2026\u2026\uff09\n\u6bcf\u4e2a\u673a\u5668\u4e0a\u7ef4\u62a4\u7740\u4e00\u5f20\u54c8\u5e0c\u8868\uff0c\u5bf9\u4e8e\u6bcf\u6761query, \u5728\u54c8\u5e0c\u8868\u8868\u4e2d\u5b58\u653e\u5176\u5730\u5740\uff08\u54c8\u5e0c\u5730\u5740\u4e3a\u94fe\u5f0f\u7684\uff09\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\uff0c\u6309\u9891\u7387\u7531\u9ad8\u5230\u4f4e\u8fdb\u884c\u6392\u5e8f\u3002\n\u5f53\u7528\u6237\u8fdb\u884c\u641c\u7d22\u65f6\uff0c\u53ef\u4ee5\u5f88\u5feb\u5b9a\u4f4d\u5230\u67d0\u53f0\u673a\u5668\uff0c\u5e76\u6839\u636e\u54c8\u5e0c\u8868\uff0c\u8fd4\u56de\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u524d10\u6761query\u3002\n\n\u63d0\u793a\uff1a\n1\u3001\u53ef\u4ee5\u9884\u5904\u7406\u65e5\u5fd7\n2\u3001\u5047\u8bbequery\u4e0d\u8d85\u8fc710\u4ebf\u6761\uff0c\u6bcf\u4e2aquery\u4e0d\u8d85\u8fc750\u5b57\u8282\u3002\n3\u3001\u8003\u8651\u5728\u5927\u67e5\u8be2\u91cf\u7684\u60c5\u51b5\u4e0b\u5982\u4f55\u5b9e\u73b0\u5206\u5e03\u5f0f\u670d\u52a1",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143236",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "read",
      "optionC": "fgetc",
      "optionAnswer": "D",
      "answer": "read\u662fUNIX\u6216\u7c7bUNIX\u7cfb\u7edf\u4e2d\u7684\u7cfb\u7edf\u51fd\u6570\uff0c\u800cfread\u624d\u662fC\u5e93\u91cc\u9762\u7684\u5e93\u51fd\u6570",
      "optionB": "scanf",
      "type": "1",
      "optionA": "printf",
      "question": "\u4e0b\u9762\u7684\u51fd\u6570\u4e2d\u54ea\u4e2a\u662f\u7cfb\u7edf\u8c03\u7528\u800c\u4e0d\u662f\u5e93\u51fd\u6570\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c06",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "virtual void tt(int){}",
      "optionC": "virtual void tt(int)",
      "optionAnswer": "A",
      "answer": "\u5f53\u5728\u57fa\u7c7b\u4e2d\u4e0d\u80fd\u4e3a\u865a\u51fd\u6570\u7ed9\u51fa\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u5b9e\u73b0\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u58f0\u660e\u4e3a\u7eaf\u865a\u51fd\u6570\uff0c\u5b9e\n\u73b0\u7531\u6d3e\u751f\u7c7b\u5b8c\u6210\u3002\u683c\u5f0f\uff1avirtual<\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u8bf4\u660e\u7b26><\u51fd\u6570\u540d>(<\u53c2\u6570\u8868>)=0;\u3002",
      "optionB": "void tt(int)=0",
      "type": "1",
      "optionA": "virtual void tt()=0",
      "question": "\u4ee5\u4e0b\u57fa\u7c7b\u4e2d\u7684\u6210\u5458\u51fd\u6570\u8868\u793a\u7eaf\u865a\u51fd\u6570\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8bfa",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "9",
      "optionC": "5",
      "optionAnswer": "B",
      "answer": "a(2)\u8c03\u75281\u6b21\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0cb\uff3b3\uff3d\u8c03\u75283\u6b21\u65e0\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6307\u9488\u6ca1\u6709\u7ed9\u5b83\n\u5206\u914d\u7a7a\u95f4\uff0c\u6ca1\u6709\u8c03\u7528\u6784\u9020\u51fd\u6570\u3002\u6240\u4ee5\u5171\u8c03\u7528\u6784\u9020\u51fd\u6570\u7684\u6b21\u6570\u4e3a4\u3002",
      "optionB": "4",
      "type": "1",
      "optionA": "3",
      "question": "\u5047\u5b9aAB\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u5219\u6267\u884c\u201cAB a(2), b\uff3b3\uff3d,*p\uff3b4\uff3d;\u201d\u8bed\u53e5\u65f6\u8c03\u7528\u8be5\u7c7b\u6784\u9020\u51fd\u6570\u7684\u6b21\u6570\n\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "53",
      "ID": "55f2e51de4b0152a6114335b",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7531\u6743\u503c\u5206\u522b\u4e3a3\uff0c8\uff0c6\uff0c2\uff0c5\u7684\u53f6\u5b50\u7ed3\u70b9\u751f\u6210\u4e00\u68f5\u54c8\u592b\u66fc\u6811\uff0c\u5b83\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u4e3a ",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143228",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "fork\u662fclone\u7684\u5347\u7ea7\u7248\u672c\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u521b\u5efa\u8fdb\u7a0b\u6216\u8005\u7ebf\u7a0b\uff0c\u8fd8\u53ef\u4ee5\u6307\u5b9a\u521b\u5efa\u65b0\u7684\u547d\u540d\u7a7a\u95f4\uff08namespace\uff09\u3001\u6709\u9009\u62e9\u7684\u7ee7\u627f\u7236\u8fdb\u7a0b\u7684\u5185\u5b58\u3001\u751a\u81f3\u53ef\u4ee5\u5c06\u521b\u5efa\u51fa\u6765\u7684\u8fdb\u7a0b\u53d8\u6210\u7236\u8fdb\u7a0b\u7684\u5144\u5f1f\u8fdb\u7a0b\u7b49\u7b49",
      "optionC": "clone\u662ffork\u7684\u5347\u7ea7\u7248\u672c\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u521b\u5efa\u8fdb\u7a0b\u6216\u8005\u7ebf\u7a0b\uff0c\u8fd8\u53ef\u4ee5\u6307\u5b9a\u521b\u5efa\u65b0\u7684\u547d\u540d\u7a7a\u95f4\uff08namespace\uff09\u3001\u6709\u9009\u62e9\u7684\u7ee7\u627f\u7236\u8fdb\u7a0b\u7684\u5185\u5b58\u3001\u751a\u81f3\u53ef\u4ee5\u5c06\u521b\u5efa\u51fa\u6765\u7684\u8fdb\u7a0b\u53d8\u6210\u7236\u8fdb\u7a0b\u7684\u5144\u5f1f\u8fdb\u7a0b\u7b49\u7b49",
      "optionAnswer": "C",
      "answer": "fork() \u51fd\u6570\u590d\u5236\u65f6\u5c06\u7236\u8fdb\u7a0b\u7684\u6240\u4ee5\u8d44\u6e90\u90fd\u901a\u8fc7\u590d\u5236\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u4e86\u590d\u5236\uff0c\u7136\u540e\u4f20\u9012\u7ed9\u5b50\u8fdb\u7a0b\uff0c\u6240\u4ee5 fork() \u51fd\u6570\u4e0d\u5e26\u53c2\u6570\uff1b clone() \u51fd\u6570\u5219\u662f\u5c06\u90e8\u5206\u7236\u8fdb\u7a0b\u7684\u8d44\u6e90\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u590d\u5236\uff0c\u590d\u5236\u54ea\u4e9b\u8d44\u6e90\u662f\u53ef\u9009\u62e9\u7684\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u8bbe\u5b9a\uff0c\u6240\u4ee5 clone() \u51fd\u6570\u5e26\u53c2\u6570\uff0c\u6ca1\u6709\u590d\u5236\u7684\u8d44\u6e90\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u5171\u4eab\u7ed9\u5b50\u8fdb\u7a0b ",
      "optionB": "clone\u548cfork\u6700\u5927\u4e0d\u540c\u5728\u4e8eclone\u4e0d\u518d\u590d\u5236\u7236\u8fdb\u7a0b\u7684\u6808\u7a7a\u95f4\uff0c\u800c\u662f\u81ea\u5df1\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u3002",
      "type": "1",
      "optionA": "clone\u548cfork\u6700\u5927\u4e0d\u540c\u5728\u4e8efork\u4e0d\u518d\u590d\u5236\u7236\u8fdb\u7a0b\u7684\u6808\u7a7a\u95f4\uff0c\u800c\u662f\u81ea\u5df1\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u3002",
      "question": "\u4e0b\u5217\u5173\u4e8e clone \u548c fork \u7684\u533a\u522b\u63cf\u8ff0\u6b63\u786e\u7684\u6709\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de809",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6709\u9650\u6b21\u5faa\u73af",
      "optionC": "\u662f\u65e0\u9650\u5faa\u73af",
      "optionAnswer": "A",
      "answer": "?\u5faa\u73af\u5224\u65ad\u4e3a 0 \u5373\u4e0d\u6ee1\u8db3\u5faa\u73af\u6761\u4ef6",
      "optionB": "\u5faa\u73af\u4f53\u6267\u884c\u4e00\u6b21",
      "type": "1",
      "optionA": "\u5faa\u73af\u4f53\u4e00\u6b21\u4e5f\u4e0d\u6267\u884c",
      "question": "\u8bbem\u548cn\u90fd\u662fint\u7c7b\u578b\uff0c\u90a3\u4e48\u4ee5\u4e0bfor\u5faa\u73af\u8bed\u53e5\uff0c______.for(m=0,n=-1;n=0;m++,n++)\n    n++;",
      "title": "C&C++"
    },
    {
      "answer": "int FindMaxSubMin(BinTree *root)\n{\n    stack<BinTree*> s;\n    BinTree *p=root;\n    int MaxNode = p->data;\n    int MinNode = p->data;\n    while(p!=NULL||!s.empty())\n    {\n        while(p!=NULL)\n        {\n            s.push(p);\n            p=p->lchild;\n        }\n        if(!s.empty())\n        {\n            p=s.top();\n            if(p->data > MaxNode)\n            {\n                MaxNode = p->data;\n            }\n            if(p->data < MinNode)\n            {\n                MinNode = p->data;\n            }\n            s.pop();\n            p=p->rchild;\n        }\n }\n return abs(MaxNode - MinNode);\n }",
      "ID": "55f2e51ce4b0152a61143331",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u5b58\u653e\u4e86\u4e00\u4e2a\u6574\u6570\u503c\uff0c\u51fd\u6570\u8fd4\u56de\u8fd9\u9897\u4e8c\u53c9\u6811\u4e2d\u76f8\u5dee\u6700\u5927\u7684\u4e24\u4e2a\u8282\u70b9\u95f4\u7684\u5dee\u503c\u7edd\u5bf9\u503c\u3002\u8bf7\u6ce8\u610f\u7a0b\u5e8f\u6548\u7387\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c20",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4f7f\u7528\u5b83\u521b\u5efa\u5bf9\u8c61\u6570\u7ec4\u65f6\u5fc5\u987b\u6307\u5b9a\u521d\u59cb\u503c",
      "optionC": "\u4f7f\u7528\u5b83\u521b\u5efa\u5bf9\u8c61\u65f6\u8981\u8c03\u7528\u6784\u9020\u51fd\u6570",
      "optionAnswer": "D",
      "answer": "new\u521b\u5efa\u7684\u5bf9\u8c61\u6570\u7ec4\u4e0d\u80fd\u6307\u5b9a\u521d\u59cb\u503c\uff0c\u6240\u4ee5\u8c03\u7528\u65e0\u53c2\u7684\u6784\u9020\u51fd\u6570\uff0c\u9009\u62e9D\u9879",
      "optionB": "\u4f7f\u7528\u5b83\u521b\u5efa\u7684\u5bf9\u8c61\u6216\u5bf9\u8c61\u6570\u7ec4\u53ef\u4ee5\u4f7f\u7528\u8fd0\u7b97\u7b26delete\u5220\u9664",
      "type": "1",
      "optionA": "\u5b83\u53ef\u4ee5\u7528\u6765\u52a8\u6001\u521b\u5efa\u5bf9\u8c61\u548c\u5bf9\u8c61\u6570\u7ec4",
      "question": "\u5173\u4e8enew\u8fd0\u7b97\u7b26\u7684\u4e0b\u5217\u63cf\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c6c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5f15\u7528",
      "optionC": "\u8d4b\u503c",
      "optionAnswer": "B",
      "answer": "\u5220\u9664\u5bf9\u8c61\u6216\u7ed3\u675f\u7a0b\u5e8f\u65f6\uff0c\u81ea\u52a8\u8c03\u7528\u6790\u6784\u51fd\u6570\u3002",
      "optionB": "\u64a4\u9500",
      "type": "1",
      "optionA": "\u5efa\u7acb",
      "question": "\u7c7b\u7684\u6790\u6784\u51fd\u6570\u662f\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u4ee5\u4e0b\u54ea\u79cd\u64cd\u4f5c\u65f6\u81ea\u52a8\u8c03\u7528\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "public static int getCount(int sum){\n    int count = 0;\n    for(int i = 0; i <= sum/5; i++){\n      for(int j = 0; j <= sum/10; j++){\n        for(int k = 0; k <= sum/20; k++){\n          for(int p = 0; p <= sum/50; p++){\n            for(int q = 0; q <= sum/100; q++){\n              if(5*i + 10*j + 20*k + 50*p + 100*q > sum){\n                continue;\n              } else if (5*i + 10*j + 20*k + 50*p + 100*q == sum){\n                System.out.println(i+\",\"+j+\",\"+k+\",\"+p+\",\"+q);\n                ++count;\n              }\n            }\n          }\n        }\n      }\n    }\n    return count;\n}",
      "ID": "55f2e51de4b0152a6114337e",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u4f60\u4e00\u4e2a\u6570\u5c0f\u4e8e1000000\uff0c\u5206\u522b\u7528100,50,20,10,5\u5757\u8868\u793a\u51fa\u6765\uff0c\u6709\u591a\u5c11\u79cd\u8868\u793a\u65b9\u6cd5\u3002\u5199\u51fa\u7b97\u6cd5\u5373\u53ef\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114323b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "100,100",
      "optionC": "4,100",
      "optionAnswer": "A",
      "answer": "\u5bf9\u4e8e\u5f62\u53c2char para[100]\uff0c\u5176\u5b9e\u53c2\u4f20\u9012\u8fdb\u6765\u7684\u662f\u6570\u7ec4\u7684\u5730\u5740\uff0c\u572832\u4f4d\u7cfb\u7edf\u4e2dsizeof\uff08para\uff09=4\n\u5bf9\u4e8e\u6307\u9488p\uff0c\u662f\u8fde\u7eed100\u5b57\u8282\u7a7a\u95f4\u7684\u9996\u5730\u5740\uff0csizeof\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e2a\u8fde\u7eed\u7a7a\u95f4\u6709\u591a\u5927\uff0csizeof\u5f97\u5230\u7684\u662f\u8fd9\u4e2a\u6307\u9488\u53d8\u91cf\u7684\u5927\u5c0f\uff0c\u662f4\u5b57\u8282",
      "optionB": "100\uff0c4",
      "type": "1",
      "optionA": "4\uff0c4",
      "question": "\u4e0b\u9762\u51fd\u6570\u7684\u6267\u884c\u7ed3\u679c\u662f\u8f93\u51fa\n\nfunc(char para[100])\n{\n    void *p = malloc(100);\n    printf(\"%d, %d\\n\", sizeof(para), sizeof(p));\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a6114314c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u540e\u7f00\u4e00\u5143\u8fd0\u7b97\u7b26",
      "optionC": "\u524d\u7f00\u4e00\u5143\u8fd0\u7b97\u7b26",
      "optionAnswer": "C",
      "answer": "\u9996\u5148\u53ef\u4ee5\u5224\u65ad\u662f\u4e00\u5143\u64cd\u4f5c\u7b26\u3002\u56e0\u4e3a++\u548c--\u6709\u524d\u7f00\u548c\u540e\u7f00\u4e24\u79cd\u5f62\u5f0f\uff0c\u4e3a\u4e86\u533a\u5206\uff0c\u8981\u6c42\u5728\u540e\u7f00\u5f62\u5f0f\u52a0\u4e00\u4e2aint\u53c2\u6570\u3002  const Fraction operator ++(int)   \u4e2d int\u4e0d\u8fc7\u662f\u4e2a\u54d1\u5143\uff08dummy\uff09,\u662f\u6c38\u8fdc\u7528\u4e0d\u4e0a\u7684\uff0c\u5b83\u53ea\u662f\u7528\u6765\u5224\u65ad\uff0b\uff0b\u662fprefix  \u8fd8\u662f  postfix  \u3002\u5982\u679c\u6709\u54d1\u5143\uff0c\u5219\u662fpostfix,\u5426\u5219\uff0c\u5c31\u662fprefix \u3002 ",
      "optionB": "\u4e8c\u5143\u8fd0\u7b97\u7b26",
      "type": "1",
      "optionA": "\u65e0\u64cd\u4f5c\u6570\u7684\u8fd0\u7b97\u7b26",
      "question": "\u5728\u91cd\u8f7d\u4e00\u4e2a\u8fd0\u7b97\u7b26\u4e3a\u6210\u5458\u51fd\u6570\u65f6\uff0c\u5176\u53c2\u6570\u8868\u4e2d\u6ca1\u6709\u4efb\u4f55\u53c2\u6570\uff0c\u8fd9\u8bf4\u660e\u8be5\u8fd0\u7b97\u7b26\u662f \uff08 \uff09\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u4efb\u4f55\u4eba\u4e0d\u5fc5\u7b49\u7684\u60c5\u51b5\u6570 Cn=2N!/(N!*N!*(N+1)) \u603b\u7684\u60c5\u51b5\u6570 T=2N!/N!*N! \u4e0d\u5fc5\u7b49\u7684\u6982\u7387\u4e3a\uff1aCn/T = 1/(N+1)",
      "ID": "55f2e51de4b0152a61143394",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5728\u6709\u56e2\u8d2d\u4e4b\u524d\uff0c\u5927\u5bb6\u90fd\u662f\u73b0\u573a\u4e70\u95e8\u7968\uff0c\u516c\u56ed\u7684\u95e8\u7968\u662f5\u5143\uff0c\u67d0\u5929\u552e\u7968\u5904\u5f00\u95e8\u65f6\u6ca1\u6709\u51c6\u5907\u96f6\u94b1\u3002\u5047\u8bbe\u4e00\u5929\u6765\u8d2d\u7968\u7684\u4f9d\u6b21\u67092N\u4e2a\u4eba\uff0c\u5176\u4e2d\u6709N\u4e2a\u4eba\u67095\u5143\u96f6\u94b1\uff0c\u5176\u4ed6N\u4e2a\u4eba\u53ea\u670910\u5143\u9762\u503c\u7684\u94b1\uff1b\u5047\u8bbe\u6bcf\u4eba\u53ea\u4e70\u4e00\u5f20\u7968\u3002\u8bf7\u95ee\u4efb\u4f55\u4eba\u90fd\u4e0d\u5fc5\u4e3a\u627e\u96f6\u800c\u7b49\u5f85\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7ed",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "7",
      "optionC": "8",
      "optionAnswer": "C",
      "answer": "\u9996\u5148\u6ce8\u610ffor\u5faa\u73af\u7684\u63a7\u5236\u6761\u4ef6,\u5f53b > = 20\u6216\u8005a >100\u5219\u8df3\u51fafor\u5faa\u73af,\u4e5f\u5373b < 20\u4e14a < = 100\u65f6\u6267\u884cfor\u5faa\u73af;\u7b2c\u4e00\u6b21\u8fdb\u5165\u5faa\u73afa = 1,b = 1\u5747\u6ee1\u8db3\u5faa\u73af\u6761\u4ef6,\u4f46b%3 = = 1\u6761\u4ef6\u6ee1\u8db3,\u6545\u6267\u884cb = b + 3,\u5f97\u5230b = 4,\u6ce8\u610f\u6709continue,\u6240\u4ee5\u540e\u9762\u8bed\u53e5\u4e0d\u6267\u884c,\u76f4\u63a5\u8df3\u5230 a + +\u8fd9\u4e2a\u8bed\u53e5,\u6240\u4ee5\u7b2c\u4e00\u6b21\u5faa\u73af\u5b8c\u4e4b\u540ea = 2,b = 4;\u8fdb\u5165\u7b2c\u4e8c\u8f6e\u5faa\u73af,b%3 = = 1\u4e5f\u662f\u6ee1\u8db3\u7684,\u6545\u518d\u6b21b = b + 3,\u6b64\u8f6e\u5faa\u73af\u6267\u884c\u4e4b\u540ea = 3,b = 7,\u8fdb\u5165\u4e0b\u4e00\u8f6e\u3002\u6b64\u540e\u548c\u524d\u9762\u5faa\u73af\u540c\u7406,\u90fd\u662fb%3 = = 1\u6ee1\u8db3,\u56e0\u4e3a\u6bcf\u6b21\u90fd\u662f\u52a03,\u800c\u4e4b\u540e\u53c8\u53bb\u6a213,\u4e14\u90fd\u8df3\u8fc7for\u540e\u9762\u8bed\u53e5\u76f4\u63a5\u6267\u884ca + +,\u6240\u4ee5,\u4e00\u76f4\u5faa\u73af\u5230b = 22\u8df3\u51fafor\u5faa\u73af\u3002\u6b64\u65f6a\u4e3a8.\u7efc\u5408\u8d77\u6765\u5c31\u662f,\u6bcf\u6b21\u5faa\u73afb\u589e\u52a03,a\u589e\u52a01,\u4e14\u5f53b > 22\u65f6\u8df3\u51fa\u5faa\u73af,\u7ed3\u675f\u7a0b\u5e8f\u3002\u6240\u4ee5b\u4ece1\u589e\u52a0\u523022,\u6709(22-1)/3 = 7,\u6240\u4ee5a = 1 + 7=8.\u56e0\u6b64c\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "9",
      "type": "1",
      "optionA": "10",
      "question": "#include <stdio.h>\nmain()\n{ \n    int a, b;\n    for( a = 1,b = 1; a <= 100; a ++)\n    { \n        if( b >= 20) break;\n        if( b % 3 == 1)\n        { \n            b = b + 3; \n            continue;\n        }\n        b = b \u2013 5;\n    }\n    printf(\"%d\\n\",a);\n}\n\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143145",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "7",
      "optionC": "5",
      "optionAnswer": "D",
      "answer": "\u4f4d\u64cd\u4f5c\u7b26\uff0c\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u518d\u8fd0\u7b97",
      "optionB": "3",
      "type": "1",
      "optionA": "1",
      "question": "C\u8bed\u8a00\u91cci=5,j=7,\u8bf7\u95eei|j\u7b49\u4e8e\u591a\u5c11\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u4ea7\u751f\u6b7b\u9501\u7684\u539f\u56e0\u4e3b\u8981\u662f\uff1a\n\uff081\uff09 \u56e0\u4e3a\u7cfb\u7edf\u8d44\u6e90\u4e0d\u8db3\u3002\n\uff082\uff09 \u8fdb\u7a0b\u8fd0\u884c\u63a8\u8fdb\u7684\u987a\u5e8f\u4e0d\u5408\u9002\u3002\n\uff083\uff09 \u8d44\u6e90\u5206\u914d\u4e0d\u5f53\u7b49\u3002\n\u4ea7\u751f\u6b7b\u9501\u7684\u56db\u4e2a\u5fc5\u8981\u6761\u4ef6\uff1a\n\uff081\uff09\u4e92\u65a5\u6761\u4ef6\uff1a\u4e00\u4e2a\u8d44\u6e90\u6bcf\u6b21\u53ea\u80fd\u88ab\u4e00\u4e2a\u8fdb\u7a0b\u4f7f\u7528\u3002\n\uff082\uff09\u8bf7\u6c42\u4e0e\u4fdd\u6301\u6761\u4ef6\uff1a\u4e00\u4e2a\u8fdb\u7a0b\u56e0\u8bf7\u6c42\u8d44\u6e90\u800c\u963b\u585e\u65f6\uff0c\u5bf9\u5df2\u83b7\u5f97\u7684\u8d44\u6e90\u4fdd\u6301\u4e0d\u653e\u3002\n\uff083\uff09\u4e0d\u5265\u593a\u6761\u4ef6:\u8fdb\u7a0b\u5df2\u83b7\u5f97\u7684\u8d44\u6e90\uff0c\u5728\u672b\u4f7f\u7528\u5b8c\u4e4b\u524d\uff0c\u4e0d\u80fd\u5f3a\u884c\u5265\u593a\u3002\n\uff084\uff09\u5faa\u73af\u7b49\u5f85\u6761\u4ef6:\u82e5\u5e72\u8fdb\u7a0b\u4e4b\u95f4\u5f62\u6210\u4e00\u79cd\u5934\u5c3e\u76f8\u63a5\u7684\u5faa\u73af\u7b49\u5f85\u8d44\u6e90\u5173\u7cfb\u3002",
      "ID": "55f2e51de4b0152a61143364",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6570\u636e\u5e93\u4ee5\u53ca\u7ebf\u7a0b\u53d1\u751f\u6b7b\u9501\u7684\u539f\u7406\u53ca\u5fc5\u8981\u6761\u4ef6\uff0c\u5982\u4f55\u907f\u514d\u6b7b\u9501",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143153",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "bBAb",
      "optionC": "AbAb",
      "optionAnswer": "D",
      "answer": "void f( char* c, char d ){\n    *c = *c + 1;\n    d = d + 1;\n    cout<< *c << d;\n}\nvoid main( ){\n    char a = 'A', b = 'a';\n    f( &b, a);\n    cout<<a<<b<<endl;\n}\nf(&b,a)\u4e2d\u6253\u5370 \"bB\"\ncout<<a<<b<<endl;\u6253\u5370\"Ab\"\uff0c\u56e0\u4e3a f\u51fd\u6570 \u901a\u8fc7\u6307\u9488\u6539\u53d8\u4e86b\u7684\u503c\uff0c\u4f46\u662fa\u53ea\u662f\u4f5c\u4e3ad\u7684\u4e00\u4e2a\u526f\u672c\u5e76\u6ca1\u6709\u6539\u53d8\u3002",
      "optionB": "aBaB",
      "type": "1",
      "optionA": "BaBa",
      "question": "\u4e0b\u9762\u4e00\u6bb5\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f\n\nvoid f ( char* c, char d ){\n    *c = *c + 1;\n    d = d + 1;\n    cout<< *c << d;\n}\nvoid main( ){\n    char a = 'A' , b = 'a';\n    f ( &b, a);\n    cout<<a<<b<<endl;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114324f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5b57\u7b26a\u7684\u8d77\u59cb\u5730\u5740",
      "optionC": "\u5b57\u7b26o",
      "optionAnswer": "A",
      "answer": "\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488\u7684\u95ee\u9898\u3002\n\u5047\u8bbe\u5b9a\u4e49\u4e00\u4e2aint\u578b\u7684\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488\u3002\nint Sec[2][3]={4,6,3,7,2,7};\nint **P = Sec; \n**p \u7b49\u4ef7 Sec[0][0]  *p \u7b49\u4ef7 Sec[0]  *(p+n) \u7b49\u4ef7 Sec[n] *(*(p+n)+m) \u7b49\u4ef7 Sec[n][m]\n\u6240\u4ee5++m\uff0c\u4e3a\u884c\u6570\u589e\u52a0\u4e3aafternoon\u4e00\u884c\uff0c\u800c*m\u8f93\u51fa\u6574\u884c\u3002",
      "optionB": "\u5b57\u7b26o\u7684\u8d77\u59cb\u5730\u5740",
      "type": "1",
      "optionA": "afernoon",
      "question": "\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1a\n\n#include <iostream.h>\nvoid func(char **m){\n    ++m;\n    cout<<*m<<endl;\n}\nint main(){\n    static char *a[]={\"morning\", \"afternoon\", \"evening\"};\n    char **p;\n    p=a;\n    func(p);\n    return 0;\n}",
      "title": "C&C++"
    },
    {
      "answer": "66.70%",
      "ID": "55f2e51ee4b0152a611433e1",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5230\u5546\u5e97\u91cc\u82b1 200\u5757\u94b1\u4e70\u5546\u54c1\u8fd4\u8fd8 100 \u4f18\u60e0\u5238(\u53ef\u4ee5\u5728\u672c\u5546\u5e97\u4ee3\u66ff\u73b0\u91d1)\u3002\u8bf7\u95ee\u5b9e\u9645\u4e0a\u6298\u6263\u662f\u591a\u5c11?",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143160",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "int ch<='9'  0",
      "optionC": "char   ch<='9'  0",
      "optionAnswer": "B",
      "answer": "char   ch<='9'   \u20180\u2019 \n\u89e3\u6790\uff1a1\uff0c\u8fd4\u56de\u7684\u662f\u8f6c\u6362\u540e\u7684\u5b57\u7b26\uff0c\u56e0\u6b64\u662fchar\n2\uff0c\u5224\u65ad\u5b57\u7b26\u5728\u20190\u2019\u5230\u20199\u2019\u8303\u56f4\u5185\uff0c\u56e0\u6b64\u662f ch<=\u20199\u2019\n3\uff0c\u20199\u2019-ch \u5f97\u5230\u7684\u662f\u4e24\u4e2a\u5b57\u7b26\u4e4b\u95f4\u7684\u5dee\u503c\uff0c\u662f\u6574\u578b\uff0c\u8981\u8f6c\u6210\u5bf9\u5e94\u7684\u5b57\u7b26\u8981+\u20190\u2019\uff0c\u5728\u62ec\u53f7\u5185\u4e3aj\u51cf",
      "optionB": "char   ch<='9'  '0'",
      "type": "1",
      "optionA": "int ch<='9'  '0'",
      "question": "\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f:\u8fdb\u884c\u6570\u5b57\u5b57\u7b26\u8f6c\u6362\u3002\u82e5\u5f62\u53c2ch\u4e2d\u662f\u6570\u5b57\u5b57\u7b26'0'\uff5e'9',\u5219\u5c06'0'\u8f6c\u6362\u6210'9','1'\u8f6c\u6362\u6210'8', '2'\u8f6c\u6362\u6210'7',\u2026, '9'\u8f6c\u6362\u6210'0';\u5982\u679c\u662f\u5176\u4ed6\u5b57\u7b26\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5e76\u5c06\u8f6c\u6362\u540e\u7684\u7ed3\u679c\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002 \n\u8bf7\u5728\u7a0b\u5e8f\u7684\u4e0b\u753b\u7ebf\u5904\u586b\u5165\u6b63\u786e\u7684\u5185\u5bb9\u5e76\u5c06\u4e0b\u753b\u7ebf\u5220\u9664\uff0c\u4f7f\u7a0b\u5e8f\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002 \n\u8bd5\u9898\u7a0b\u5e8f\u3002\n\n#include<stdio.h>\n_____ fun(char ch)\n{\n    if(ch>='0'&& _______)\n        return'9'-(ch- ______);\n    return ch;\n}\nmain( )\n{ \n    char c1,c2;\n    printf(\"\\nThe result:\\n\");\n    c1='2';\n    c2=fun(c1);\n    printf(\"c1=%c c2=%c\\n\",c1,c2);\n    c1='8';\n    c2=fun(c1);\n    printf(\"c1=%c c2=%c\\n\",c1,c2);\n    c1='a';\n    c2=fun(c1);\n    printf(\"c1=%c c2=%c\\n\",c1,c2);\n}",
      "title": "C&C++"
    },
    {
      "answer": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.Scanner;\n \nclass ByValueComparator implements Comparator<String>{\n    HashMap<String, Integer> base_map;\n    public ByValueComparator(HashMap<String,Integer> map) {\n        // TODO Auto-generated constructor stub\n        this.base_map = map;\n    }\n    @Override\n    public int compare(String str1, String str2) {\n        // TODO Auto-generated method stub\n        if(!base_map.containsKey(str1) || !base_map.containsKey(str2)){\n            return 0;\n        }\n        if(base_map.get(str1) < base_map.get(str2)){\n            return 1;\n        }else{\n            //\u76f8\u7b49\u4e5f\u8981\u8fd4\u56de-1\uff0c\u5426\u5219\u5728\u6392\u5e8f\u65f6\u4e0d\u4f1a\u628a\u76f8\u7b49\u7684\u503c\u653e\u5230TreeMap\u4e2d\uff0c\u82e5=0\u5219\u65b0\u503c\u66ff\u4ee3\u539f\u503c\n            //\u4e3a\u4f55\u76f8\u7b49\u662f\u8fd4\u56de-1\u4e0d\u662f\u8fd4\u56de1\uff0c\u6839\u636e\u60c5\u51b5\u800c\u5b9a\uff0c\u8fd4\u56de1\u4ee3\u8868\u65b0\u503c\u653e\u5230\u65e7\u503c\u524d\u9762\uff0c-1\u4ee3\u8868\u65b0\u503c\u653e\u5728\u65e7\u503c\u540e\u9762\n            return -1;\n        }\n    }\n}\npublic class juan1_q2 {\n    public static void main(String[] ags){\n        HashMap<String, Integer> recMap = new HashMap<String, Integer>();\n        Scanner input = new Scanner(System.in);\n        String file = \"\";\n        int errorLine = 0;\n        int lastIndex = 0;\n        String recName = null;\n        while(input.hasNext()){\n            file = input.next();\n            errorLine = input.nextInt();\n            lastIndex = file.lastIndexOf(\"\\\\\");\n            recName = (lastIndex < 0)?file:file.substring(lastIndex+1)+\" \"+errorLine;\n            int count = 0;\n            if(!recMap.containsKey(recName)){\n                recMap.put(recName, 1);\n            }else{\n                count = recMap.get(recName);\n                recMap.put(recName, count+1);\n            }\n        }\n        input.close();\n        //--------\u4ee5\u4e0a\u7edf\u8ba1\uff0c\u4ee5\u4e0b\u6392\u5e8f\u53d6\u503c-------------\n        ArrayList<String> keys = new ArrayList<String>(recMap.keySet());\n        ByValueComparator bvc = new ByValueComparator(recMap);\n        Collections.sort(keys, bvc);\n        for(int i = 0;i < (keys.size() > 8?8:keys.size());i++){\n            String key = keys.get(i);\n            StringBuilder res ",
      "ID": "55f2e51ce4b0152a61143325",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5f00\u53d1\u4e00\u4e2a\u7b80\u5355\u9519\u8bef\u8bb0\u5f55\u529f\u80fd\u5c0f\u6a21\u5757\uff0c\u80fd\u591f\u8bb0\u5f55\u51fa\u9519\u7684\u4ee3\u7801\u5750\u5728\u7684\u6587\u4ef6\u540d\u79f0\u548c\u884c\u53f7\u3002 \n\u5904\u7406:\n1.\u8bb0\u5f55\u6700\u591a8\u6761\u9519\u8bef\u8bb0\u5f55\uff0c\u5bf9\u76f8\u540c\u7684\u9519\u8bef\u8bb0\u5f55(\u5373\u6587\u4ef6\u540d\u79f0\u548c\u884c\u53f7\u5b8c\u5168\u5339\u914d)\u53ea\u8bb0\u5f55\u4e00\u6761\uff0c\u9519\u8bef\u8ba1\u6570\u589e\u52a0\uff1b(\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u4e0d\u540c\uff0c\u6587\u4ef6\u540d\u548c\u884c\u53f7\u76f8\u540c\u4e5f\u8981\u5408\u5e76)\n2.\u8d85\u8fc716\u4e2a\u5b57\u7b26\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u53ea\u8bb0\u5f55\u6587\u4ef6\u7684\u6700\u540e\u6709\u654816\u4e2a\u5b57\u7b26\uff1b(\u5982\u679c\u6587\u4ef6\u540d\u4e0d\u540c\uff0c\u800c\u53ea\u662f\u6587\u4ef6\u540d\u7684\u540e16\u4e2a\u5b57\u7b26\u548c\u884c\u53f7\u76f8\u540c\uff0c\u4e5f\u4e0d\u8981\u5408\u5e76)\n3.\u8f93\u5165\u7684\u6587\u4ef6\u53ef\u80fd\u5e26\u8def\u5f84\uff0c\u8bb0\u5f55\u6587\u4ef6\u540d\u79f0\u4e0d\u80fd\u5e26\u8def\u5f84",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143275",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "0\uff0c0",
      "optionC": "1\uff0c0",
      "optionAnswer": "A",
      "answer": "const\u4fee\u9970\u7684\u5e38\u91cf\u503c\u5177\u6709\u4e0d\u53ef\u53d8\u6027,c++\u7f16\u8bd1\u5668\u901a\u5e38\u4f1a\u5bf9\u8be5\u53d8\u91cf\u505a\u4f18\u5316\u5904\u7406\uff0c\u5728\u7f16\u8bd1\u65f6\u53d8\u91cfi\u7684\u503c\u4e3a\u5df2\u77e5\u7684\uff0c\u7f16\u8bd1\u5668\u76f4\u63a5\u5c06printf\u8f93\u51fa\u7684\u53d8\u91cfi\u66ff\u6362\u4e3a0\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u7f16\u8bd1\u5668\u4ecd\u7136\u4f1a\u4e3a\u53d8\u91cfi\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u901a\u8fc7\u4fee\u6539\u5185\u5b58\u7684hack\u65b9\u5f0f\u5c06\u53d8\u91cfi\u5728\u5185\u5b58\u4e2d\u7684\u503c\u4fee\u6539\u540e\u5e76\u4e0d\u5f71\u54cdprintf\u7684\u8f93\u51fa\u3002\n\u5982\u679c\u5c06i\u66f4\u6539\u4e3avolatile const int\u7c7b\u578b\u7684\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u5bf9\u53d8\u91cfi\u505a\u4f18\u5316\uff0cprintf\u8f93\u51fa\u7684\u7ed3\u679c\u5c31\u4e3a1\u3002",
      "optionB": "1\uff0c1",
      "type": "1",
      "optionA": "0\uff0c1",
      "question": "\u5728c++\u4e2d\uff0c\n\nconst int i = 0; \nint *j = (int *) &i; \n*j = 1; \nprintf(\"%d,%d\", i, *j)\n\u8f93\u51fa\u662f\u591a\u5c11\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143142",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "6\uff0c6\uff0c4",
      "optionC": "6\uff0c4\uff0c4",
      "optionAnswer": "B",
      "answer": "sizeof(str),str\u662f\u5b57\u7b26\u6570\u7ec4\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u662f7\u4e2a\u5b57\u8282\nsizeof(p), str\u7684\u9996\u5143\u7d20\u5730\u5740\u8d4b\u7ed9\u6307\u9488p\uff0c\u6307\u9488\u603b\u53604\u4e2a\u5b57\u8282\nsizeof(n), int\u578b\u6574\u6570\uff0c\u6240\u4ee54\u4e2a\u5b57\u8282",
      "optionB": "7\uff0c4\uff0c4",
      "type": "1",
      "optionA": "4\uff0c4\uff0c4",
      "question": "\u4e0b\u9762\u51fd\u6570\u7684\u6267\u884c\u7ed3\u679c\u662f\u8f93\u51fa\nchar str[]=\u201dxunlei\u201d;\nchar *p=str;\nint n=10;\nprintf(\u201c%d,%d,%d\\n\u201d,sizeof(str),sizeof(p),sizeof(n));",
      "title": "C&C++"
    },
    {
      "answer": "int getMax(int a[],int len)\n{  \n   int max1 = a[0];//\u8868\u793amaxSum(n-2);  \n   int max2 = a[0]>a[1]? a[0]:a[1]; //\u8868\u793amaxSum(n-1);  \n   int max3 = 0; // n \n   for(int i =2; i<len; i++){    \n    max3 = Max(a[i],Max(max1+a[i],max2));\n//       max3 = a[i]+max1> max2 ? a[i]+max1:max2;  // \u5168\u90e8\u662f\u8d1f\u6570\u4e5f\u9700\u8981\u8003\u8651\u7684,\u8fd9\u4e2a\u6ca1\u6709\n        max1 = max2; \n        max2  = max3; \n   } \nreturn max3;\n}\n\nint Max(int a,int b){\nif(a>b)\nreturn a;else\nreturn b;\n}",
      "ID": "55f2e51de4b0152a61143347",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u7684\u6570\u7ec4\uff0c\u76f8\u90bb\u7684\u6570\u4e0d\u80fd\u540c\u65f6\u9009\uff0c\u6c42\u4ece\u8be5\u6570\u7ec4\u9009\u53d6\u82e5\u5e72\u6574\u6570\uff0c\u4f7f\u5f97\u4ed6\u4eec\u7684\u548c\u6700\u5927\uff0c\u8981\u6c42\u53ea\u80fd\u4f7f\u7528o(1)\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\u8981\u6c42\u7ed9\u51fa\u4f2a\u7801\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143138",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "None of the above",
      "optionC": "const static/static",
      "optionAnswer": "B",
      "answer": "static int\u4e3a\u9759\u6001\u53d8\u91cf\uff0c\u5b83\u7684\u503c\u59cb\u7ec8\u4fdd\u5b58\u5728\u5185\u5b58\u91cc\uff0c\u4e5f\u5c31\u662f\u4e0a\u4e00\u6b21\u6539\u53d8\u540e\u7684\u503c",
      "optionB": "\u2013/static",
      "type": "1",
      "optionA": "static/const    const/static",
      "question": "Fill the blanks inside class definition\n\nclass Test {\n    public:\n         ____ int a;\n         ____ int b;\n    public:\n        Test::Test(int _a, int _b) : a(_a) {\n            b = _b;\n         }\n};\nint Test::b;\nint _tmain(int argc, __TCHAR *argv[]) {\n    Test t1(0, 0), t2(1, 1);\n    t1.b = 10;\n    t2.b = 20;\n    printf(\u201c%u %u %u %u\u201d, t1.a, t1.b, t2.a, t2.b);\n}\nRunning result: 0 20 1 20",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143141",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "int const *x = &y;",
      "optionC": "const int *x = &y;",
      "optionAnswer": "B",
      "answer": "A\uff0c\u6307\u9488\u6240\u6307\u5411\u7684\u5185\u5b58\u4e0d\u53ef\u53d8\uff0c\u5185\u5b58\u4e2d\u7684\u503c\u4e5f\u4e0d\u80fd\u901a\u8fc7\u6307\u9488\u6539\u53d8\uff0c\u9519\u8bef\uff1b\nB\uff0c\u6307\u9488\u6240\u6307\u5411\u7684\u5185\u5b58\u4e0d\u53ef\u53d8\uff0c\u5185\u5b58\u4e2d\u7684\u503c\u53ef\u4ee5\u6539\u53d8\uff0c\u6b63\u786e\uff1b\nC\uff0c\u6307\u9488\u6240\u6307\u5411\u7684\u5185\u5b58\u53ef\u53d8\uff0c\u4f46\u5185\u5b58\u4e2d\u7684\u503c\u4e0d\u80fd\u901a\u8fc7\u6307\u9488\u6539\u53d8\uff0c\u9519\u8bef\uff1b\nD\uff0c\u6307\u9488\u6240\u6307\u5411\u7684\u5185\u5b58\u53ef\u53d8\uff0c\u4f46\u5185\u5b58\u4e2d\u7684\u503c\u4e0d\u80fd\u901a\u8fc7\u6307\u9488\u6539\u53d8\uff0c\u9519\u8bef\uff1b",
      "optionB": "int * const x = &y;",
      "type": "1",
      "optionA": "const int const *x = &y;",
      "question": "\u8bf7\u58f0\u660e\u4e00\u4e2a\u6307\u9488\uff0c\u5176\u6240\u6307\u5411\u7684\u5185\u5b58\u5730\u5740\u4e0d\u80fd\u6539\u53d8\uff0c\u4f46\u5185\u5b58\u4e2d\u7684\u503c\u53ef\u4ee5\u88ab\u6539\u53d8\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114322a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u7c7b\u6a21\u677f\u4e2d\u7684\u6210\u5458\u51fd\u6570\u5168\u90e8\u90fd\u662f\u6a21\u677f\u51fd\u6570",
      "optionC": "\u7c7b\u6a21\u677f\u7684\u53c2\u6570\u5fc5\u987b\u662f\u865a\u62df\u7c7b\u578b\u7684",
      "optionAnswer": "D",
      "answer": "A\uff1a\u4e0b\u9762\u5217\u4e3e\u7684\u51e0\u79cd\u60c5\u51b5\u4e0d\u80fd\u7701\u7565\u6a21\u677f\u5b9e\u53c2\uff1a\n1\uff09\u4ece\u6a21\u677f\u51fd\u6570\u5b9e\u53c2\u8868\u83b7\u5f97\u7684\u4fe1\u606f\u6709\u77db\u76fe\u4e4b\u5904\u3002\n2\uff09\u9700\u8981\u83b7\u5f97\u7279\u5b9a\u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff0c\u800c\u4e0d\u7ba1\u53c2\u6570\u7684\u7c7b\u578b\u5982\u4f55\u3002\n3\uff09\u865a\u62df\u7c7b\u578b\u53c2\u6570\u6ca1\u6709\u51fa\u73b0\u5728\u6a21\u677f\u51fd\u6570\u7684\u5f62\u53c2\u8868\u4e2d\u3002\n4\uff09\u51fd\u6570\u6a21\u677f\u542b\u6709\u5e38\u89c4\u5f62\u53c2\u3002\nB\uff1a\u7c7b\u6a21\u677f\u4e0e\u6a21\u677f\u7c7b\u7684\u6982\u5ff5\n\u2474 \u4ec0\u4e48\u662f\u7c7b\u6a21\u677f \u4e00\u4e2a\u7c7b\u6a21\u677f\uff08\u4e5f\u79f0\u4e3a\u7c7b\u5c5e\u7c7b\u6216\u7c7b\u751f\u6210\u7c7b\uff09\u5141\u8bb8\u7528\u6237\u4e3a\u7c7b\u5b9a\u4e49\u4e00\u79cd\u6a21\u5f0f\uff0c\u4f7f\u5f97\u7c7b\u4e2d\u7684\u67d0\u4e9b\u6570\u636e\u6210\u5458\u3001\u9ed8\u5199\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u3001\u67d0\u4e9b\u6210\u5458\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u80fd\u591f\u53d6\u4efb\u610f\u7c7b\u578b\uff08\u5305\u62ec\u7cfb\u7edf\u9884\u5b9a\u4e49\u7684\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u7684\uff09\u3002\n  \u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u6570\u636e\u6210\u5458\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u80fd\u786e\u5b9a\uff0c\u6216\u8005\u662f\u67d0\u4e2a\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u6216\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u4e0d\u80fd\u786e\u5b9a\uff0c\u5c31\u5fc5\u987b\u5c06\u6b64\u7c7b\u58f0\u660e\u4e3a\u6a21\u677f\uff0c\u5b83\u7684\u5b58\u5728\u4e0d\u662f\u4ee3\u8868\u4e00\u4e2a\u5177\u4f53\u7684\u3001\u5b9e\u9645\u7684\u7c7b\uff0c\u800c\u662f\u4ee3\u8868\u7740\u4e00\u7c7b\u7c7b\u3002\n\u2475 \u6a21\u677f\u7c7b\u662f\u7c7b\u6a21\u677f\u5b9e\u4f8b\u5316\u540e\u7684\u4e00\u4e2a\u4ea7\u7269\u3002\u53ef\u4ee5\u4ece\u7c7b\u6a21\u677f\u6d3e\u751f\u51fa\u65b0\u7684\u7c7b\uff0c\u65e2\u53ef\u4ee5\u6d3e\u751f\u7c7b\u6a21\u677f\uff0c\u4e5f\u53ef\u4ee5\u6d3e\u751f\u975e\u6a21\u677f\u7c7b\u3002\n\u7c7b\u6a21\u677f\u7684\u91cd\u70b9\u662f\u6a21\u677f\u3002\u8868\u793a\u7684\u662f\u4e00\u4e2a\u6a21\u677f\uff0c\u4e13\u95e8\u7528\u4e8e\u4ea7\u751f\u7c7b\u7684\u6a21\u5b50\u3002 \u6a21\u677f\u7c7b\u7684\u91cd\u70b9\u662f\u7c7b\u3002\u8868\u793a\u7684\u662f\u7531\u4e00\u4e2a\u6a21\u677f\u751f\u6210\u800c\u6765\u7684\u7c7b\u3002 \nC\uff1a\u7c7b\u6a21\u677f\u6709\u4e09\u79cd\u7c7b\u578b\u6a21\u677f\u53c2\u6570\uff1a\u7c7b\u578b\u6a21\u677f\u53c2\u6570\u3001\u65e0\u7c7b\u578b\u6a21\u677f\u53c2\u6570\u548c\u6a21\u677f\u6a21\u677f\u53c2\u6570(\u4ee5\u6a21\u677f\u4f5c\u4e3a\u6a21\u677f\u7684\u53c2\u6570)\u3002\u5e76\u4e0d\u5c40\u9650\u4e8e\u865a\u62df\u7c7b\u578b\uff0c\u975e\u865a\u62df\u7c7b\u578b\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u7c7b\u6a21\u677f\u53c2\u6570\u3002",
      "optionB": "\u7c7b\u6a21\u677f\u4e0e\u6a21\u677f\u7c7b\u6240\u6307\u7684\u662f\u540c\u4e00\u6982\u5ff5",
      "type": "1",
      "optionA": "\u6a21\u677f\u7684\u5b9e\u53c2\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u53ef\u4ee5\u7701\u7565",
      "question": "\u4e0b\u5217\u5173\u4e8e\u6a21\u677f\u7684\u8bf4\u6cd5\u6b63\u786e\u7684\u662f",
      "title": "C&C++"
    },
    {
      "answer": "\u51fd\u6570\u539f\u578b\u4e3a\uff1aint sprintf(char *str, const char *format, ...);\nint snprintf(char *str, size_t size, const char *format, ...);\nsnprintf\u4e2d\u7684size\u7528\u6765\u9650\u5b9astr\u53ef\u7528\u7a7a\u95f4\u7684\u5927\u5c0f\uff0c\u9632\u6b62str\u7684\u5185\u5b58\u8d8a\u754c\u3002",
      "ID": "55f2e51ce4b0152a61143335",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "sprinf\u548csnprintf\u51fd\u6570\u533a\u522b\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143246",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "10,30\uff0c30",
      "optionC": "20,30\uff0c10",
      "optionAnswer": "A",
      "answer": "\u7528c++\u7f16\u8bd1\u662f\u7b54\u6848A\uff0c\u7528c\u7f16\u8bd1\u4f1a\u62a5\u9519\uff0cc++\u6709\u5f15\u7528\u8fd9\u4e1c\u897f",
      "optionB": "10\uff0c20\uff0c30",
      "type": "1",
      "optionA": "20\uff0c30\uff0c30",
      "question": "\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a\n\n#include<stdio.h>\nvoid change(int*a, int&b, int c)\n{\n      c=*a;\n      b=30;\n      *a=20;\n}\nint main ( )\n{\n      int a=10, b=20, c=30;\n      change(&a,b,c);\n      printf(\u201c%d,%d,%d,\u201d,a,b,c)\uff1b\n      return 0\uff1b\n }",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143272",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "0x102 \uff0c 0x506 \uff0c 0x102030405060708 \uff0c 0x0",
      "optionC": "0x201 \uff0c 0x605 \uff0c 0x4030201 \uff0c 0x8070605",
      "optionAnswer": "B",
      "answer": "\u5c0f\u7aef\u673a\u5668\u7684\u6570\u636e\u9ad8\u4f4d\u5b57\u8282\u653e\u5728\u9ad8\u5730\u5740\uff0c\u4f4e\u4f4d\u5b57\u8282\u653e\u5728\u4f4e\u5730\u5740\u3002x86\u7ed3\u6784\u4e3a\u5c0f\u7aef\u6a21\u5f0f\u3002\npshort\u5360\u75282\u4e2a\u5b57\u8282\uff0c\u5728\u5185\u5b58\u4e2d\u768416\u8fdb\u5236\u4e3a0x01 0x02\uff0c\u5bf9\u5e94\u768416\u8fdb\u5236\u6570\u4e3a0x0201\u3002\npshort + 2\u6307\u5411array\u6570\u7ec4\u7684\u4e0b\u6807\u4e3a4\u7684\u5143\u7d20\uff0c\u5360\u75282\u4e2a\u5b57\u8282\uff0c\u5728\u5185\u5b58\u4e2d\u768416\u8fdb\u5236\u4e3a0x05 0x06\uff0c\u5bf9\u5e94\u768416\u8fdb\u5236\u6570\u4e3a0x0605\u3002 \npint64\u7684int64\u7c7b\u578b\u4e0d\u786e\u5b9a\uff0c\u4f46\u6839\u636e\u540d\u5b57\u53ef\u4ee5\u770b\u51fa\u5360\u75288\u4e2a\u5b57\u8282\uff0c\u5bf9\u5e94\u768416\u8fdb\u5236\u5f62\u5f0f\u4e3a0x807060504030201\u3002\npint  + 2\u5360\u75284\u4e2a\u5b57\u8282\uff0c\u6307\u5411\u7684array\u6570\u7ec4\u7684\u4e0b\u6807\u4e3a8\u7684\u5143\u7d20\uff0c8-11\u4e2a\u5143\u7d20\u6ca1\u6709\u6307\u5b9a\u6570\u7ec4\u7684\u521d\u59cb\u5316\u503c\uff0c\u9ed8\u8ba4\u4e3a0\uff0c\u56e0\u6b64*(pint + 2)\u5bf9\u5e94\u768416\u8fdb\u5236\u4e3a0\u3002",
      "optionB": "0x201 \uff0c 0x605 \uff0c 0x807060504030201 \uff0c 0x0",
      "type": "1",
      "optionA": "0x201 \uff0c 0x403 \uff0c 0x807060504030201 \uff0c 0x0",
      "question": "\u572832\u4f4d\u5c0f\u7aef\u7684\u673a\u5668\u4e0a\uff0c\u5982\u4e0b\u4ee3\u7801\u8f93\u51fa\u662f\u4ec0\u4e48\uff1a\n\nchar array[12] = {0x01 , 0x02 , 0x03 , 0x04 , 0x05 , 0x06 , 0x07 , 0x08};     \n short *pshort = (short *)array;     \n int *pint = (int *)array;     \n int64 *pint64 = (int64 *)array;     \n printf(\"0x%x , 0x%x , 0x%llx , 0x%llx\", *pshort , *(pshort+2) , *pint64 , *(pint+2));",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c1e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5b9e\u53c2\u4e0e\u5f62\u53c2\u662f\u540c\u4e00\u5bf9\u8c61",
      "optionC": "\u5f62\u53c2\u662f\u5b9e\u53c2\u7684\u5907\u4efd",
      "optionAnswer": "D",
      "answer": "\u5730\u5740\u4f5c\u4e3a\u5b9e\u53c2\uff0c\u8868\u793a\u5b9e\u53c2\u4e0e\u5f62\u53c2\u4ee3\u8868\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u5b9e\u53c2\u662f\u6570\u503c\uff0c\u5f62\u53c2\u4e5f\u662f\u666e\u901a\n\u53d8\u91cf\uff0c\u6b64\u65f6\u5f62\u53c2\u662f\u5b9e\u53c2\u7684\u5907\u4efd\u3002\u6240\u4ee5\u9009\u62e9D\u9879\u3002",
      "optionB": "\u5b9e\u53c2\u4e0e\u5f62\u53c2\u65e0\u8054\u7cfb",
      "type": "1",
      "optionA": "\u5b9e\u53c2\u662f\u5f62\u53c2\u7684\u5907\u4efd",
      "question": "\u4f7f\u7528\u5730\u5740\u4f5c\u4e3a\u5b9e\u53c2\u4f20\u7ed9\u5f62\u53c2\uff0c\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143216",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u90fd\u662f",
      "optionC": "catch (A & x)",
      "optionAnswer": "D",
      "answer": "\u9898\u76ee\u4e2d\u95ee\u7684\u662f\u80fd\u5426\u901a\u8fc7\u7f16\u8bd1\uff0c\u53ea\u6709B\u4f1a\u6355\u83b7\u5230\u5f02\u5e38\uff0c\u8fdb\u884c\u5f02\u5e38\u5904\u7406\uff0c\u800cA\u548cC\u7531\u4e8e\u548cthrow\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u5bfc\u81f4\u8fd9\u4e2a\u5f02\u5e38\u4e0d\u88ab\u6355\u83b7\uff0c\u4ece\u800c\u6210\u4e3a\u672a\u6355\u83b7\u7684\u5f02\u5e38\uff0c\u8c03\u7528terminate\u51fd\u6570\u7ed3\u675f\u7a0b\u5e8f\u3002",
      "optionB": "catch (A * x)",
      "type": "1",
      "optionA": "catch (A && x)",
      "question": "\u5982\u4f55\u6355\u83b7\u5f02\u5e38\u53ef\u4ee5\u4f7f\u5f97\u4ee3\u7801\u901a\u8fc7\u7f16\u8bd1\uff1f\n\nclass A {\n  public:\n        A(){}\n};\nvoid foo(){\n    throw new A;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143204",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "p2++;",
      "optionC": "p2[2] = \u2018l\u2019;",
      "optionAnswer": "A",
      "answer": "p1\u662f\u6307\u5411\u5b57\u7b26\u5e38\u91cf\u7684\u6307\u9488\uff0cp1\u672c\u8eab\u4e0d\u662f\u5e38\u91cf\uff0c\u6240\u4ee5p1++\u5408\u6cd5\uff0cA\u6b63\u786e\u3002\np2\u672c\u8eab\u662f\u6307\u9488\u5e38\u91cf\uff0c\u53ef\u4ee5\u6307\u5411\u975e\u5e38\u91cf\u7684\u5b57\u7b26\u3002\u4f46\u662f\"hello\"\u8fd9\u6837\u58f0\u660e\u7684\u5b57\u7b26\u4e32\u662f\u5b58\u50a8\u5728\u53ea\u8bfb\u5b58\u50a8\u533a\u7684\uff0c\u4e0d\u53ef\u4fee\u6539\uff0c\u6240\u4ee5B,C,D\u90fd\u9519\u8bef\u3002",
      "optionB": "p1[2] = \u2018w\u2019;",
      "type": "1",
      "optionA": "p1++;",
      "question": "\u7ed9\u51fa\u4ee5\u4e0b\u5b9a\u4e49\uff0c\u4e0b\u5217\u54ea\u4e9b\u64cd\u4f5c\u662f\u5408\u6cd5\u7684\uff1f\nconst char *p1 = \u201chello\u201d;\nchar *const p2 = \u201cworld\u201d;",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de828",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "5",
      "optionC": "3",
      "optionAnswer": "B",
      "answer": "mod\u8fd0\u7b97\uff0c\u5373\u6c42\u4f59\u8fd0\u7b97\uff0c\u662f\u5728\u6574\u6570\u8fd0\u7b97\u4e2d\u6c42\u4e00\u4e2a\u6574\u6570n\u9664\u4ee5\u53e6\u4e00\u4e2a\u6574\u6570p\u7684\u4f59\u6570\u7684\u8fd0\u7b97\uff0c\u4e14\u4e0d\u8003\u8651\u8fd0\u7b97\u7684\u5546",
      "optionB": "2",
      "type": "1",
      "optionA": "0",
      "question": "\u6267\u884c\u5b8ca=5 mod 3 \u8bed\u53e5\u540e\uff0ca\u7684\u503c\u4e3a\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "TOP-K\u95ee\u9898\uff0c\u7528\u4e2a\u6570\u4e3aK\u7684\u6700\u5c0f\u5806\u5f52\u5e76\u5904\u7406",
      "ID": "55f2e51de4b0152a61143368",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u670920\u4e2a\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6570\u7ec4\u6709500\u4e2a\u5143\u7d20\uff0c\u5e76\u4e14\u662f\u6709\u5e8f\u6392\u5217\u597d\u7684\uff0c\u73b0\u5728\u5728\u8fd920*500\u4e2a\u6570\u4e2d\u627e\u51fa\u6392\u540d\u524d500\u7684\u6570\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u52a8\u6001\u89c4\u5212\u3002\n\n\u5b57\u7b26\u4e32 A, B, \u8bb0\u5f55\u7ed3\u679c\u4e3a\u4e8c\u7ef4\u6570\u7ec4R[n][m] \uff08\u5176\u4e2dn\uff0cm\u4e3aA\uff0c B\u7684\u957f\u5ea6\uff09\nA \u53d8\u6362\u5230 B \u53ef\u4ee5\u901a\u8fc7 \u5982\u4e0b 3\u4e2a\u64cd\u4f5c\uff1a\n\u6dfb\u52a0\u3002\u5373\u5df2\u77e5A[0..i]\u53d8\u5316\u5230B[0..j-1]\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\uff0c\u6700\u540e\u52a0\u4e0a B[j]\u5373\u53ef\u3002 R[[i][j] = R[i][j-1] + 1 (\u6dfb\u52a0\u64cd\u4f5c\u4ee3\u4ef7\u4e3a1\uff09\n\u5220\u9664\u3002\u5373\u5df2\u77e5A[0..i-1]\u53d8\u5316\u5230B[0..j]\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\uff0c \u6700\u540e\u5220\u6389A[i]\u5373\u53ef\u3002 R[i][j] = R[i-1][j] + 1\uff08\u5220\u9664\u64cd\u4f5c\u4ee3\u4ef7\u4e3a1\uff09\n\u66ff\u6362\u3002\u5373\u5df2\u77e5A[0..i-1]\u53d8\u5316\u5230B[0..j-1]\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\uff0c \u6700\u540e\u66ff\u6362A[i]\u4e3aB[j]\u5373\u53ef\u3002 R[i][j] = R[i-1][j-1] + 1\uff08\u66ff\u6362\u64cd\u4f5c\u4ee3\u4ef7\u4e3a1\uff09\n\u516c\u5f0f\u4e3a\uff1a\nR[[i][j] = min ( R[i][j-1] + 1, R[i-1][j] + 1,  R[i-1][j-1] + 1) \n\n\u5f53i\u6216\u8005j\u4e3a0\u65f6\uff0c \u76f8\u5e94\u5730\u503c\u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\uff08\u56e0\u4e3a\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u6210\u957f\u5ea6\u4e3a0\u7684\u5b57\u7b26\u4e32\u7684\u4ee3\u4ef7\u4e3a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff09\u3002\n\u52a8\u6001\u89c4\u5212\u6c42\u51faR[n][m]\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6O\uff08nm)\uff0c \u7a7a\u95f4\u590d\u6742\u5ea6O\uff08nm\uff09\uff08\u5176\u5b9e\u5c31\u662f\u8ba1\u7b97\u51faR[n][m]\u8fd9\u4e2a\u6570\u7ec4\uff09\n\n\u66ff\u6362\u4ee3\u4ef7\u53d8\u4e3a2\u7684\u65f6\u5019\uff0c \u516c\u5f0f\u6539\u4e3a\uff1a\nR[[i][j] = min ( R[i][j-1] + 1, R[i-1][j] + 1,  R[i-1][j-1] + 2) ",
      "ID": "55f2e51de4b0152a6114335c",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7f16\u8f91\u8ddd\u79bb\uff0c\u53c8\u79f0Levenshtein\u8ddd\u79bb\uff0c\u662f\u6307\u4e24\u4e2a\u5b50\u4e32\u4e4b\u95f4\uff0c\u7531\u4e00\u4e2a\u8f6c\u6210\u53e6\u4e00\u4e2a\u6240\u9700\u7684\u6700\u5c11\u7f16\u8f91\u64cd\u4f5c\u6b21\u6570\u3002\u8bb8\u53ef\u7684\u7f16\u8f91\u64cd\u4f5c\u5305\u62ec\u5c06\u4e00\u4e2a\u5b57\u7b26\u66ff\u6362\u6210\u53e6\u4e00\u4e2a\u5b57\u7b26\uff0c\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u3002\u8bf7\u5c1d\u8bd5\u5199\u51fa\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u7f16\u8f91\u8ddd\u79bb\uff0c\u5e76\u8ba1\u7b97\u5176\u590d\u6742\u5ea6\uff1f\u5728\u67d0\u4e9b\u5e94\u7528\u573a\u666f\u4e0b\uff0c\u66ff\u6362\u64cd\u4f5c\u7684\u4ee3\u4ef7\u6bd4\u8f83\u9ad8\uff0c\u5047\u8bbe\u66ff\u6362\u64cd\u4f5c\u7684\u4ee3\u4ef7\u662f\u63d2\u5165\u548c\u5220\u9664\u7684\u4e24\u500d\uff0c \u7b97\u6cd5\u8be5\u5982\u4f55\u8c03\u6574\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143134",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e00\u4e2a\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u5fc5\u987b\u662f\u62bd\u8c61\u65b9\u6cd5",
      "optionC": "\u7eaf\u865a\u51fd\u6570\u548c\u865a\u51fd\u6570\u7684\u533a\u522b\u5728\u4e8e\u524d\u8005\u4e0d\u5305\u542b\u5b9a\u4e49\uff0c\u800c\u540e\u8005\u53ef\u4ee5\u5305\u542b\u51fd\u6570\u4f53\u3002",
      "optionAnswer": "D",
      "answer": "\u62bd\u8c61\u7c7b \uff1a \u7c7b\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u65b9\u6cd5\u662f\u62bd\u8c61\u65b9\u6cd5\uff0c\u5219\u8be5\u7c7b\u5c31\u662f\u62bd\u8c61\u7c7b\n\u63a5\u53e3 \uff1a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u5168\u90e8\u90fd\u662f\u62bd\u8c61\u65b9\u6cd5\u3002 ",
      "optionB": "c++\u4e2d\u6ca1\u6709\u63a5\u53e3\u7684\u6982\u5ff5\uff0c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u662f\u7eaf\u865a\u7c7b\uff0c\u5bf9\u5e94\u7684\u662fjava\u7684\u63a5\u53e3",
      "type": "1",
      "optionA": "c++\u865a\u7c7b\u76f8\u5f53\u4e0ejava\u91cc\u9762\u7684\u62bd\u8c61\u7c7b",
      "question": "\u4e0b\u8ff0\u6709\u5173c++\u7684\u865a\u7c7b\u548cjava\u63a5\u53e3\u7684\u63cf\u8ff0\uff0c\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c64",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u8fc7\u7a0b",
      "optionC": "\u6587\u4ef6",
      "optionAnswer": "B",
      "answer": "\u9762\u5411\u8fc7\u7a0b\u7684\u548c\u9762\u5411\u5bf9\u8c61\u90fd\u5177\u6709\u3001\u51fd\u6570\u3001\u6587\u4ef6\u548c\u8fc7\u7a0b\u8fd9\u4e9b\u6982\u5ff5\uff0c\u800c\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u624d\u6709\n\u7c7b\u548c\u5bf9\u8c61\u7684\u7279\u5f81\u3002\u6240\u4ee5\u9009\u62e9B\u3002",
      "optionB": "\u7c7b",
      "type": "1",
      "optionA": "\u51fd\u6570",
      "question": "\u5728\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\uff0c\u9996\u5148\u5728\u95ee\u9898\u57df\u4e2d\u8bc6\u522b\u51fa\u82e5\u5e72\u4e2a \uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "18",
      "ID": "55f2e51de4b0152a61143361",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "n\u4ece1\u5f00\u59cb\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u5bf9n\u52a01\u6216\u52a0\u500d\uff0c\u5982\u679c\u8981\u4f7fn\u662f2014\uff0c\u6700\u5c11\u9700\u8981___\u4e2a\u64cd\u4f5c",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431fc",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "D",
      "optionC": "C",
      "optionAnswer": "B",
      "answer": "\u56e0\u4e3awhile(page.taglst[i] == \"<br>\" && i < taglen)\u8fd9\u4e2a\u5224\u65ad\uff0c\u5148\u6267\u884cpage.taglst[i] == \"<br>\"\u8fd9\u4e2a\u5224\u65ad\uff0c\u5982\u679c\u8fd9\u4e2a\u5224\u65ad\u8fd4\u56de\u503c\u4e3atrue\uff0c\u518d\u6267\u884ci < taglen\u8fd9\u4e2a\u5224\u65ad\u3002\u5f53i=taglen\u7684\u65f6\u5019\uff0c\u6267\u884cpage.taglst[i] == \"<br>\"\u8fd9\u4e2a\u5224\u65ad\u5c31\u4f1a\u8d8a\u754c\uff0c\u6240\u4ee5B\u5904\uff0c\u6700\u5148\u51fa\u73b0\u8d8a\u754c",
      "optionB": "B",
      "type": "1",
      "optionA": "A",
      "question": "\u5904\u7406a.html\u6587\u4ef6\u65f6\uff0c\u4ee5\u4e0b\u54ea\u884c\u4f2a\u4ee3\u7801\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u8d8a\u754c\u6216\u8005\u629b\u51fa\u5f02\u5e38\uff08\uff09\n\n         int totalBlank = 0;\n         int blankNum = 0;\n         int taglen = page.taglst.size();\nA       for(int i = 1; i < taglen-1; ++i)\n        {\n                 //check blank\nB             while(page.taglst[i] == \"<br>\" && i < taglen)\n               {\nC                       ++totalBlank;\nD                       ++i;\n               }\nE             if(totalBlank > 10)\nF                      blankNum += totalBlank;\nG             totalBlank = 0;\n        }\n\u6ce8\u610f\uff1a\u4ee5\u4e0b\u4ee3\u7801\u4e2dtaglen\u662fhtml\u6587\u4ef6\u4e2d\u5b58\u5728\u5143\u7d20\u7684\u4e2a\u6570\uff0ca.html\u4e2dtaglen\u7684\u503c\u662f15\uff0cpage.taglst[i]\u53d6\u7684\u662fa.html\u4e2d\u7684\u5143\u7d20\uff0c\u4f8b\u5982page.taglst[1]\u7684\u503c\u662f<html>\na.html\u7684\u6587\u4ef6\u5982\u4e0b\uff1a\n<html>\n<title>test</title>\n<body>\n<div>aaaaaaa</div>\n</body>\n</html>\n<br>\n<br>\n<br>\n<br>\n<br>",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143258",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "1,1",
      "optionC": "1,0",
      "optionAnswer": "B",
      "answer": "&\u53ef\u4ee5\u7528\u4f5c\u4f4d\u8fd0\u7b97\u7b26\uff0c\u5f53&\u64cd\u4f5c\u7b26\u4e24\u8fb9\u7684\u8868\u8fbe\u5f0f\u4e0d\u662fboolean\u7c7b\u578b\u65f6\uff0c&\u8868\u793a\u6309\u4f4d\u4e0e\u64cd\u4f5c\u3002\n&&\u662f\u8868\u793a\u903b\u8f91\u4e0e\uff08and\uff09\uff0c\u5f53\u8fd0\u7b97\u7b26\u4e24\u8fb9\u7684\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u90fd\u4e3atrue\u65f6\uff0c\u6574\u4e2a\u8fd0\u7b97\u7ed3\u679c\u624d\u4e3atrue",
      "optionB": "0,1",
      "type": "1",
      "optionA": "0,0",
      "question": "\u4ee5\u4e0b\u7684C\u7a0b\u5e8f\u4ee3\u7801\u7247\u6bb5\u8fd0\u884c\u540ec\u548cd\u7684\u503c\u5206\u522b\u662f\u591a\u5c11()\nint a =1,b =2;\nint c,d;\nc =(a&b)&&a;\nd =(a&&b)&a;",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c8d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "cba",
      "optionC": "cab",
      "optionAnswer": "A",
      "answer": "\u672c\u9898\u8003\u67e5\u7684\u662f\u5728\u7ee7\u627f\u4e2d\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8c03\u7528\u6784\u9020\u51fd\u6570\u7684\u987a\u5e8f\uff0c\u5e94\u8be5\u662f\u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u7136\u540e\u662f\u6210\u5458\u4e2d\u7684\u5bf9\u8c61\u5bf9\u5e94\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u6700\u540e\u662f\u6d3e\u751f\u7c7b\u81ea\u5df1\u7684\u6784\u9020\u51fd\u6570\u3002",
      "optionB": "acb",
      "type": "1",
      "optionA": "abc",
      "question": "\u5efa\u7acb\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c3\u79cd\u6784\u9020\u51fd\u6570\u5206\u522b\u662fa(\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570)\u3001b(\u6210\u5458\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570)\u3001c(\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570)\u8fd93\u79cd\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\u4e3a",
      "title": "C&C++"
    },
    {
      "answer": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nvoid swap(char *a, char *b) \n{\nif (a != b) {\nchar c = *a;\n*a = *b;\n*b = c;\n}\n}\n\nvoid dfs(char *str, int kth, int len)\n{\nif (kth == len) {\nprintf(\"%s\\n\", str);\nreturn;\n}\n\nfor (int i = 0; i <= kth; ++i) {\nswap(&str[i], &str[kth]);\ndfs(str, kth + 1, len);\nswap(&str[i], &str[kth]);\n}\n}\n\nint main(void)\n{\nchar str[] = \"abc\";\ndfs(str, 0, strlen(str));\n}",
      "ID": "55f2e51ee4b0152a611433c9",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7528c++\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5982Foo(const char *str)\uff0c\u6253\u5370\u51fastr\u7684\u5168\u6392\u5217\uff0c\u5982abc\u7684\u5168\u6392\u5217\uff1aabc, acb, bca, dac, cab,cba",
      "title": "C&C++"
    },
    {
      "answer": "\u89e3\u6790\uff1a\u9996\u5148\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u6570\u7ec4\uff0c\u5047\u8bbe\u5176\u4e2d\u67d0\u4e2a\u4f4d\u7f6e\u7684A[i] = i\uff0c\u90a3\u4e48\u53ef\u4ee5\u80af\u5b9a\u7684\u503c\uff0c\u4e4b\u524d\u7684A[x] > x\uff0c\u4e4b\u540e\u7684A[x] < x\u3002\u8fd8\u6709\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u6027\u8d28\u5c31\u662f\u4e2d\u95f4\u7684A[i]=i\u4e00\u5b9a\u662f\u8fde\u7eed\u5b58\u5728\u7684\uff0c\u4e0d\u53ef\u80fd\u8de8\u533a\u57df\u5b58\u5728\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6570\u7ec4\u662f\u5347\u5e8f\u7684\u3002\n\u6211\u7ed9\u51fa\u7684\u65b9\u6cd5\u662f\u4e8c\u5206\u67e5\u627e\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u662f\uff1a\u6211\u4eec\u5047\u8bbe\u4e00\u4e2a\u65b0\u6570\u7ec4B\uff0c\u5176\u5143\u7d20\u662fA[i] - i\u7684\u503c\uff0c\u8fd9\u6837\u7684\u8bdd\uff0cB[i] = 0\u7684\u65f6\u5019A[i] = i\uff0c\u800c\u4e14\u628aB\u6570\u7ec4\u5212\u5206\u6210\u4e86\u4e09\u4e2a\u90e8\u5206\uff0c\u5de6\u8fb9\u7684\u5c0f\u4e8e\u96f6\u7684\u533a\u57df\uff0c\u4e2d\u95f4\u7684\u7b49\u4e8e\u96f6\u7684\u533a\u57df\uff0c\u53f3\u8fb9\u7684\u5927\u4e8e\u96f6\u7684\u533a\u57df\u3002\n\u6211\u7b2c\u4e00\u6b21\u7684\u60f3\u6cd5\u662f\uff1a\u4e8c\u5206\u641c\u7d22\u8fd9\u4e2a\u60f3\u8c61\u4e2d\u7684\u65b0\u6570\u7ec4\uff0c\u627e\u5230\u503c\u4e3a\u96f6\u7684\u4e0b\u6807\uff0c\u4f46\u662f\u8fd9\u4e2a\u4e0b\u6807\u4e0d\u4e00\u5b9a\u662f\u6700\u5de6\u8fb9\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u4e0b\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u5199\u4e00\u4e2awhile\u6765\u5f80\u5de6\u79fb\u52a8\u8fd9\u4e2a\u4e0b\u6807\uff0c\u76f4\u5230\u627e\u5230\u6700\u5de6\u8fb9\u7684\u7b26\u5408\u6761\u4ef6\u7684\u4e0b\u6807\uff0c\u5982\u4e0b\u4ee3\u7801\uff08\u5047\u8bbe\u5df2\u7ecf\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u627e\u5230\u4e86\u7b26\u5408\u6761\u4ef6\u7684\u4e00\u4e2a\u4e0b\u6807idx\uff09\uff1a\n\nwhile(A[idx-1] == (idx-1))\n     idx--;\n\u8fd9\u6837\u7684\u8bdd\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662fO(logn) + O(n)\uff0c\u8fd8\u662f\u5c5e\u4e8eOn)\u7684\u8303\u7574\u3002\n\u540e\u6765\u6211\u60f3\u5230\uff0c\u4e3a\u4ec0\u4e48\u53ea\u53bb\u968f\u673a\u547d\u4e2d\u4e00\u4e2a\u76ee\u6807\u4e0b\u6807\u5462\uff01\u5982\u679c\u4e8c\u5206\u67e5\u627e\u8fd9\u4e2a\u6570\u636e\u7684\u8fb9\u754c\u7684\u8bdd\uff0c\u5c31\u80fd\u76f4\u63a5\u5f97\u5230\u6700\u5de6\u8fb9\u7b26\u5408\u6761\u4ef6\u7684\u4e0b\u6807\u4e86\uff01\u5176\u5b9e\u4e8c\u5206\u67e5\u627e\u4e0d\u4ec5\u4ec5\u9002\u7528\u4e8e\u5bf9\u4e00\u4e2a\u5143\u7d20\u7684\u641c\u7d22\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u4e24\u4e2a\u3001\u4e09\u4e2a\u7279\u5b9a\u76f8\u5bf9\u4f4d\u7f6e\u5143\u7d20\u7684\u641c\u7d22\u3002\u6bcf\u6b21\u67e5\u627e\u7684\u65f6\u5019\uff0c\u5047\u8bbe\u5f53\u524d\u4f4d\u7f6e\u662fmid\uff0c\u90a3\u4e48\u53ea\u8981\u5224\u65ad\u5f53\u524dA[mid] - mid\u662f\u5426\u5c0f\u4e8e\u96f6\uff0c\u4ee5\u53ca\u540e\u4e00\u4e2a\u5143\u7d20A[mid+1] - (mid+1) == 0\u5c31\u884c\u4e86\u3002\n\n#include  <iostream> \nusing namespace std; \n   \nint BinarySearch(int cc[], int len) \n{ \n   int l = 0, r = len, mid; \n   while (l <= r) \n   { \n      mid = l + ((r-l) >> 1); \n      if(mid == 0 && cc[mid] == mid)   // \u82e5\u6570\u7ec4\u4e00\u5f00\u59cb\u5c31\u7b26\u5408\u6761\u4ef6 \n         return 0; \n      // \u82e5\u6ee1\u8db3\u6761\u4ef6\u7684\u4e0b\u6807\u4e0d\u662f\u4ece0\u5f00\u59cb\uff0c\u5219\u8fb9\u754c\u662f\u524d\u4e00\u4e2a<0\uff0c\u4e14\u540e\u4e00\u4e2a=0 \n      if (cc[mid]-mid < 0 && cc[mid+1]-(mid+1) == 0) \n         return mid+1; \n      // \u4e8c\u5206\u67e5\u627e\u8fb9\u754c\uff1a\u524d\u4e00\u4e2a<0\uff0c\u4e14\u540e\u4e00\u4e2a=0 \n      if (cc[mid] - mid >= 0) \n         r = mid-1; \n      else \n         l = mid+1; \n   } \n   return -1; \n} \n   \nint main() \n{ \n   // int cc[] = {0, 1}; \n   // int cc[] = {0, 1, 2, 3, 4, 5, 6, 7}; \n   // int cc[] = {-9, -8, -4, -2, 4, 5, 9}; \n   // int cc[] = {-5, -4, -3, 5, 6, 7}; \n   int len = sizeof(cc)/sizeof(int); \n   int idx = BinarySearch(cc, len); \n   if(idx != -1) \n   { \n      while(cc[idx] == idx) \n      { \n         printf(\"%d \", idx); \n         idx++; \n      } \n   } \n   else \n   { \n      printf(\"Not found\\n\"); \n   } \n   \n   getchar(); \n   return 0; \n} \n\nOK! \u7531\u4e8e\u7a0b\u5e8f\u662f\u539f\u751f\u7684\u4e8c\u5206\u67e5\u627e\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(logn)\uff0c\u6ca1\u6709\u5360\u7528\u989d\u5916\u7684\u7a7a\u95f4\u3002\u5e76\u4e14\u4e0d\u9700\u8981\u533a\u5206\u6b63\u6574\u6570\u8fd8\u662f\u8d1f\u6574\u6570\uff0c\u6570\u636e\u7c7b\u578b\u4e5f\u53ef\u4ee5\u6539\u6210double\u6ca1\u95ee\u9898\u3002",
      "ID": "55f2e51de4b0152a6114336d",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u4e00\u4e2a\u6392\u597d\u5347\u5e8f\u7684\u6570\u7ec4A[1]\u3001A[2]\u3001\u2026\u2026\u3001A[n]\uff0c\u5176\u5143\u7d20\u7684\u503c\u90fd\u4e24\u4e24\u4e0d\u76f8\u7b49\u3002\u8bf7\u8bbe\u8ba1\u4e00\u9ad8\u6548\u7684\u7b97\u6cd5\u627e\u51fa\u4e2d\u95f4\u6240\u6709A[i] = i\u7684\u4e0b\u6807\u3002\u5e76\u5206\u6790\u5176\u590d\u6742\u5ea6\u3002\uff08\u4e0d\u5206\u6790\u590d\u6742\u5ea6\u4e0d\u5f97\u5206\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114326e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "4 6",
      "optionC": "6 5",
      "optionAnswer": "D",
      "answer": "\u672c\u9898\u4e3b\u8981\u8003\u67e5\u4e86\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\u548c\u5b57\u7b26\u6570\u7ec4,strl\u4e3a\u4e00\u4e2a\u5b57\u7b26\u6307\u9488,\u6240\u4ee5sizeof\u4e3a4,str2\u4e3a\u5b57\u7b26\u6570\u7ec4,\u5176\u4e2d\u5305\u542b6\u4e2a\u5b57\u7b26,\u6240\u4ee5\u7b54\u6848\u4e3a4 6",
      "optionB": "5 5",
      "type": "1",
      "optionA": "5 6",
      "question": "\u572832\u4f4d\u7f16\u8bd1\u5668\u4e0a,\u8bbe\u6709\u5b9a\u4e49\nchar * strl = \"Hello\",str2[ ] = \"Hello\";\n\u5219\u4ee5\u4e0b\u8bed\u53e5\nprintf(\"%d %d\",sizeof(str),sizeof(str2));\n\u7684\u8f93\u51fa\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55f2df83e4b0152a61142d40",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "11111001",
      "optionC": "11111000",
      "optionAnswer": "D",
      "answer": "\u4e00\u822c\u7528\u53d6\u6a21\u7684\u65b9\u5f0f\u66f4\u7b26\u5408\u8ba1\u7b97\u673a\u89c4\u5219\uff1a\uff082^n-|x|\uff09\uff0c  8\u4e3a\u4e8c\u8fdb\u5236\uff0c100000000-00000111=11111001;",
      "optionB": "1111001",
      "type": "1",
      "optionA": "1111000",
      "question": " -7\u7684\u4e8c\u8fdb\u5236\u8865\u7801\u8868\u793a\u4e3a\uff1a",
      "title": "C&C++"
    },
    {
      "answer": "1\u3001\u5c06140\u514b\u76d0\u653e\u5929\u5e73\u4e24\u8fb9\u5e73\u5206\u4e24\u4efd\u540470\u514b\uff1b\n2\u3001\u5c06\u4e00\u4efd70\u514b\u76d0\u5e73\u5206\u4e24\u4efd\u540435\u514b\uff1b\n3\u3001\u5c067\u514b\u548c2\u514b\u781d\u7801\u5404\u65b9\u5929\u5e73\u4e00\u4fa7\uff0c\u53d6\u4e00\u4efd35\u514b\u76d0\u5411\u5929\u5e73\u4e24\u7aef\u52a0\u77e5\u9053\u5de6\u53f3\u5e73\u8861\uff0c\u6b64\u65f6\u4e0e7\u514b\u781d\u7801\u4e00\u4fa7\u4e3a15\u514b\u76d0\uff0c\u4e0e2\u514b\u781d\u7801\u4e00\u4fa7\u4e3a20\u514b\u76d0\uff1b\n4\u3001\u6b64\u65f620\u514b\u76d0\u52a070\u514b\u76d0\u4e3a90\u514b\uff0c\u5269\u4f59\u5408\u5e76\u4e3a50\u514b\u3002",
      "ID": "55f2e51de4b0152a6114337f",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u67097\u514b\uff0c2\u514b\u781d\u7801\u5404\u4e00\u4e2a\uff0c\u5929\u5e73\u4e00\u53ea\uff0c\u5982\u4f55\u53ea\u7528\u8fd9\u4e9b\u7269\u54c13\u6b21\u5c06140\u7684\u76d0\u5206\u4e3a50\u300190\u514b\u5404\u4e00\u4efd\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de811",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "19",
      "optionC": "16",
      "optionAnswer": "D",
      "answer": "5*3+4=19",
      "optionB": "35",
      "type": "1",
      "optionA": "23",
      "question": "\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f\uff1a\uff08 \uff09#define add(a,b) a+b\nint main()\n{\n    printf(\u201c % d\\n\u201d, 5 * add(3, 4));\n    return 0;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114323a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "o(N!)",
      "optionC": "O(N^2)",
      "optionAnswer": "A",
      "answer": "\u53ef\u4ee5\u914d\u5408\u81ea\u5df1\u753b\u7684\u6d41\u7a0b\u56fe\u770b\nx=1    O(1)\nx=2    O(1+O(foo(1)))=O(2)\nx=3    O(1+O(foo(2)))=O(3)\n\u3002\u3002\u3002\u4f9d\u6b21\u7c7b\u63a8\nx=N    O(1+O(foo(N-1)))=N",
      "optionB": "O(N^2)",
      "type": "1",
      "optionA": "O(N)",
      "question": "\u4e0b\u9762\u51fd\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\n\nlong foo(long x){\n    if(x<2) return 1;\n        return x*x*foo(x-1);\n}",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c1c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5d4c\u5957\u51fd\u6570",
      "optionC": "\u9012\u5f52\u51fd\u6570",
      "optionAnswer": "A",
      "answer": "\u5185\u8054\u51fd\u6570\u7279\u5f81\u4ee3\u7801\u5c11\uff0c\u9891\u7e41\u8c03\u7528\uff0c\u6267\u884c\u6548\u7387\u9ad8\u3002\u91cd\u8f7d\u51fd\u6570\u89e3\u51b3\u7edf\u4e00\u63a5\u53e3\u7684\u95ee\u9898\uff1b\u9012\n\u5f52\u662f\u5b50\u7a0b\u5e8f\u8c03\u7528\uff0c\u7a0b\u5e8f\u8c03\u7528\u8981\u8017\u8d39\u5f88\u591a\u7a7a\u95f4\u548c\u65f6\u95f4\uff0c\u5faa\u73af/\u8fed\u4ee3\u90fd\u6bd4\u9012\u5f52\u6709\u6548\u7387\u5f97\u591a\uff0c\u9012\u5f52\u53ea\u662f\n\u4ece\u5f62\u5f0f\u4e0a\uff0c\u903b\u8f91\u6bd4\u8f83\u7b80\u6d01\u3002\u5d4c\u5957\u51fd\u6570\u5373\u53cd\u590d\u8c03\u7528\uff0c\u901f\u5ea6\u8f83\u6162\u3002\u6240\u4ee5\u9009\u62e9A\u9879\u3002",
      "optionB": "\u91cd\u8f7d\u51fd\u6570",
      "type": "1",
      "optionA": "\u5185\u8054\u51fd\u6570",
      "question": "\u4e00\u4e2a\u51fd\u6570\u529f\u80fd\u4e0d\u592a\u590d\u6742\uff0c\u4f46\u8981\u6c42\u88ab\u9891\u7e41\u8c03\u7528\uff0c\u5219\u5e94\u628a\u5b83\u5b9a\u4e49\u4e3a \uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143147",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u90fd\u4e0d\u5bf9",
      "optionC": "(**pp) = \\\\c\\\\;",
      "optionAnswer": "A",
      "answer": "\u3010\u89e3\u6790\u3011\n\u76f8\u5f53\u4e8e\n(char const) (* const) *pp\n\u6240\u4ee5\n**p\u662fchar\u578b\u5e38\u91cf\n*p\u662fchar const *\u578b\u5e38\u91cf\np\u662fchar const *const\u578b\u53d8\u91cf",
      "optionB": "(*pp)++",
      "type": "1",
      "optionA": "pp++",
      "question": "\u7ed9\u5b9a\u58f0\u660e const char * const * pp; \u4e0b\u5217\u64cd\u4f5c\u6216\u8bf4\u660e\u6b63\u786e\u7684\u662f?",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7fb",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "12",
      "optionC": "22",
      "optionAnswer": "D",
      "answer": "p\u5b58\u653e\u7684\u662fa\u7684\u5730\u5740\nk \u5b58\u653e\u7684\u662fp\u6307\u9488\u7684\u5730\u5740\np++ p\u6307\u9488\u5b58\u653e\u7684\u5185\u5bb9\u6539\u53d8\u4e86\uff0ck\u7684\u6307\u5411\u6ca1\u6709\u53d8\uff0c\u4f46K\u7684\u503c\u6539\u53d8\u4e86\u3002",
      "optionB": "21",
      "type": "1",
      "optionA": "11",
      "question": "turbo c\u73af\u5883\u4e0b\uff0c\u4e0b\u9762\u7a0b\u5e8f\u8fd0\u884c\u7684\u7ed3\u679c\u662f()int main()\n{\n    printf(\"\\n\");\n    int a[5] = {1, 2, 3, 4, 5};\n    int *p, **k;\n    p = a;\n    k = &p;\n    printf(\"%d\", *(p++));\n    printf(\"%d\", **k);\n    return 0;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114321a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3apt\u7684\u6307\u9488\u53d8\u91cf\uff0c\u5b83\u53ef\u4ee5\u6307\u5411\u6bcf\u884c\u6709\u4e09\u4e2a\u6574\u6570\u5143\u7d20\u7684\u4e8c\u7ef4\u6570\u7ec4",
      "optionC": "\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a*pt\u3001\u5177\u6709\u4e09\u4e2a\u5143\u7d20\u7684\u6574\u578b\u6570\u7ec4",
      "optionAnswer": "D",
      "answer": "int (*pt)[3]\uff0c\u9996\u5148\u770b\u62ec\u53f7\u5185\uff0c*pt\u8bf4\u660ept\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5176\u6307\u5411\u7684\u5185\u5bb9\u662fint[3]\uff0c\u5177\u67093\u4e2aint\u5143\u7d20\u7684\u6570\u7ec4\u3002\nD\u9009\u9879\u8bf4\uff0c\u53ef\u4ee5\u6307\u5411\u6bcf\u884c\u6709\u4e09\u4e2a\u6574\u6570\u5143\u7d20\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5373int[][3]\u3002\nint(*pt)[3] = NULL;\nint arr[2][3] = {0};\npt = arr;\n",
      "optionB": "\u5b9a\u4e49\u4e86\u57fa\u7c7b\u578b\u4e3aint\u7684\u5177\u6709\u4e09\u4e2a\u5143\u7d20\u7684\u6307\u9488\u6570\u7ec4pt",
      "type": "1",
      "optionA": "\u5b9a\u4e49\u4e86\u57fa\u7c7b\u578b\u4e3aint\u7684\u4e09\u4e2a\u6307\u9488\u53d8\u91cf",
      "question": "\u82e5\u6709\u5b9a\u4e49int\uff08*pt\uff09[3]\uff1b\u5219\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a6114313b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u90fd\u53ef\u4ee5\u4fee\u590d\u7f16\u8bd1\u9519\u8bef",
      "optionC": "\u90fd\u4e0d\u80fd\u4fee\u590d\u7f16\u8bd1\u9519\u8bef",
      "optionAnswer": "D",
      "answer": "\u8fd9\u9898\u9009C GetValue() \u6ca1\u6709\u8fd4\u56de\u7c7b\u578b",
      "optionB": "\u6539\u53d8\u6210\u5458\u51fd\u6570\"GetValue\"\u7684\u58f0\u660e\uff0c\u4ee5\u4f7f\u5176\u4e0d\u662fconst\u7684",
      "type": "1",
      "optionA": "\u6539\u53d8\u6210\u5458\u53d8\u91cf\"vv\"\u4e3a\"mutable int vv\"",
      "question": "\u4ee5\u4e0b\u4ee3\u7801\u7f16\u8bd1\u6709\u9519\u8bef\uff0c\u54ea\u4e2a\u9009\u9879\u80fd\u89e3\u51b3\u7f16\u8bd1\u9519\u8bef\uff1f\n\nclass A {\n    public:\n        int GetValue() const {\n            vv = 1;\n            return vv;\n         }\n    private:\n        int vv;\n};",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de80f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "hellotheword",
      "optionC": "hello",
      "optionAnswer": "B",
      "answer": "a\u662f\u6307\u9488\u7684\u6570\u7ec4 \nchar** p = a; //char** p = &a[0] \np++;//p\u662f\u6307\u9488\u81ea\u589e+4\uff0c\u800ca\u4e2d\u5143\u7d20\u662f\u6307\u9488\uff0c\u6bcf\u4e2a\u6b63\u597d\u56db\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64p++\u540e\u6070\u597dp= &a[1] *p=a[1];\u8f93\u51fa\"the\"\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3aB",
      "optionB": "the",
      "type": "1",
      "optionA": "theworld",
      "question": "\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a#include\nvoid main()\n{\n       char* a[ ] = { \"hello\", \"the\", \"world\"};\n       char** pa = a;\n       pa++;\n       cout<<\u201d*pa<<endl;\n}",
      "title": "C&C++"
    },
    {
      "answer": "\u5982\u679c\u662f\u6709\u5e8f\u7684\u7528\u4e8c\u8def\u5f52\u5e76\u6c42\u4ea4\u96c6\n\u5982\u679c\u662f\u65e0\u5e8f\u7684\u53ef\u4ee5\u7528map\u6216hash",
      "ID": "55f2e51de4b0152a61143372",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "A\uff0cB\u4e24\u4e2a\u6574\u6570\u96c6\u5408\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6c42\u4ed6\u4eec\u7684\u4ea4\u96c6\uff0c\u5c3d\u53ef\u80fd\u7684\u9ad8\u6548\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143213",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5176\u4ed6",
      "optionC": "100",
      "optionAnswer": "A",
      "answer": "while\uff08x\uff09\u2192\u5f53x\u4e3a\u771f\uff08\u975e0\uff09\u65f6\u6267\u884c\u5faa\u73af\uff1b\nx=x&(x-1);\u2192&\u662f\u4f4d\u8fd0\u7b97\u7b26\uff0c\u9700\u8981\u5c06x\u8f6c\u5316\u6210\u4e8c\u8fdb\u5236\u8ba1\u7b97\uff0c\u5f53&\u4e24\u8fb9\u90fd\u4e3a1\u65f6,\u4e3a1\uff0c\u5426\u5219\u4e3a0\uff0c\n\u8be5\u9898\u76f8\u5f53\u4e8e\u6c42x\u7684\u4e8c\u8fdb\u5236\u5f0f\u4e2d\u542b\u67091\u7684\u4e2a\u6570\uff0c",
      "optionB": "1",
      "type": "1",
      "optionA": "8",
      "question": "\u6c42\u4e0b\u9762\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\n\nint func(x)\n {\n    int countx = 0;    \n     while (x)\n     {\n      countx ++;\n      x = x & (x - 1);\n     }\n     return countx;\n }\n\n\u5047\u5b9ax = 9999\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143210",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "8 8",
      "optionC": "100 100",
      "optionAnswer": "A",
      "answer": "string_a\u662f\u4e00\u4e2achar\u578b\u7684\u6307\u9488\uff0c\u572864\u4f4d\u7cfb\u7edf\u4e2dsizeof\uff08char*\uff09=8\nstring_b\u662f\u4e00\u4e2achar\u578b\u7684\u6570\u7ec4\uff0c\u572864\u4f4d\u7cfb\u7edf\u4e2dsizeof\uff08char\uff09=1\uff0c\u5171100\u503c\u56e0\u6b64\u4e3a100",
      "optionB": "100 8",
      "type": "1",
      "optionA": "8 100",
      "question": "\u8bf7\u95ee\u572864\u4f4d\u5e73\u53f0\u673a\u5668\u4e0bsizeof(string_a),sizeof(string_b)\u5927\u5c0f\u5206\u522b\u662f\uff08\uff09?1.char *string_a=(char *)malloc(100*sizeof(char));\n2.char string_b[100];",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114320f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u90fd\u4e0d\u5bf9",
      "optionC": "\u5f53\u51fd\u6570\u4ee3\u7801\u8f83\u5c0f\u5e76\u4e14\u88ab\u9891\u7e41\u8c03\u7528\u7684\u65f6\u5019",
      "optionAnswer": "C",
      "answer": "\u5185\u655b\u51fd\u6570\u4e0d\u9002\u4e8ewhile switch \u8fd9\u6837\u590d\u6742\u7ed3\u6784,\u4e14\u8bed\u53e5\u6700\u597d\u57281-5\u6761\u8fd9\u6837\u7684\u5c0f\u578b\u51fd\u6570\u4e0a. \u9012\u5f52\u4e0d\u80fd\u5b9a\u4e49\u4e3a\u5185\u8054.",
      "optionB": "\u5f53\u51fd\u6570\u4e2d\u6709\u8f83\u591a\u7684\u9759\u6001\u53d8\u91cf\u7684\u65f6\u5019",
      "type": "1",
      "optionA": "\u5f53\u51fd\u6570\u4ee3\u7801\u8f83\u957f\u4e14\u591a\u5c42\u5d4c\u5957\u5faa\u73af\u7684\u65f6\u5019",
      "question": "\u5185\u8054\u51fd\u6570\u5728\u4ee5\u4e0b\u573a\u666f\u4e2d\u6700\u6709\u7528\u7684\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114320d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "22, 4, 100, 4",
      "optionC": "22, 4, 4, 4",
      "optionAnswer": "C",
      "answer": "\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u7684\u6570\u7ec4\u540d\u9000\u5316\u4e3a\u6307\u9488",
      "optionB": "4, 4, 4, 4",
      "type": "1",
      "optionA": "22, 22, 100, 100",
      "question": "\u67d032\u4f4d\u7cfb\u7edf\u4e0b, C++\u7a0b\u5e8f\u5982\u4e0b\u6240\u793a\uff0csizeof \u7684\u503c\u5e94\u4e3a\uff1f\n\nchar str[] = \u201chttp://www.renren.com\u201d  \uff08\u957f\u5ea6\u4e3a21\uff09\nchar *p = str ; \n\u8bf7\u8ba1\u7b97\n\nsizeof (str ) = \uff1f\uff081\uff09\nsizeof ( p ) = \uff1f\uff082\uff09\nvoid Foo ( char str[100]){\n    sizeof( str ) = \uff1f\uff083\uff09\n}\nvoid *p = malloc( 100 );\nsizeof ( p ) = \uff1f\uff084\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c7d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51fd\u6570\u6210\u5458",
      "optionC": "\u6570\u636e\u6210\u5458",
      "optionAnswer": "A",
      "answer": "\u7c7b\u6210\u5458\u5305\u62ec\u6210\u5458\u51fd\u6570\u548c\u6570\u636e\u6210\u5458\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u8bbf\u95ee\u6743\u9650public\u3001private\u548cprotected\u6765\u4fee\n\u9970,\u800c\u666e\u901a\u7684\u53d8\u91cf\u4e0d\u80fd\u4f7f\u7528\u8bbf\u95ee\u6743\u9650\u6765\u8bf4\u660e\u3002",
      "optionB": "\u7c7b\u6210\u5458",
      "type": "1",
      "optionA": "\u975e\u7c7b\u6210\u5458",
      "question": "\u4e0b\u5217\u4e0d\u5177\u6709\u8bbf\u95ee\u6743\u9650\u5c5e\u6027\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "n-1",
      "ID": "55f2e51de4b0152a61143353",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\uff08a1+a2+a3+\u2026+an)/b\u4e0ea1/b+a2/b+\u2026an/b\uff08\u9664\u6cd5\u4e3a\u6574\u9664\uff09\u6700\u5927\u5dee\u503c\u4e3a?",
      "title": "C&C++"
    },
    {
      "answer": "class Hanoi {\nprivate:\n  \n    int chk(vector<int>& arr, int k, const int from, const int pass, const int to){\n        if (k == 1){\n            if (from == arr[k - 1]) return 0;\n            if (to == arr[k - 1])   return 1;\n            return -1;\n        }\n  \n        if (arr[k - 1] == pass){\n            return -1;\n        }\n        if (arr[k - 1] == from){\n  \n            return chk(arr, k - 1, from, to, pass);\n        }\n        if (arr[k - 1] == to){\n            int tmp = chk(arr, k - 1, pass, from, to);\n            if (tmp == -1)\n                return -1;\n            return (1 << k - 1) + tmp;\n        }\n    }\npublic:\n    int chkStep(vector<int> arr, int n) {\n        // write code here\n        if (n <= 0)  return -1;\n        if (arr.size() != n)    return -1;\n        vector<int> cur(n, 1);\n  \n        if (arr[n - 1] == 2)    return -1;\n        return chk(arr, n, 1, 2, 3);\n    }\n};  \u4ece\u6700\u540e\u4e00\u4e2a\u5f80\u524d\uff0cchk(arr,k,from,pass,to)\u4ee3\u8868\u524dk\u4e2a\u5854\u79fb\u52a8\u5230\u548carr\u4e00\u6837\u65f6\u9700\u8981\u7684\u6b65\u6570\u3002\nfrom\u4ee3\u8868\u7b2ck\u4e2a\u5854\u73b0\u5728\u6240\u5904\u7684\u4f4d\u7f6e\uff0cto\u4ee3\u8868\u7b2ck\u4e2a\u5854\u5728\u5f53\u524d\u72b6\u6001\uff08\u6307\u7b2ck+1\u4e2a\u5854\u5230\u7b2cn\u4e2a\u5854\u5df2\u4f9d\u636earr\u6392\u597d\uff09\u4e0b\u7ecf\u8fc7\u6700\u591a\u7684\u6b65\u6570\u6700\u540e\u79fb\u52a8\u5230\u54ea\u3002\n\u5982\u679c\u7b2ck\u4e2a\u5854\u7684\u5f53\u524d\u4f4d\u7f6e\u548carr\u7b2ck\u4e2a\u5854\u4f4d\u7f6e\u4e00\u81f4\uff0c\u4e0d\u7528\u79fb\u52a8\u7b2ck\u4e2a\u5854\uff0c\u4f46\u662f\u7b2ck-1\u4e2a\u5854\u53ea\u80fd\u79fb\u52a8\u5230pass\u8fd9\u4e2a\u5730\u65b9\uff1b\n\u5982\u679c\u7b2ck\u4e2a\u5854\u548cto\u4e00\u81f4\uff0c\u7b2ck\u4e2a\u5854\u79fb\u52a8\u5230to\u9700\u89811<<k-1\u4e2a\u6b65\u9aa4\uff0c\u5e76\u4e14\u4e4b\u540e\u7b2c1\u5230k-2\u4e2a\u5854\u521d\u59cb\u72b6\u6001\u90fd\u4f4d\u4e8epass\u5904\uff0c\u7b2ck-2\u4e2a\u5854\u6700\u8fdc\u80fd\u5230\u8fbe\u7684\u4f4d\u7f6e\u5c31\u662f\u7b2ck-1\u4e2a\u5854\u5f53\u524d\u5904\u5728\u7684\u4f4d\u7f6e\uff1b\n\u6574\u4e2a\u8fc7\u7a0b\u4e3aO(n).",
      "ID": "55f2e51ce4b0152a6114332d",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6709\u4e00\u4e2aint\u6570\u7ec4arr\u5176\u4e2d\u53ea\u542b\u67091\u30012\u548c3\uff0c\u5206\u522b\u4ee3\u8868\u6240\u6709\u5706\u76d8\u76ee\u524d\u7684\u72b6\u6001\uff0c1\u4ee3\u8868\u5de6\u67f1\uff0c2\u4ee3\u8868\u4e2d\u67f1\uff0c3\u4ee3\u8868\u53f3\u67f1\uff0carr[i]\u7684\u503c\u4ee3\u8868\u7b2ci+1\u4e2a\u5706\u76d8\u7684\u4f4d\u7f6e\u3002\u6bd4\u5982\uff0carr=[3,3,2,1]\uff0c\u4ee3\u8868\u7b2c1\u4e2a\u5706\u76d8\u5728\u53f3\u67f1\u4e0a\u3001\u7b2c2\u4e2a\u5706\u76d8\u5728\u53f3\u67f1\u4e0a\u3001\u7b2c3\u4e2a\u5706\u76d8\u5728\u4e2d\u67f1\u4e0a\u3001\u7b2c4\u4e2a\u5706\u76d8\u5728\u5de6\u67f1\u4e0a\u3002\u5982\u679carr\u4ee3\u8868\u7684\u72b6\u6001\u662f\u6700\u4f18\u79fb\u52a8\u8f68\u8ff9\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u72b6\u6001\uff0c\u8fd4\u56dearr\u8fd9\u79cd\u72b6\u6001\u662f\u6700\u4f18\u79fb\u52a8\u8f68\u8ff9\u4e2d\u7684\u7b2c\u51e0\u4e2a\u72b6\u6001\u3002\u5982\u679carr\u4ee3\u8868\u7684\u72b6\u6001\u4e0d\u662f\u6700\u4f18\u79fb\u52a8\u8f68\u8ff9\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u72b6\u6001\uff0c\u5219\u8fd4\u56de-1\u3002\n\u7ed9\u5b9a\u4e00\u4e2aint\u6570\u7ec4arr\u53ca\u6570\u7ec4\u7684\u5927\u5c0fn\uff0c\u542b\u4e49\u5982\u9898\u6240\u8ff0\uff0c\u8bf7\u8fd4\u56de\u4e00\u4e2aint\uff0c\u4ee3\u8868\u6240\u6c42\u7684\u7ed3\u679c\u3002\n\u6d4b\u8bd5\u6837\u4f8b\uff1a   \u8f93\u5165\uff1a[3,3]    \u8fd4\u56de\uff1a3",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8bf9",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "3",
      "optionC": " \u53d8\u91cfp\u7684\u5730\u5740\u503c",
      "optionAnswer": "D",
      "answer": "*p\u4ee3\u8868\u5f15\u7528a\u53d8\u91cf\u7684\u503c\uff0cp\u4ee3\u8868a\u7684\u5730\u5740\u503c\u3002\u6240\u4ee5\u9009\u62e9D\u9879\u3002",
      "optionB": "\u65e0\u610f\u4e49",
      "type": "1",
      "optionA": "\u53d8\u91cfa\u7684\u5730\u5740\u503c",
      "question": "\u5728int a=3,int *p=&a\uff1b\u4e2d\uff0c*p\u7684\u503c\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "#include<stdio.h>\n#include<string.h>\n#define N 100\n  \n//LCS\u95ee\u9898\uff1a\u5373\u6c42\u4e24\u4e2a\u5b57\u7b26\u4e32\u6700\u957f\u516c\u5171\u5b50\u4e32\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u8fd4\u56de\u4e86\u516c\u5171\u5b57\u4e32\uff0c\u5982\u679c\u53ea\u6c42\u6700\u957f\u516c\u5171\u5b57\u4e32\u957f\u5ea6\u7684\u8bdd\uff0c\u4e4b\u540e\u6709\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f\uff0c\u5176\u5b9e\u5c31\u662f\u91cc\u9762\u7684\u4e00\u90e8\u5206\nchar *LCS(char *a,char *b)\n{\nint len_a = strlen(a);  //\u83b7\u53d6\u5b57\u4e32\u7684\u957f\u5ea6\nint len_b = strlen(b);\nchar *p;\nint c[N][N] = {0};      //\u77e9\u9635c\u8bb0\u5f55\u4e24\u4e32\u7684\u5339\u914d\u60c5\u51b5\nint start,end,len,i,j;  //start\u8868\u660e\u6700\u957f\u516c\u5171\u5b50\u4e32\u7684\u8d77\u59cb\u70b9\uff0cend\u8868\u660e\u6700\u957f\u516c\u5171\u5b50\u4e32\u7684\u7ec8\u6b62\u70b9\nend = len = 0;          //len\u8868\u660e\u6700\u957f\u516c\u5171\u5b50\u4e32\u7684\u957f\u5ea6\nfor(i=0;i<len_a;i++)    //\u4e32\u5f00\u59cb\u4ece\u524d\u5411\u540e\u6bd4\u8f83\n{\nfor(j=0;j<len_b;j++)\n{\nif(a[i] == b[j])\nif(i == 0 || j == 0)\nc[i][j] = 1;\nelse\nc[i][j] = c[i-1][j-1] + 1;\nif(c[i][j] > len)\n{\nlen = c[i][j];\nend = j;\n}\n}\n}\nstart = end - len + 1;\np = (char *)malloc(len+1); //\u6570\u7ec4p\u8bb0\u5f55\u6700\u957f\u516c\u5171\u5b50\u4e32\nfor(i=start;i<=end;i++)\np[i-start] = b[i];\np[len] = '\\0';\nfor(j=0;j<len_b;j++)\n{\nfor(i=0;i<len_a;i++)\nprintf(\"%2d\",c[i][j]);\nprintf(\"\\n\");\n}\nreturn p;\n}\nint main(int argc,char *argv[])\n{\nchar str1[N],str2[N];\nprintf(\"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e321\uff1a\");\ngets(str1);\nprintf(\"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e322\uff1a\");\ngets(str2);\nprintf(\"\u6700\u957f\u5b50\u4e32\u4e3a\uff1a%s\\n\",LCS(str1,str2));\nreturn 0;\n}",
      "ID": "55f2e51de4b0152a61143397",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7f16\u5199\u51fd\u6570\uff0c\u83b7\u53d6\u4e24\u6bb5\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u7684\u957f\u5ea6\uff0c\u4f8b\u5982\uff1a \nS1= GCCCTAGCCAGDE \nS2= GCGCCAGTGDE \n\u8fd9\u4e24\u4e2a\u5e8f\u5217\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u662fGCCAG\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd4\u56de\u503c\u3002 \n1\uff09\u8bf7\u5148\u63cf\u8ff0\u601d\u8def\uff1b\n2\uff09\u7f16\u5199\u5b8c\u6574\u4ee3\u7801\u5b9e\u73b0\uff0c\u7f16\u7a0b\u8bed\u8a00\u4e0d\u9650\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c0c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e0d\u786e\u5b9a",
      "optionC": "float",
      "optionAnswer": "B",
      "answer": "\u8003\u5bdf\u6570\u636e\u7684\u8f6c\u6362\uff0cj\u662fdouble\u7c7b\u578b\uff0c\u8fd0\u7b97\u53ea\u80fd\u4f5c\u540c\u7c7b\u578b\u7684\u8fd0\u7b97\uff0c\u6240\u4ee5\u8981\u8f6c\u6362\uff0c\u800cint\u80fd\u81ea\u52a8\n\u8f6c\u6362\u4e3adouble\u7c7b\u578b\uff0c\u6240\u4ee5\u7ed3\u679c\u662fdouble\u7c7b\u578b\u3002",
      "optionB": "double",
      "type": "1",
      "optionA": "int",
      "question": "\u8bbe\u6709\u5b9a\u4e49int i;double j\uff1d5;\uff0c\u521910+i+j\u503c\u7684\u6570\u636e\u7c7b\u578b\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431f7",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "segmentation fault",
      "optionC": "\u8f93\u51fa\"\"",
      "optionAnswer": "D",
      "answer": "\u8c03\u7528getmemory(str)\u540e\uff0c\u5728test\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cfstr\u5e76\u672a\u4ea7\u751f\u53d8\u5316\u3002?strcpy?(?str?,\u201d?hello?,?world?\u201d);?\u5199\u8d8a\u754c\uff0c\u9020\u6210segmentation fault\u3002",
      "optionB": "\u8f93\u51fa\"hello world\"",
      "type": "1",
      "optionA": "\u7f16\u8bd1\u9519\u8bef",
      "question": "void getmemory(char *p)\n{\n    p=(char*)malloc(100);\n}\nvoid test(void)\n{\n   char * str = null;\n   getmemory(str);\n   strcpy(str,\u201dhello,world\u201d);\n   printf(str);\n}\n\u8bf7\u95ee\u8fd0\u884ctest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f ",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a6114313a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51fd\u6570\u4e0d\u80fd\u81ea\u5df1\u8c03\u7528\u81ea\u5df1",
      "optionC": "\u51fd\u6570\u5728\u88ab\u8c03\u7528\u4e4b\u524d\u5fc5\u987b\u5148\u58f0\u660e",
      "optionAnswer": "C",
      "answer": "\u51fd\u6570\u53ef\u4ee5\u6ca1\u6709\u53c2\u6570\u7684\uff0c  A\u6392\u9664\n\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u53ef\u4ee5\u662fvoid \u4e0d\u9700\u8981\u8fd4\u56de\u503c\uff0c  B\u6392\u9664\n\u9012\u5f52\u51fd\u6570\u53ef\u4ee5\u81ea\u5df1\u8c03\u7528\u81ea\u5df1  D\u6392\u9664\n\n\u51fd\u6570\u5728\u88ab\u8c03\u7528\u4e4b\u524d\u90fd\u5fc5\u987b\u5148\u58f0\u660e\u3002  \u6b63\u786eC",
      "optionB": "\u6bcf\u4e2a\u51fd\u6570\u90fd\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u503c",
      "type": "1",
      "optionA": "\u6bcf\u4e2a\u51fd\u6570\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u53c2\u6570",
      "question": "\u5728\u4e0b\u5217\u5173\u4e8eC++\u51fd\u6570\u7684\u53d9\u8ff0\u4e2d\uff0c\u6b63\u786e\u7684\u662f\uff08??????\uff09",
      "title": "C&C++"
    },
    {
      "answer": "a)     Hadoop\n\u57fa\u4e8e\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edfHDFS\u7684\u5206\u5e03\u5f0f\u6279\u5904\u7406\u8ba1\u7b97\u6846\u67b6\u3002\u9002\u7528\u4e8e\u6570\u636e\u91cf\u5927\uff0cSPMD(\u5355\u7a0b\u5e8f\u591a\u6570\u636e)\u7684\u5e94\u7528\u3002\nb)     Spark\n\u57fa\u4e8e\u5185\u5b58\u8ba1\u7b97\u7684\u5e76\u884c\u8ba1\u7b97\u6846\u67b6\u3002\u9002\u7528\u4e8e\u9700\u8981\u8fed\u4ee3\u591a\u8f6e\u8ba1\u7b97\u7684\u5e94\u7528\u3002\nc)      MPI\n\u57fa\u4e8e\u6d88\u606f\u4f20\u9012\u7684\u5e76\u884c\u8ba1\u7b97\u6846\u67b6\u3002\u9002\u7528\u5404\u79cd\u590d\u6742\u5e94\u7528\u7684\u5e76\u884c\u8ba1\u7b97\u3002\u652f\u6301MPMD( \u591a\u7a0b\u5e8f\u591a\u6570\u636e) \uff0c\u5f00\u53d1\u590d\u6742\u5ea6\u9ad8",
      "ID": "55f2e51de4b0152a61143345",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bf7\u7b80\u8981\u63cf\u8ff0\u4e00\u4e0bHadoop, Spark, MPI\u4e09\u79cd\u8ba1\u7b97\u6846\u67b6\u7684\u7279\u70b9\u4ee5\u53ca\u5206\u522b\u9002\u7528\u4e8e\u4ec0\u4e48\u6837\u7684\u573a\u666f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de826",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "str1\u548cstr2\u5730\u5740\u76f8\u540c\uff0cP1\u548cP2\u5730\u5740\u4e0d\u540c\u3002",
      "optionC": "str1\u548cstr2\u5730\u5740\u4e0d\u540c\uff0cP1\u548cP2\u5730\u5740\u4e0d\u540c\u3002",
      "optionAnswer": "A",
      "answer": "\u5728\u5b9a\u4e49char\u6570\u7ec4\u65f6\uff0c\u4f1a\u5c06\u5e38\u91cf\u5b57\u7b26\u4e32\u4e2d\u7684\u503c\u62f7\u8d1d\u5230\u5b57\u7b26\u6570\u7ec4\u4e2d\uff0c\u56e0\u800cstr1\u4e0estr2\u6307\u5411\u7684\u4f4d\u7f6e\u4e0d\u540c\uff0c\u4f46\u662f\u5b9a\u4e49\u7684\u4e24\u4e2achar*\u6307\u9488\uff0cp1,p2\uff0c\u90fd\u662f\u6307\u5411\u5e38\u91cf\u533a\u7684\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u56e0\u800c\u4e24\u8005\u76f8\u540c",
      "optionB": "str1\u548cstr2\u5730\u5740\u76f8\u540c\uff0cP1\u548cP2\u5730\u5740\u76f8\u540c\u3002",
      "type": "1",
      "optionA": "str1\u548cstr2\u5730\u5740\u4e0d\u540c\uff0cP1\u548cP2\u5730\u5740\u76f8\u540c\u3002",
      "question": "\u5728gcc\u7f16\u8bd1\u5668\u4e0b\uff0c\u9488\u5bf9\u4ee5\u4e0b\u4ee3\u7801\uff0cconst char str1[] = \"abc\";        \nconst char str2[] = \"abc\";\nconst char *p1 = \"abc\";\nconst char *p2 = \"abc\";\n\u90a3\u4e48\u9488\u5bf9printf(\"%d %d %d %d\\n\",str1, str2,p1,p2)\u7684\u7ed3\u679c\uff0c \u5224\u65ad\u4e0b\u5217\u8bf4\u6cd5\u54ea\u4e2a\u662f\u6b63\u786e\u7684\uff1a______\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c77",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51fd\u6570\u4f53",
      "optionC": "\u51fd\u6570\u540d\u79f0",
      "optionAnswer": "D",
      "answer": "\u865a\u51fd\u6570\u5728\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\uff0c\u5177\u6709\u76f8\u540c\u7684\u8fd4\u56de\u7c7b\u578b\u3001\u5f62\u53c2\u7c7b\u578b\u548c\u5f62\u53c2\u4e2a\u6570\uff0c\u800c\u51fd\u6570\u4f53\u53ef\n\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u6d3e\u751f\u7c7b\u6216\u57fa\u7c7b\u5b9e\u73b0\u4e0d\u540c\u7684\u64cd\u4f5c\uff0c\u5373\u4e0d\u540c\u51fd\u6570\u4f53\u3002",
      "optionB": "\u53c2\u6570\u4e2a\u6570",
      "type": "1",
      "optionA": "\u53c2\u6570\u7c7b\u578b",
      "question": "\u5728\u6d3e\u751f\u7c7b\u4e2d\u5b9a\u4e49\u865a\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u4e0e\u57fa\u7c7b\u4e2d\u76f8\u5e94\u7684\u865a\u51fd\u6570\u4e0d\u540c\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "ptr \u5b9a\u4e49\u5728 buf \u7684\u524d\u9762\u3002\u5728\u6808\u4e0a\u5f00\u53d8\u91cf\u7684\u8bdd\uff0c\u540e\u5f00\u7684\u5185\u5b58\u5730\u5740\u8f83\u5c0f\uff0c\u4e5f\u5c31\u662f ptr \u662f\u6070\u597d\u63a5\u5728 buf \u6570\u7ec4\u7684\u540e\u9762\u3002\u6240\u4ee5\u5982\u679c\u6570\u7ec4\u8d8a\u754c\u5c31\u53ef\u4ee5\u4fee\u6539 ptr \u6307\u5411\u7684\u5185\u5b58\u5730\u5740\u3002",
      "ID": "55f2e51ee4b0152a6114339e",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5728\u5ba1\u8ba1\u67d0\u4e00\u5f00\u6e90\u9879\u76ee\u7684\u4ee3\u7801\u65f6\uff0c\u5047\u8bbe\u6709\u4e0b\u9762\u4e00\u4e2afoo()\u5b50\u51fd\u6570\u7684\u5b9e\u73b0\u3002 \u4ece\u5b89\u5168\u7684\u89d2\u5ea6\u770b\uff0c\u4f1a\u5b58\u5728\u5b89\u5168\u6f0f\u6d1e\u5417\uff1f\u6709\u7684\u8bdd\uff0c\u8bf7\n(1)\u63cf\u8ff0\u6f0f\u6d1e\u7ec6\u8282\uff0c\n(2)\u8bf4\u660e\u53ef\u4ee5\u5229\u7528\u7684\u65b9\u6cd5, \n(3) \u8fd8\u6709\u8be5\u600e\u4e48\u4fee\u8865\u6f0f\u6d1e\u3002\u6ca1\u6709\u7684\u8bdd\uff0c\u4e5f\u8bf7\u8bf4\u660e\u4e3a\u4ec0\u4e48\u3002\n\nint foo((void*funcp)()) {\n    char *ptr = pointer_to_an_array;\n    char buf[128];\n    gets(buf);\n    strncpy(ptr,buf,8)\n    (*funcp)();\n}",
      "title": "C&C++"
    },
    {
      "answer": "\u7b54\uff1a\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af",
      "ID": "55f2e51ee4b0152a611433c2",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de81b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "p=A\u6216p=&A[0][0]",
      "optionC": "p=A[0]\u6216p=&A[0][0]",
      "optionAnswer": "C",
      "answer": "1\uff0c\u9996\u5148p\u662f\u4e00\u4e2a\u6307\u9488\uff0cA\u8868\u793a\u6570\u7ec4A\u7684\u9996\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c\n   A[0]\u8868\u793a\u6570\u7ec4A\u9996\u4e2a\u5143\u7d20\u7684\u503c\u3002\n   \u6240\u4ee5p=A[0]\u6216p=A[0][0]\u90fd\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u6392\u9664\u6cd5\u53ef\u9009D,\n2\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0d\u7ba1\u662f\u51e0\u7ef4\u6570\u7ec4\uff0c\u5728\u5185\u5b58\u4e2d\u90fd\u662f\u987a\u5e8f\u5b58\u50a8\u7684\u7ebf\u6027\u8868\uff0c\n   A[0]\uff0cA[0][0],A[0][0][0]...\u90fd\u662f\u8868\u793a\u6570\u7ec4A\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\n   \u6240\u4ee5\u8981\u5f97\u5230A\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\uff0cp=&A[0][0]\u4e5f\u662f\u6b63\u786e\u7684",
      "optionB": "p=A[0]\u6216p=A[0][0]",
      "type": "1",
      "optionA": "p=A\u6216p=A[0]",
      "question": "\u8981\u4f7f\u6307\u9488\u53d8\u91cfp\u6307\u54112\u7ef4\u6570\u7ec4A\u7684\u7b2c1\u4e2a\u5143\u7d20\uff0c\u6b63\u786e\u7684\u8d4b\u503c\u8868\u8fbe\u5f0f\u662f\uff08\uff09\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55e429cfe4b0152a610c8340",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "n\u7684\u5730\u5740",
      "optionC": "n\u7684\u503c",
      "optionAnswer": "C",
      "answer": "\u6307\u9488\u7684\u5b9a\u4e49",
      "optionB": "p\u7684\u5730\u5740",
      "type": "1",
      "optionA": "p\u7684\u503c",
      "question": "int *p = &n;    \u90a3\u4e48*p\u7684\u503c\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "\u7531\u4e8e\u6709\u7236\u8282\u70b9\u6307\u9488\uff0c\u8fd9\u9053\u9898\u76ee\u7684\u96be\u5ea6\u4e00\u4e0b\u5b50\u5c31\u964d\u4f4e\u4e86\u8bb8\u591a\u3002int getHeight(TreeNode *node) {\n    int height = 0;\n    while (node) {\n        height++;\n        node = node->parent;\n    }\n    return height;\n}\n \nTreeNode* LowestCommonAncestor(TreeNode* first,TreeNode* second) {\n    int height1 = getHeight(first), height2 = getHeight(second), diff = height1 - height2;\n    if (diff < 0) {\n        diff = -diff;\n        while(diff--) {\n             second = second->parent;\n        }\n    } else {\n        while(diff--) {\n            first = first->parent;\n        }\n    }\n    while (first != second) {\n        first = first->parent;\n        second = second->parent;\n    }\n    return first;\n}\n\u601d\u8def\u4e8c\uff1a\u82e5\u5141\u8bb8\u6d6a\u8d39\u7a7a\u95f4\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\u4e24\u4e2aStack\u6765\u5b58\u50a8\u4ecefirst\u548csecond\u5230\u6839\u7ed3\u70b9\u7684\u5404\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u51fa\u6808\u65f6\u6bd4\u8f83\u5730\u5740\u662f\u5426\u4e00\u81f4\uff0c\u6700\u540e\u4e00\u4e2a\u5730\u5740\u4e00\u81f4\u7684\u8282\u70b9\u4e3a\u89e3\u3002\n\n\u4e24\u79cd\u65b9\u6cd5\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3aO(n)\u3002\n\n\u601d\u8def\u4e00\uff1a\u6211\u4eec\u9996\u5148\u627e\u5230\u4e24\u4e2a\u8282\u70b9\u7684\u9ad8\u5ea6\u5dee\uff0c\u7136\u540e\u4ece\u8f83\u9760\u8fd1\u6839\u7ed3\u70b9\u7684\u4e00\u5c42\u5f00\u59cb\u5411\u4e0a\u627e\uff0c\u82e5\u7236\u8282\u70b9\u4e3a\u540c\u4e00\u8282\u70b9\u5219\u8be5\u8282\u70b9\u4e3a\u89e3\u3002",
      "ID": "55f2e51ce4b0152a61143338",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u4e00\u9897\u4e8c\u53c9\u6811\uff0c\u4ee5\u53ca\u5176\u4e2d\u7684\u4e24\u4e2anode\uff08\u5730\u5740\u5747\u975e\u7a7a\uff09\uff0c\u8981\u6c42\u7ed9\u51fa\u8fd9\u4e24\u4e2anode\u7684\u4e00\u4e2a\u516c\u5171\u7236\u8282\u70b9\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u7236\u8282\u70b9\u4e0e\u4e24\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u4e4b\u548c\u6700\u5c0f\u3002\u63cf\u8ff0\u4f60\u7a0b\u5e8f\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5e76\u5b9e\u73b0\u5177\u4f53\u51fd\u6570\uff0c\u51fd\u6570\u8f93\u5165\u8f93\u51fa\u8bf7\u53c2\u8003\u5982\u4e0b\u7684\u51fd\u6570\u539f\u578b\uff1astrucy TreeNode{\n     TreeNode* left;   //\u6307\u5411\u5de6\u5b50\u6811\n     TreeNode* right;   //\u6307\u5411\u53f3\u5b50\u6811\n     TreeNode* father;   //\u6307\u5411\u7236\u4eb2\u8282\u70b9\n};\nTreeNode* LowestCommonAncestor(TreeNode* first,TreeNode* second){\n}\nC++\u51fd\u6570\u539f\u578b\uff1a",
      "title": "C&C++"
    },
    {
      "answer": "\u5047\u8bbe\u6709n\u4e2a\u5458\u5de5\u3002\n\u9009\u7528\u6570\u636e\u7ed3\u6784\uff0cmap[n][n]\u3002\n1\u3001\u5176\u4e2dmap[i][j]=1\u4ee3\u8868i\u5728j\u7684\u524d\u9762\uff0c=0\u4ee3\u8868\u524d\u540e\u4f4d\u7f6e\uff0c=-1\u5e26\u8868\u5728\u540e\u9762\u3002\u82e5\u51fa\u73b0\u5df2\u7ecf=-1\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u540e\u9762\u53c8\u8981\u6c42=1\uff0c\u4f1a\u5f62\u6210\u73af\uff0c\u5219\u8fd4\u56denull\u3002\u3002\n2\u3001\u8fd9\u6837\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u56fe\uff0c\u7136\u540e\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u5373\u53ef\u3002\u5148\u627e\u51fa\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c\u653e\u5728\u524d\u9762\uff0c\u7136\u540e\u53bb\u6389\u8fd9\u4e9b\u70b9\u548c\u76f8\u5e94\u7684\u8fb9.\u5982\u6b64\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002",
      "ID": "55f2e51de4b0152a6114333f",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5c0f\u7c73\u516c\u53f8\u5185\u90e8\u6bcf\u4e2a\u5458\u5de5\u90fd\u4f1a\u6709\u4e00\u4e2a\u4e13\u5c5e\u7684\u5de5\u4f5c\u90ae\u7bb1\uff0c\u90ae\u7bb1\u7684\u524d\u7f00\u662f\u5458\u5de5\u59d3\u540d\u7684\u62fc\u97f3\u5168\u62fc\uff0c\u4f8b\u5982\u5f20\u5f3a\u7684\u90ae\u7bb1\u662fzhangqiang@xiaomi.com,\u4f46\u540c\u65f6\u516c\u53f8\u91cc\u6709\u5f88\u591a\u540c\u540d\u7684\u4eba\uff0c\u4e3a\u4e86\u907f\u514d\u5927\u5bb6\u76f8\u4e92\u4e4b\u95f4\u53d1\u9519\u90ae\u4ef6\uff0c\u5de5\u7a0b\u5e08\u4eec\u60f3\u4e86\u4e2a\u89c4\u5219\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5373\u5728\u8fd9\u4e9b\u540c\u547d\u4eba\u4e2d\uff0c\u5165\u804c\u6700\u65e9\u7684\u90ae\u7bb1\u524d\u7f00\u4e3a\u59d3\u540d\u7684\u62fc\u97f3\u5168\u62fc\uff0c\u7b2c\u4e8c\u4e2a\u5165\u804c\u7684\u90ae\u7bb1\u524d\u7f00\u4e3a\u59d3\u540d\u7684\u62fc\u97f3\u5168\u62fc\u540e\u9762\u52a0\u201c_a\u201d\uff0c\u7b2c\u4e09\u4e2a\u5165\u804c\u7684\u4e3a\u59d3\u540d\u7684\u62fc\u97f3\u5168\u62fc\u540e\u9762\u52a0\u201c_b\u201d,\u4ee5\u6b21\u7c7b\u63a8\uff0c\u8bf7\u6309\u8fd9\u4e2a\u89c4\u5219\uff0c\u5982\u679c\u516c\u53f8\u91cc\u540c\u65f6\u67093\u4f4d\u540d\u53eb\u5f20\u5f3a\u7684\u5458\u5de5\uff0c\u5219\u4ed6\u4eec\u7684\u90ae\u7bb1\u5206\u522b\u662fzhangqiang@xiaomi.com\uff0czhangqiang_a@xiaomi.com\uff0czhangqiang_b@xiaomi.com...\u90ae\u7bb1\u524d\u7f00\u662f\u5458\u5de5\u5728\u516c\u53f8\u91cc\u7684\u91cd\u8981\u6807\u8bc6\u4e4b\u4e00\uff0c\u95ee\u9898\u6765\u4e86\uff1a\u73b0\u5728\u5c0f\u7c73\u8981\u4e3e\u884c\u4e00\u6b21\u5168\u5458\u91ce\u5916\u62c9\u7ec3\u6d3b\u52a8\uff0c\u8981\u6c42\u6240\u6709\u5458\u5de5\u5fc5\u987b\u6392\u6210\u4e00\u961f\u51fa\u53bb\uff0c\u5e76\u4e14\uff0c\u6709\u7684\u5458\u5de5\u8981\u6c42\u4ed6\u5fc5\u987b\u6392\u5728\u67d0\u4eba\u7684\u524d\u9762\u6216\u540e\u9762\uff0c\u4f5c\u4e3a\u7ec4\u7ec7\u8005\u7684\u4f60\uff0c\u6536\u5230\u8fd9\u6837\u7684\u9700\u6c42\u4e4b\u540e\uff0c\u5982\u4f55\u7ed9\u51fa\u4e00\u4e2a\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u6ee1\u610f\u7684\u6392\u961f\u65b9\u5f0f\u5462\uff1f\nJava\uff1a\n\nclass RequestItem\n{\n    public String member;\n    public boolean standFront; //true\u8868\u793a\u8981\u6392\u5728\u8fd9\u4e2a\u4eba\u7684\u524d\u9762\uff0cfalse\u8868\u793a\u8981\u6392\u5728\u8fd9\u4e2a\u4eba\u7684\u540e\u9762\n}\nclass Request\n{\n    public String owner;    //\u90a3\u4e2a\u4eba\u63d0\u51fa\u7684\u8981\u6c42\n    List<RequestItem> requestItems;    //\u4ed6\u8981\u6392\u5728\u54ea\u4e9b\u4eba\u7684\u524d\u9762\uff0c\u54ea\u4e9b\u4eba\u7684\u540e\u9762\n}\nList<String> getValidOrder(List<String>allMembers, List<Request> requests);\nallMembers\u5c31\u662f\u6240\u6709\u5458\u5de5\u7684\u90ae\u7bb1\u524d\u7f00\uff0crequests\u662f\u4e00\u4e9b\u4eba\u7684\u6392\u961f\u8981\u6c42\u3002\u5c0f\u7c73\u516c\u53f8\u73b0\u6709\u51e0\u5343\u540d\u5458\u5de5\uff0c\u6bcf\u4e2a\u4eba\u6700\u591a\u670910\u4e2a\u6392\u961f\u8981\u6c42\uff08\u8981\u6392\u5728\u4e00\u4e2a\u4eba\u7684\u524d\u9762\u6216\u8005\u540e\u9762\u7b97\u4e00\u4e2a\u6392\u961f\u8981\u6c42\uff09\uff0c\u4e5f\u6709\u4eba\u6ca1\u6709\u4ec0\u4e48\u8981\u6c42\u3002\u73b0\u5728\u4f60\u7684\u4efb\u52a1\u662f\u5b8c\u6210\u4e0a\u9762\u7684getValidOrder\u51fd\u6570\uff0c\u5982\u679c\u6709\u5408\u6cd5\u7684\u6392\u961f\u5e8f\u5217\uff0c\u90a3\u4e48\u8fd4\u56de\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u3002\u5426\u5219\u8fd4\u56denull\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a6114314d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "801010  810015",
      "optionC": "801005   810014",
      "optionAnswer": "C",
      "answer": "1\u4ee3\u8868\u7684\u662f\u4e00\u4e2a\u5355\u4f4d\u91cf  \np1+5=p1+5*1=p1+5*sizeof(unsigned char)=p1+5*1=0x801000+ox5=0x801005  \np2+5=p2+5*1=p2+5*sizeof(unsigned long)=p1+5*4=0x810000+20=0x810000+0x14=0x810014 \n\u6700\u540e\u8981\u8f6c\u6362\u621016\u8fdb\u5236",
      "optionB": "801010   810014",
      "type": "1",
      "optionA": "801005   810005",
      "question": "unsigned char *p1;\nunsigned long *p2;\np1=(unsigned char *)0x801000;\np2=(unsigned long *)0x810000;\n\u8bf7\u95eep1+5= \u4ec0\u4e48\uff1f\np2+5= \u4ec0\u4e48\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "abbc \u548c babc \u540c\u7684\u8bdd\uff0c \u5373\u8bcd\u8bed\u5355\u4e2a\u5b57\u7b26\u7684ascii\u7801\u548c\u76f8\u540c\u5373\u8bcd\u8bed\u76f8\u540c\u3002 \u628a\u5b57\u7b26\u4e32\u6bd4\u8f83\u8f6c\u6362\u6210 int \u578b\u6570\u5b57\u6bd4\u8f83\u3002\n\u6570\u7ec4\u4e2d\u6240\u6709\u8bcd\u8f6c\u6362\u6210int \u653e\u5165 int\u6570\u7ec4\u3002 \n\u6bd4\u8f83\u5927\u5c0f",
      "ID": "55f2e51ee4b0152a611433b6",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5982\u679c\u4e24\u4e2a\u82f1\u6587\u5355\u8bcd\uff0c\u7ec4\u6210\u5b83\u4eec\u7684\u5b57\u7b26\u96c6\u5408\u76f8\u540c\uff0c\u800c\u4e14\u76f8\u540c\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u4e5f\u76f8\u540c\uff0c\u5219\u79f0\u8fd9\u4e24\u4e2a\u8bcd\u5339\u914d\uff1a\u6bd4\u5982\u8bf4\uff1a\u540c\u201dabbc\u201d\u4e0e\u8bcd \u201dbabc\u201d\u662f\u5339\u914d\u7684\u3002\u6709\u4e00\u4e2a\u8bcd\u5178\uff0c\u5b58\u50a8\u5728\u5b57\u7b26\u4e32\u6570\u7ec4const char* dictionary[n]\u4e2d\uff0c\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u8bcd\u3002\u5bf9\u4e8e\u4efb\u610f\u7ed9\u51fa\u7684\u53e5\u5b50\u3002\u53e5\u5b50\u4e2d\u7684\u5355\u8bcd\u4f7f\u7528\u7a7a\u683c\u5206\u5272\u3002\u8bf7\u5b9e\u73b0\u4ee5\u4e0b\u51fd\u6570\uff0c\u5224\u65ad\u53e5\u5b50\u4e2d\u662f\u5426\u6709\u8bcd\u548c\u8bcd\u5178\u4e2d\u7684\u8bcd\u5339\u914d\u3002 \nbool is_matching( const char* dictionary[],int n, const char* sentence);",
      "title": "C&C++"
    },
    {
      "answer": "\u7b54\uff1aextern\n\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519\u3002",
      "ID": "55f2e51ee4b0152a611433bf",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "C\u662f\u4e00\u4e2a\u7ed3\u6784\u5316\u8bed\u8a00\uff0c\u5b83\u7684\u91cd\u70b9\u5728\u4e8e\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u3002C\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u9996\u8981\u8003\u8651\u7684\u662f\u5982\u4f55\u901a\u8fc7\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u5bf9\u8f93\u5165\uff08\u6216\u73af\u5883\u6761\u4ef6\uff09\u8fdb\u884c\u8fd0\u7b97\u5904\u7406\u5f97\u5230\u8f93\u51fa\uff08\u6216\u5b9e\u73b0\u8fc7\u7a0b\uff08\u4e8b\u52a1\uff09\u63a7\u5236\uff09\uff0c\u800c\u5bf9\u4e8eC++\uff0c\u9996\u8981\u8003\u8651\u7684\u662f\u5982\u4f55\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\u6a21\u578b\uff0c\u8ba9\u8fd9\u4e2a\u6a21\u578b\u80fd\u591f\u5951\u5408\u4e0e\u4e4b\u5bf9\u5e94\u7684\u95ee\u9898\u57df\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u83b7\u53d6\u5bf9\u8c61\u7684\u72b6\u6001\u4fe1\u606f\u5f97\u5230\u8f93\u51fa\u6216\u5b9e\u73b0\u8fc7\u7a0b\uff08\u4e8b\u52a1\uff09\u63a7\u5236\u3002 \n\u5bf9\u8bed\u8a00\u672c\u8eab\u800c\u8a00\uff0cC\u662fC++\u7684\u5b50\u96c6\uff0c C\u5b9e\u73b0\u4e86C++\u4e2d\u8fc7\u7a0b\u5316\u63a7\u5236\u53ca\u5176\u5b83\u76f8\u5173\u529f\u80fd\uff0c\u800c\u5728C++\u4e2d\u7684C\uff0c\u76f8\u5bf9\u4e8e\u539f\u6765\u7684C\u8fd8\u6709\u6240\u52a0\u5f3a\uff0c\u5f15\u5165\u4e86\u91cd\u8f7d\u3001\u5185\u8054\u51fd\u6570\u3001\u5f02\u5e38\u5904\u7406\u7b49\u7b49\uff0cC++\u66f4\u662f\u62d3\u5c55\u4e86\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u5185\u5bb9\uff0c\u5982\u7c7b\u3001\u7ee7\u627f\u3001\u865a\u51fd\u6570\u3001\u6a21\u677f\u548c\u5305\u5bb9\u5668\u7c7b\u7b49\u7b49\u3002 \n\n\u8981\u7528C\u6a21\u62dfC++\u7684\u591a\u6001\u6027\uff0c\u53ef\u5b9a\u4e49\u540c\u4e00\u79cd\u51fd\u6570\u6307\u9488\u7c7b\u578b\u548c\u51fd\u6570\u6307\u9488\uff0c\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u6839\u636e\u9700\u8981\u7ed9\u51fd\u6570\u6307\u9488\u8d4b\u51fd\u6570\u5730\u5740\u3002\u53ef\u4ee5\u4f7f\u7528void *\u5b9e\u73b0\u3002",
      "ID": "55f2e51de4b0152a61143377",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "C\u548cC++\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u80fd\u7528C\u5b9e\u73b0C++\u6240\u6709\u529f\u80fd\u5417?C\u80fd\u5b9e\u73b0\u591a\u6001\u5417?",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8bfb",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": " *A1.p=5;",
      "optionC": "A1.*p=5;",
      "optionAnswer": "C",
      "answer": "A\u4e2dp\u662f\u6307\u9488\u5373\u5730\u5740\uff0c\u9519\u8bef\uff1bB\u9009\u9879\u4e2dA1\u4e0d\u662f\u6307\u9488\u4e0d\u80fd\u4f7f\u7528\u6307\u5411\u8fd0\u7b97\u7b26->,\u9519\u8bef\n\uff1b\u201c*\u201d\u6bd4\u201c.\u201d\u7ea7\u522b\u8981\u9ad8\uff0c\u6240\u4ee5D\u9009\u9879*A1.p=5\u76f8\u5f53\u4e8e(*A1).p=5;\u9519\u8bef\u3002\u53e6\u5916\u6d89\u53ca\u5230\u6307\u5411\u6210\u5458\u51fd\u6570\n\u65f6\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a\n\u3000\u6307\u5411\u6210\u5458\u51fd\u6570\u7684\u6307\u9488\u5fc5\u987b\u4e8e\u5176\u8d4b\u503c\u7684\u51fd\u6570\u7c7b\u578b\u5339\u914d\u7684\u4e09\u4e2a\u65b9\u9762\uff1a(1)\u53c2\u6570\u7c7b\u578b\u548c\u4e2a\u6570\uff1b(2)\u8fd4\u56de\n\u7c7b\u578b\uff1b(3)\u5b83\u6240\u5c5e\u7684\u7c7b\u7c7b\u578b\u3002\n\u3000\u6210\u5458\u51fd\u6570\u6307\u9488\u7684\u58f0\u660e\uff1a\u6307\u5411short\u578b\u7684Screen\u7c7b\u7684\u6210\u5458\u7684\u6307\u9488\u5b9a\u4e49\u5982\u4e0b\uff1a\n\u3000 short Screen::* ps_Screen;\nps_Screen\u53ef\u4ee5\u7528_height\u7684\u5730\u5740\u521d\u59cb\u5316\u5982\u4e0b\uff1ashort Screen::*ps_Screen=&Screen::_height;\n\u3000\u7c7b\u6210\u5458\u7684\u6307\u9488\u5fc5\u987b\u603b\u662f\u901a\u8fc7\u7279\u5b9a\u7684\u5bf9\u8c61\u6216\u6307\u5411\u6539\u7c7b\u578b\u7684\u5bf9\u8c61\u7684\u6307\u9488\u6765\u8bbf\u95ee\u3002\u662f\u901a\u8fc7\u4f7f\u7528\u4e24\u4e2a\u6307\n\u5411\u6210\u5458\u64cd\u4f5c\u7b26\u7684\u6307\u9488(\u9488\u5bf9\u7c7b\u5bf9\u8c61\u548c\u5f15\u7528\u7684.*\uff0c\u4ee5\u53ca\u9488\u5bf9\u6307\u5411\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u7684->*)\u3002",
      "optionB": "A1->p=5;",
      "type": "1",
      "optionA": "A1.p=5;",
      "question": "\u5df2\u77e5\uff1ap\u662f\u4e00\u4e2a\u6307\u5411\u7c7bA\u6570\u636e\u6210\u5458m\u7684\u6307\u9488\uff0cA1\u662f\u7c7bA\u7684\u4e00\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u8981\u7ed9m\u8d4b\u503c\u4e3a5\uff0c\u6b63\u786e\n\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431fe",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u628a\u6c47\u7f16\u8bed\u8a00\u7ffb\u8bd1\u6210\u673a\u5668\u8bed\u8a00",
      "optionC": "\u628a\u4e2d\u95f4\u4ee3\u7801\u53d8\u6362\u6210\u4f9d\u8d56\u5177\u4f53\u673a\u5668\u7684\u76ee\u6807\u4ee3\u7801",
      "optionAnswer": "C",
      "answer": "\u6e90\u7801 ->\uff08\u626b\u63cf\uff09-> \u6807\u8bb0 ->\uff08\u8bed\u6cd5\u5206\u6790\uff09-> \u8bed\u6cd5\u6811 ->\uff08\u8bed\u4e49\u5206\u6790\uff09-> \u6807\u8bc6\u8bed\u4e49\u540e\u7684\u8bed\u6cd5\u6811 ->\uff08\u6e90\u7801\u4f18\u5316\uff09-> \u4e2d\u95f4\u4ee3\u7801 ->\uff08\u4ee3\u7801\u751f\u6210\uff09-> \u76ee\u6807\u673a\u5668\u4ee3\u7801 ->\uff08\u76ee\u6807\u4ee3\u7801\u4f18\u5316\uff09-> \u6700\u7ec8\u76ee\u6807\u4ee3\u7801",
      "optionB": "\u628a\u9ad8\u7ea7\u8bed\u8a00\u7ffb\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00",
      "type": "1",
      "optionA": "\u628a\u9ad8\u7ea7\u8bed\u8a00\u7ffb\u8bd1\u6210\u673a\u5668\u8bed\u8a00",
      "question": "\u4ee3\u7801\u751f\u6210\u9636\u6bb5\u7684\u4e3b\u8981\u4efb\u52a1\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143148",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "12yz",
      "optionC": "a2yz",
      "optionAnswer": "C",
      "answer": "\u672c\u9898\u8003\u67e5\u5b57\u7b26\u4e32\u5904\u7406\u51fd\u6570strcpy\u548cstrcat,\u6267\u884c\u5b8cstrcpy(a+1,b+2);\u540e,a\u53d8\u4e3aa2,\u6267\u884c\u5b8cstrcat( a,c+1 )\u540e,a\u53d8\u4e3aa2yz,\u6240\u4ee5\u7b54\u6848\u4e3aC\u9009\u9879\u3002",
      "optionB": "bc2yz",
      "type": "1",
      "optionA": "al2xyz",
      "question": "\u6709\u4ee5\u4e0b\u7a0b\u5e8f(strcpy \u4e3a\u5b57\u7b26\u4e32\u590d\u5236\u51fd\u6570,strcat\u4e3a\u5b57\u7b26\u4e32\u8fde\u63a5\u51fd\u6570)\n\n#include <stdio.h>\n#include <string.h>\nmain( )\n{ \n    char a[10] = \"abc\" ,b[10] = \"012\",c[10] = \"xyz\";\n    strcpy( a+1,b+2);\n    puts( strcat( a,c+1));\n}\n \u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f?",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c62",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "Sum(\u201cAB\u201d,\u201dCD\u201d);",
      "optionC": "Sum(15.2f,16.0f);",
      "optionAnswer": "D",
      "answer": "\u7531Q Sum(Q x,Q y)\u53ef\u77e5\u5f62\u53c2\u548c\u51fd\u6570\u8fd4\u56de\u503c\u90fd\u662f\u540c\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u3002A\u3001B\u3001C\u4e09\u9879\u90fd\u6b63\u786e\n\u3002\u800cD\u9879\u7528\u5b57\u7b26\u4e32\u4f5c\u4e3a\u5b9e\u53c2\uff0c\u5b57\u7b26\u4e32\u7684\u64cd\u4f5c\u4e0e\u6570\u503c\u7c7b\u578b\u4e0d\u540c\uff0c\u8981\u7528\u7279\u6b8a\u65b9\u6cd5\u8fdb\u884c\u5b57\u7b26\u4e32\u7684\u8fde\u63a5\u548c\n\u8fd0\u7b97\u3002",
      "optionB": "Sum(5.0,6.7)\uff1b",
      "type": "1",
      "optionA": "Sum(10,2);",
      "question": "\u8bbe\u6709\u51fd\u6570\u6a21\u677ftemplate <class Q> Q Sum(Q x,Q y) {return (x)+(y);}\u5219\u4e0b\u5217\u8bed\u53e5\u4e2d\u5bf9\u8be5\u51fd\u6570\u6a21\u677f\u9519\u8bef\u7684\u4f7f\u7528\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a6114314e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "256",
      "optionC": "128",
      "optionAnswer": "B",
      "answer": "\u7b54\u6848\u89e3\u6790\uff1a\u9996\u5148\u8981\u77e5\u9053\u5927\u5c0f\u7aef\u6a21\u5f0f\uff0c80X86\u4e0b\u662f\u5c0f\u7aef\u6a21\u5f0f\uff1b\u5f53\u7136\u53ef\u4ee5\u7f16\u5199\u4e0b\u6d4b\u8bd5\u5c31\u53ef\u4ee5\u4e86\uff0cshort\u53602\u4e2a\u5b57\u8282\uff0c\u8bbe\u5de6\u9ad8\u5730\u5740\uff0c\u53f3\u4f4e\u5730\u5740\uff1b\n  a[1]           a[0]\n1111 1111     0000 0000\nshort\u5360\u7528\u7684\u662f\u8fd9a[1]\u3001a[0]\u4e24\u4e2a\u5b57\u8282\uff0c\u6700\u9ad8\u4f4d\u662f1\u662f\u4e00\u4e2a\u8d1f\u6570\uff0c\u5728\u8ba1\u7b97\u673a\u4e2d\u91c7\u7528\u8865\u7801\u8868\u793a\uff0c\u90a3\u4e48\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a\uff1a1000 0001 0000 0000\uff0c\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\u5c31\u662f-256.",
      "optionB": "-256",
      "type": "1",
      "optionA": "-128",
      "question": "union Test\n {\n    char a[4];\n    short b;\n };\n Test test;\n test.a[0]=256;\n test.a[1]=255;\n test.a[2]=254;\n test.a[3]=253;\n printf(\"%d\\n\",test.b);\n\u95ee\u9898\uff1a\u572880X86\u67b6\u6784\u4e0b\uff0c\u8f93\u51fa\u4ec0\u4e48\u503c\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c02",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "const char * const p=\u201cABCD\u201d\uff1b",
      "optionC": "char const *p=\u201cABCD\u201d\uff1b",
      "optionAnswer": "D",
      "answer": "const char *p\u8bf4\u660e\u7981\u6b62\u901a\u8fc7p\u4fee\u6539\u6240\u6307\u5411\u7684\u6570\u636e\u3002char * const p\u5219\u8bf4\u660e\u4e0d\u80fd\u4fee\u6539\n\u6307\u9488p\u7684\u5730\u5740\u3002\u56e0\u6b64const char * const p=\u201cABCD\u201d\uff1b\u5b83\u7981\u6b62\u4fee\u6539\u6307\u9488p\u672c\u8eab\uff0c\u53c8\u7981\u6b62\u4fee\u6539p\u6240\u6307\n\u5411\u7684\u6570\u636e\u3002",
      "optionB": "char *const p=\u201cABCD\u201d\uff1b",
      "type": "1",
      "optionA": "const char *p=\u201cABCD\u201d\uff1b",
      "question": "\u8981\u7981\u6b62\u4fee\u6539\u6307\u9488p\u672c\u8eab\uff0c\u53c8\u8981\u7981\u6b62\u4fee\u6539p\u6240\u6307\u5411\u7684\u6570\u636e\uff0c\u8fd9\u6837\u7684\u6307\u9488\u5e94\u5b9a\u4e49\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "\u5f53A1A2\u5782\u76f4B1B2\u65f6B1B2\u6700\u957f\n\n\u8bf4\u660e:\n\u8bbe\u4e24\u4e2a\u5706\u5fc3\u5206\u522b\u4e3aO1,O2\n\u56e0\u4e3a\uff1a\u4e24\u70b9\u786e\u5b9a\u4e00\u6761\u76f4\u7ebf\uff0cA1A2\u7684\u4e2d\u5782\u7ebf\u5fc5\u8fc7\u5706\u5fc3\uff0c\u6545O1O2\u5782\u76f4\u5e73\u5206A1A2\uff0c \n\u8bbeB1A1\u4e2d\u70b9\u4e3aC1\uff0cB2A1\u4e2d\u70b9\u4e3aC2 : \u4e14O1C1\u5782\u76f4B1B2,O2C2\u5782\u76f4B1B2 \n\u6240\u4ee5\u5c31\u6709\u4e86\uff1a\nB1B2 = 2*C1A1+2*C2A1 = 2*C1C2\n\u6545B1B2\u6700\u957f\u4e3aC1C2\u6700\u957f\uff0c\n\u53c8\u7531\u4e8e,O1C1\u5782\u76f4B1B2,O2C2\u5782\u76f4B1B2,\u6545C1C2O2O1\u81f3\u5c11\u4e3a\u68af\u5f62\uff08\u5047\u5b9a\uff09\uff0c\u4e14O1O2\u957f\u5ea6\u56fa\u5b9a\n\u6cbf\u7740C1\u505a\u4e00\u5e73\u884c\u7ebfD1D2\u4e0eO1O2\u5e73\u884c\uff0c\u6545D1D2C2\u81f3\u5c11\u4e3a\u4e00\u5782\u76f4\u4e09\u89d2\u5f62\uff0cC2\u4e3a90\u5ea6\uff0c\n\u901a\u8fc7\u9524\u5b50\u4e09\u89d2\u5f62\u5b9a\u4e49\uff0c\u5f97\u51fa\uff0c\u5f53C1C2\u5e73\u884c\u4e8eD1D2\u65f6C1C2\u6709\u6700\u5927\u503c\u3002\n\u53c8\u7531\u4e8e:\u6545O1O2\u5782\u76f4\u5e73\u5206A1A2\uff0c\u3001\n\u5f97\u51fa \u5f53A1A2\u5782\u76f4B1B2\u65f6B1B2\u6700\u957f ",
      "ID": "55f2e51de4b0152a6114338c",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4e24\u4e2a\u5706\u76f8\u4ea4\uff0c\u4ea4\u70b9\u662fA1\uff0cA2\u3002\u73b0\u5728\u8fc7A1\u70b9\u505a\u4e00\u76f4\u7ebf\u4e0e\u4e24\u4e2a\u5706\u5206\u522b\u76f8\u4ea4\u53e6\u5916\u4e00\u70b9B1\uff0cB2.\u95ee\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\uff0cB1B2\u6700\u957f?",
      "title": "C&C++"
    },
    {
      "answer": "\u8bbea,b,c,ab,ac,bc,abc\u4e3a\u5206\u522b\u7b54\u5bf9\u8fd9\u4e9b\u9898\u76ee\u7684\u4eba\na+b+c+ab+ac+bc+abc = 25\nb+bc=2*(c+bc)\na = ab+ac+abc\nb+c = a\n3*a-1+bc = 25\n3*a-1 <= 25\na < 9\nbc = b - 2c\n4a-1 > 25\na > 7\na = 8,bc = 2\nc = 2,b = 6",
      "ID": "55f2e51de4b0152a6114338f",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6709\u4e00\u6b21\u6570\u5b66\u6bd4\u8d5b\uff0c\u5171\u6709A\uff0cB\u548cC\u4e09\u9053\u9898\u76ee\u3002\u6240\u6709\u4eba\u90fd\u81f3\u5c11\u89e3\u7b54\u51fa\u4e00\u9053\u9898\u76ee\uff0c\u603b\u5171\u670925\u4eba\u3002\n\u5728\u6ca1\u6709\u7b54\u51faA\u7684\u4eba\u4e2d\uff0c\u7b54\u51faB\u7684\u4eba\u6570\u662f\u7b54\u51faC\u7684\u4eba\u6570\u7684\u4e24\u500d\uff1b\u5355\u5355\u7b54\u51faA\u7684\u4eba\uff0c\u6bd4\u5176\u4ed6\u7b54\u51faA\u7684\u4eba\u603b\u6570\u591a1\uff1b\u5728\u6240\u6709\u53ea\u6709\u7b54\u51fa\u4e00\u9053\u9898\u76ee\u7684\u4eba\u5f53\u4e2d\uff0c\u7b54\u51faB\u548cC\u7684\u4eba\u6570\u521a\u597d\u662f\u4e00\u534a\u3002\n\u6c42\u53ea\u7b54\u51faB\u7684\u4eba\u6570\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143151",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u7f16\u8bd1\u9519\u8bef",
      "optionC": "128  128",
      "optionAnswer": "B",
      "answer": "\u5f3a\u5236\u8f6c\u6362\u7684\u622a\u540e8\u4f4d\uff0c\u6b63\u6570\u7528\u6e90\u7801\u8868\u793a\uff0c\u8d1f\u6570\u7528\u8865\u7801\u8868\u793a\uff0c\u7b2c\u4e00\u4f4d\u662f\u7b26\u53f7\u3002",
      "optionB": "128 - 128",
      "type": "1",
      "optionA": "128  127",
      "question": "\u7ecf\u8fc7\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4ee5\u540e\uff0c\u53d8\u91cfa\uff0cb\u7684\u503c\u5206\u522b\u4e3a\u591a\u5c11\uff1f\nshort a =128\uff1b\nbyte b =(byte) a\uff1b",
      "title": "C&C++"
    },
    {
      "answer": "\u5206\u9875\u5b58\u50a8\u7ba1\u7406\u57fa\u672c\u601d\u60f3\uff1a\n\u7528\u6237\u7a0b\u5e8f\u7684\u5730\u5740\u7a7a\u95f4\u88ab\u5212\u5206\u6210\u82e5\u5e72\u56fa\u5b9a\u5927\u5c0f\u7684\u533a\u57df\uff0c\u79f0\u4e3a\u201c\u9875\u201d\uff0c\u76f8\u5e94\u5730\uff0c\u5185\u5b58\u7a7a\u95f4\u5206\u6210\u82e5\u5e72\u4e2a\u7269\u7406\u5757\uff0c\u9875\u548c\u5757\u7684\u5927\u5c0f\u76f8\u7b49\u3002\u53ef\u5c06\u7528\u6237\u7a0b\u5e8f\u7684\u4efb\u4e00\u9875\u653e\u5728\u5185\u5b58\u7684\u4efb\u4e00\u5757\u4e2d\uff0c\u5b9e\u73b0\u4e86\u79bb\u6563\u5206\u914d\u3002\n\u5206\u6bb5\u5b58\u50a8\u7ba1\u7406\u57fa\u672c\u601d\u60f3\uff1a\n\u5c06\u7528\u6237\u7a0b\u5e8f\u5730\u5740\u7a7a\u95f4\u5206\u6210\u82e5\u5e72\u4e2a\u5927\u5c0f\u4e0d\u7b49\u7684\u6bb5\uff0c\u6bcf\u6bb5\u53ef\u4ee5\u5b9a\u4e49\u4e00\u7ec4\u76f8\u5bf9\u5b8c\u6574\u7684\u903b\u8f91\u4fe1\u606f\u3002\u5b58\u50a8\u5206\u914d\u65f6\uff0c\u4ee5\u6bb5\u4e3a\u5355\u4f4d\uff0c\u6bb5\u4e0e\u6bb5\u5728\u5185\u5b58\u4e2d\u53ef\u4ee5\u4e0d\u76f8\u90bb\u63a5\uff0c\u4e5f\u5b9e\u73b0\u4e86\u79bb\u6563\u5206\u914d\u3002\n\u6bb5\u9875\u5f0f\u5b58\u50a8\u7ba1\u7406\u57fa\u672c\u601d\u60f3\uff1a\n\u5206\u9875\u7cfb\u7edf\u80fd\u6709\u6548\u5730\u63d0\u9ad8\u5185\u5b58\u7684\u5229\u7528\u7387\uff0c\u800c\u5206\u6bb5\u7cfb\u7edf\u80fd\u53cd\u6620\u7a0b\u5e8f\u7684\u903b\u8f91\u7ed3\u6784\uff0c\u4fbf\u4e8e\u6bb5\u7684\u5171\u4eab\u4e0e\u4fdd\u62a4\uff0c\u5c06\u5206\u9875\u4e0e\u5206\u6bb5\u4e24\u79cd\u5b58\u50a8\u65b9\u5f0f\u7ed3\u5408\u8d77\u6765\uff0c\u5c31\u5f62\u6210\u4e86\u6bb5\u9875\u5f0f\u5b58\u50a8\u7ba1\u7406\u65b9\u5f0f\u3002\n\u5728\u6bb5\u9875\u5f0f\u5b58\u50a8\u7ba1\u7406\u7cfb\u7edf\u4e2d\uff0c\u4f5c\u4e1a\u7684\u5730\u5740\u7a7a\u95f4\u9996\u5148\u88ab\u5206\u6210\u82e5\u5e72\u4e2a\u903b\u8f91\u5206\u6bb5\uff0c\u6bcf\u6bb5\u90fd\u6709\u81ea\u5df1\u7684\u6bb5\u53f7\uff0c\u7136\u540e\u518d\u5c06\u6bcf\u6bb5\u5206\u6210\u82e5\u5e72\u4e2a\u5927\u5c0f\u76f8\u7b49\u7684\u9875\u3002\u5bf9\u4e8e\u4e3b\u5b58\u7a7a\u95f4\u4e5f\u5206\u6210\u5927\u5c0f\u76f8\u7b49\u7684\u9875\uff0c\u4e3b\u5b58\u7684\u5206\u914d\u4ee5\u9875\u4e3a\u5355\u4f4d\u3002\n\u6bb5\u9875\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4f5c\u4e1a\u7684\u5730\u5740\u7ed3\u6784\u5305\u542b\u4e09\u90e8\u5206\u7684\u5185\u5bb9\uff1a\u6bb5\u53f7 \u9875\u53f7 \u9875\u5185\u4f4d\u79fb\u91cf\n\u7a0b\u5e8f\u5458\u6309\u7167\u5206\u6bb5\u7cfb\u7edf\u7684\u5730\u5740\u7ed3\u6784\u5c06\u5730\u5740\u5206\u4e3a\u6bb5\u53f7\u4e0e\u6bb5\u5185\u4f4d\u79fb\u91cf\uff0c\u5730\u5740\u53d8\u6362\u673a\u6784\u5c06\u6bb5\u5185\u4f4d\u79fb\u91cf\u5206\u89e3\u4e3a\u9875\u53f7\u548c\u9875\u5185\u4f4d\u79fb\u91cf\u3002\n\u4e3a\u5b9e\u73b0\u6bb5\u9875\u5f0f\u5b58\u50a8\u7ba1\u7406\uff0c\u7cfb\u7edf\u5e94\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u8bbe\u7f6e\u4e00\u4e2a\u6bb5\u8868\uff0c\u5305\u62ec\u6bcf\u6bb5\u7684\u6bb5\u53f7\uff0c\u8be5\u6bb5\u7684\u9875\u8868\u59cb\u5740\u548c\u9875\u8868\u957f\u5ea6\u3002\u6bcf\u4e2a\u6bb5\u6709\u81ea\u5df1\u7684\u9875\u8868\uff0c\u8bb0\u5f55\u6bb5\u4e2d\u7684\u6bcf\u4e00\u9875\u7684\u9875\u53f7\u548c\u5b58\u653e\u5728\u4e3b\u5b58\u4e2d\u7684\u7269\u7406\u5757\u53f7\u3002",
      "ID": "55f2e51de4b0152a6114336b",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "windows\u5185\u5b58\u7ba1\u7406\u7684\u673a\u5236\u4ee5\u53ca\u4f18\u7f3a\u70b9",
      "title": "C&C++"
    },
    {
      "answer": "#include <cstdio>\n#include <algorithm>\n \nint a[500500] = {0};\nint dp[500500] = {0};\n \nint main(){\n    freopen(\"numtri.in\",\"r\",stdin);\n    int row_num = 0;\n    scanf(\"%d\", &row_num);\n    int elem_num = row_num * (row_num + 1) / 2; // \u6570\u5b57\u91d1\u5b57\u5854\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\n    for(int i = 0;i <elem_num;i++) {\n        scanf(\"%d\",&a[i]);\n    }\n    for(int i=0; i<row_num; i++) {\n        dp[elem_num-1-i]=a[elem_num-1-i];\n    }\n    int n;\n    for(int i=row_num-2; i>=0; i--){\n        n = i * (i + 1) / 2;\n        for(int j=0; j<=i; j++) {\n            dp[n+j] = a[n+j] + std::max(dp[n+j+i+1], dp[n+j+i+2]);\n        }\n    }\n \n    freopen(\"numtri.out\",\"w\",stdout);\n    printf(\"%d\\n\",dp[0]);\n    return 0;\n}",
      "ID": "55f2e51de4b0152a6114334f",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5047\u8bbe\u6709\u5982\u4e0b\u6240\u793a\u7684\u4e00\u4e2a\u6570\u5b57\u91d1\u5b57\u5854\uff0c\u73b0\u5728\uff0c\u8981\u6c42\u5199\u4e00\u4e2a\u7a0b\u5e8f\u6765\u67e5\u627e\u4ece\u9876\u70b9\u5230\u5e95\u90e8\u4efb\u610f\u5904\u7ed3\u675f\u7684\u8def\u5f84\uff0c\u4f7f\u8def\u5f84\u7ecf\u8fc7\u7684\u6570\u5b57\u7684\u548c\u6700\u5927\uff0c\u5e76\u8f93\u51fa\u8be5\u8def\u5f84\u7684\u6700\u5927\u548c\u3002\u6bd4\u5982\u4ee5\u4e0b\u91d1\u5b57\u5854\u7684\u548c\u6700\u5927\u8def\u5f84\u7684\u548c\u4e3a7+3+8+7+5=30\u3002\n\n7\n3 2\n8 1 0\n2 7 4 4\n4 5 2 6 5",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a6114313d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5806\u548c\u6808\u90fd\u53ef\u4ee5\u52a8\u6001\u5206\u914d",
      "optionC": "\u5806\u548c\u6808\u90fd\u53ef\u4ee5\u9759\u6001\u5206\u914d",
      "optionAnswer": "C",
      "answer": "\u9009C\uff0c\u9759\u6001\u5206\u914d\u662f\u6307\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u80fd\u786e\u5b9a\u5927\u5c0f\uff0c\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u5206\u914d\uff0c\u5806\u4e0d\u53ef\u4ee5\u8fdb\u884c\u9759\u6001\u5206\u914d\uff0c\u5806\u7684\u7533\u8bf7\u90fd\u662f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u7684\u3002\nA\uff0c\u5806\u548c\u6808\u7684\u5927\u5c0f\u90fd\u53ef\u4ee5\u8bbe\u7f6e\uff0c\u6808\u4e00\u822c\u53ea\u6709\u51e0KB\u3002\nB\uff0c\u5806\u5728\u52a8\u6001\u5206\u914d\u65f6\uff0c\u8981\u7533\u8bf7\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u91ca\u653e\u540e\u4f1a\u4ea7\u751f\u788e\u7247\u3002\nD\uff0c\u5806\u662f\u4f7f\u7528malloc()\u3001calloc()\u3001realloc()\u7b49\u51fd\u6570\u52a8\u6001\u5206\u914d\u7684\uff0c\u800c\u4f7f\u7528alloca()\u51fd\u6570\u53ef\u4ee5\u52a8\u6001\u5206\u914d\u6808\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u91ca\u653e\u7684\u65f6\u5019\u7531\u7f16\u8bd1\u5668\u81ea\u5df1\u91ca\u653e\u3002",
      "optionB": "\u5728\u5806\u4e0a\u9891\u7e41\u7684\u8c03\u7528new/delete\u5bb9\u6613\u4ea7\u751f\u5185\u5b58\u788e\u7247\uff0c\u6808\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898",
      "type": "1",
      "optionA": "\u5806\u7684\u5927\u5c0f\u4ec5\u53d7\u64cd\u4f5c\u7cfb\u7edf\u7684\u9650\u5236\uff0c\u6808\u7684\u5927\u5c0f\u4e00\u822c\u4e00\u822c\u8f83\u5c0f",
      "question": "C++\u4e2d\u5173\u4e8e\u5806\u548c\u6808\u7684\u8bf4\u6cd5\uff0c\u54ea\u4e2a\u662f\u9519\u8bef\u7684:",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143267",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "7",
      "optionC": "10",
      "optionAnswer": "D",
      "answer": "\u672c\u9898\u8003\u67e5\u51fd\u6570\u7684\u9012\u5f52\u8c03\u7528,\u6267\u884cf(9)\u540e,f(9)= 9-(7-(5-(3-f(1))))=7,\u6240\u4ee5\u7b54\u6848\u4e3aD\u9009\u9879\u3002",
      "optionB": "5",
      "type": "1",
      "optionA": "9",
      "question": "\u6709\u4ee5\u4e0b\u7a0b\u5e8f\n\n#include <stdio.h>\nint fun( int x )\n{ \n    int p;\n    if (x == 0\uff5c\uff5c x == 1 ) \n        return(3);\n    p = x - fun( x \u2013 2 );\n    return(p);\n\uff5d\nmain(){\n    printf (\"%d\\n\",fun(9));\n}\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c0f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u8fd4\u56de\u7c7b\u578b",
      "optionC": "\u6307\u9488\u53c2\u6570",
      "optionAnswer": "B",
      "answer": "\u9759\u6001\u6210\u5458\u51fd\u6570\u662f\u666e\u901a\u7684\u51fd\u6570\u524d\u52a0\u5165static,\u5b83\u5177\u6709\u51fd\u6570\u7684\u6240\u6709\u7684\u7279\u5f81\uff1a\u8fd4\u56de\u7c7b\u578b\u3001\n\u5f62\u53c2\uff0c\u6240\u4ee5\u4f7f\u7528(P107)\u9759\u6001\u6210\u5458\u51fd\u6570\uff0c\u6307\u9488\u53ef\u4ee5\u4f5c\u4e3a\u5f62\u53c2\uff0c\u4e5f\u5177\u6709\u8fd4\u56de\u503c\u3002\u9759\u6001\u6210\u5458\u662f\u7c7b\u5177\u6709\u7684\n\u5c5e\u6027\uff0c\u4e0d\u662f\u5bf9\u8c61\u7684\u7279\u5f81\uff0c\u800cthis\u8868\u793a\u7684\u662f\u9690\u85cf\u7684\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u56e0\u6b64\u9759\u6001\u6210\u5458\u51fd\u6570\u6ca1\u6709this \u6307\u9488\n\u3002\u9759\u6001\u6210\u5458\u51fd\u6570\u5f53\u5728\u7c7b\u5916\u5b9a\u4e49\u65f6\uff0c\u8981\u6ce8\u610f\u4e0d\u80fd\u4f7f\u7528static\u5173\u952e\u5b57\u4f5c\u4e3a\u524d\u7f00\u3002\u7531\u4e8e\u9759\u6001\u6210\u5458\u51fd\u6570\u5728\n\u7c7b\u4e2d\u53ea\u6709\u4e00\u4e2a\u62f7\u8d1d\uff08\u526f\u672c\uff09\uff0c\u56e0\u6b64\u5b83\u8bbf\u95ee\u5bf9\u8c61\u7684\u6210\u5458\u65f6\u8981\u53d7\u5230\u4e00\u4e9b\u9650\u5236\uff1a\u9759\u6001\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\n\u8bbf\u95ee\u7c7b\u4e2d\u8bf4\u660e\u7684\u9759\u6001\u6210\u5458\uff0c\u4f46\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u7c7b\u4e2d\u8bf4\u660e\u7684\u975e\u9759\u6001\u6210\u5458\uff1b\u82e5\u8981\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u65f6\uff0c\u5fc5\n\u987b\u901a\u8fc7\u53c2\u6570\u4f20\u9012\u7684\u65b9\u5f0f\u5f97\u5230\u76f8\u5e94\u7684\u5bf9\u8c61\uff0c\u518d\u901a\u8fc7\u5bf9\u8c61\u6765\u8bbf\u95ee\u3002",
      "optionB": "this\u6307\u9488",
      "type": "1",
      "optionA": "\u8fd4\u56de\u503c",
      "question": "\u9759\u6001\u6210\u5458\u51fd\u6570\u6ca1\u6709\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55e429cfe4b0152a610c8342",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5c06\u6587\u4ef6\u6307\u9488\u5b9a\u4f4d\u5230\u6587\u4ef6\u672b\u5c3e",
      "optionC": "\u8ba1\u7b97\u6587\u4ef6wj.txt\u7684\u8d77\u59cb\u5730\u5740",
      "optionAnswer": "A",
      "answer": "\u8be5\u7a0b\u5e8f\u662f\u8ba1\u7b97\u6587\u4ef6\u7684\u5b57\u8282\u6570",
      "optionB": "\u8ba1\u7b97\u6587\u4ef6wj.txt\u7684\u7ec8\u6b62\u5730\u5740",
      "type": "1",
      "optionA": "\u8ba1\u7b97\u6587\u4ef6wj.txt\u5185\u5bb9\u7684\u5b57\u8282\u6570",
      "question": "\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\uff08\uff09\n#include<stdio.h>  \nint main(void)  \n{  \n    FILE *fp;  \n    long int n;  \n    fp = fopen(\"wj.txt\",\"rb\");  \n    fseek(fp , 0 , SEEK_END);  \n    n = ftell(fp);  \n    fclose(fp);  \n    printf(\"%ld\",n);  \n}  ",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c73",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5bc4\u5b58\u5668\u53d8\u91cf",
      "optionC": "\u9759\u6001\u53d8\u91cf",
      "optionAnswer": "B",
      "answer": "\u53d8\u91cf\u5b58\u50a8\u7c7b\u53ef\u5206\u4e3a\u4e24\u7c7b\uff1a\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u3002\n\uff081\uff09\u5168\u5c40\u53d8\u91cf\uff1a\u5728\u51fd\u6570\u5916\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\u79f0\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u5176\u4f5c\u7528\u57df\u4e3a\uff1a\u4ece\u5b9a\u4e49\u53d8\u91cf\u7684\u4f4d\u7f6e\u5f00\u59cb\n\u5230\u6e90\u7a0b\u5e8f\u7ed3\u675f\u3002\u5168\u5c40\u53d8\u91cf\u589e\u52a0\u4e86\u51fd\u6570\u4e4b\u95f4\u6570\u636e\u8054\u7cfb\u7684\u6e20\u9053\uff0c\u5168\u5c40\u53d8\u91cf\u4f5c\u7528\u57df\u5185\u7684\u51fd\u6570\uff0c\u5747\u53ef\u4f7f\u7528\n\u3001\u4fee\u6539\u8be5\u5168\u5c40\u53d8\u91cf\u7684\u503c\uff0c\u4f46\u662f\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u964d\u4f4e\u4e86\u7a0b\u5e8f\u7684\u53ef\u7406\u89e3\u6027\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5b66\u63d0\u5021\u5c3d\u91cf\u907f\u514d\u4f7f\n\u7528\u5168\u5c40\u53d8\u91cf\u3002\n\uff082\uff09\u5c40\u90e8\u53d8\u91cf\uff1a\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\u79f0\u4e3a\u5c40\u90e8\u53d8\u91cf\uff0c\u5176\u4f5c\u7528\u57df\u4e3a\uff1a\u4ece\u5b9a\u4e49\u53d8\u91cf\u7684\u4f4d\u7f6e\u5f00\u59cb\n\u5230\u51fd\u6570\u7ed3\u675f\u3002\u5c40\u90e8\u53d8\u91cf\u5305\u542b\u81ea\u52a8\u53d8\u91cf\uff08auto\uff09\u9759\u6001\u53d8\u91cf\uff08static\uff09\u4ee5\u53ca\u51fd\u6570\u53c2\u6570\u3002\nauto\u53d8\u91cf\u610f\u5473\u7740\u53d8\u91cf\u7684\u5b58\u50a8\u7a7a\u95f4\u7684\u5206\u914d\u4e0e\u91ca\u653e\u662f\u81ea\u52a8\u8fdb\u884c\u7684\u3002\u8bf4\u660e\u7b26auto\u53ef\u4ee5\u7701\u7565\u3002\u51fd\u6570\u4e2d\n\u7684\u5c40\u90e8\u53d8\u91cf\u5b58\u653e\u5728\u6808\u7a7a\u95f4\u3002\u5728\u51fd\u6570\u5f00\u59cb\u8fd0\u884c\u65f6\uff0c\u5c40\u90e8\u53d8\u91cf\u88ab\u5206\u914d\u5185\u5b58\u5355\u5143\uff0c\u51fd\u6570\u7ed3\u675f\u65f6\uff0c\u5c40\u90e8\u53d8\n\u91cf\u91ca\u653e\u5185\u5b58\u5355\u5143\u3002\u56e0\u6b64\uff0c\u4efb\u4e24\u4e2a\u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u540c\u540d\uff0c\u56e0\u5176\u5360\u6709\u4e0d\u540c\u7684\u5185\u5b58\u5355\u5143\u800c\u4e0d\u5f71\u54cd\n\u4f7f\u7528\u3002\u8fd9\u6709\u5229\u4e8e\u5b9e\u73b0\u8f6f\u4ef6\u5f00\u53d1\u7684\u6a21\u5757\u5316\u3002\nstatic\u53d8\u91cf\u662f\u5b9a\u4e49\u5728\u51fd\u6570\u4f53\u5185\u7684\u53d8\u91cf\uff0c\u5b58\u653e\u5728\u9759\u6001\u5b58\u50a8\u533a\uff0c\u4e0d\u7528\u6808\u7a7a\u95f4\u5b58\u50a8\uff0c\u5176\u503c\u5e76\u4e0d\u968f\u5b58\n\u50a8\u7a7a\u95f4\u7684\u91ca\u653e\u800c\u6d88\u5931\u3002",
      "optionB": "\u5c40\u90e8\u53d8\u91cf",
      "type": "1",
      "optionA": "\u5168\u5c40\u53d8\u91cf",
      "question": "\u6240\u6709\u5728\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u90fd\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "Java code\uff1a\n\npublic static int[] intersection(int[] a,int[] b){\n  int aLen = a.length;\n  int bLen = b.length;\n  int aIndex = 0;\n  int bIndex = 0;\n  int cIndex = 0;\n  int[] c = new int[aLen];\n\n  Arrays.sort(a);\n  Arrays.sort(b);\n\n  while(aIndex != aLen && bIndex != bLen){\n    if(a[aIndex] == b[bIndex]){\n      c[cIndex++] = a[aIndex];\n\n     aIndex++;\n     bIndex++;\n    }else if(a[aIndex ] < b[bIndex]){\n     aIndex++; \n    }else{\n     bIndex++;\n    }\n  }\n\n  if(cIndex != aLen){\n    c = Arrays.copyOf(c ,cIndex);\n  }\n\n  return c;\n}\n",
      "ID": "55f2e51de4b0152a6114337a",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7a0b\u5e8f\u8bbe\u8ba1\uff1a\u7ed9\u5b9a2\u4e2a\u5927\u5c0f\u5206\u522b\u4e3an, m\u7684\u6574\u6570\u96c6\u5408\uff0c\u5206\u522b\u5b58\u653e\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d int A[n], B[m]\uff0c\u8f93\u51fa\u4e24\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de807",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u8868\u8fbe\u5f0f\u4e0d\u5408\u6cd5\u8f93\u51fa\u65e0\u5b9a\u503c",
      "optionC": "F'9'",
      "optionAnswer": "B",
      "answer": "\u672c\u9898\u8003\u67e5\u5b57\u7b26\u53d8\u91cf\u4ee5\u53caprintf( )\u51fd\u6570\u76f8\u5173\u77e5\u8bc6,\u5b57\u7b26\u53d8\u91cfc1\u88ab\u8d4b\u503c\u4e3a'C'+'8'\uff0d'3',\u5373ASSCII\u7801\u7684\u8fd0\u7b97,67\u534154\uff0d49=72,\u5373H;\u5b57\u7b26\u53d8\u91cf c2\u88ab\u8d4b\u503c\u4e3a'9'\uff0d'0',\u4f46\u8f93\u51fa\u65f6,\u9700\u8981\u6ce8\u610f\u7684\u662fc1\u4ee5\u5b57\u7b26\u53d8\u91cf\u8f93\u51fa,\u800cc2\u662f\u4ee5\u5341\u8fdb\u5236\u6574\u578b\u53d8\u91cf\u8f93\u51fa\u3002\u56e0\u6b64B\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "H 9",
      "type": "1",
      "optionA": "H'9'",
      "question": "\u82e5\u6709\u4ee5\u4e0b\u7a0b\u5e8fmain( ) \n{ \n    char c1,c2;\n    c1 ='C'+'8'\uff0d'3';\n    c2 ='9'\uff0d'0';\n    printf(\"%c %d\\n\",c1,c2);\n}\n\u5219\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "answer": "public class QueueWithTwoStack { static Stack<Integer> s1 = new Stack<Integer>(); static Stack<Integer> s2 = new Stack<Integer>(); public boolean add(int v){ if(s2.isEmpty()){ while(!s1.isEmpty()){ s2.push(s1.pop()); } s1.push(v); return true; }else { if(s1.size() < 20){ s1.push(v); return true; }else{ if (s2.isEmpty()) { while(!s1.isEmpty()){ s2.push(s1.pop()); } s1.push(v); return true; }else{ System.out.println(\"queue is full\"); return false; } } } } public int remove(){ if(!s2.isEmpty()) return s2.pop(); else { while(!s1.isEmpty()){ s2.push(s1.pop()); } return s2.pop(); } } public static void main(String[] args) { QueueWithTwoStack myQueue = new QueueWithTwoStack(); for(int i = 0; i < 21; i ++){ if(myQueue.add(i)) System.out.print(i + \" \"); } System.out.println(); for(int i = 0; i < 10; i ++){ System.out.print(myQueue.remove() + \" \");//\u524d10\u4e2a } if(myQueue.add(21)) System.out.print(21 + \" \"); if(myQueue.add(22)) System.out.print(22 + \" \"); if(myQueue.add(23)) System.out.print(23 + \" \"); for(int i = 0; i < 14; i ++){ System.out.print(myQueue.remove() + \" \");//\u540e13\u4e2a } } }",
      "ID": "55f2e51de4b0152a61143396",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7528\u4f60\u719f\u6089\u7684\u8bed\u8a00\u7f16\u5199\u7a0b\u5e8f\u7528\u4e24\u4e2a\u6808\uff08Stack\uff09\u6a21\u62df\u961f\u5217\uff08Queue\uff09\u7684\u5148\u8fdb\u5148\u51fa\u64cd\u4f5c\uff0c\u4ec5\u5b9e\u73b0add\u3001remove\u65b9\u6cd5\u5373\u53ef\u3002\n1\uff09\u8bf7\u5148\u63cf\u8ff0\u601d\u8def\uff1b 2\uff09\u7f16\u5199\u5b8c\u6574\u4ee3\u7801\u5b9e\u73b0\uff0c\u7f16\u7a0b\u8bed\u8a00\u4e0d\u9650\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de821",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "3",
      "optionC": "2",
      "optionAnswer": "B",
      "answer": " a=i++. a----0 \nb=++a. b----1. a----1\n c=a+b. c-----2\na?b:c     a\u4e3a1\u53d6b  \u4e5f\u5c31\u662f1",
      "optionB": "1",
      "type": "1",
      "optionA": "0",
      "question": "\u6709\u53d8\u91cfint i = 0; int a = i++; int b=++a; int c = a+b; \u8bf7\u95ee\u8868\u8fbe\u5f0f a?b:c \u7684\u503c\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c8c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6a21\u677f\u7c7b",
      "optionC": "\u51fd\u6570",
      "optionAnswer": "A",
      "answer": "\u7c7b\u6a21\u677f\u5c31\u662f\u628a\u7c7b\u4e2d\u7684\u6570\u636e\u5206\u79bb\u51fa\u6765\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u7c7b\u7684\u63cf\u8ff0\u3002C++\u7f16\u8bd1\u5668\u6839\u636e\u7c7b\u6a21\u677f\u548c\u7279\u5b9a\u4f2a\u6570\u636e\u7c7b\u578b\u6765\u4ea7\u751f\u4e00\u4e2a\u7c7b\uff0c\u7c7b\u6a21\u677f\u5c31\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u7c7b\u3002",
      "optionB": "\u5bf9\u8c61",
      "type": "1",
      "optionA": "\u7c7b",
      "question": "\u7c7b\u6a21\u677f\u7684\u4f7f\u7528\u5b9e\u9645\u4e0a\u662f\u5c06\u7c7b\u6a21\u677f\u5b9e\u4f8b\u5316\u4e3a\u4e00\u4e2a\u5177\u4f53\u7684 ______\u3002",
      "title": "C&C++"
    },
    {
      "answer": "<pre class=\"prettyprint lang-cpp\">string Zipper(string s){ string s1=\"\"; string s2=\"\"; int i=0,j=0,k=0,count=0; while(s[i]){ s1[i++]=s[j++]; if(s[j]==\" \")j++; } for(i=0;i&lt;s1.length();i++){ if(s1[i]==' '){ for(k=count;k&lt;i;k++) s2[k]=s1[i-1-K]; s2[i]=\" \"; count=i+1; } } }</pre> <br />",
      "ID": "55f2e51de4b0152a6114337d",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u5b57\u7b26\u4e32s, \u8981\u6c42\u628as\u4e2d\u591a\u4e8e\u4e00\u4e2a\u7684\u8fde\u7eed\u7a7a\u538b\u7f29\u6210\u4e00\u4e2a\u7a7a\u683c\uff0c\u5e76\u5c06\u8fde\u7eed\u7684\u975e\u7a7a\u683c\u5b57\u7b26\u4e32\u5012\u5e8f\u6253\u5370\u51fa\u6765\uff0c\u4f8b\u5982\uff0c\u7ed9\u5b9a\"abc def efg\"\uff0c\u6253\u5370\"cba fed gfe\"",
      "title": "C&C++"
    },
    {
      "answer": "\u89e3\u7b54\uff1a\uff081\uff09\u52a8\u6001\u94fe\u63a5\u5e93(Dynamic Linked Library)\uff1aWindows\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u51fd\u6570\u8c03\u7528\uff0c\u8fd9\u4e9b\u51fd\u6570\u8c03\u7528\u90fd\u5305\u542b\u5728\u52a8\u6001\u94fe\u63a5\u5e93\u4e2d\u3002\u5176\u4e2d\u67093\u4e2a\u6700\u91cd\u8981\u7684DLL\uff0cKernel32.dll\u3001User32.dll\u548cGDI32.dll\u3002\u6709\u4e24\u79cd\u4f7f\u7528\u65b9\u5f0f\uff1a\u4e00\u79cd\u662f\u9759\u6001\u52a0\u8f7d\uff0c\u5373\u5728\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8\u65f6\u88ab\u52a0\u8f7d\uff1b\u4e00\u79cd\u662f\u52a8\u6001\u52a0\u8f7d\uff0c\u5373\u662f\u8be5\u52a8\u6001\u94fe\u63a5\u5e93\u5728\u88ab\u4f7f\u7528\u65f6\u624d\u88ab\u5e94\u7528\u7a0b\u5e8f\u52a0\u8f7d\u3002\u4f18\u70b9\u5982\u4e0b\uff1a\na. \u5171\u4eab\uff1a\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u540c\u4e00\u4e2a\u52a8\u6001\u5e93\uff0c\u542f\u52a8\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u5c06\u52a8\u6001\u5e93\u52a0\u8f7d\u5230\u5185\u5b58\u4e00\u6b21\u5373\u53ef\uff1b\nb. \u5f00\u53d1\u6a21\u5757\u597d\uff1a\u8981\u6c42\u8bbe\u8ba1\u8005\u5bf9\u529f\u80fd\u5212\u5206\u7684\u6bd4\u8f83\u597d\u3002\n\u7f3a\u70b9\u662f\u4e0d\u80fd\u89e3\u51b3\u5f15\u7528\u8ba1\u6570\u7b49\u95ee\u9898\u3002\n\uff082\uff09\u9759\u6001\u5e93(Static Library)\uff1a\u51fd\u6570\u548c\u6570\u636e\u88ab\u7f16\u8bd1\u8fdb\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6(\u901a\u5e38\u6269\u5c55\u540d\u4e3a.LIB)\u3002\u5728\u4f7f\u7528\u9759\u6001\u5e93\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u7f16\u8bd1\u94fe\u63a5\u53ef\u6267\u884c\u6587\u4ef6\u65f6\uff0c\u94fe\u63a5\u5668\u4ece\u5e93\u4e2d\u590d\u5236\u8fd9\u4e9b\u51fd\u6570\u548c\u6570\u636e\u5e76\u628a\u5b83\u4eec\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5176\u5b83\u6a21\u5757\u7ec4\u5408\u8d77\u6765\u521b\u5efa\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6(.EXE\u6587\u4ef6)\u3002\u9759\u6001\u94fe\u63a5\u5e93\u4f5c\u4e3a\u4ee3\u7801\u7684\u4e00\u90e8\u5206\uff0c\u5728\u7f16\u8bd1\u65f6\u88ab\u94fe\u63a5\u3002\u4f18\u7f3a\u70b9\u5982\u4e0b\uff1a\n\u4ee3\u7801\u7684\u88c5\u8f7d\u901f\u5ea6\u5feb\uff0c\u56e0\u4e3a\u7f16\u8bd1\u65f6\u5b83\u53ea\u4f1a\u628a\u4f60\u9700\u8981\u7684\u90a3\u90e8\u5206\u94fe\u63a5\u8fdb\u53bb\uff0c\u5e94\u7528\u7a0b\u5e8f\u76f8\u5bf9\u6bd4\u8f83\u5927\u3002\u4f46\u662f\u5982\u679c\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u8bdd\uff0c\u4f1a\u88ab\u88c5\u8f7d\u591a\u6b21\uff0c\u6d6a\u8d39\u5185\u5b58\u3002",
      "ID": "55f2e51ee4b0152a611433a7",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u52a8\u6001\u94fe\u63a5\u5e93\u548c\u9759\u6001\u94fe\u63a5\u5e93\u7684\u4f18\u7f3a\u70b9",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143226",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "n, n+1, n+1",
      "optionC": "n, n, n",
      "optionAnswer": "D",
      "answer": "\u5148\u770b\u4ee3\u7801\n for(i = ___; i < N; i++) {\n    swap(___, i);\n    run(n + 1);\n    swap(___, i);\n  }\n\u4e3a\u4e86\u9632\u6b62\u5185\u5b58\u6ea2\u51fa\uff0c\u6211\u76f4\u63a5\u6392\u9664\u6cd5\u9009\u62e9\u4e86c\u3002\u53ea\u662f\u4e2a\u505a\u9898\u6280\u5de7\uff0c\u7a0b\u5e8f\u6ca1\u591a\u770b",
      "optionB": "n+1, n, n",
      "type": "1",
      "optionA": "n+1, n, n+1",
      "question": "\u4e0b\u5217\u4ee3\u7801\u8bd5\u56fe\u6253\u5370\u6570\u5b571-9\u7684\u5168\u6392\u5217\u7ec4\u5408\u3002\n\n#include \"stdio.h\"\n#define N 9\nint x[N];\nint count = 0;\n \nvoid dump() {\n  int i = 0;\n  for (i = 0; i < N; i++) {\n    printf(\"%d\", x[i]);\n  }\n  printf(\"\\n\");\n}\n \nvoid swap(int a, int b) {\n  int t = x[a];\n  x[a] = x[b];\n  x[b] = t;\n}\n \nvoid run(int n) {\n  int i;\n  if (N - 1 == n) {\n    dump();\n    count ++;\n    return;\n  }\n  for (i = ___; i < N; i++) {\n    swap(___, i);\n    run(n + 1);\n    swap(___, i);\n  }\n}\n \nint main() {\n  int i;\n  for (i = 0; i < N; i++) {\n    x[i] = i + 1;\n  }\n  run(0);\n  printf(\"* Total: %d\\n\", count);\n}\n\u5176\u4e2drun\u51fd\u6570\u4e2d\u7f3a\u5931\u7684\u90e8\u5206\u5e94\u8be5\u4f9d\u6b21\u4e3a\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a6114315f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u672a\u77e5",
      "optionC": "2",
      "optionAnswer": "C",
      "answer": "a[q-p]=a[2]=2;\u8fd9\u9898\u662f\u8981\u544a\u8bc9\u6211\u4eec\u6307\u9488\u7684\u8fd0\u7b97\u7279\u70b9",
      "optionB": "1",
      "type": "1",
      "optionA": "0",
      "question": "int a[3];\na[0] = 0; a[1] = 1; a[2] = 2;\nint *p, *q;\np = a;\nq = &a[2];\n \n\u5219a[q - p] = ?",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c23",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e00\u4e2a\u5bf9\u8c61\u8c03\u7528\u4e0d\u540c\u540d\u79f0\u7684\u5bf9\u8c61",
      "optionC": "\u4e00\u4e2a\u5bf9\u8c61\u8c03\u7528\u4e0d\u540c\u540d\u79f0\u7684\u51fd\u6570",
      "optionAnswer": "B",
      "answer": "\u591a\u6001\u6027\u6709\u4e24\u79cd\u9759\u6001\u591a\u6001\u6027\u548c\u52a8\u6001\u591a\u6001\u6027\uff0c\u9759\u6001\u591a\u6001\u6027\u662f\u6307\u8c03\u7528\u540c\u540d\u51fd\u6570\uff0c\u7531\u4e8e\u53c2\u6570\n\u7684\u4e0d\u540c\u8c03\u7528\u4e0d\u540c\u7684\u540c\u540d\u51fd\u6570\uff1b\u52a8\u6001\u591a\u6001\u6027\u662f\u6307\u4e0d\u540c\u5bf9\u8c61\u8c03\u7528\u540c\u540d\u51fd\u6570\u65f6\uff0c\u7531\u4e8e\u5bf9\u8c61\u4e0d\u540c\u8c03\u7528\u4e0d\u540c\n\u7684\u540c\u540d\u51fd\u6570\u3002 \u591a\u6001\u6027\u80af\u5b9a\u5177\u6709\u76f8\u540c\u7684\u51fd\u6570\u540d\uff0c\u6240\u4ee5\u9009\u62e9B\u9879\u3002",
      "optionB": "\u4e0d\u540c\u7684\u5bf9\u8c61\u8c03\u7528\u76f8\u540c\u540d\u79f0\u7684\u51fd\u6570",
      "type": "1",
      "optionA": "\u4e0d\u540c\u7684\u5bf9\u8c61\u8c03\u7528\u4e0d\u540c\u540d\u79f0\u7684\u51fd\u6570",
      "question": "\u6240\u8c13\u591a\u6001\u6027\u662f\u6307 \uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55e429cfe4b0152a610c8337",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "None of the above",
      "optionC": "Port numbers below 1024 are called well-known ports and are reserved for standard services. For example,port 21 is reserved for FTP protocol, and port 25 is for SMTP protocol.",
      "optionAnswer": "C",
      "answer": "C\u662f\u6b63\u786e\u7684",
      "optionB": "TCP supports multicasting.",
      "type": "1",
      "optionA": "TCP provides a way for applications to send encapsulated IP datagrams and send them without having to establish a connection.",
      "question": "Which statement(s) below regarding TCP(Transmission Control Protocol) is(are) correct?",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8bfe",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "20\u548c5",
      "optionC": "4\u548c20",
      "optionAnswer": "C",
      "answer": "a=4,\u56e0\u4e3a\u540e\u51cf\uff0cb\u7684\u503c\u4e0ea\u3001bb\u76f8\u5173\uff0cb\uff1d4*5=20\uff0c\u800c\u4e0eaa\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002",
      "optionB": "5\u548c4",
      "type": "1",
      "optionA": "3\u548c15",
      "question": "\u5047\u5b9a\u4e00\u4e2a\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e3aA(int aa,int bb) {a=aa--;b=a*bb;},\u5219\u6267\u884cA x(4,5)\uff1b\u8bed\u53e5\u540e\n\uff0cx.a\u548cx.b\u7684\u503c\u5206\u522b\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c83",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6807\u8bc6\u6210\u5458\u662f\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u7684",
      "optionC": "\u7ed9\u5b9a\u4f5c\u7528\u57df\u7684\u5927\u5c0f\u7684",
      "optionAnswer": "D",
      "answer": "\u201c::\u201d\u5de6\u8fb9\u4e00\u822c\u4e3a\u7c7b\u540d\uff0c\u53f3\u8fb9\u4e00\u822c\u4e3a\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\uff0c\u5b83\u7684\u529f\u80fd\u5c31\u662f\u6807\u8bc6\u662f\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u7684\uff1b\u5982\u679c\u5de6\u8fb9\u4ec0\u4e48\u90fd\u4e0d\u52a0\uff0c\u8868\u793a\u5168\u5c40\u53d8\u91cf\u3002",
      "optionB": "\u6307\u51fa\u4f5c\u7528\u57df\u7684\u8303\u56f4\u7684",
      "type": "1",
      "optionA": "\u6807\u8bc6\u4f5c\u7528\u57df\u7684\u7ea7\u522b\u7684",
      "question": "\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26\u201c\uff1a\uff1a\u201d\u7684\u529f\u80fd\u662f\uff08  \uff09",
      "title": "C&C++"
    },
    {
      "answer": "\u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u5ba2\u6237\u7aef\u8c03\u7528\u53d1\u9001syn\u5305(syn=j)\u5230\u670d\u52a1\u5668\uff0c\u5e76\u8fdb\u5165SYN_SEND\u72b6\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u786e\u8ba4\uff1b\n\u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u5668\u7aef\u6536\u5230syn\u5305\uff0c\u5fc5\u987b\u786e\u8ba4\u5ba2\u6237\u7684SYN\uff08ack=j+1\uff09\uff0c\u540c\u65f6\u81ea\u5df1\u4e5f\u53d1\u9001\u4e00\u4e2aSYN\u5305\uff08syn=k\uff09\uff0c\u5373SYN+ACK\u5305\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\uff1b\n\u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684SYN\uff0bACK\u5305\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u786e\u8ba4\u5305ACK(ack=k+1)\uff0c\u6b64\u5305\u53d1\u9001\u5b8c\u6bd5\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u8fdb\u5165ESTABLISHED\u72b6\u6001\uff0c\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\u3002\n\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\uff0c\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u5f00\u59cb\u4f20\u9001\u6570\u636e\uff1b",
      "ID": "55f2e51de4b0152a61143346",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bf7\u89e3\u91catcp\u8fde\u63a5\u5efa\u7acb\u8fc7\u7a0b\uff0c\u5982\u679c\u53ef\u80fd\uff0c\u8bf7\u7ed3\u5408\u76f8\u5e94\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u89e3\u91ca\u4ea4\u4e92\u8fc7\u7a0b\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143161",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u8bed\u6cd5\u9519\u8bef",
      "optionC": "100",
      "optionAnswer": "A",
      "answer": "\u9884\u5b9a\u4e49\u5728\u4ee3\u7801\u7f16\u8bd1\u65f6\u76f4\u63a5\u66ff\u6362\uff0ci=5*x+x(x=5)",
      "optionB": "50",
      "type": "1",
      "optionA": "30",
      "question": "#define DOUBLE(x) x+x\ni = 5*DOUBLE(5)\ni \u662f\u591a\u5c11\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "//\u53cd\u8f6c\u94fe\u8868\nListNode* ResverseList(ListNode* head)\n{\nif (head == nullptr || head->m_pNext == nullptr)\n{\nreturn head;\n}\n\nListNode *pre, *curr,*nextNode;\npre = nullptr;\ncurr = head;\nwhile (curr != nullptr)\n{\nnextNode = curr->m_pNext;\ncurr->m_pNext = pre;\npre = curr;\ncurr = nextNode;\n}\nreturn pre;\n}\n//\u5408\u5e76\u4e24\u4e2a\u4ece\u5927\u5230\u5c0f\u7684\u94fe\u8868\uff0c\u4e3a\u4e00\u4e2a\u4ece\u5c0f\u5230\u5927\u7684\u94fe\u8868\nListNode* MergeTwoOpp(ListNode* pHead1, ListNode* pHead2)\n{\nif(pHead1 == nullptr)\nreturn ResverseList(pHead2);\nif(pHead2 == nullptr)\nreturn ResverseList(pHead1);\n\nListNode* pNode = nullptr;\n//ListNode* pPrev1 = nullptr;\nListNode* pNext1 = nullptr,* pNext2 = nullptr;\n\nif(pHead1->m_nValue > pHead2->m_nValue)\n{\npNode = pHead1;\npHead1 = pHead1->m_pNext;\npNext1 = pHead1;\npNode->m_pNext =nullptr;\n}\nelse\n{\npNode = pHead2;\npHead2 = pHead2->m_pNext;\npNext2 = pHead2;\npNode->m_pNext =nullptr;\n}\n\n//ListNode* pNode = pOppHead;\n\nwhile(pHead1 != nullptr && pHead2 != nullptr)\n{\nif(pHead1->m_nValue > pHead2->m_nValue)\n{\npNext1 = pHead1->m_pNext;\npHead1->m_pNext = pNode;\npNode = pHead1;\npHead1 = pNext1;\n}\nelse\n{\npNext2 = pHead2->m_pNext;\npHead2->m_pNext = pNode;\npNode = pHead2;\npHead2=pNext2;\n}\n}\nListNode* pOppNode = pNode;\n\nif (pHead1 != nullptr)\n{\nListNode * p1 = ResverseList(pHead1);\npOppNode = p1;\nwhile (p1->m_pNext != nullptr)\np1 = p1->m_pNext;\np1->m_pNext = pNode;\n}\nif (pHead2 != nullptr)\n{\nListNode * p2 = ResverseList(pHead2);\npOppNode = p2;\nwhile (p2->m_pNext != nullptr)\np2 = p2->m_pNext;\np2->m_pNext = pNode;\n}\nreturn pOppNode;\n}",
      "ID": "55f2e51ee4b0152a611433b5",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bf7\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u628a\u4e24\u4e2a\u4ece\u5927\u5230\u5c0f\u7684\u6709\u5e8f\u94fe\u8868\u5408\u5e76\u6210\u4e00\u4e2a\u94fe\u8868\uff0c\u65b0\u7684\u94fe\u8868\u662f\u4e00\u4e2a\u4ece\u5c0f\u5230\u5927\u7684\u6709\u5e8f\u94fe\u8868\u3002\nstruct list\n{\n    int value;\n    list* next;\n};\nlist * merge (list *list1_head, list*list2_head);",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c86",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "A Obj;",
      "optionC": "int fun(A);",
      "optionAnswer": "B",
      "answer": "\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5b9a\u4e49\u6307\u9488\u548c\u5f15\u7528",
      "optionB": "A *p;",
      "type": "1",
      "optionA": "A fun(int);",
      "question": "\u5047\u8bbeA\u4e3a\u62bd\u8c61\u7c7b\uff0c\u4e0b\u5217\u58f0\u660e\uff08\uff09\u662f\u6b63\u786e\u7684",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143215",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u8fd9\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u5b83\u6ca1\u6709\u91ca\u653e\u4efb\u4f55\u6210\u5458\u53d8\u91cf\u3002",
      "optionC": "\u65e0\u6cd5\u7f16\u8bd1\u901a\u8fc7",
      "optionAnswer": "C",
      "answer": "\u4ee3\u7801\u53ef\u4ee5\u770b\u51fathis\u6307\u9488\u5185\u5bb9\u4e3aconst\uff0c\u4e0d\u5141\u8bb8\u8fdb\u884c\u4fee\u6539\uff0c\u6545\u7f16\u8bd1\u4e0d\u6210\u529f\u3002\n~MyClass() { delete this;  }\n\u5982\u679c\u4e3a\u6b64\u53e5\u4ee3\u7801\uff0c\u5219\u80fd\u901a\u8fc7\u7f16\u8bd1\uff0c\u4e0d\u8fc7\u4f1a\u5bfc\u81f4\u6808\u6ea2\u51fa\uff0c\u56e0\u4e3a\u4e0d\u65ad\u7684\u8c03\u7528\u6790\u6784\u51fd\u6570\u3002",
      "optionB": "\u5b83\u4f1a\u5bfc\u81f4\u6808\u6ea2\u51fa",
      "type": "1",
      "optionA": "\u6b63\u786e\uff0c\u6211\u4eec\u907f\u514d\u4e86\u5185\u5b58\u6cc4\u6f0f",
      "question": "\u5982\u679c\u6709\u4e00\u4e2a\u7c7b\u662f myClass , \u5173\u4e8e\u4e0b\u9762\u4ee3\u7801\u6b63\u786e\u63cf\u8ff0\u7684\u662f:\n\nmyClass::~myClass(){\ndelete this;\nthis = NULL;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143233",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "11",
      "optionC": "10",
      "optionAnswer": "C",
      "answer": "5-\uff08-11\uff09*2/4=5-(-22)/4=5-(-5)=-10",
      "optionB": "6",
      "type": "1",
      "optionA": "5",
      "question": "\u4e0b\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f?\n\nint main(){\n        int z,x = 5,y = -10,a = 4,b = 2;\n        z = x++ - --y * b/a;\n        printf(\"%d\\n\",z);\n        return 0;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de825",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "7\u4e2a\u5b57\u8282",
      "optionC": "6\u4e2a\u5b57\u8282",
      "optionAnswer": "C",
      "answer": "C\u8bed\u8a00\u4e2d\u7684\u5b57\u7b26\u4e32\u7528\u6307\u5411\u8be5\u4e32\u9996\u4e2a\u5b57\u7b26\u7684\u6307\u9488\u8868\u793a\u3002\n\u4e0d\u4fdd\u5b58\u957f\u5ea6\u4fe1\u606f\uff0c\u7528'\\0'\u6765\u6807\u8bc6\u5b57\u7b26\u4e32\u7684\u7ec8\u6b62\u3002\n\u56e0\u6b64\u76f8\u5f53\u4e8e char arrays[] = {'C', 'h', 'i', 'n', 'a', '\\0'}\u3002",
      "optionB": "5\u4e2a\u5b57\u8282",
      "type": "1",
      "optionA": "4\u4e2a\u5b57\u8282",
      "question": "\u5728C\u8bed\u8a00\u4e2d\uff0c\u8bbe\u6709\u6570\u7ec4\u5b9a\u4e49\uff1achar arrays[]=\"China\"\uff1b\u5219\u6570\u7ec4array\u6240\u5360\u7528\u7684\u7a7a\u95f4\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114326c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "12",
      "optionC": "11",
      "optionAnswer": "C",
      "answer": "fun1\u7684\u529f\u80fd\u662f\uff1a\u4ece\u6570\u7ec4s\u7684\u7b2cN-1\u4f4d\u5f00\u59cb\u5411\u524d\u627e\uff08\u4ece0\u5f00\u59cb\uff09\uff0c\u627e\u5230s\u4e2d\u4e0d\u5927\u4e8e\u53c2\u6570a\u7684\u5143\u7d20\uff0c\u5982\u679c\u5b58\u5728\uff0c\u8fd4\u56de\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u5426\u5219\u8fd4\u56de-1\uff1b\nfun2\u7684\u529f\u80fd\u662f\uff1a\u4ece\u6570\u7ec4s\u7684\u7b2cj+1\u4f4d\u5f00\u59cb\u5411\u540e\u627e\uff08\u4ece0\u5f00\u59cb\uff09\uff0c\u627e\u51fa\u4e0d\u5c0f\u4e8e\u53c2\u6570a\u7684\u5143\u7d20\uff0c\u5982\u679c\u5b58\u5728\u8fd4\u56de\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u5426\u5219\u8fd4\u56des\u7684\u6570\u7ec4\u4e2a\u6570\uff1b\n\n\u8fd9\u91ccs\u7684\u5143\u7d20\u4e2a\u6570\u4e3a8\uff0c\u7b2c0\u4f4d\u4e3a\u7a7a\uff0c1-7\u4f4d\u5206\u522b\u662f\uff1a\n1: D;\n2: F;\n3: H;\n4: J;\n5: L;\n6: N;\n7: P;\n\n\u6240\u4ee5fun1\u8fd4\u56de\u7684\u503c\u4e3a5\uff0cs[5]='L',\u4e0d\u5927\u4e8e\u2018M\u2019\u3002\nfun2\u7684\u8fd4\u56de\u503c\u4e3a6\uff0cs[6]=\u2018N\u2019,\u4e0d\u5c0f\u4e8e'M'.\n\n5+6=11\uff1b",
      "optionB": "10",
      "type": "1",
      "optionA": "9",
      "question": "\u9605\u8bfb\u7a0b\u5e8f\uff0c\u8bf7\u9009\u62e9\u8f93\u51fa\u7ed3\u679c\n\n#include <iostream>\nusing namespace std;\n \n#define N 7\nint fun1(char s[], char a, int n)\n{\n    int j;\n    j = n;\n    while (a < s[j] && j > 0) j--;\n    return j;\n}\n \nint fun2(char s[], char a, int n)\n{\n    int j;\n    j = 1;\n    while (a > s[j] && j <= n)\n        j++;\n    return j;\n}\nint main()\n{\n    char s[N + 1];\n    int k, p;\n    for (k = 1; k <= N; k++)\n        s[k] = 'A' + 2 * k + 1;\n    p = fun1(s, 'M', N);\n    cout << p + fun2(s, 'M', N) << endl;\n     \n    return 0;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c18",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u62f7\u8d1d\u6784\u9020\u51fd\u6570",
      "optionC": "\u53cb\u5143\u51fd\u6570",
      "optionAnswer": "C",
      "answer": "\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u90fd\u662f\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\uff0c\u53cb\u5143\u5219\u4e0d\u662f\u6210\u5458\u51fd\u6570\u3002\n\u6240\u4ee5\u9009\u62e9C\u9879\u3002",
      "optionB": "\u6790\u6784\u51fd\u6570",
      "type": "1",
      "optionA": "\u6784\u9020\u51fd\u6570",
      "question": "\u4e0b\u5217\u4e0d\u662f\u63cf\u8ff0\u7c7b\u7684\u6210\u5458\u51fd\u6570\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "char *Delete(char str1[],char str2[])\n{\n     int i=0;\n     char *p1=str1;\n     while(*p1 !='\\0')\n     {       \n        char *p2=str2;\n        while(*p2 !=*p1 && *p2!='\\0')\n         {\n             p2++;\n}   \n  if(*p2 =='\\0')\nstr1[i++]=*p1;\n             p1++;\n      }\n    str1[i]='\\0';\nreturn str1;\n}",
      "ID": "55f2e51de4b0152a61143359",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u7684\u5b57\u7b26\uff0c\u5982\u5b57\u7b26\u4e32\u201dabcdeas\"\uff0c\u9700\u8981\u5220\u9664\u7684\u5b57\u7b26\u4e3a\u201cade\",\u5219\u5f97\u5230\u7684\u7ed3\u679c\u4e3a\u201dbcs\u201d",
      "title": "C&C++"
    },
    {
      "answer": "\u4e8c\u5206\u67e5\u627e\u5b8c\u6574\u4ee3\u7801\uff1a\n#include<iostream>\nusing namespace std;\n\nvoid * bsearch(const void *key, const void *base, size_t nel, size_t width, int (*cmp)(const void *, const void *)){\n    void *mid = NULL;\n    int sign;\n    while (nel > 0) {\n        \n        mid = (char *)base + width*(nel/2);\n        sign = cmp(key, mid);\n        if (sign == 0) return mid;//\u627e\u5230 \n        if (nel == 1) break;\n        else if (sign < 0)\n            nel /= 2;//\u4e0b\u53d6\u6574 \n        else {\n            base = mid;\n            nel -= nel/2;//\u4e0a\u53d6\u6574 \n        }\n        \n    }\n    return NULL;\n}\n\nint compare(const void *val1, const void *val2) {\n    int iVal1 = *(int*)val1;\n    int iVal2 = *(int*)val2;\n    if (iVal1 > iVal2) {\n        return 1;\n    }\n    else if (iVal1 == iVal2) {\n        return 0;\n    }\n    return -1;\n}\n\n\u6d4b\u8bd5\u7528\u4f8b\uff1a\nint main(){\n\n    int a[10]={1, 2, 5, 8, 10, 11,12,13,14,15};\n    int key = 5;\n    \n    void* res = bsearch(&key, a, 10, sizeof(int), compare);\n    if(res != NULL){\n        cout << \"\u7d22\u5f15\u4f4d\u7f6e\uff1a\" << (int *)res - a;\n    }\n    return 0;\n}",
      "ID": "55f2e51de4b0152a61143348",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4e8c\u5206\u67e5\u627e\u662f\u5e38\u7528\u7684\u7f16\u7a0b\u65b9\u6cd5\uff0c\u8bf7\u7528\u5b8c\u6574\u4ee3\u7801\u5b9e\u73b0\u8be5\u51fd\u6570\uff08\u4e0d\u8bb8\u8c03\u7528\u5e93\u51fd\u6570\uff09\nvoid *bsearch(const void *key, const void *base, size_t nel, size_t width, int (*compar) (const void *, const void *));",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7f7",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "*(a[1]+1)",
      "optionC": "*(&a[1]+1)",
      "optionAnswer": "C",
      "answer": "\u5728\u4e8c\u7ef4\u6570\u7ec4\u4e2da[1]\u8868\u793a\u7684\u662fa[1][0]\u7684\u5730\u5740\uff0c\u6570\u7ec4\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u5b58\u50a8\uff0c\u6240\u4ee5a[1]+1\u8868\u793a\u7684\u662fa[1][1]\u7684\u5730\u5740\uff0c\u6240\u4ee5D\u53ef\u4ee5\u53d6\u5f97\u6b63\u786e\u7684\u503c\uff1b\n\u6307\u9488\u64cd\u4f5c*(a+1)\u4e0ea[1]\u7b49\u4ef7\uff0c\u6240\u4ee5B\u4e5f\u53ef\u4ee5\u53d6\u5f97\u6b63\u786e\u7684\u503c\uff1b\n\u4e8c\u7ef4\u6570\u7ec4\u5728\u5185\u5b58\u4e2d\u662f\u884c\u4f18\u5148\u5b58\u50a8\u7684\uff0c\u6240\u4ee5A\u4e2da[0][0]\u7684\u5730\u5740\u52a05\u53ef\u4ee5\u53d6\u5f97\u6b63\u786e\u503c\uff1b\nC\u9009\u9879\u9519\u8bef\uff0c\u5e94\u6539\u4e3a*(&a[1][0]+1)\uff0c\u56e0\u4e3aa[1]\u5c31\u8868\u793aa[1][0]\u7684\u5730\u5740\u3002",
      "optionB": "*(*(a+1)+1)",
      "type": "1",
      "optionA": "*(&a[0][0]+5)",
      "question": "int a[3][4]\uff0c\u4e0b\u9762\u54ea\u4e2a\u4e0d\u80fd\u8868\u793a a[1][1]?",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c04",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "register",
      "optionC": "cpu",
      "optionAnswer": "A",
      "answer": "extern\u7528\u4e8e\u58f0\u660e\u5916\u90e8\u53d8\u91cf\u7684\u3002register\u58f0\u660e\u5bc4\u5b58\u5668\u7c7b\u578b\u53d8\u91cf\u3002\u65e0cpu\u7c7b\u578b\u3002\u5b83\u4eec\u90fd\u4e0d\u80fd\u58f0\n\u660e\u7c7b\u6210\u5458\u3002public\u58f0\u660e\u4e3a\u516c\u6709\u8bbf\u95ee\u6743\u9650\uff0c\u6240\u4ee5\u9009\u62e9A\u9879",
      "optionB": "extern",
      "type": "1",
      "optionA": "public",
      "question": "\u5728\u7c7b\u4e2d\u8bf4\u660e\u7684\u6210\u5458\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u5b57\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c63",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u65e2\u8c03\u7528\u7c7bA\u4e2d\u51fd\u6570\uff0c\u4e5f\u8c03\u7528\u7c7bB\u4e2d\u7684\u51fd\u6570",
      "optionC": "\u6839\u636ep\u6240\u6307\u7684\u5bf9\u8c61\u7c7b\u578b\u800c\u786e\u5b9a\u8c03\u7528\u7c7bA\u4e2d\u6216\u7c7bB\u4e2d\u7684\u51fd\u6570func()",
      "optionAnswer": "A",
      "answer": "\u6307\u5411\u7c7b\u6210\u5458\u6307\u9488\u7684\u4f7f\u7528\uff0cA::func()\u662f\u660e\u786e\u8c03\u7528A\u7c7b\u7684func\u51fd\u6570\uff0c\u6240\u4ee5\u4e0d\u7ba1p\u6307\u5411\u57fa\n\u7c7b\u6216\u8005\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u90fd\u6267\u884c\u57fa\u7c7b\u865a\u51fd\u6570\u3002\u6ce8\u610fp->A::func()\u548cp->fun();\u8fdb\u884c\u533a\u5206\u3002\u5982\u679c\u4f7f\u7528p-\n>fun()\uff0c\u56e0\u4e3ap\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u7531\u52a8\u6001\u591a\u6001\u6027\u53ef\u77e5\u8981\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u865a\u51fd\u6570\u3002",
      "optionB": "\u8c03\u7528\u7c7bB\u4e2d\u7684\u51fd\u6570func()",
      "type": "1",
      "optionA": "\u8c03\u7528\u7c7bA\u4e2d\u7684\u51fd\u6570func()",
      "question": "\u7c7bB\u662f\u7c7bA\u7684\u516c\u6709\u6d3e\u751f\u7c7b\uff0c\u7c7bA\u548c\u7c7bB\u4e2d\u90fd\u5b9a\u4e49\u4e86\u865a\u51fd\u6570func(),p\u662f\u4e00\u4e2a\u6307\u5411\u7c7bA\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u5219p->A::func()\u5c06\uff08",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143271",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "11,16",
      "optionC": "16,12",
      "optionAnswer": "C",
      "answer": "\u8fd9\u7c7b\u9898\u76ee\u8003\u5bdf\u7684\u662f\u5185\u5b58\u5bf9\u9f50\uff1a\n\u7ed3\u6784\u4f53(struct)(\u6216\u8054\u5408\u4f53(union))\u7684\u6570\u636e\u6210\u5458\uff0c\u6bcf\u4e2a\u6570\u636e\u6210\u5458\u7684\u5bf9\u9f50\u6309\u7167\u7f16\u8bd1\u9009\u9879\u6307\u5b9a\u7684\u6570\u636e\u6210\u5458\u81ea\u8eab\u957f\u5ea6\u4e2d\uff0c\u6700\u957f\u7684\u90a3\u4e2a\u3002\nA\uff1a\n4\uff08int\uff09+4\uff08short\u4e0d\u591f4\uff0c\u88652\uff09+4(int)+4(char \u4e0d\u591f4\uff0c\u88653) = 16\nB\uff1a\n4\uff08int\uff09+4(char \u4e3a1\uff0cshort\u4e3a2 \uff0c\u88651)+4\uff08int\uff09 = 12",
      "optionB": "13,12",
      "type": "1",
      "optionA": "16,16",
      "question": "\u572832\u4f4d\u7cfb\u7edf\u73af\u5883\uff0c\u7f16\u8bd1\u9009\u9879\u4e3a4\u5b57\u8282\u5bf9\u9f50\uff0c\u90a3\u4e48sizeof(A)\u548csizeof(B)\u662f\uff1a \n\nstruct A\n{\n int a;\n short b;\n int c;\n char d;\n};\nstruct B\n{\n int a;\n short b;\n char c;\n int d;\n};",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c13",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u57fa\u7c7b\u7684\u516c\u6709\u6210\u5458\u5728\u6d3e\u751f\u7c7b\u4e2d\u4ecd\u7136\u662f\u516c\u6709\u7684",
      "optionC": "\u8d4b\u503c\u517c\u5bb9\u89c4\u5219\u4e5f\u9002\u7528\u4e8e\u591a\u91cd\u7ee7\u627f\u7684\u7ec4\u5408",
      "optionAnswer": "D",
      "answer": "\u7ee7\u627f\u65b9\u5f0f\u6709\u4e09\u79cd\uff1a\u516c\u6709\u3001\u79c1\u6709\u548c\u4fdd\u62a4\u3002\u591a\u7ee7\u627f\u4e2d\uff0c\u591a\u4e2a\u57fa\u7c7b\u5177\u6709\u540c\u540d\u6210\u5458\uff0c\u5728\u5b83\u4eec\n\u7684\u5b50\u7c7b\u4e2d\u8bbf\u95ee\u8fd9\u4e9b\u6210\u5458\uff0c\u5c31\u4ea7\u751f\u4e86\u4e8c\u4e49\u6027\uff0c\u4f46\u8fdb\u884c\u8bbf\u95ee\u65f6\uff0c\u4e0d\u80fd\u5b58\u5728\u4e8c\u4e49\u6027\u3002\u8d4b\u503c\u517c\u5bb9\u89c4\u5219\u662f\u6307\n\u6d3e\u751f\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u5f53\u4f5c\u57fa\u7c7b\u5bf9\u8c61\u4f7f\u7528\uff0c\u53ea\u8981\u5b58\u5728\u7ee7\u627f\u5173\u7cfb\uff0c\u6240\u4ee5\u5355\u7ee7\u627f\u6216\u591a\u7ee7\u627f\u90fd\u9002\u7528\u3002\u57fa\u7c7b\u4e2d\u7684\n\u516c\u6709\u6210\u5458\u91c7\u7528\u79c1\u6709\u7ee7\u627f\u65f6\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u53d8\u6210\u4e86\u79c1\u6709\u6210\u5458\uff0c\u6240\u4ee5D\u9879\u9519\u8bef\u3002",
      "optionB": "\u5bf9\u57fa\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u5fc5\u987b\u662f\u65e0\u4e8c\u4e49\u6027\u7684",
      "type": "1",
      "optionA": "\u6d3e\u751f\u7c7b\u4e00\u822c\u90fd\u7528\u516c\u6709\u6d3e\u751f",
      "question": "\u4e0b\u9762\u53d9\u8ff0\u4e0d\u6b63\u786e\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143201",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u62bd\u8c61\u7c7b",
      "optionC": "\u53cb\u5143",
      "optionAnswer": "B",
      "answer": "c\u7528\u5b8f\u5b9a\u4e49\uff0cc++\u7528inline",
      "optionB": "\u5185\u8054\u51fd\u6570",
      "type": "1",
      "optionA": "\u865a\u51fd\u6570",
      "question": "\u5bf9\u4e8e\u4e00\u4e2a\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570,\u5728C\u8bed\u8a00\u4e2d\u7528\u5b8f\u5b9e\u73b0,\u5728C++\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0?",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de80b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6ce8\u91ca\u5934\u6587\u4ef6",
      "optionC": "\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528",
      "optionAnswer": "C",
      "answer": "(1)\u7b54\uff1a\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528 \n(2)\u7b54\uff1a\u524d\u8005\u7528\u6765\u5305\u542b\u5f00\u53d1\u73af\u5883\u63d0\u4f9b\u7684\u5e93\u5934\u6587\u4ef6\uff0c\u540e\u8005\u7528\u6765\u5305\u542b\u81ea\u5df1\u7f16\u5199\u7684\u5934\u6587\u4ef6\u3002 \n(3)\u7b54\uff1a\u51fd\u6570\u548c\u53d8\u91cf\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u88abextern \"C\"\u4fee\u9970\u7684\u53d8\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684\u3002\u7531\u4e8e\u7f16\u8bd1\u540e\u7684\u540d\u5b57\u4e0d\u540c\uff0cC++\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528C \u51fd\u6570\u3002C++\u63d0\u4f9b\u4e86\u4e00\u4e2aC \u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \n(4)\u7b54\uff1a\u5b9e\u578b",
      "optionB": "\u6807\u8bb0\u4e3a\u7279\u6b8a\u7684\u5934\u6587\u4ef6",
      "type": "1",
      "optionA": "\u5b9a\u4e49\u5e38\u91cf",
      "question": "\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55e429cfe4b0152a610c833a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "1",
      "optionC": "0",
      "optionAnswer": "B",
      "answer": "\u8fd0\u884c\u53ef\u77e5",
      "optionB": "-1",
      "type": "1",
      "optionA": "-2",
      "question": "Initialize integer i as 0, what's the value of i after the following operation?  i += i > 0 ? i++ : i --;  ",
      "title": "C&C++"
    },
    {
      "answer": "1\uff0c\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u53ef\u4ee5\u662f\u865a\u51fd\u6570\uff0c\u56e0\u4e3a\u9759\u6001\u6210\u5458\u51fd\u6570\u5168\u5c40\u901a\u7528\uff0c\u4e0d\u53d7\u9650\u4e8e\u67d0\u4e2a\u5177\u4f53\u5bf9\u8c61\n2\uff0c\u6784\u9020\u51fd\u6570\u4e0d\u53ef\u4ee5\u662f\u865a\u51fd\u6570\uff0c\u865a\u51fd\u6570\u4e3b\u8981\u662f\u9488\u5bf9\u5bf9\u8c61\u800c\u8a00\uff0c\u800c\u6784\u9020\u51fd\u6570\u662f\u5728\u5bf9\u8c61\u521b\u5efa\u4e4b\u524d\uff0c\u6240\u4ee5\u6784\u9020\u51fd\u6570\u7684\u865a\u51fd\u6570\u662f\u6ca1\u6709\u610f\u4e49\u7684\n3\uff0c\u5185\u8054\u51fd\u6570\u4e0d\u53ef\u4ee5\u662f\u865a\u51fd\u6570\uff0c\u56e0\u4e3a\u5185\u8054\u51fd\u6570\u4e0d\u80fd\u518d\u8fd0\u884c\u4e2d\u52a8\u6001\u786e\u5b9a\u5176\u4f4d\u7f6e",
      "ID": "55f2e51ee4b0152a611433d2",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143224",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u7a0b\u5e8f\u9519\u8bef",
      "optionC": "100    500",
      "optionAnswer": "B",
      "answer": "vector erase\u4ee5\u540e\uff0citor\u5df2\u7ecf\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\u4e86\uff0c\u4e0d\u5e94\u8be5\u6267\u884citor++\uff0c\n\u5426\u5219\u4f1a\u8df3\u8fc7\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\u8fde\u7eed\u4e24\u4e2a300\u65f6\u8df3\u8fc7\u4e86\u7b2c\u4e8c\u4e2a300. \n\n\u6b63\u786e\u4ee3\u7801\u5e94\u8be5\u662f\n\nint main(void)  \n{  \n    vector<int>array;  \n    array.push_back(100);  \n    array.push_back(300);  \n    array.push_back(300);  \n    array.push_back(500);  \n    vector<int>::iterator itor;  \n    for(itor=array.begin();itor!=array.end();)  \n    {  \n        if(*itor==300)  \n        {  \n            itor = array.erase(itor);  \n        }  \n        else\n             itor++;\n    }  \n    for(itor=array.begin();itor!=array.end();itor++)  \n    {  \n        cout<<*itor<<\" \";  \n    }  \n    return 0;  \n}  ",
      "optionB": "100    300     500",
      "type": "1",
      "optionA": "100   300   300   500",
      "question": "\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a\uff1a\n\n#include \"iostream\"  \n#include \"vector\"  \nusing namespace std;  \n   \nint main(void)  \n{  \n    vector<int>array;  \n    array.push_back(100);  \n    array.push_back(300);  \n    array.push_back(300);  \n    array.push_back(500);  \n    vector<int>::iterator itor;  \n    for(itor=array.begin();itor!=array.end();itor++)  \n    {  \n        if(*itor==300)  \n        {  \n            itor = array.erase(itor);  \n        }  \n    }  \n    for(itor=array.begin();itor!=array.end();itor++)  \n    {  \n        cout<<*itor<<\" \";  \n    }  \n    return 0;  \n}  ",
      "title": "C&C++"
    },
    {
      "answer": "public void relocateList(ListNode head) {// \u5934\u7ed3\u70b9\n ListNode p1 = new ListNode(0);\n ListNode p2 = new ListNode(0);\n ListNode pre = null;\n ListNode pTemp = null;\n \n p1.next = head.next;\n p2.next = head.next;\n // \u5355\u94fe\u8868\u4e3a\u7a7a\u6216\u67093\u4e2a\u5143\u7d20\u4ee5\u5185\uff08\u5c11\u4e8e4\u4e2a\uff09\uff0c\u76f4\u63a5\u8fd4\u56de\u6b64\u5355\u94fe\u8868\u5373\u53ef\n if (head.next == null || head.next.next == null || head.next.next.next == null|| head.next.next.next.next==null)\n return;\n \n int length = 0, start2 = 0;\n // \u53d6\u5f97\u5355\u94fe\u8868\u957f\u5ea6\n while (p2.next != null) {\n length++;\n p2.next = p2.next.next;\n }// while(p2.next!=null)\n start2 = length / 2;\n p2.next = head.next;\n while (start2 > 0 && p2.next != null) {\n pre = p2.next;\n p2.next = p2.next.next;\n start2--;\n }// while(start2>0)\n \n // \u5408\u5e76\u5de6\u53f3\u534a\u533a\n pre.next = null;// \u5f97\u5230\u5de6\u534a\u533a\n start2 = length / 2;\n while (start2 > 0) {\n // \u5de6\u534a\u533a\u64cd\u4f5c\u4e0d\u7528\u53e6\u8003\u8651\uff0c\u53f3\u534a\u533a\u7684\u7ed3\u70b9\u63d2\u5165\u8fc7\u6765\u5373\u53ef\n pre = p1.next;// \u63d2\u5165\u7ed3\u70b9\u65f6\u8981\u7528\u5230pre\n p1.next = p1.next.next;\n \n // \u5904\u7406\u53f3\u534a\u533a\u7ed3\u70b9\uff0c\u5934\u63d2\u6cd5\n pTemp = p2.next;\n p2.next = p2.next.next;\n pTemp.next = p1.next;\n pre.next = pTemp;\n // p1.next = p1.next.next;\n \n start2--;\n }// while(start2>0)\n if (p2.next != null) {\n pTemp.next=p2.next;\n }// if(p2.next!=null)\n }",
      "ID": "55f2e51de4b0152a61143341",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u4e00\u4e2a\u5355\u94fe\u8868\u7684\u5934\u90e8\u8282\u70b9head\uff0c\u94fe\u8868\u957f\u5ea6\u4e3aN\u3002 \u5982\u679cN\u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u524dN/2\u4e2a\u8282\u70b9\u7b97\u4f5c\u5de6\u534a\u533a\uff0c\u540eN/2\u4e2a\u8282\u70b9\u7b97\u4f5c\u53f3\u534a\u533a\uff1b \u5982\u679cN\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u524dN/2\u4e2a\u8282\u70b9\u7b97\u4f5c\u5de6\u534a\u533a\uff0c\u540eN/2+1\u4e2a\u8282\u70b9\u7b97\u4f5c\u53f3\u534a\u533a\uff1b \u5de6\u534a\u533a\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u8bb0\u4e3aL1->L2->...\uff0c\u53f3\u534a\u533a\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u8bb0\u4e3aR1->R2->...\u3002\u8bf7\u5c06\u5355\u94fe\u8868\u8c03\u6574\u6210L1->R1->L2->R2->...\u7684\u6837\u5b50\u3002 \u4f8b\u5982\uff1a 1->2->3->4 \u8c03\u6574\u540e\uff1a1->3->2->4 1->2->3->4->5 \u8c03\u6574\u540e\uff1a1->3->2->4->5 \u8981\u6c42\uff1a\u5982\u679c\u94fe\u8868\u957f\u5ea6\u4e3aN\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8bf7\u8fbe\u5230O(N)\uff0c\u989d\u5916\u7a7a\u95f4\u590d\u6742\u5ea6\u8bf7\u8fbe\u5230O(1)",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114323d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "%",
      "optionC": "sizeof",
      "optionAnswer": "C",
      "answer": "\u5927\u90e8\u5206\u7684\u64cd\u4f5c\u7b26\u662f\u53ef\u4ee5\u88ab\u91cd\u8f7d\u7684\uff0c\u4f8b\u5916\u7684\u53ea\u6709\u201c.\u201d\u3001\u201c::\u201d\u3001\u201c?:\u201d\u548c\u201csizeof\u201d\u3002\u6ca1\u6709\u4ec0\u4e48\u975e\u7981\u6b62operator?:\u91cd\u8f7d\u7684\u7406\u7531\uff0c\u53ea\u4e0d\u8fc7\u6ca1\u6709\u5fc5\u8981\u800c\u5df2\u3002\u53e6\u5916\uff0cexpr1?expr2:expr3\u7684\u91cd\u8f7d\u51fd\u6570\u65e0\u6cd5\u4fdd\u8bc1expr2\u548cexpr3\u4e2d\u53ea\u6709\u4e00\u4e2a\u88ab\u6267\u884c\u3002\n\u800c\u201csizeof\u201d\u65e0\u6cd5\u88ab\u91cd\u8f7d\u662f\u56e0\u4e3a\u4e0d\u5c11\u5185\u90e8\u64cd\u4f5c\uff0c\u6bd4\u5982\u6307\u9488\u52a0\u6cd5\uff0c\u90fd\u4f9d\u8d56\u4e8e\u5b83\u3002",
      "optionB": "<",
      "type": "1",
      "optionA": "=",
      "question": "\u4e0b\u9762\u54ea\u4e2a\u64cd\u4f5c\u7b26\u4e0d\u80fd\u91cd\u8f7d\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "1",
      "ID": "55f2e51ce4b0152a61143336",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "123456789101112...2014\u9664\u4ee59\u7684\u4f59\u6570\u662f",
      "title": "C&C++"
    },
    {
      "answer": "1\uff09 \u901a\u8fc7\u4fee\u6539A B\u63a9\u7801\u4f7f\u5f97\u5b83\u4eec\u80fd\u4e92\u76f8\u901a\u4fe1\u7684\u8bdd\uff0c\u53ea\u9700\u8981AB \u540c\u5728\u4e00\u4e2a\u5b50\u7f51\u3002\u56e0\u6b64A \u548cB \u7684\u63a9\u7801\u4e3a255.255.252.0   \uff0c C\u4e0d\u53d8\n2\uff09A\u7684IP \u5730\u5740\u4fee\u6539\u4e3a\u4e0eB \u540c\u4e00\u4e2a\u7f51\u6bb5\uff0c\u5982192.168.2.3",
      "ID": "55f2e51de4b0152a61143399",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\uff08\u7cfb\u7edf\u8fd0\u7ef4\u9009\u505a\uff09\u6709\u4e3b\u673aA\u3001B\u3001C\u901a\u8fc7eth0\u548c\u540c\u4e00\u4e2a\u4ea4\u6362\u673a\u76f8\u8fde\uff0cA\u7684IP\u5730\u5740\u4e3a192.168.1.2\uff0c\u5b50\u7f51\u63a9\u7801255.255.255.0\uff0cB\u7684IP\u5730\u5740\u4e3a192.168.2.2\uff0c\u5b50\u7f51\u63a9\u7801255.255.255.0\uff0cC\u7684IP\u5730\u5740\u4e3a192.168.4.2\uff0c\u5b50\u7f51\u63a9\u7801255.255.255.0\u3002\u73b0\u5e0c\u671bA\u548cB\u80fd\u591f\u901a\u4fe1\uff0cA\u548cC\u3001B\u548cC\u4e0d\u80fd\u901a\u4fe1\u3002\n1\uff09\u5047\u8bbe\u80fd\u66f4\u6539A\u548cB\u7684\u5b50\u7f51\u63a9\u7801\uff0c\u8981\u5982\u4f55\u8bbe\u7f6eA\u548cB\u7684\u5b50\u7f51\u63a9\u7801\uff1f\n2\uff09\u5982\u679c\u4e0d\u80fd\u66f4\u6539\u5b50\u7f51\u63a9\u7801\uff0c\u9700\u8981\u5728A\u548cB\u505a\u4ec0\u4e48\u8bbe\u7f6e\uff1f\n3\uff09A\u548cB\u901a\u4fe1\u65f6\uff0cC\u662f\u5426\u80fd\u591f\u901a\u8fc7sniffer\u622a\u83b7A\u548cB\u901a\u4fe1\u7684\u62a5\u6587\uff0c\u5982\u679c\u53ea\u80fd\u622a\u83b7\u4e00\u90e8\u5206\u62a5\u6587\uff0c\u662f\u54ea\u4e00\u7c7b\u62a5\u6587\uff1f \n4\uff09C\u53ef\u4ee5\u4ec5\u901a\u8fc7sniffer\u5f97\u77e5A\u548cB\u7684IP\u5730\u5740\u548cMAC\u5730\u5740\u5417\uff1f\u5982\u679c\u80fd\uff0c\u5982\u4f55\u83b7\u5f97\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "void memcpy(const char* src,char* dest){   \n int len=strlen(src);    \ndest=(char*)malloc(len+1);    \nchar* d=dest;    \nchar* s=src;    \nwhile(len--!=0)\n{        \n*d=*s;        \nd++;       \n s++;    \n}\n*d=\u2019\\0\u2019;\n}",
      "ID": "55f2e51ce4b0152a61143329",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bf7\u627e\u51fa\u4e0b\u9762\u7528\u4e8e\u62f7\u8d1d\u5185\u5b58\u7684\u4ee3\u7801\u4e2d\u7684\u903b\u8f91\u9519\u8bef\uff0c\u5e76\u4fee\u6b63\u3002void memcpy(const char* src,char* dest){\n    int len=strlen(src);\n    dest=(char*)malloc(len);\n    char* d=dest;\n    char* s=src;\n    while(len--!=0){\n        *d=*s;\n        d++;\n        s++;\n    }\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fde4b0152a611431eb",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "40",
      "optionC": "30",
      "optionAnswer": "C",
      "answer": "\u56e0\u4e3a\u6307\u9488\u53d8\u91cfp\u7684\u521d\u59cb\u503c\u6307\u5411\u6570\u7ec4a,\u6240\u4ee5\u6267\u884cfor\u5faa\u73af\u8bed\u53e5\u540e,\u6570\u7ec4a\u4e2d\u7684\u5143\u7d20\u7684\u503c\u4e0d\u53d8\u3002\u56e0\u6b64C\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "20",
      "type": "1",
      "optionA": "10",
      "question": "#include <stdio.h>\nmain( )\n{\n    int a [ ] \uff1d\uff5b10,20,30,40\uff5d,\ufe61p \uff1d a,i;\n    for(i \uff1d 0;i <\uff1d 3;i + +)\n    {\n        a [i]\uff1d\ufe61p;p + +;\n    }\n    printf(\"%d\uff3cn\",a [2]);\n} \n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u5047\u8bbe\u6bcf\u4e2a\u7f51\u9875\u6709\u4ef7\u503c\u4e3awi.\nwi\u7684\u503c\u4e3a\u6d6e\u70b9\u6570,\u901a\u8fc7\u5806\u5b9e\u73b0.\nwi\u4e3a\u6574\u6570,\u5219\u901a\u8fc7\u6876\u5f0f\u6392\u5e8f\u8bb0\u5f55\u6bcf\u4e2a\u4ef7\u503c\u5bf9\u5e94\u7684\u7f51\u9875\u6570\u91cf",
      "ID": "55f2e51ee4b0152a611433a1",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u767e\u5ea6Spider\u5982\u4f55\u5728\u4e0d\u8d85\u8fc7\u6293\u53d6\u9650\u989d\u7684\u60c5\u51b5\u4e0b\u4f7f\u5f97\u6293\u53d6\u7684\u7f51\u9875\u4ef7\u503c\u4e4b\u548c\u6700\u5927\uff0c\u8981\u6c42\u4e00\u4e2a\u6700\u4f73\u6293\u53d6\u65b9\u6848\u3002\u8bf7\u8be6\u7ec6\u63cf\u8ff0\u4f60\u7684\u7b97\u6cd5\u601d\u8def\uff08\u53ef\u4ee5\u7528\u4f2a\u4ee3\u7801\uff09\uff0c\u5e76\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143273",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "8,80",
      "optionC": "10,10",
      "optionAnswer": "B",
      "answer": "char *p[10] \u662f\u6307\u9488\u6570\u7ec4,\u6570\u7ec4\u91cc\u5b58\u653e\u4e8610\u4e2a\u6307\u9488,\u572864\u4f4d\u7cfb\u7edf\u4e0b\u6307\u9488\u53608\u4e2a\u5b57\u8282,\u6240\u4ee5sizeof(p) = 10 * 8 = 80.\nchar (*p1)[10]\u662f\u6570\u7ec4\u6307\u9488,p1\u662f\u4e00\u4e2a\u6307\u5411\u5b58\u653e10\u4e2achar\u7c7b\u578b\u7684\u6570\u7ec4\u7684\u6307\u9488,\u6240\u4ee5sizeof(p1) = 8.",
      "optionB": "80,8",
      "type": "1",
      "optionA": "4,40",
      "question": "\u572864\u4f4d\u7cfb\u7edf\u4e0b\uff0c\u5206\u522b\u5b9a\u4e49\u5982\u4e0b\u4e24\u4e2a\u53d8\u91cf\uff1achar *p[10]; char(*p1)[10];\u8bf7\u95ee\uff0csizeof(p)\u548csizeof (p1)\u5206\u522b\u503c\u4e3a____\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u5148\u6765\u4e2a3*3\n\n8 1 6\n3 5 7\n4 9 2\n\n\n\nn\u5947\u6570\u5e7b\u65b9\u53e3\u8bc0\uff1a\n1. \u6570\u5b571\u653e\u5728\u7b2c\u4e00\u884c\u4e2d\u95f4\n2. \u4f9d\u6b21\u653e\u5728\u4e0a\u4e00\u4e2a\u6570\u7684\u53f3\u4e0a\u89d2\n2.1\u5982\u679c\u53f3\u8fb9\u51fa\u53bb\u4e86\u5c31\u56de\u5230\u5de6\u8fb9\uff083\uff0c4\uff09\n2.2 \u5982\u679c\u4e0a\u9762\u51fa\u53bb\u4e86\u5c31\u653e\u4e0b\u9762\uff081\uff0c2\uff09\n2.3 \u5982\u679c\u53f3\u4e0a\u89d2\u6709\u4e86\u5c31\u653e\u5728\u8fd9\u4e2a\u6570\u7684\u4e0b\u9762\uff08\u53c2\u80035\uff0c6\uff09\n\n5*5\n17 24 1 8 15\n23 5 7 14 16\n4 6 13 20 22\n10 12 19 21 3\n11 18 25 2 9\n",
      "ID": "55f2e51de4b0152a61143376",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u4e00\u4e2a\u5947\u6570n\uff0c\u6bd4\u5982n=3\uff0c\u751f\u62101\u5230n\u5e73\u65b9\u7684\u6570\uff0c\u59821\u52309\uff0c\u586b\u5165\u4e5d\u5bab\u683c\uff0c\u4f7f\u5f97\u6a2a\u7ad6\u659c\u7684\u548c\u90fd\u76f8\u7b49\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143251",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "11",
      "optionC": "1",
      "optionAnswer": "B",
      "answer": "\u5c31\u662fa[1][1]",
      "optionB": "9",
      "type": "1",
      "optionA": "7",
      "question": "\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002\n\nvoid fut(int**s,int p[2][3]) {\n    **s=p[1][1];\n}\nvoid main( ) {\n    int a[2][3]={1,3,5,7,9,11},*p;\n    p=(int*)malloc(sizeof(int));\n    fut(&p,a);\n    cout<< *p;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143263",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "1000+10i+5j",
      "optionC": "1000+5i+j",
      "optionAnswer": "C",
      "answer": "\u56e0\u4e3a\u662f5\u521710\u884c\u7684\u6570\u7ec4\uff0c\u800c\u4e14\u5206\u914d\u5185\u5b58\u5730\u5740\u662f\u8fde\u7eed\u7684\uff0c\u5982\u679c\u6309\u884c\u5b58\u50a8\u7684\uff0c\u5219\u6bcf\u589e\u52a01\u884c\u5730\u5740\u5c31\u4f1a\u589e\u52a05\uff0c\u7136\u540e\u52a0\u4e0a\u6240\u5728\u7684\u5217\u5c31\u662f\u5f53\u524d\u7684\u5730\u5740\uff0c\u6240\u4ee5\u5c31\u662f1000+5i+j",
      "optionB": "1000+i+j",
      "type": "1",
      "optionA": "1000+10i+j",
      "question": "\u6709\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4A[10][5]\uff0c\u6bcf\u4e2a\u6570\u636e\u5143\u7d20\u53601\u4e2a\u5b57\u8282\uff0c\u4e14A[0][0]\u7684\u5b58\u50a8\u5730\u5740\u662f1000\uff0c\u5219A[i][j]\u7684\u5730\u5740\u662f\u591a\u5c11 \uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u6574\u4e2a\u6570\u7ec4\u6700\u5927\u503c\u8981\u4e48\u5728\u5de6\uff0c\u8981\u4e48\u5728\u53f3\u3002\n\u82e5\u5728\u5de6\uff0c\u8981\u5f97\u5230\u7ed3\u679c\uff0c\u5219\u8981\u6c42\u5206\u5f00\u540e\u53f3\u8fb9\u6570\u7ec4\u7684\u6700\u5927\u503c\u5c3d\u91cf\u5c0f\uff0c\u663e\u7136max(a,b,c) >= a (or b, c),\u56e0\u800c\u53f3\u8fb9\u6570\u7ec4\u53ea\u5305\u542b\u6700\u53f3\u5143\u7d20\u65f6\u53f3\u8fb9\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002\n\u82e5\u5728\u53f3\uff0c\u7c7b\u4f3c\u3002\n\u5bf9\u4e24\u79cd\u60c5\u51b5\u52a0\u4e2a\u5224\u65ad\uff0c\u5f97\u5230\u6700\u4f18\u89e3\u3002\n\nclass Solution {\npublic:\n /**\n *  \u6c42\u5de6\u90e8\u5206\u4e2d\u7684\u6700\u5927\u503c\u51cf\u53bb\u53f3\u90e8\u5206\u6700\u5927\u503c\u7684\u7edd\u5bf9\u503c\n *  vec: \u8f93\u5165\u6570\u7ec4\n *  len vec\u7684\u957f\u5ea6\n *  \u8fd4\u56de\uff1a\u5de6\u90e8\u5206\u4e2d\u7684\u6700\u5927\u503c\u51cf\u53bb\u53f3\u90e8\u5206\u6700\u5927\u503c\u7684\u7edd\u5bf9\u503c    */\n \n int getMaxABSLeftAndRight(vector<int> vec, int len) {\n if (len == 0) {\n return 0;\n }         \n int max = vec[0];    \n for (int i = 1; i < len; i++) {\n if (vec[i] > max) {\n max = vec[i];\n }\n }         \n return max - (vec[0] < vec[len - 1] ? vec[0] : vec[len - 1]);\n }\n};",
      "ID": "55f2e51de4b0152a61143340",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3aN\u7684\u6574\u578b\u6570\u7ec4arr\uff0c\u53ef\u4ee5\u5212\u5206\u6210\u5de6\u53f3\u4e24\u4e2a\u90e8\u5206\uff1a \u5de6\u90e8\u5206arr[0..K]\uff0c\u53f3\u90e8\u5206arr[K+1..arr.length-1]\uff0cK\u53ef\u4ee5\u53d6\u503c\u7684\u8303\u56f4\u662f[0,arr.length-2] \u6c42\u8fd9\u4e48\u591a\u5212\u5206\u65b9\u6848\u4e2d\uff0c\u5de6\u90e8\u5206\u4e2d\u7684\u6700\u5927\u503c\u51cf\u53bb\u53f3\u90e8\u5206\u6700\u5927\u503c\u7684\u7edd\u5bf9\u503c\uff0c\u6700\u5927\u662f\u591a\u5c11\uff1f \u4f8b\u5982\uff1a [2,7,3,1,1] \u5f53\u5de6\u90e8\u5206\u4e3a[2,7]\uff0c\u53f3\u90e8\u5206\u4e3a[3,1,1]\u65f6\uff0c\u5de6\u90e8\u5206\u4e2d\u7684\u6700\u5927\u503c\u51cf\u53bb\u53f3\u90e8\u5206\u6700\u5927\u503c\u7684\u7edd\u5bf9\u503c\u4e3a4; \u5f53\u5de6\u90e8\u5206\u4e3a[2,7,3]\uff0c\u53f3\u90e8\u5206\u4e3a[1,1]\u65f6\uff0c\u5de6\u90e8\u5206\u4e2d\u7684\u6700\u5927\u503c\u51cf\u53bb\u53f3\u90e8\u5206\u6700\u5927\u503c\u7684\u7edd\u5bf9\u503c\u4e3a6; \u6700\u540e\u8fd4\u56de\u7684\u7ed3\u679c\u4e3a6\u3002 \u6ce8\u610f\uff1a\u5982\u679c\u6570\u7ec4\u7684\u957f\u5ea6\u4e3aN\uff0c\u8bf7\u5c3d\u91cf\u505a\u5230\u65f6\u95f4\u590d\u6742\u5ea6O(N)\uff0c\u989d\u5916\u7a7a\u95f4\u590d\u6742\u5ea6O(1)",
      "title": "C&C++"
    },
    {
      "answer": "WM_QUIT\u901a\u77e5\u7a0b\u5e8f\u9000\u51fa\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u4f1a\u6709\u4e00\u4e2a\u5faa\u73af\u5982\u4e0b\uff1a\n    while(GetMessage(......))\n    {\n        TranslateMessage(&msg);\n        DispatchMessage(&msg);\n    }\n    \u5982\u679cGetMessage\u83b7\u5f97\u7684\u662fWM_QUIT\u6d88\u606f\uff0cGetMessage\u4fbf\u4f1a\u8fd4\u56deFALSE\uff0c\u5bfc\u81f4while\u5faa\u73af\u9000\u51fa\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u4e5f\u4f1a\u9000\u51fa\u3002windows\u7a97\u53e3\u4e0d\u4f1a\u53d7\u5230WM_QUIT\u6d88\u606f\u3002\n     \n    \u666e\u901aWindows\u7a97\u53e3\u80fd\u6536\u5230\u7684\u6700\u540e\u4e00\u6761\u6d88\u606f\u65f6WM_DESTROY\u3002",
      "ID": "55f2e51ce4b0152a6114333b",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "WM_QUIT\u6d88\u606f\u7684\u7528\u9014\u662f\u4ec0\u4e48\uff1f\u4e00\u4e2a\u666e\u901a\u7684Windows\u7a97\u53e3\u80fd\u6536\u5230\u7684\u6700\u540e\u4e00\u6761\u6d88\u606f\u662f\u4ec0\u4e48\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143150",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "0X0000001",
      "optionC": "0xFE79DBF7",
      "optionAnswer": "A",
      "answer": "\u6362\u6210\u4e8c\u8fdb\u5236\u6c42\u5f02\u6216",
      "optionB": "0xAC308800",
      "type": "1",
      "optionA": "0x524953f7",
      "question": "\u6574\u6570int i = 0xFE78DA45; int k = 0xAC3189B2;\u5219i^k\u7684\u503c\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de802",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "8",
      "optionC": "2",
      "optionAnswer": "A",
      "answer": "\u6570\u7ec4\u4e3a3\u884c4\u5217\u5982\u4e0b\n3 4 0 0\n2 8 6 0\n0 0 0 0\na[1][2]\u6c42\u7684\u662f\u7b2c\u4e8c\u884c\u7b2c\u4e09\u5217\u7684\u503c\uff0c\u6240\u4ee5\u4e3a6",
      "optionB": "4",
      "type": "1",
      "optionA": "6",
      "question": "\u5047\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u7684\u5b9a\u4e49\u8bed\u53e5\u4e3a\u201cint a[3][4]={{3,4},{2,8,6}};\u201d\uff0c\u5219\u5143\u7d20a[1][2]\u7684\u503c\u4e3a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114326d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "Long long",
      "optionC": "Unsigned int",
      "optionAnswer": "D",
      "answer": "long long\u662f8\u4e2a",
      "optionB": "Int C long",
      "type": "1",
      "optionA": "short int",
      "question": "\u5728 32 \u4f4d\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u4e0b\u5217\u7c7b\u578b\u5360\u7528 8 \u4e2a\u5b57\u7b26\u7684\u4e3a______\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143220",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "int ((int *)[10])*p",
      "optionC": "int (*(*p)[10])(int *)",
      "optionAnswer": "C",
      "answer": "\u5148\u770b\u672a\u5b9a\u4e49\u6807\u8bc6\u7b26p\uff0cp\u7684\u5de6\u8fb9\u662f*\uff0c*p\u8868\u793a\u4e00\u4e2a\u6307\u9488\uff0c\u8df3\u51fa\u62ec\u53f7\uff0c\u7531\u4e8e[]\u7684\u7ed3\u5408\u6027\u5927\u4e8e*\uff0c\u6240\u4ee5*p\u6307\u5411\u4e00\u4e2a\u5927\u5c0f\u4e3a10\u7684\u6570\u7ec4\uff0c\u5373(*p)[10]\u3002\u5de6\u8fb9\u53c8\u6709\u4e00\u4e2a*\u53f7\uff0c\u6d88\u91ca\u6570\u7ec4\u7684\u5143\u7d20\uff0c*(*p)[10]\u8868\u793a*p\u6307\u5411\u4e00\u4e2a\u5927\u5c0f\u4e3a10\u7684\u6570\u7ec4\uff0c\u4e14\u6bcf\u4e2a\u6570\u7ec4\u7684\u5143\u7d20\u4e3a\u4e00\u4e2a\u6307\u9488\u3002\u8df3\u51fa\u62ec\u53f7\uff0c\u6839\u636e\u53f3\u8fb9\uff08int *\uff09\u53ef\u4ee5\u5224\u65ad\uff08*(*p)[10]\uff09\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8be5\u51fd\u6570\u7684\u53c2\u6570\u662fint*,\u8fd4\u56de\u503c\u662fint\u3002\u6240\u4ee5\u9009C\u3002",
      "optionB": "int [10]*p\uff08int *\uff09",
      "type": "1",
      "optionA": "\uff08int *p[10]\uff09\uff08int*\uff09",
      "question": "\u58f0\u660e\u4e00\u4e2a\u6307\u5411\u542b\u670910\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\u7684\u6307\u9488\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662fint\uff0c\u53c2\u6570\u662fint*\uff0c\u6b63\u786e\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c25",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u53cb\u5143\u51fd\u6570\u65f6",
      "optionC": "\u5bf9\u8c61\u65f6",
      "optionAnswer": "C",
      "answer": "\u5efa\u7acb\u5bf9\u8c61\u65f6\uff0c\u81ea\u52a8\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u662f\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u7684\u3002\u800c\u6210\u5458\u51fd\u6570\u3001\u53cb\u5143\n\u51fd\u6570\uff0c\u9700\u8981\u7528\u6237\u76f4\u63a5\u8c03\u7528\uff0c\u56e0\u6b64\u9009\u62e9C\u9879\u3002",
      "optionB": "\u6570\u636e\u6210\u5458\u65f6",
      "type": "1",
      "optionA": "\u6210\u5458\u51fd\u6570\u65f6",
      "question": "\u7c7b\u7684\u6784\u9020\u51fd\u6570\u88ab\u81ea\u52a8\u8c03\u7528\u6267\u884c\u7684\u60c5\u51b5\u662f\u5728\u5b9a\u4e49\u8be5\u7c7b\u7684\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "#include <iostream>\nusing namespace std;\n#define MAXN 100\n  \nvoid dfs(int pi,int curSum,bool res[],int n,int half,int &num,int left[])\n{\n    for(int i=pi+1;i<=n;i++) { \n        res[i]=true; \n        if(curSum+left[i]=1;i--)\n            left[i]=i+left[i+1]; \n    dfs(0,0,res,n,half,cnt,left);\n    return cnt;\n}\nint main()\n{\n    int n=20;\n    int num=cal_num(n);\n    printf(\"num=%d\\n\",num);\n    return 0;\n}",
      "ID": "55f2e51de4b0152a6114338b",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5c06\u4e00\u4e2a\u96c6\u5408\u62c6\u5206\u6210\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6\uff0c\u4e24\u4e2a\u5b50\u96c6\u5143\u7d20\u4e4b\u548c\u76f8\u7b49\uff0c\u5982{1, 2, 3, 4, 5, 6, 7}\uff0c\u62c6\u5206\u6210\uff1a {2, 5, 7}, {1, 3, 4, 6} \u7ed9\u51fa\u4e00\u4e2a\u96c6\u5408\uff0c\u6c42\u6240\u6709\u7b26\u5408\u4e0a\u9762\u8981\u6c42\u7684\u62c6\u5206\uff0c\u6548\u7387\u6700\u9ad8\u5206\u8d8a\u9ad8\uff0c\u51fd\u6570\u539f\u578b\u4e3aint cal_num(int n);",
      "title": "C&C++"
    },
    {
      "answer": ">6",
      "ID": "55f2e51ce4b0152a61143333",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4e0b\u9762\u4ee3\u7801\u8f93\u51fa\u4ec0\u4e48   #include<stdio.h>\nint main( )\n{\n    unsigned int a = 6;\n    int b = -20;\n    (a + b > 6) ? printf(\">6\") : printf(\"<=6\");\n    return 0;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55e429cfe4b0152a610c833c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "O(n*n)",
      "optionC": "O(nlgn)",
      "optionAnswer": "C",
      "answer": "\u5feb\u6392\u7684\u590d\u6742\u5ea6\u4e3aC",
      "optionB": "O(n)",
      "type": "1",
      "optionA": "O(lgn)",
      "question": "The best time complexity of quick sort algorithm is:",
      "title": "C&C++"
    },
    {
      "answer": "\u8c03\u7528\u4e00\u4e2aDLL\u4e2d\u7684\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a 1\uff0e\u8f7d\u5165\u65f6\u52a8\u6001\u94fe\u63a5\uff08load-time dynamic linking\uff09\uff0c\u6a21\u5757\u975e\u5e38\u660e\u786e\u8c03\u7528\u67d0\u4e2a\u5bfc\u51fa\u51fd\u6570\uff0c\u4f7f\u5f97\u4ed6\u4eec\u5c31\u50cf\u672c\u5730\u51fd\u6570\u4e00\u6837\u3002\u8fd9\u9700\u8981\u94fe\u63a5\u65f6\u94fe\u63a5\u90a3\u4e9b\u51fd\u6570\u6240\u5728DLL\u7684\u5bfc\u5165\u5e93\uff0c\u5bfc\u5165\u5e93\u5411\u7cfb\u7edf\u63d0\u4f9b\u4e86\u8f7d\u5165DLL\u65f6\u6240\u9700\u7684\u4fe1\u606f\u53caDLL\u51fd\u6570\u5b9a\u4f4d\u3002 2\uff0e\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5\uff08run-time dynamic linking\uff09\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7LoadLibrary\u6216LoadLibraryEx\u51fd\u6570\u8f7d\u5165DLL\u3002DLL\u8f7d\u5165\u540e\uff0c\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528GetProcAddress\u83b7\u53d6DLL\u51fd\u6570\u7684\u51fa\u53e3\u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u7684\u51fd\u6570\u6307\u9488\u8c03\u7528DLL\u51fd\u6570\u4e86\u3002\u5982\u6b64\u5373\u53ef\u907f\u514d\u5bfc\u5165\u5e93\u6587\u4ef6\u4e86\u3002",
      "ID": "55f2e51ce4b0152a6114333a",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8c03\u7528\u52a8\u6001\u8fde\u63a5\u5e93\u7684\u51fd\u6570\u6709\u54ea\u51e0\u79cd\u65b9\u6cd5\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8bfc",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\uff08*x\uff09.a()",
      "optionC": "x->a",
      "optionAnswer": "B",
      "answer": "\u5bf9\u8c61\u8bbf\u95ee\u6210\u5458\u7684\u65b9\u5f0f\u4e3a\uff1a\u5bf9\u8c61\u540d.\u6210\u5458\u3002\u6307\u9488\u53ef\u4ee5\u6709\u4e24\u79cd\uff1a(*\u5bf9\u8c61\u6307\u9488).\u6210\u5458\u6216\u8005\u5bf9\n\u8c61\u6307\u9488->\u6210\u5458\u3002A\u9009\u9879\u662f\u8bbf\u95ee\u6570\u636e\u6210\u5458\uff0cB\u9879\u662f\u8bbf\u95ee\u6210\u5458\u51fd\u6570\u3002",
      "optionB": "x.a()",
      "type": "1",
      "optionA": "x.a",
      "question": "\u5047\u5b9aAA\u4e3a\u4e00\u4e2a\u7c7b\uff0ca()\u4e3a\u8be5\u7c7b\u516c\u6709\u7684\u51fd\u6570\u6210\u5458\uff0cx\u4e3a\u8be5\u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5219\u8bbf\u95eex\u5bf9\u8c61\u4e2d\u51fd\u6570\n\u6210\u5458a()\u7684\u683c\u5f0f\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143140",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5c40\u90e8\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570",
      "optionC": "\u5c40\u90e8\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570",
      "optionAnswer": "A",
      "answer": "\u5168\u5c40\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u4f1a\u5728main \u51fd\u6570\u4e4b\u524d\u6267\u884c\u3002",
      "optionB": "\u5168\u5c40\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570",
      "type": "1",
      "optionA": "\u5168\u5c40\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570",
      "question": "main \u51fd\u6570\u6267\u884c\u4ee5\u524d\uff0c\u8fd8\u4f1a\u6267\u884c\u4ec0\u4e48\u4ee3\u7801\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114326f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "12 16",
      "optionC": "9 9",
      "optionAnswer": "A",
      "answer": "\u7b54\u6848\u89e3\u6790\uff1a\u7c7b\u7684\u5927\u5c0f\u53ea\u4e0e\u6210\u5458\u53d8\u91cf\uff08\u975estatic\u6570\u636e\u6210\u5458\u53d8\u91cf\uff09\u548c\u865a\u51fd\u6570\u6307\u9488\u6709\u5173\uff0c\u8fd8\u8981\u8003\u8651\u5230\u5bf9\u9f50.\n\u90a3\u4e48\u7c7bA\u7684\u5927\u5c0f\u7b49\u4e8e4\u4e2a\u5b57\u8282 + 4\u4e2a\u5b57\u8282\uff08\u8003\u8651\u5bf9\u9f50\uff09 + 4\u4e2a\u5b57\u8282\uff08\u6307\u5411\u865a\u51fd\u6570\u7684\u6307\u9488\uff09=12\u5b57\u8282\uff1b\n\u7c7bB\u7684\u5927\u5c0f\u5c31\u662f\u7b49\u4e8e\u7c7bA\u7684\u5927\u5c0f12\u4e2a\u5b57\u8282.\n\u56e0\u4e3a\u5728\u57fa\u7c7b\u4e2d\u5b58\u5728\u865a\u51fd\u6570\u65f6\uff0c\u6d3e\u751f\u7c7b\u4f1a\u7ee7\u627f\u57fa\u7c7b\u7684\u865a\u51fd\u6570\uff0c\u56e0\u6b64\u6d3e\u751f\u7c7b\u4e2d\u4e0d\u518d\u589e\u52a0\u865a\u51fd\u6570\u7684\u5b58\u50a8\u7a7a\u95f4\uff08\u56e0\u4e3a\u6240\u6709\u7684\u865a\u51fd\u6570\u5171\u4eab\u4e00\u5757\u5185\u5b58\u533a\u57df\uff09\uff0c\u800c\u4ec5\u4ec5\u9700\u8981\u8003\u8651\u6d3e\u751f\u7c7b\u4e2d\u6dfb\u52a0\u8fdb\u6765\u7684\u975estatic\u6570\u636e\u6210\u5458\u7684\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f\u3002\u6240\u4ee5\u7c7bB\u5927\u5c0f\u4e3a12B",
      "optionB": "8 8",
      "type": "1",
      "optionA": "12 12",
      "question": "\u572832\u4f4d\u64cd\u4f5c\u7cfb\u7edfgcc\u7f16\u8bd1\u5668\u73af\u5883\u4e0b\uff0c\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u4e3a\uff08\uff09\n\n#include <iostream>\nusing namespace std;\nclass A {\npublic:\n    int b;\n    char c;\n    virtual void print() {\n        cout << \"this is father\u2019s fuction! \" << endl;\n    }\n};\nclass B: A {\npublic:\n    virtual void print() {\n        cout << \"this is children\u2019s fuction! \" << endl;\n    }\n};\nint main(int argc, char * argv[]) {\n    cout << sizeof(A) << \"\" << sizeof(B) << endl;\n    return 0;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55e429cfe4b0152a610c833e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "90",
      "optionC": "93",
      "optionAnswer": "B",
      "answer": "93 \u7684\u4e8c\u8fdb\u5236 \u4e3a01011101\n-8 \u7684\u539f\u7801\u4e3a10001000 \u8865\u7801\u4e3a11111000\n\u53d6\u4e0e\u4e3a 01011000 \u4e3a88",
      "optionB": "88",
      "type": "1",
      "optionA": "85",
      "question": "\u8fd0\u7b97\uff0893&-8\uff09\u7684\u7ed3\u679c\u4e3a?",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143144",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "I'm a Child\uff0c I like football!",
      "optionC": "I'm a Child\uff0c I like basketball!",
      "optionAnswer": "C",
      "answer": "I\u2019m a Child, I like basketball!\n\u8fd9\u9898\u52a8\u6001\u8054\u7f16\uff0cIntro()\u548cHobby()\u90fd\u662f\u865a\u51fd\u6570\u4e14\u901a\u8fc7\u6307\u9488\u8c03\u7528\uff0c\u57fa\u7c7b\u6307\u9488\u4f1a\u5411\u6d3e\u751f\u7c7b\u4e2d\u5bfb\u627e\uff0c\u627e\u5230\u540e\u6267\u884c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u8f93\u51fa\u7684\u7ed3\u679c\u662fI\u2019m a Child, I like basketball!",
      "optionB": "I'm a Parent\uff0c I like basketball!",
      "type": "1",
      "optionA": "I'm a Parent\uff0c I like football!",
      "question": "\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a\uff1a\n\nclass CParent \n{\n    public: virtual void Intro()\n    {\n        printf( \"I'm a Parent, \" ); Hobby();\n    }\n    virtual void Hobby()\n    {\n        printf( \"I like football!\" );\n    }\n}; \nclass CChild : public CParent { \n    public: virtual void Intro()\n    {\n        printf( \"I'm a Child, \" ); Hobby();\n    }\n    virtual void Hobby()\n    {\n       printf( \"I like basketball!\\n\" );\n    }\n}; \nint main( void )\n{\n    CChild *pChild = new CChild(); \n    CParent *pParent = (CParent *) pChild; \n    pParent->Intro(); \n    return(0);\n}",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c85",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51fd\u6570\u7684\u7c7b\u6a21\u677f\u53c2\u6570\u987b\u901a\u8fc7\u6784\u9020\u51fd\u6570\u5b9e\u4f8b\u5316",
      "optionC": "\u6839\u636e\u5efa\u7acb\u5bf9\u8c61\u65f6\u7684\u5b9e\u9645\u6570\u636e\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u628a\u7c7b\u6a21\u677f\u5b9e\u4f8b\u5316\u4e3a\u6a21\u677f\u7c7b",
      "optionAnswer": "B",
      "answer": "\u666e\u901a\u7c7b\u53ef\u4ee5\u4ece\u7c7b\u6a21\u677f\u6d3e\u751f\uff0c\u4f46\u4e0d\u80fd\u4ece\u666e\u901a\u7c7b\u6d3e\u751f\u51fa\u7c7b\u6a21\u677f",
      "optionB": "\u7c7b\u6a21\u677f\u4ece\u666e\u901a\u7c7b\u6d3e\u751f\uff0c\u4e5f\u53ef\u4ee5\u4ece\u7c7b\u6a21\u677f\u6d3e\u751f",
      "type": "1",
      "optionA": "\u4e00\u4e2a\u666e\u901a\u57fa\u7c7b\u4e0d\u80fd\u6d3e\u751f\u7c7b\u6a21\u677f",
      "question": "\u5173\u4e8e\u7c7b\u6a21\u677f\uff0c\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff08  \uff09",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de804",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "public\u6216private\u7684\u7c7b\u6210\u5458",
      "optionC": "public\u7684\u7c7b\u6210\u5458",
      "optionAnswer": "C",
      "answer": "public: \u516c\u6709\u8bbf\u95ee\uff0c\u7c7b\u5916\u90e8\u53ef\u8bbf\u95ee\uff1b\nprivate\uff1a\u79c1\u6709\u8bbf\u95ee\uff0c\u7c7b\u672c\u8eab\u6210\u5458\u51fd\u6570\u53ef\u8bbf\u95ee\uff1b\nprotected\uff1a\u4fdd\u62a4\u8bbf\u95ee\uff0c\u7c7b\u672c\u8eab\u4ee5\u53ca\u6d3e\u751f\u5b50\u7c7b\u53ef\u8bbf\u95ee",
      "optionB": "private\u6216protected\u7684\u7c7b\u6210\u5458",
      "type": "1",
      "optionA": "\u6240\u6709\u7c7b\u6210\u5458",
      "question": "\u7c7b\u5b9a\u4e49\u7684\u5916\u90e8\uff0c\u53ef\u4ee5\u88ab\u8bbf\u95ee\u7684\u6210\u5458\u6709\uff08 \uff09\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u7b54\uff1a\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\"::\"\n\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185\u3002",
      "ID": "55f2e51ee4b0152a611433be",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143130",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "Compile error",
      "optionC": "Garbage value",
      "optionAnswer": "C",
      "answer": "P++\u540e\uff0c\u4e0d\u6307\u5411i\u7684\u5730\u5740\uff0c\u6240\u4ee5\u672a\u77e5",
      "optionB": "12",
      "type": "1",
      "optionA": "11",
      "question": "What is output if you compile and execute the following c code?\n\nvoid main()\n{\n    int i = 11;\n    int const *p = &i;\n    p++;\n    printf(\"%d\",*p);\n}",
      "title": "C&C++"
    },
    {
      "answer": "or (int i = len-1; i>=0; i--){\n if (array[i] == i){\n //i--;\n continue;\n }\n int k = array[i];\n while (array[k] != k&&array[k] != i)\n {\n k = array[k];\n }\n  \n swap_with_zero(array, len, i);\n swap_with_zero(array, len, k);\n }",
      "ID": "55f2e51de4b0152a61143382",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u957f\u5ea6\u4e3an\u7684\u6570\u7ec4\u4e71\u5e8f\u5b58\u653e\u77400\u81f3n-1. \u73b0\u5728\u53ea\u80fd\u8fdb\u884c0\u4e0e\u5176\u4ed6\u6570\u7684\u4ea4\u6362\uff0c\u5b8c\u6210\u4ee5\u4e0b\u51fd\u6570",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143231",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "9",
      "optionC": "36",
      "optionAnswer": "C",
      "answer": "\u5c06\u5b8f\u8868\u8fbe\u5f0f\u5c55\u5f00\uff1ac = 6*6/2*2=36.",
      "optionB": "18",
      "type": "1",
      "optionA": "3",
      "question": "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f\uff1a\n#define f(x) x*x\nmain (){\n  int a=6,b=2,c;\n  c=f(a)/f(b);\n  printf(\"%d\",c);\n}",
      "title": "C&C++"
    },
    {
      "answer": "int rand7()\n{\n    int n=25;\n    while(n>21){\n        n=5*(rand5()-1)+rand5();\n    }\n    return (n%7)+1;\n}",
      "ID": "55f2e51ee4b0152a611433e5",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u80fd\u968f\u673a\u751f\u6210\u6574\u6570 1 \u5230 5 \u7684\u51fd\u6570,\u5199\u51fa\u80fd\u968f\u673a\u751f\u6210\u6574\u6570 1 \u5230 7 \u7684\u51fd\u6570\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143225",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "I'm a Child\uff0c I like football!",
      "optionC": "I'm a Child\uff0c I like basketball!",
      "optionAnswer": "C",
      "answer": "\u8f93\u51fa\uff1aI\u2019m a Child, I like basketball!\n\u8fd9\u9898\u52a8\u6001\u8054\u7f16\uff0cIntro()\u548cHobby()\u90fd\u662f\u865a\u51fd\u6570\u4e14\u901a\u8fc7\u6307\u9488\u8c03\u7528\uff0c\u57fa\u7c7b\u6307\u9488\u4f1a\u5411\u6d3e\u751f\u7c7b\u4e2d\u5bfb\u627e\uff0c\u627e\u5230\u540e\u6267\u884c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u8f93\u51fa\u7684\u7ed3\u679c\u662fI\u2019m a Child, I like basketball!",
      "optionB": "I'm a Parent\uff0c I like basketball!",
      "type": "1",
      "optionA": "I'm a Parent\uff0c I like football!",
      "question": "\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a\uff1aclass CParent \n{\n    public: virtual void Intro()\n    {\n        printf( \"I'm a Parent, \" ); Hobby();\n    }\n    virtual void Hobby()\n    {\n        printf( \"I like football!\" );\n    }\n}; \nclass CChild : public CParent { \n    public: virtual void Intro()\n    {\n        printf( \"I'm a Child, \" ); Hobby();\n    }\n    virtual void Hobby()\n    {\n       printf( \"I like basketball!\\n\" );\n    }\n}; \nint main( void )\n{\n    CChild *pChild = new CChild(); \n    CParent *pParent = (CParent *) pChild; \n    pParent->Intro(); \n    return(0);\n}",
      "title": "C&C++"
    },
    {
      "answer": "const\u5728\u524d\u5185\u5bb9\u4e0d\u80fd\u53d8,const\u5728\u6307\u9488\u540e\u5219\u6307\u9488\u4e0d\u80fd\u53d8",
      "ID": "55f2e51ee4b0152a611433db",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bf4\u660e\u4ee5\u4e0b\u5305\u542b const \u4fee\u9970\u7b26\u7684\u8bed\u53e5\u7684\u610f\u4e49\na). double * ptr=&value\uff1b\nb). const double * ptr=&value;\nc). double *constptr =&value;\nd).const double *const ptr=&value;",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143159",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "0",
      "optionC": "72",
      "optionAnswer": "B",
      "answer": "b << 8 = 0x5200\nval = 0x5200 | 0x48 = 0x5248 = 21064 ",
      "optionB": "21064",
      "type": "1",
      "optionA": "20992",
      "question": "\u4ee5\u4e0b\u4ee3\u7801\u6267\u884c\u540e\uff0cval\u7684\u503c\u662f___:\n\nunsigned long val = 0;\nchar a = 0x48;\nchar b = 0x52;\nval = b << 8 | a;",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143217",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "6\uff0c2",
      "optionC": "5\uff0c2",
      "optionAnswer": "C",
      "answer": "\u7b54\u6848\uff1aC\n\u89e3\u91ca\uff1a\u5f53\u8f93\u51652\u65f6\uff0c fun(2)\u8fd4\u56de2\uff0c\u5f88\u5bb9\u6613\u660e\u767d\u3002\n      \u5f53\u8f93\u51654\u65f6\uff0cfun(4)\u8fd4\u56de\uff1a fun(3)+fun(2) = fun(2)+fun(1)+2 = 2+1+2 = 5",
      "optionB": "4\uff0c2",
      "type": "1",
      "optionA": "5\uff0c1",
      "question": "\u5982\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\n\n#include<iostream>\nusing namespace std;\n \nlong fun(int n)\n{\n    if (n > 2)\n        return (fun(n - 1) + fun(n - 2));\n    else\n        return (n);\n}\nint main()\n{\n    int i;\n    cout << \"Needs an integer: \";\n    cin >> i; cout << endl;\n    cout << fun(i) << endl;\n}\n\u5f53\u5206\u522b\u8f93\u51654 2\u65f6\uff0c\u8f93\u51fa\u7ed3\u679c\u5206\u522b\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55e429cfe4b0152a610c8338",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "DES",
      "optionC": "RC4",
      "optionAnswer": "A",
      "answer": "MD5\u662f\u4e0d\u53ef\u9006\u52a0\u5bc6\uff0c\u4e0d\u53ef\u4ee5\u7528\u6765\u52a0\u5bc6\u6587\u672c\uff0cDES\u548cRC4\u662f\u5bf9\u79f0\u52a0\u5bc6\uff0cRSA\u662f\u4e0d\u5bf9\u79f0\u52a0\u5bc6\uff0c\u90fd\u53ef\u4ee5\u7528\u4e8e\u6587\u672c\u52a0\u5bc6\u3002",
      "optionB": "RSA",
      "type": "1",
      "optionA": "MD5",
      "question": "Which of the following method(s) CANNOT be used for Text-encryption:",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c65",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "f1\u548cf2\u90fd\u4e0d\u662f\u9759\u6001\u51fd\u6570",
      "optionC": "f1\u662f\u9759\u6001\u51fd\u6570\uff0cf2\u4e0d\u662f\u9759\u6001\u51fd\u6570",
      "optionAnswer": "C",
      "answer": "\u666e\u901a\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8c03\u7528\u9759\u6001\u51fd\u6570\uff0c\u76f8\u53cd\u9759\u6001\u51fd\u6570\u4e0d\u80fd\u8c03\u7528\u666e\u901a\u6210\u5458\u51fd\u6570\uff0c\u8fd9\u4e0e\u666e\u901a\n\u51fd\u6570\u4e0e\u5e38\u6210\u5458\u51fd\u6570\u76f8\u540c\u3002\u56e0\u6b64\u9009\u62e9C\u9879\u3002",
      "optionB": "f1\u4e0d\u662f\u9759\u6001\u51fd\u6570\uff0cf2\u662f\u9759\u6001\u51fd\u6570",
      "type": "1",
      "optionA": "f1\u548cf2\u90fd\u662f\u9759\u6001\u51fd\u6570",
      "question": "\u5df2\u77e5f1\u548cf2\u662f\u540c\u4e00\u7c7b\u7684\u4e24\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u4f46f1\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528f2\uff0c\u8fd9\u8bf4\u660e\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c5f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "pa\u662f\u4e00\u4e2a\u5177\u67095\u4e2a\u5143\u7d20\u7684\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u4e2aint\u578b\u6307\u9488",
      "optionC": "pa\uff3b5\uff3d\u8868\u793a\u67d0\u4e2a\u6570\u7ec4\u7684\u7b2c5\u4e2a\u5143\u7d20\u7684\u503c",
      "optionAnswer": "D",
      "answer": "\u6307\u9488\u6570\u7ec4\uff1a\u6570\u7ec4\u5143\u7d20\u90fd\u662f\u76f8\u540c\u7c7b\u578b\u7684\u6307\u9488\uff0c\u76f8\u540c\u7c7b\u578b\u7684\u6307\u9488\u662f\u8bf4\u6307\u9488\u6240\u6307\u5411\u7684\u5bf9\u8c61\n\u7c7b\u578b\u662f\u76f8\u540c\u7684\u3002\u4f8b\u5982\uff0c\u8bed\u53e5int *pa\uff3b5\uff3d;\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\u3002\u5728\u6307\u9488\u6570\u7ec4\u7684\u5b9a\u4e49\u4e2d\u6709\u4e24\u4e2a\u8fd0\n\u7b97\u7b26\uff1a*\u548c\uff3b\uff3d\uff0c\u8fd0\u7b97\u7b26\uff3b\uff3d\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e*\uff0c\u6240\u4ee5*pa\uff3b5\uff3d\u7b49\u4ef7\u4e8e*(pa\uff3b5\uff3d)\uff0cpa\uff3b5\uff3d\u8868\u793a\u4e00\n\u4e2a\u6570\u7ec4\uff0c\u800c*\u8868\u793a\u540e\u9762\u7684\u5bf9\u8c61\u4e3a\u6307\u9488\u53d8\u91cf\uff0c\u5408\u5728\u4e00\u8d77*pa\uff3b5\uff3d\u8868\u793a\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\u3002\u8be5\u6570\u7ec4\u5305\u542b5\u4e2a\n\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u6307\u5411int\u578b\u7684\u6307\u9488\u3002\u6240\u4ee5\u9009\u62e9D\u9009\u9879\u3002",
      "optionB": "pa\u662f\u4e00\u4e2a\u6307\u5411\u67d0\u4e2a\u6570\u7ec4\u4e2d\u7b2c5\u4e2a\u5143\u7d20\u7684\u6307\u9488\uff0c\u8be5\u5143\u7d20\u662fint\u578b\u53d8\u91cf",
      "type": "1",
      "optionA": "pa\u662f\u4e00\u4e2a\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\uff0c\u6240\u6307\u5411\u7684\u6570\u7ec4\u662f5\u4e2aint\u578b\u5143\u7d20",
      "question": "\u5bf9\u4e8eint *pa\uff3b5\uff3d;\u7684\u63cf\u8ff0\uff0c\u6b63\u786e\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "Dec-37",
      "ID": "55f2e51de4b0152a61143352",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "12\u4e2a\u5143\u7d20\u7684\u6392\u5e8f\u6570\u7ec4\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u6bcf\u4e2a\u5143\u7d20\u88ab\u67e5\u627e\u7684\u6982\u7387\u662f\u76f8\u7b49\u7684\uff0c\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\u4e3a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143136",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e0e\u7f16\u8bd1\u5668\u76f8\u5173",
      "optionC": "{0\uff0c\u4e0d\u786e\u5b9a}\uff0c{1\uff0c\u4e0d\u786e\u5b9a}",
      "optionAnswer": "B",
      "answer": "\u5982\u679c\u521d\u59cb\u5316\u65f6\u6307\u5b9a\u7684\u7684\u5143\u7d20\u4e2a\u6570\u6bd4\u6570\u7ec4\u5927\u5c0f\u5c11\uff0c?\u5269\u4e0b\u7684\u5143\u7d20\u90fd\u56de\u88ab\u521d\u59cb\u5316\u4e3a???0?\u3002",
      "optionB": "{0\uff0c0\uff0c0\uff0c0}\uff0c{1\uff0c0\uff0c0\uff0c0}",
      "type": "1",
      "optionA": "{0\uff0c0\uff0c0\uff0c0}\uff0c{1\uff0c1\uff0c1\uff0c1}",
      "question": "\u7ed9\u5b9a\u5982\u4e0b\u4ee3\u7801\uff1a int x[4]={0}; int y[4]={1}; \u6570\u7ec4x\u548cy\u7684\u503c\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a6114315c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5b8f\u66ff\u6362\u4e0d\u5360\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4",
      "optionC": "\u5b8f\u540d\u5fc5\u987b\u7528\u5927\u5199\u5b57\u6bcd\u8868\u793a",
      "optionAnswer": "D",
      "answer": "A\uff1a\u9884\u5904\u7406\u6307\u4ee4\u6307\u793a\u5728\u7a0b\u5e8f\u6b63\u5f0f\u7f16\u8bd1\u524d\u5c31\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u7684\u64cd\u4f5c,\u53ef\u653e\u5728\u7a0b\u5e8f\u4e2d\u4efb\u4f55\u4f4d\u7f6e\u3002\nB\uff1a\u6e90\u6587\u4ef6\u7684\u6bcf\u4e00\u884c\u53ea\u80fd\u6709\u4e00\u6761\u9884\u5904\u7406\u547d\u4ee4\uff0c\u5982\u679c\u6307\u4ee4\u4e00\u884c\u653e\u4e0d\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u53cd\u659c\u6760\u201c/\u201d\u8fdb\u884c\u63a7\u5236\u3002\nC\uff1a\u5b8f\u540d\u901a\u5e38\u7531\u5927\u5199\u5b57\u6bcd\u8868\u793a\uff0c\u800c\u975e\u5fc5\u987b\nD\uff1a\u5b8f\u662f\u5728\u9884\u7f16\u8bd1\u671f\u95f4\u8fdb\u884c\u7684\uff0c\u5c06\u4ee3\u7801\u4e2d\u7684\u6307\u5b9a\u5b57\u7b26\u8f6c\u6362\uff0c\u8f6c\u6362\u7ed3\u675f\u540e\uff0c\u518d\u8fdb\u884c\u7f16\u8bd1\uff0c\u6240\u4ee5\u4e0d\u5360\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4",
      "optionB": "\u5728\u6e90\u6587\u4ef6\u7684\u4e00\u884c\u4e0a\u53ef\u4ee5\u6709\u591a\u6761\u9884\u5904\u7406\u547d\u4ee4",
      "type": "1",
      "optionA": "\u9884\u5904\u7406\u547d\u4ee4\u884c\u5fc5\u987b\u4f4d\u4e8e\u6e90\u6587\u4ef6\u7684\u5f00\u5934",
      "question": "\u4e0b\u5217\u53d9\u8ff0\u6b63\u786e\u7684\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de815",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "virtual void print()\\;",
      "optionC": "virtual void print(){};",
      "optionAnswer": "B",
      "answer": "\u7eaf\u865a\u51fd\u6570\u683c\u5f0f\uff1avirtual <\u7c7b\u578b> <\u51fd\u6570\u540d> (<\u53c2\u6570\u8868>) = 0;",
      "optionB": "virtual void print()=0;",
      "type": "1",
      "optionA": "void virtual print()=0;",
      "question": "\u4e0b\u5217\u4e3a\u7eaf\u865a\u51fd\u6570\u7684\u6b63\u786e\u58f0\u660e\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114321b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "8",
      "optionC": "4",
      "optionAnswer": "D",
      "answer": "C\u672c\u9898\u8003\u67e5\u4f4d\u8fd0\u7b97< <\u3001/,\u4ee5\u53ca\u903b\u8f91\u8fd0\u7b97\u7b26||\u3002b < <2\u4e3a8,3 3||b\u4e3a1,\u6240\u4ee5\u7ed3\u679c\u4e3a8,\u6240\u4ee5D\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "2",
      "type": "1",
      "optionA": "0",
      "question": "\u82e5\u6709\u5b9a\u4e49\u8bed\u53e5\uff0cint b = 2\uff0c\u5219\u8868\u8fbe\u5f0f(b< <2)/(3||b)\u7684\u503c\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c16",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5bc4\u5b58\u5668\u53d8\u91cf",
      "optionC": "\u9759\u6001\u53d8\u91cf",
      "optionAnswer": "B",
      "answer": "\u5f62\u53c2\u6216\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u90fd\u662f\u5c40\u90e8\u53d8\u91cf\u3002\u5728\u51fd\u6570\u5916\u5b9a\u4e49\u7684\u53d8\u91cf\u662f\u5168\u5c40\u53d8\u91cf\u3002\u5f62\u53c2\u53ea\u80fd\u7528\u5c40\n\u90e8\u53d8\u91cf\uff0c\u9891\u7e41\u4f7f\u7528\u7684\u53d8\u91cf\u53ef\u4ee5\u58f0\u660e\u4e3a\u5bc4\u5b58\u5668\u53d8\u91cf\uff0c\u5f62\u53c2\u4e0d\u80fd\u4f7f\u7528\u9759\u6001\u53d8\u91cf\u6216\u5bc4\u5b58\u5668\u53d8\u91cf\u3002",
      "optionB": "\u5c40\u90e8\u53d8\u91cf",
      "type": "1",
      "optionA": "\u5168\u5c40\u53d8\u91cf",
      "question": "\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u7684\u5f62\u53c2\u5c5e\u4e8e\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8bfd",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "10\uff0c30\uff0c60",
      "optionC": "20\uff0c40\uff0c60",
      "optionAnswer": "B",
      "answer": "\u5982\u679c\u6570\u7ec4\u5143\u7d20\u90fd\u662f\u76f8\u540c\u7c7b\u578b\u7684\u6307\u9488\uff0c\u5219\u79f0\u8fd9\u4e2a\u6570\u7ec4\u4e3a\u6307\u9488\u6570\u7ec4\u3002\u6307\u9488\u6570\u7ec4\u4e00\u822c\u7528\u4e8e\u5904\u7406\u4e8c\n\u7ef4\u6570\u7ec4\u3002\u58f0\u660e\u7684\u683c\u5f0f\u4e3a\uff1a<\u6570\u636e\u7c7b\u578b><(*\u53d8\u91cf\u540d)><\uff3b\u5143\u7d20\u4e2a\u6570\uff3d>\u3002\np\u8868\u793a\u6307\u5411\u6570\u7ec4n\u7684\u884c\u6307\u9488\u3002\u5982\u679c\u5c06\u6307\u9488\u7684\u521d\u59cb\u5316(*p)\uff3b3\uff3d=b;\u5730\u5740\u7684\u7b49\u4ef7\u5f62\u5f0f\uff1a\np+i p\uff3bi\uff3d*(p+i)\u90fd\u8868\u793ab\u6570\u7ec4\u7b2ci+1\u884c\u7684\u7b2c1\u4e2a\u5143\u7d20\u7684\u9996\u5730\u5740\u3002\n*(p+i)+jp\uff3bi\uff3d+j &p\uff3bi\uff3d\uff3bj\uff3d\u90fd\u8868\u793ab\u6570\u7ec4\u7b2ci+1\u884c\u3001\u7b2cj+1\u5217\u5143\u7d20\u7684\u5730\u5740\u3002\n\u503c\u7684\u7b49\u4ef7\u5f62\u5f0f\uff1a\n*(*(p+i)+j) *(p\uff3bi\uff3d+j) p\uff3bi\uff3d\uff3bj\uff3d\u90fd\u8868\u793ab\u6570\u7ec4\u7b2ci+1\u3001\u7b2cj+1\u5217\u5143\u7d20\u7684\u503c\u3002\n\u6240\u4ee5\u9898\u76ee\u5206\u522b\u8bbf\u95eep\uff3b0\uff3d\uff3b0\uff3d\uff0cp\uff3b0\uff3d\uff3b1\uff3d\uff0cp\uff3b0\uff3d\uff3b2\uff3d\u3002",
      "optionB": "10\uff0c20\uff0c30",
      "type": "1",
      "optionA": "10\uff0c30\uff0c50",
      "question": "\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\n#include <iostream.h>\nvoid main(){\n    int n[][3] ={10,20,30,40,50,60};\n    int (*p)[3];\n    p=n;\n    cout<<p[0][0]<<\"\uff0c\"<<*(p[0]+1)<<\"\uff0c\"<<(*p)[2]<<endl;\n}",
      "title": "C&C++"
    },
    {
      "answer": "//\u9012\u5f52\u5f0f\u6c42\u6700\u5927\u6700\u5c0f\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n) \nvoid findminmax(treenode* tree, int& maxval, int& minval) {\n    if (maxval < tree->val) {\n        maxval = tree->val;\n    }\n    if (minval > tree->val) {\n        minval = tree->val;\n    }\n    if (tree->left != NULL)\n        findminmax(tree->left, maxval, minval);\n    if (tree->right != NULL)\n        findminmax(tree->right, maxval, minval);\n}",
      "ID": "55f2e51ee4b0152a611433a5",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u5b58\u653e\u4e86\u4e00\u4e2a\u6574\u6570\u503c\uff0c\u51fd\u6570\u8fd4\u56de\u8fd9\u68f5\u4e8c\u53c9\u6811 \u4e2d\u76f8\u5dee\u6700\u5927\u7684\u4e24\u4e2a\u8282\u70b9\u95f4\u7684\u5dee\u503c\u7edd\u5bf9\u503c\u3002\u8bf7\u6ce8\u610f\u7a0b\u5e8f\u6548\u7387\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143128",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u91cd\u8f7d\u51fd\u6570\u540d\u53ef\u4ee5\u4e0d\u540c",
      "optionC": "\u91cd\u8f7d\u51fd\u6570\u5fc5\u987b\u6709\u4e0d\u540c\u7684\u5f62\u53c2\u5217\u8868",
      "optionAnswer": "C",
      "answer": "\u91cd\u8f7d\uff1a\u5fc5\u987b\u540c\u540d\u51fd\u6570\uff1b\u5fc5\u987b\u53c2\u6570\u8868\u4e0d\u540c\uff08\u5305\u542b\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\uff1b\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\uff1b\u6216\u53c2\u6570\u4e2a\u6570\u4e0e\u7c7b\u578b\u90fd\u4e0d\u540c\uff09",
      "optionB": "\u91cd\u8f7d\u51fd\u6570\u5f62\u53c2\u4e2a\u6570\u5fc5\u987b\u4e0d\u540c",
      "type": "1",
      "optionA": "\u91cd\u8f7d\u51fd\u6570\u5fc5\u987b\u5177\u6709\u4e0d\u540c\u7684\u8fd4\u56de\u503c\u7c7b\u578b",
      "question": "\u4e0b\u9762\u6709\u5173\u91cd\u8f7d\u51fd\u6570\u7684\u8bf4\u6cd5\u4e2d\u6b63\u786e\u7684\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143247",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "C A B deC",
      "optionC": "A B C deC",
      "optionAnswer": "A",
      "answer": "\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u5148\u6267\u884c\u7236\u7c7b\uff0c\u518d\u6267\u884c\u5b50\u7c7b\u3002\u6790\u6784\u987a\u5e8f\u60f3\u53cd\n\nA B\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6267\u884c\u5b50\u7c7b\u7684\u865a\u51fd\u6570\u3002 ",
      "optionB": "C A B deA",
      "type": "1",
      "optionA": "A B C deA",
      "question": "\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u6253\u5370\u51fa\u4ec0\u4e48\uff1f\n\nclass A\n{\npublic:\n    A()\n    {\n        printf(\"A \");\n    }\n    /*virtual*/\n    ~A()\n    {\n        printf(\"deA \");\n    }\n};\n \nclass B\n{\npublic:\n    B()\n    {\n        printf(\"B \");\n    }\n    ~B()\n    {\n        printf(\"deB \");\n    }\n};\n \nclass C: public A, public B\n{\npublic:\n    C()\n    {\n        printf(\"C \");\n    }\n    ~C()\n    {\n        printf(\"deC \");\n    }\n};\nint main()\n{\n    A *a = new C();\n    delete a;\n    return 0;\n}",
      "title": "C&C++"
    },
    {
      "answer": "#include <iostream>\nusing namespace std;\nint sum(int n,int m)\n{\n    int res=1;\n    int A[100];\n    A[0]=1;\n    A[1]=0;\n    A[2]=0;\n    if(n<3)\n        return res;\n    for(int i=3;i<=n;i++)\n    {   \n        A[i]=(res-A[i-1]-A[i-2])*m;\n        res+=A[i];\n        if(i>=5)\n            res-=A[i-5];\n    }\n    return res;\n}\nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    cout<<sum(n,m)<<endl;\n    return 0;\n}",
      "ID": "55f2e51de4b0152a61143354",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u67d0\u661f\u7403\u4e0a\u51fa\u73b0\u4e86\u4e00\u79cd\u602a\u7269\uff0c \u8fd9\u79cd\u602a\u7269\u662f\u5355\u4eb2\u7e41\u6b96\uff0c\u4ece\u51fa\u751f\u8d77\u7b2c3\u4e2a\u6708\u8d77\u6bcf\u4e2a\u6708\u5c31\u80fd\u7e41\u884d\u4e00\u6279\u540e\u4ee3\u5171m\u4e2a\uff0c\u4f46\u662f\u8fd9\u79cd\u602a\u7269\u5f88\u77ed\u547d\uff0c\u751f\u5b58\u7b2c5\u4e2a\u6708\u540e\u5c31\u4f1a\u6bd9\u547d\u3002\u76ee\u524d\u8be5\u661f\u7403\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u602a\u7269\uff0c\u8bf7\u7f16\u5199\u7a0b\u5e8f\u8ba1\u7b97n\u4e2a\u6708\u540e\u602a\u7269\u7684\u603b\u6570\u3002(\u8fd9\u91cc\u6211\u4eec\u5047\u5b9a\u7b2c5\u4e2a\u6708\u602a\u7269\u7e41\u884d\u540e\u518d\u6bd9\u547d)",
      "title": "C&C++"
    },
    {
      "ID": "55e429cfe4b0152a610c8339",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "Many clustered index",
      "optionC": "clustered index and many non-clustered indexes",
      "optionAnswer": "D",
      "answer": "\u4e00\u5f20\u8868\u4e0d\u80fd\u6709\u591a\u4e2a\u4e1b\u805a\u7d22\u5f15",
      "optionB": "A clustered index",
      "type": "1",
      "optionA": "No indexes",
      "question": "A table CANNOT have one or more of the following index configurations.",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431f2",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u65e0\u6570\u6b21",
      "optionC": "6",
      "optionAnswer": "C",
      "answer": "\u5982\u679c\u5faa\u73af\u4f53\u4e2dX\u5f97\u503c\u4e0d\u6539\u53d8\uff0c!x\u4e00\u76f4\u4e3atrue\uff0c\u5219\u53ea\u9700\u8981\u8003\u8651y\u7684\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e00\u51716\u6b21\u3002",
      "optionB": "5",
      "type": "1",
      "optionA": "0",
      "question": "for(int x = 0 , y = 0; !x && y <= 5 ; y++)\u8bed\u53e5\u6267\u884c\u5faa\u73af\u7684\u6b21\u6570\u662f\u591a\u5c11\u6b21\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "N2",
      "ID": "55f2e51ee4b0152a611433d3",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143239",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6c42\u5b57\u7b26\u4e32\u5b58\u653e\u7684\u4f4d\u7f6e",
      "optionC": "\u6c42\u5b57\u7b26\u4e32\u7684\u957f\u5ea6",
      "optionAnswer": "C",
      "answer": "int fun (char *s)\n{\nchar *p=s;/*\u5c06S\u7684\u5730\u5740\u7ed9p\uff1b\nwhile(*p++);/*\u6ca1\u6709\u9047\u5230/0\u7684\u65f6\u5019p\u4e00\u76f4\u589e\u52a0\nreturn p-s-1;/*\u539f\u59cb\u5730\u5740\u4e0e\u589e\u52a0\u540e\u7684\u5730\u5740\u7684\u5dee\u51cf\u6389/0\u7684\u957f\u5ea6\n}",
      "optionB": "\u590d\u5236\u4e00\u4e2a\u5b57\u7b26\u4e32",
      "type": "1",
      "optionA": "\u8ba1\u7b97\u5b57\u7b26\u4e32\u7684\u4f4d(bit)\u6570",
      "question": "\u4e0b\u9762\u51fd\u6570\u7684\u529f\u80fd\u662fint fun (char *s)\n{\n    char *p=s;\n    while(*p++);\n    return p-s-1;\n}",
      "title": "C&C++"
    },
    {
      "answer": "int rand10()\n{\n    int n=49;\n    while(n>40){\n        n=7*(rand7()-1)+rand7();\n    }\n    return n%10+1;\n}",
      "ID": "55f2e51ee4b0152a611433e2",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5df2\u77e5rand7()\u53ef\u4ee5\u4ea7\u751f1~7\u76847\u4e2a\u6570(\u5747\u5300\u6982\u7387),\u5229\u7528rand7() \u4ea7 \u751f rand10() 1~10(\u5747\u5300\u6982\u7387)\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de805",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "9",
      "optionC": "4",
      "optionAnswer": "C",
      "answer": "\u628aMyClass a[4]\uff0c*p[5]\uff1b\u5206\u5f00\u5199\uff1b\nMyClass a[4]\uff1b\nMyClass *p[5]\uff1b\n\u5219a[4]\u662f\u7c7b\u6570\u7ec4\uff0c\u67094\u4e2a\u5bf9\u8c61\uff0c\u8c03\u7528\u6784\u9020\u51fd\u65704\u6b21\n*p[5]\u662f\u6307\u9488\u6570\u7ec4\uff0c\u4e5f\u5c31\u662f5\u4e2a\u5143\u7d20\u5b58\u653e\u7684\u662f\u6307\u5411MyClass\u7c7b\u578b\u7684\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u6ca1\u6709\u521d\u59cb\u5316\u7684\u6307\u9488\u4e3a\u7a7a\uff0c\u4e0d\u6307\u5411\u4efb\u4f55\u5bf9\u8c61\uff0c\u4e5f\u4e0d\u8c03\u7528\u6784\u9020\u51fd\u6570\u3002",
      "optionB": "5",
      "type": "1",
      "optionA": "2",
      "question": "\u82e5MyClass\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u6267\u884c\nMyClass a[4]\uff0c*p[5]\uff1b\n\u8bed\u53e5\u65f6\u4f1a\u81ea\u52a8\u8c03\u7528\u8be5\u7c7b\u6784\u9020\u51fd\u6570\u7684\u6b21\u6570\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c22",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6570\u636e\u5757",
      "optionC": " \u51fd\u6570\u4f53",
      "optionAnswer": "A",
      "answer": "\u7c7b\u5373\u6570\u636e\u548c\u64cd\u4f5c\u7684\u7ec4\u5408\u4f53\uff0c\u6570\u636e\u662f\u7c7b\u7684\u9759\u6001\u7279\u5f81\uff0c\u64cd\u4f5c\u662f\u7c7b\u5177\u6709\u7684\u52a8\u4f5c\u3002",
      "optionB": "\u5bf9\u8c61",
      "type": "1",
      "optionA": "\u7c7b",
      "question": "\u6240\u8c13\u6570\u636e\u5c01\u88c5\u5c31\u662f\u5c06\u4e00\u7ec4\u6570\u636e\u548c\u4e0e\u8fd9\u7ec4\u6570\u636e\u6709\u5173\u64cd\u4f5c\u7ec4\u88c5\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u5b9e\u4f53\uff0c\u8fd9\u5b9e\u4f53\n\u4e5f\u5c31\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114320a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "6",
      "optionC": "5",
      "optionAnswer": "B",
      "answer": "\u51fd\u6570\u539f\u578bexec((vl\uff0cv2)\uff0c(v3\uff0cv4)\uff0cv5\uff0cv6);\n\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u4e24\u4e2a\u5f62\u53c2\u7ec4\u6210\u662f\u4e00\u4e2a\u9017\u53f7\u8fd0\u7b97\u7b26\u7ec4\u6210\u7684\u8868\u8fbe\u5f0f\nC\u8bed\u8a00\u4e2d\u9017\u53f7\u8fd0\u7b97\u7b26\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a\u8868\u8fbe\u5f0f\u7684\u503c\n\u6240\u4ee5(vl\uff0cv2)\u548c(v3\uff0cv4)\u662f\u4e24\u4e2a\u9017\u53f7\u8868\u8fbe\u5f0f\uff0c\u76f8\u5f53\u4e8e\u4e24\u4e2a\u5b9e\u53c2\n\u6240\u4ee5\u4e00\u51714\u4e2a\u5b9e\u53c2",
      "optionB": "4",
      "type": "1",
      "optionA": "3",
      "question": "\u51fd\u6570\u8c03\u7528exec((vl\uff0cv2)\uff0c(v3\uff0cv4)\uff0cv5\uff0cv6);\u4e2d\uff0c\u5b9e\u53c2\u7684\u4e2a\u6570\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c81",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51fd\u6570\u7684\u529f\u80fd",
      "optionC": "\u51fd\u6570\u53c2\u6570\u7c7b\u578b",
      "optionAnswer": "D",
      "answer": "\u51fd\u6570\u539f\u578b\u7684\u683c\u5f0f\u662f?\n\u8fd4\u56de\u503c\u7c7b\u578b?\u51fd\u6570\u540d\uff08\u53c2\u6570\u5217\u8868\uff09\uff1b?\n\u8fd9\u91cc\u9762a\u8fd4\u56de\u503c\u7c7b\u578b\uff0cb\u53c2\u6570\u4e2a\u6570\u548cc\u53c2\u6570\u7c7b\u578b\u90fd\u53ef\u4ee5\u786e\u5b9a\u4e86?\n\u51fd\u6570\u539f\u578b\u4e5f\u53eb\u51fd\u6570\u58f0\u660e\uff0c\u8fd8\u53eb\u5f15\u7528\u8bf4\u660e\u3002\u5176\u76ee\u7684\u662f\u5b9e\u73b0\u5148\u8c03\u7528\u51fd\u6570\uff0c\u540e\u5b9a\u4e49\u51fd\u6570\u3002",
      "optionB": "\u51fd\u6570\u53c2\u6570\u7684\u4e2a\u6570",
      "type": "1",
      "optionA": "\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b",
      "question": "\u5728?C++?\u4e2d\uff0c\u51fd\u6570\u539f\u578b\u4e0d\u80fd\u6807\u8bc6?(??)??",
      "title": "C&C++"
    },
    {
      "answer": "\u4e3e\u4f8b\uff1a ask not what your country  can do for you ,but what you can do for your  country\n\u6700\u957f\u7684\u91cd\u590d\u5b50\u5e8f\u5217\uff1acan do for you\n\u601d\u8def\uff1a\u4f7f\u7528\u540e\u7f00\u6570\u7ec4\u89e3\u51b3\n\u5206\u6790\uff1a\n1\u3001\u7531\u4e8e\u8981\u6c42\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u5219\u9700\u8981 \u627e\u5230\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5b50\u5e8f\u5217 \uff0c\u5373\u901a\u8fc7\u4ea7\u751f\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u6570\u7ec4\u5b9e\u73b0\u3002\n2\u3001\u7531\u4e8e\u8981\u6c42\u6700\u957f\u7684\u91cd\u590d\u5b50\u5e8f\u5217\uff0c\u5219\u9700\u8981\u5bf9\u6240\u6709\u5b50\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u6837\u53ef\u4ee5\u628a \u76f8\u540c\u7684\u5b57\u7b26\u4e32\u6392\u5728\u4e00\u8d77 \u3002\n3\u3001 \u6bd4\u8f83 \u76f8\u90bb\u5b57\u7b26\u4e32 \uff0c\u627e\u51fa\u4e24\u4e2a\u5b50\u4e32\u4e2d\uff0c\u76f8\u540c\u7684\u5b57\u7b26\u7684\u4e2a\u6570\u3002\n\u6ce8\u610f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u4e32\uff0c\u4e00\u4e2a\u4e0e\u5176\u91cd\u590d\u6700\u591a\u7684\u5b57\u7b26\u4e32\u80af\u5b9a\u662f\u7d27\u6328\u7740\u81ea\u5df1\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u3002\n\u6b65\u9aa4\uff1a\n1\u3001\u5bf9\u5f85\u5904\u7406\u7684\u5b57\u7b26\u4e32 \u4ea7\u751f\u540e\u7f00\u6570\u7ec4\n2\u3001 \u5bf9\u540e\u7f00\u6570\u7ec4\u6392\u5e8f\n3\u3001\u4f9d\u6b21 \u68c0\u6d4b\u76f8\u90bb\u4e24\u4e2a\u540e\u7f00\u7684\u516c\u5171\u957f\u5ea6\n4\u3001 \u53d6\u51fa\u6700\u5927 \u516c\u5171\u957f\u5ea6 \u7684\u524d\u7f00\n\n\u4e3e\u4f8b\uff1a \u8f93\u5165\u5b57\u7b26\u4e32 banana\n1\u3001\u5b57\u7b26\u4e32\u4ea7\u751f\u7684\u540e\u7f00\u6570\u7ec4\uff1a\na[0]:banana\na[1]:anana\na[2]:nana\na[3]:ana\na[4]:na\na[5]:a\n2\u3001\u5bf9\u540e\u7f00\u6570\u7ec4\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff0c\u4ee5\u5c06\u540e\u7f00\u76f8\u8fd1\u7684\uff08\u53d8\u4f4d\u8bcd\uff09\u5b50\u4e32\u96c6\u4e2d\u5728\u4e00\u8d77\na[0]:a\na[1]:ana\na[2]:anana\na[3]:banana\na[4]:na\na[5]:nana\n\u4e4b\u540e\u53ef\u4ee5\u4f9d\u6b21\u68c0\u6d4b\u76f8\u90bb\u4e24\u4e2a\u540e\u7f00\u7684\u516c\u5171\u957f\u5ea6\u5e76\u53d6\u51fa\u6700\u5927\u516c\u5171\u7684\u524d\u7f00\n\u4ee3\u7801\uff1a\n/*\u7ed9\u5b9a\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u6700\u957f\u7684\u91cd\u590d\u5b50\u5b57\u7b26\u4e32*/\n#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\nconst int MaxCharNum = 5000000;\nbool StrCmp(char* str1,char* str2);\nvoid GenSuffixArray(char* str,char* suffixStr[]);\nint ComStrLen(char* str1,char* str2);\nvoid GenMaxReStr(char* str);\nint main()\n{\nchar str[MaxCharNum];\ncin.getline(str,MaxCharNum);//\u9047\u5230\u56de\u8f66\u7ed3\u675f\nGenMaxReStr(str);\nsystem(\"pause\");\nreturn 1;\n}\nvoid GenMaxReStr(char* str)\n{\nint len = strlen(str);\nint comReStrLen = 0;\nint maxLoc = 0;\nint maxLen = 0;\nchar* suffixStr[MaxCharNum];\nGenSuffixArray(str,suffixStr);//\u4ea7\u751f\u540e\u7f00\u6570\u7ec4\n//\u5bf9\u540e\u7f00\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\nsort(suffixStr,suffixStr+len,StrCmp);\n//\u7edf\u8ba1\u76f8\u90bb\u5355\u8bcd\u4e2d\u76f8\u540c\u7684\u5b57\u7b26\u6570\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\nfor (int i = 0;i < len-1;i++ )\n{\ncomReStrLen = ComStrLen(suffixStr[i],suffixStr[i+1]);\nif (comReStrLen > maxLen)\n{\nmaxLoc = i;\nmaxLen = comReStrLen;\n}\n}\n//\u8f93\u51fa\u7ed3\u679c\nfor (int i = 0;i < maxLen;i++)\n{\ncout<<suffixStr[maxLoc][i];\n}\ncout<<endl;\n}\n/*\u4e3a\u5b57\u7b26\u4e32\u4ea7\u751f\u5176\u540e\u7f00\u6570\u7ec4\uff0c\u5e76\u5b58\u653e\u5230\u6570\u7ec4suffixStr\u4e2d*/\nvoid GenSuffixArray(char* str,char* suffixStr[])\n{\nint len = strlen(str);\nfor (int i = 0;i < len;i++)\n{\nsuffixStr[i] = &str[i];\n}\n}\n/*\u8fd4\u56destr1\u548cstr2\u7684\u5171\u540c\u524d\u7f00\u7684\u957f\u5ea6*/\nint ComStrLen(char* str1,char* str2)\n{\nint comLen = 0;\nwhile(*str1 && *str2)\n{\nif (*str1 == *str2)\n{\ncomLen++;\n}\nstr1++;\nstr2++;\n}\nreturn comLen;\n}\n//\u5b57\u7b26\u4e32\u5347\u5e8f\u6392\u5e8f\nbool StrCmp(char* str1,char* str2)\n{\nif (strcmp(str1,str2) >=0 )\n{\nreturn false;\n}\nreturn true;\n}\n\u7a0b\u5e8f\u8f93\u5165\uff1aask not what your country can do for you,but what you can do for your country\n\u8f93\u51fa\uff1acan ",
      "ID": "55f2e51ee4b0152a611433e4",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32,\u6c42\u51fa\u5176\u6700\u957f\u7684\u91cd\u590d\u5b50\u4e32\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fde4b0152a611431ec",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "123444",
      "optionC": "122444",
      "optionAnswer": "C",
      "answer": "\u9996\u5148\u7a0b\u5e8f\u4e2d\u5b58\u5728\u4e09\u4e2aMyClass\u5bf9\u8c61\u3002\n\u524d\u4e24\u4e2a\u5bf9\u8c61\u6784\u9020\u65f6\u5206\u522b\u8f93\u51fa1,2\n\u7b2c\u4e09\u4e2a\u5bf9\u8c61\u662f\u8fd9\u6837\u6784\u9020\u7684MyClass obj3 = obj1;\u8fd9\u91cc\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8f93\u51fa2\n\u7136\u540e\u4e09\u4e2a\u5bf9\u8c61\u4f9d\u6b21\u6790\u6784\uff0c\u8f93\u51fa444\n\u6240\u4ee5\u6700\u7ec8\u8f93\u51fa122444",
      "optionB": "11314444",
      "type": "1",
      "optionA": "11214444",
      "question": "#include<iostream>\nusing namespace std;\nclass MyClass\n{\npublic:\n    MyClass(int i = 0)\n    {\n        cout << i;\n    }\n    MyClass(const MyClass &x)\n    {\n        cout << 2;\n    }\n    MyClass &operator=(const MyClass &x)\n    {\n        cout << 3;\n        return *this;\n    }\n    ~MyClass()\n    {\n        cout << 4;\n    }\n};\nint main()\n{\n    MyClass obj1(1), obj2(2);\n    MyClass obj3 = obj1;\n    return 0;\n}\n\u8fd0\u884c\u65f6\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de806",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "5",
      "optionC": "8",
      "optionAnswer": "A",
      "answer": "\u672c\u9898\u4e3b\u8981\u8003\u67e5\u4e86\u51fd\u6570\u7684\u9012\u5f52\u8c03\u7528,\u89e3\u9898\u601d\u8def\u53ea\u9700\u8981\u5c06\u53c2\u6570\u5e26\u5165\u51fd\u6570\u4e2d,\u9996\u5148\u662f\u6267\u884cf(a,9),\u9012\u5f52\u6267\u884c(a,8)\u76f4\u5230(a,2),\u5f97\u5230a[0]=8,\u7136\u540e\u5224\u65ada[0]\u662f\u5426\u5927\u4e8ea[1 ],\u672c\u9898\u5b9e\u9645\u4e0a\u5c31\u662f\u6c42\u51fa\u6570\u7ec4a\u5143\u7d20\u7684\u6700\u5927\u503c\u3002\u7b54\u6848\u4e3a9,\u9009\u9879A\u6b63\u786e\u3002",
      "optionB": "1",
      "type": "1",
      "optionA": "9",
      "question": "\u82e5\u6709\u4ee5\u4e0b\u7a0b\u5e8f#include <stdio.h>\nint f(int a\uff3b \uff3d,int n)\n{\n    if(n > 1)\n    {\n        int t;\n        t=f(a, n-1);\n        return t > a[ n -1 ] \uff1f t\uff1aa\uff3bn-1\uff3d;\n    }\n    else\n        return a[0];\n}\nmain()\n{ \n    int a\uff3b \uff3d= {8,2,9,1,3,6,4,7,5};\n    printf(\"%d\\n\", f(a, 9));\n}\n\u5219\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f?",
      "title": "C&C++"
    },
    {
      "answer": "1-999,999\uff1a10\u76845\u6b21\u65b9 * 6=600,000\n1,000,000 \uff1a 1\u6b21\n\n\u52a0\u8d77\u6765\u4e00\u5171600,001\u6b21",
      "ID": "55f2e51ee4b0152a611433b0",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4ece1\u52301000000\u7684\u6240\u6709\u81ea\u7136\u6570\uff0c\u6570\u5b57\u201c1\u201d\u4e00\u5171\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff1f\u4f8b\uff1a\u81ea\u7136\u6570101\u4e2d\uff0c\u6570\u5b57\u201c1\u201d\u51fa\u73b0\u4e862\u6b21\uff0c\u81ea\u7136\u65701011\u4e2d\uff0c\u6570\u5b57\u201c1\u201d\u51fa\u73b0\u4e863\u6b21\uff0c\u8bf7\u5199\u660e\u8ba1\u7b97\u8fc7\u7a0b\u53ca\u7ed3\u679c\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143202",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "Oxf8b821c0",
      "optionC": "Oxf8b82198",
      "optionAnswer": "A",
      "answer": "\u5047\u8bbe\u6bcf\u884c\u6709n\u4e2a\u5143\u7d20\uff1a\n[9][9] - [4][4] = 21c-140=5n+5\n[7][7] - [4][4]=x- 140 =3n+3\n[7][7] = 140+3/5*\uff08 21c-140 \uff09= 1c4",
      "optionB": "Oxf8b821a6",
      "type": "1",
      "optionA": "Oxf8b821c4",
      "question": "\u4e8c\u7ef4\u6570\u7ec4X\u6309\u884c\u987a\u5e8f\u5b58\u50a8\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u53601\u4e2a\u5b58\u50a8\u5355\u5143\u3002\u82e5X[4][4]\u7684\u5b58\u50a8\u5730\u5740\u4e3aOxf8b82140,X[9][9]\u7684\u5b58\u50a8\u5730\u5740\u4e3aOxf8b8221c,\u5219X[7][7]\u7684\u5b58\u50a8\u5730\u5740\u4e3a()",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c6b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "#error",
      "optionC": "#define",
      "optionAnswer": "C",
      "answer": "#if\u6761\u4ef6\u7f16\u8bd1\uff0c\uff03include\u6587\u4ef6\u5305\u542b\uff0c\uff03error\u9519\u8bef\u5904\u7406\u3002",
      "optionB": "#include",
      "type": "1",
      "optionA": "#if",
      "question": "\u5728\u7f16\u8bd1\u6307\u4ee4\u4e2d\uff0c\u5b8f\u5b9a\u4e49\u4f7f\u7528\u54ea\u4e2a\u6307\u4ee4\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "int Find_Second_Max(int data[],int n)\n{\n    if(n<2) return -1;\n    int max_num = max(data[0],data[1]);\n    int sec_num = min(data[0],data[1]);\n    for(int i=2;i<n;i++)\n    {\n        if(data[i]>=max_num);\n        {\n            sec_num = max_num;\n            max_num = data[i];\n        }\n        else if(data[i] > sec_num)//\u6392\u9664\u7b49\u4e8e\u60c5\u51b5\n            sec_num = data[i];\n    }\n    return sec_num;\n}",
      "ID": "55f2e51ee4b0152a6114339f",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\uff0c\u7b2c\u4e8c\u5927\u7684\u6570",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143162",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5f3a\u5ea6\u524a\u5f31\u662f\u6307\u6267\u884c\u65f6\u95f4\u8f83\u77ed\u7684\u6307\u4ee4\u7b49\u4ef7\u7684\u66ff\u4ee3\u6267\u884c\u65f6\u95f4\u8f83\u957f\u7684\u6307\u4ee4",
      "optionC": "For\u5faa\u73af\u7684\u5faa\u73af\u63a7\u5236\u53d8\u91cf\u901a\u5e38\u5f88\u9002\u5408\u8c03\u5ea6\u5230\u5bc4\u5b58\u5668\u8bbf\u95ee",
      "optionAnswer": "A",
      "answer": "\u6b7b\u4ee3\u7801\u7684\u542b\u4e49\u662f\u6307\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u6267\u884c\u5230\u7684\u4ee3\u7801\u6bb5\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u629b\u5f03\u88ab\u6ce8\u91ca\u7684\u4ee3\u7801\n\u6bd4\u5982while(false){}",
      "optionB": "\u51fd\u6570\u5185\u8054\u53ef\u4ee5\u907f\u514d\u51fd\u6570\u8c03\u7528\u4e2d\u538b\u6808\u548c\u9000\u6808\u7684\u5f00\u9500",
      "type": "1",
      "optionA": "\u6b7b\u4ee3\u7801\u5220\u9664\u6307\u7684\u662f\u7f16\u8bd1\u8fc7\u7a0b\u76f4\u63a5\u629b\u5f03\u6389\u88ab\u6ce8\u91ca\u7684\u4ee3\u7801",
      "question": "\u7a0b\u5e8f\u7684\u5b8c\u6574\u7f16\u8bd1\u8fc7\u7a0b\u5206\u4e3a\u662f\uff1a\u9884\u5904\u7406\uff0c\u7f16\u8bd1\uff0c\u6c47\u7f16\u7b49\uff0c\u5982\u4e0b\u5173\u4e8e\u7f16\u8bd1\u9636\u6bb5\u7684\u7f16\u8bd1\u4f18\u5316\u7684\u8bf4\u6cd5\u4e2d\u4e0d\u6b63\u786e\u7684\u662f\uff08\uff09?",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143257",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51fa\u73b0\u9519\u8bef",
      "optionC": "5",
      "optionAnswer": "C",
      "answer": "\u9009\u62e9c\uff0c&a\u8868\u793a\u4e00\u4e2a\u6307\u5411\u5927\u5c0f\u4e3a5\u6570\u7ec4\u7684\u6307\u9488\uff0c\u90a3\u4e48&a+1\u5c31\u662f\u8868\u793a\u4e00\u4e2a\u6307\u5411\u5927\u5c0f\u4e3a5\u7684\u4e0b\u4e00\u4e2a\u6570\u7ec4\u7684\u6307\u9488\uff0c\u4e5f\u5c31\u662f\u6570\u7ec4a\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48int*p=(int*)(&a+1)\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u5c06\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\u8f6c\u6362\u4e3a\u6307\u5411\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u4e2d\u9996\u5143\u7d20\u7684\u6307\u9488\uff0c\u6240\u4ee5p-1\u5219\u662f\u6307\u5411\u7b2c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\uff0c\u6240\u4ee5\u8f93\u51fa\u662f5",
      "optionB": "2",
      "type": "1",
      "optionA": "1",
      "question": "\u4ee5\u4e0b\u4ee3\u7801\u8f93\u51fa\u4ec0\u4e48____.  \n\nmain()\n{\n   int a[5]={1,2,3,4,5};\n   int *p=(int *)(&a+1);\n   printf(\"%d\",*(p-1));\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431ff",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "*(*F)(int, int)(int)",
      "optionC": "int (*(*F)(int, int))",
      "optionAnswer": "A",
      "answer": "\u9996\u5148\uff0c\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u7684\u51fd\u6570\u6709\u4e24\u4e2aint\u5f62\u53c2\uff0c\u8fd9\u4e2a\u5c31\u662f(*F)(int, int)\uff0c\u8fd9\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u6307\u9488\n\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8fd4\u56de\u7684\u6307\u9488\u6307\u5411\u4e00\u4e2a\u6709\u4e00\u4e2aint\u5f62\u53c2\u4e14\u8fd4\u56deint\u7684\u51fd\u6570\uff1b\u628a\u4e0a\u9762\u7684\u7ed3\u679c\u5f53\u6210\u4e00\u4e2a\u6307\u9488\uff0c\u76f8\u5f53\u4e8e\u518d\u505a\u4e00\u6b21\u4e0a\u9762\u7684\u6b65\u9aa4\uff0c\u6240\u4ee5\u7ed3\u679c\u4e3a\uff1aint (*(*F)(int, int))(int)",
      "optionB": "int (*F)(int, int)",
      "type": "1",
      "optionA": "int (*(*F)(int, int))(int)",
      "question": "\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u7684\u51fd\u6570\u6709\u4e24\u4e2aint\u5f62\u53c2\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8fd4\u56de\u7684\u6307\u9488\u6307\u5411\u4e00\u4e2a\u6709\u4e00\u4e2aint\u5f62\u53c2\u4e14\u8fd4\u56deint\u7684\u51fd\u6570\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c26",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5728\u5b9a\u4e49\u8be5\u51fd\u6570\u65f6\u6240\u6307\u5b9a\u7684\u6570\u636e\u7c7b\u578b",
      "optionC": "\u8c03\u7528\u8be5\u51fd\u6570\u65f6\u7684\u4e3b\u8c03\u7528\u51fd\u6570\u7c7b\u578b",
      "optionAnswer": "D",
      "answer": "\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u7531\u5b9a\u4e49\u51fd\u6570\u65f6\u7684\u6307\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u51b3\u5b9a\u7684\u3002A\u9879\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u8981\u8f6c\u6362\n\u6210\u51fd\u6570\u7684\u5b9a\u4e49\u65f6\u7684\u8fd4\u56de\u7c7b\u578b\u3002",
      "optionB": "\u8c03\u7528\u8be5\u51fd\u6570\u65f6\u7cfb\u7edf\u968f\u673a\u4ea7\u751f\u7684\u7c7b\u578b",
      "type": "1",
      "optionA": "return\u8bed\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u7c7b\u578b",
      "question": "\u51b3\u5b9aC++\u8bed\u8a00\u4e2d\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143205",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "3628800",
      "optionC": "55",
      "optionAnswer": "C",
      "answer": "\u8003\u7684\u662f\u9012\u5f52\uff0c\u633a\u7b80\u5355\u7684\uff1a1+2+\u2026+10=55;",
      "optionB": "10",
      "type": "1",
      "optionA": "0",
      "question": "\u7ed9\u5b9afun\u51fd\u6570\u5982\u4e0b\uff0c\u90a3\u4e48fun(10)\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\n\nint fun(int x)\n{\n    return (x == 1) ? 1 : (x + fun(x - 1));\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143278",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u8fd9\u79cd\u53d8\u91cf\u53ea\u80fd\u662f\u57fa\u672c\u7c7b\u578b(\u5982int,char)\u4e0d\u80fd\u662fC++\u7c7b\u578b",
      "optionC": "\u8be5\u53d8\u91cf\u4e0d\u80fd\u5728\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e2d\u5f15\u7528",
      "optionAnswer": "A",
      "answer": "Static\u5168\u5c40\u53d8\u91cf\u548c\u666e\u901a\u5168\u5c40\u53d8\u91cf\uff1a\n\u9488\u5bf9\uff1a\u4e00\u4e2a\u5de5\u7a0b\u91cc\u6709\u591a\u4e2acpp\u6587\u4ef6\u65f6\n\u76f8\u540c\u70b9\uff1a\u5b58\u50a8\u65b9\u5f0f\u76f8\u540c\uff0c\u90fd\u662f\u9759\u6001\u5b58\u50a8\uff1b\n\u4e0d\u540c\u70b9\uff1a\u4f5c\u7528\u57df\u4e0d\u540c\u3002\n\u666e\u901a\u5168\u5c40\u53d8\u91cf---\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff08\u542b\u6709\u591a\u4e2a\u6e90\u6587\u4ef6\uff09\uff0c\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u6709\u6548\nStatic\u5168\u5c40\u53d8\u91cf----\u4f5c\u7528\u57df\u662f\u5f53\u524d\u6e90\u6587\u4ef6",
      "optionB": "\u8be5\u53d8\u91cf\u7684\u503c\u662f\u4e0d\u53ef\u6539\u53d8\u7684",
      "type": "1",
      "optionA": "\u53ea\u80fd\u5728\u8be5cpp\u6240\u5728\u7684\u7f16\u8bd1\u6a21\u5757\u4e2d\u4f7f\u7528\u8be5\u53d8\u91cf",
      "question": "\u5728\u4e00\u4e2acpp\u6587\u4ef6\u91cc\u9762,\u5b9a\u4e49\u4e86\u4e00\u4e2astatic\u7c7b\u578b\u7684\u5168\u5c40\u53d8\u91cf,\u4e0b\u9762\u4e00\u4e2a\u6b63\u786e\u7684\u63cf\u8ff0\u662f:",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7f1",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "A test C test",
      "optionC": "B test C test",
      "optionAnswer": "A",
      "answer": "(( B  *)(& c ))-> func (); \u662f\u591a\u6001\u884c\u4e3a \n(( B ) c ). func (); \u4e0d\u662f\u591a\u6001\u884c\u4e3a\u3002 ",
      "optionB": "B test B test",
      "type": "1",
      "optionA": "C test B test",
      "question": "<p class=\"p0\">\n    #include \"stdio.h\"\n \nclass A\n{\npublic:\n    virtual void Test()\n    {\n        printf(\"A test\\n\");\n    }\n};\nclass B: public A\n{\npublic:\n    void func()\n    {\n        Test();\n    }\n    virtual void Test()\n    {\n        printf(\"B test\\n\");\n    }\n};\nclass C: public B\n{\npublic:\n    virtual void Test()\n    {\n        printf(\"C test\\n\");\n    }\n};\nvoid main()\n{\n    C c;\n    ((B *)(&c))->func();\n    ((B)c).func();\n}\n \n \n</p>\n\n\u8be5\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de813",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u7c7b\u6a21\u677f\u4e2d\u7684\u6210\u5458\u51fd\u6570\u5168\u90e8\u90fd\u662f\u6a21\u677f\u51fd\u6570",
      "optionC": "\u7c7b\u6a21\u677f\u7684\u53c2\u6570\u5fc5\u987b\u662f\u865a\u62df\u7c7b\u578b\u7684",
      "optionAnswer": "D",
      "answer": "A\uff1a\u4e0b\u9762\u5217\u4e3e\u7684\u51e0\u79cd\u60c5\u51b5\u4e0d\u80fd\u7701\u7565\u6a21\u677f\u5b9e\u53c2\uff1a\n1\uff09\u4ece\u6a21\u677f\u51fd\u6570\u5b9e\u53c2\u8868\u83b7\u5f97\u7684\u4fe1\u606f\u6709\u77db\u76fe\u4e4b\u5904\u3002\n2\uff09\u9700\u8981\u83b7\u5f97\u7279\u5b9a\u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff0c\u800c\u4e0d\u7ba1\u53c2\u6570\u7684\u7c7b\u578b\u5982\u4f55\u3002\n3\uff09\u865a\u62df\u7c7b\u578b\u53c2\u6570\u6ca1\u6709\u51fa\u73b0\u5728\u6a21\u677f\u51fd\u6570\u7684\u5f62\u53c2\u8868\u4e2d\u3002\n4\uff09\u51fd\u6570\u6a21\u677f\u542b\u6709\u5e38\u89c4\u5f62\u53c2\u3002\nB\uff1a\u7c7b\u6a21\u677f\u4e0e\u6a21\u677f\u7c7b\u7684\u6982\u5ff5\n\u2474 \u4ec0\u4e48\u662f\u7c7b\u6a21\u677f \u4e00\u4e2a\u7c7b\u6a21\u677f\uff08\u4e5f\u79f0\u4e3a\u7c7b\u5c5e\u7c7b\u6216\u7c7b\u751f\u6210\u7c7b\uff09\u5141\u8bb8\u7528\u6237\u4e3a\u7c7b\u5b9a\u4e49\u4e00\u79cd\u6a21\u5f0f\uff0c\u4f7f\u5f97\u7c7b\u4e2d\u7684\u67d0\u4e9b\u6570\u636e\u6210\u5458\u3001\u9ed8\u5199\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u3001\u67d0\u4e9b\u6210\u5458\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u80fd\u591f\u53d6\u4efb\u610f\u7c7b\u578b\uff08\u5305\u62ec\u7cfb\u7edf\u9884\u5b9a\u4e49\u7684\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u7684\uff09\u3002\n  \u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u6570\u636e\u6210\u5458\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u80fd\u786e\u5b9a\uff0c\u6216\u8005\u662f\u67d0\u4e2a\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u6216\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u4e0d\u80fd\u786e\u5b9a\uff0c\u5c31\u5fc5\u987b\u5c06\u6b64\u7c7b\u58f0\u660e\u4e3a\u6a21\u677f\uff0c\u5b83\u7684\u5b58\u5728\u4e0d\u662f\u4ee3\u8868\u4e00\u4e2a\u5177\u4f53\u7684\u3001\u5b9e\u9645\u7684\u7c7b\uff0c\u800c\u662f\u4ee3\u8868\u7740\u4e00\u7c7b\u7c7b\u3002\n\u2475 \u6a21\u677f\u7c7b\u662f\u7c7b\u6a21\u677f\u5b9e\u4f8b\u5316\u540e\u7684\u4e00\u4e2a\u4ea7\u7269\u3002\u53ef\u4ee5\u4ece\u7c7b\u6a21\u677f\u6d3e\u751f\u51fa\u65b0\u7684\u7c7b\uff0c\u65e2\u53ef\u4ee5\u6d3e\u751f\u7c7b\u6a21\u677f\uff0c\u4e5f\u53ef\u4ee5\u6d3e\u751f\u975e\u6a21\u677f\u7c7b\u3002\n\u7c7b\u6a21\u677f\u7684\u91cd\u70b9\u662f\u6a21\u677f\u3002\u8868\u793a\u7684\u662f\u4e00\u4e2a\u6a21\u677f\uff0c\u4e13\u95e8\u7528\u4e8e\u4ea7\u751f\u7c7b\u7684\u6a21\u5b50\u3002 \u6a21\u677f\u7c7b\u7684\u91cd\u70b9\u662f\u7c7b\u3002\u8868\u793a\u7684\u662f\u7531\u4e00\u4e2a\u6a21\u677f\u751f\u6210\u800c\u6765\u7684\u7c7b\u3002 \nC\uff1a\u7c7b\u6a21\u677f\u6709\u4e09\u79cd\u7c7b\u578b\u6a21\u677f\u53c2\u6570\uff1a\u7c7b\u578b\u6a21\u677f\u53c2\u6570\u3001\u65e0\u7c7b\u578b\u6a21\u677f\u53c2\u6570\u548c\u6a21\u677f\u6a21\u677f\u53c2\u6570(\u4ee5\u6a21\u677f\u4f5c\u4e3a\u6a21\u677f\u7684\u53c2\u6570)\u3002\u5e76\u4e0d\u5c40\u9650\u4e8e\u865a\u62df\u7c7b\u578b\uff0c\u975e\u865a\u62df\u7c7b\u578b\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u7c7b\u6a21\u677f\u53c2\u6570\u3002",
      "optionB": "\u7c7b\u6a21\u677f\u4e0e\u6a21\u677f\u7c7b\u6240\u6307\u7684\u662f\u540c\u4e00\u6982\u5ff5",
      "type": "1",
      "optionA": "\u6a21\u677f\u7684\u5b9e\u53c2\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u53ef\u4ee5\u7701\u7565",
      "question": "\u4e0b\u5217\u5173\u4e8e\u6a21\u677f\u7684\u8bf4\u6cd5\u6b63\u786e\u7684\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de80a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "49",
      "optionC": "25",
      "optionAnswer": "B",
      "answer": "\u5728 C/C++ \u4e2d\uff0c\u5b8f\u5b9a\u4e49\u53ea\u662f\u505a\u7b80\u5355\u7684\u5b57\u7b26\u66ff\u6362\uff1b\n\u5728 #define add(a,b) a+b \u4e2d\uff0c a+b \u6ca1\u6709\u62ec\u53f7\uff0c\u6240\u4ee5 3* add(4,7) \u5b9e\u9645\u7684\u66ff\u6362\u60c5\u51b5\u662f\uff1a 3*4+7=19 \uff1b\u82e5 a+b \u6709\u62ec\u53f7\uff0c #define add(a,b) \uff08 a+b \uff09\u5219\u7ed3\u679c\u4e3a\uff1a 3* \uff08 4+7 \uff09 =33 \uff1b",
      "optionB": "19",
      "type": "1",
      "optionA": "33",
      "question": "\u8f93\u51fa\u4ee5\u4e0b\u7ed3\u679c\uff1a#define add(a,b) a+b\nint main() { \n printf(\"%d\\n\",3 * add(4,7)); \n return 0;\n}",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7ec",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "40",
      "optionC": "30",
      "optionAnswer": "C",
      "answer": "\u56e0\u4e3a\u6307\u9488\u53d8\u91cfp\u7684\u521d\u59cb\u503c\u6307\u5411\u6570\u7ec4a,\u6240\u4ee5\u6267\u884cfor\u5faa\u73af\u8bed\u53e5\u540e,\u6570\u7ec4a\u4e2d\u7684\u5143\u7d20\u7684\u503c\u4e0d\u53d8\u3002\u56e0\u6b64C\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "20",
      "type": "1",
      "optionA": "10",
      "question": "#include <stdio.h>\nmain( )\n{\n    int a [ ] \uff1d\uff5b10,20,30,40\uff5d,\ufe61p \uff1d a,i;\n    for(i \uff1d 0;i <\uff1d 3;i + +)\n    {\n        a [i]\uff1d\ufe61p;p + +;\n    }\n    printf(\"%d\uff3cn\",a [2]);\n} \n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "10\u76cf\uff0c1\uff0c4\uff0c9\uff0c16\uff0c25\uff0c36\uff0c49\uff0c64\uff0c81\uff0c100\n\u6309\u7167\u540c\u5b66\u6765\u770b\uff0c\u6bcf\u4e2a\u540c\u5b66\u53ea\u4f1a\u6309\u662f\u81ea\u5df1\u7684\u500d\u6570\u7684\u706f\u3002\n\u90a3\u4e48\u6211\u4eec\u8f6c\u6362\u6210\u706f\u6765\u770b\u7684\u8bdd\uff0c\u6bcf\u4e2a\u706f\u53ea\u4f1a\u88ab\u662f\u81ea\u5df1\u7684\u56e0\u5b50\u7684\u540c\u5b66\u6309\u3002\n\u90a3\u4e48\u4e00\u4e2a\u521d\u59cb\u5316\u4e3a\u706d\u7684\u706f\uff0c\u5982\u4f55\u6700\u540e\u53d8\u6210\u4e00\u76cf\u4eae\u7684\u706f\u5462\uff1f\n\u5f88\u660e\u663e\uff0c\u53ea\u6709\u5b83\u6709\u5947\u6570\u4e2a\u56e0\u5b50\u7684\u65f6\u5019\uff0c\u624d\u6709\u53ef\u80fd\u3002\n\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u4e00\u4e2a\u6570\u53ef\u4ee5\u6709\u5947\u6570\u4e2a\u56e0\u5b50\u5462\uff1f\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6570N \uff0c\u90fd\u53ef\u4ee5\u5206\u89e3\u6210 N = a * b\u7684\u4e58\u79ef\uff0c\u5373\u4efb\u610f\u4e00\u4e2a\u6570\u90fd\u53ef\u4ee5\u5206\u89e3\u6210 M\u4e2a(a * b) \u7684\u4e58\u79ef\u3002\n\u6240\u4ee5\u82e5\u60f3\u6ee1\u8db3\u5b58\u5728\u5947\u6570\u4e2a\u56e0\u5b50\uff0ca \u5fc5\u987b\u7b49\u4e8e b.\n\u5373 N = a2,\u6240\u4ee5\u53ea\u6709\u5e73\u65b9\u6570\u6700\u540e\u624d\u6ee1\u8db3\u8981\u6c42\uff0c\u6545\u53ef\u4ee5\u57280(n)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u8be5\u95ee\u9898\u3002 ",
      "ID": "55f2e51de4b0152a61143349",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6709\u7f16\u53f71~100\u4e2a\u706f\u6ce1\uff0c\u8d77\u521d\u6240\u6709\u7684\u706f\u90fd\u662f\u706d\u7684\u3002\u6709100\u4e2a\u540c\u5b66\u6765\u6309\u706f\u6ce1\u5f00\u5173\uff0c\u5982\u679c\u706f\u662f\u4eae\u7684\uff0c\u90a3\u4e48\u6309\u8fc7\u5f00\u5173\u4e4b\u540e\uff0c\u706f\u4f1a\u706d\u6389\u3002\u5982\u679c\u706f\u662f\u706d\u7684\uff0c\u6309\u8fc7\u5f00\u5173\u4e4b\u540e\u706f\u4f1a\u4eae\u3002\n\u73b0\u5728\u5f00\u59cb\u6309\u5f00\u5173\u3002\n\u7b2c1\u4e2a\u540c\u5b66\uff0c\u628a\u6240\u6709\u7684\u706f\u6ce1\u5f00\u5173\u90fd\u6309\u4e00\u6b21(\u6309\u5f00\u5173\u706f\u7684\u7f16\u53f7\uff1a 1,2,3,......100)\u3002\n\u7b2c2\u4e2a\u540c\u5b66\uff0c\u9694\u4e00\u4e2a\u706f\u6309\u4e00\u6b21(\u6309\u5f00\u5173\u706f\u7684\u7f16\u53f7\uff1a 2,4,6,......,100)\u3002\n\u7b2c3\u4e2a\u540c\u5b66\uff0c\u9694\u4e24\u4e2a\u706f\u6309\u4e00\u6b21(\u6309\u5f00\u5173\u706f\u7684\u7f16\u53f7\uff1a 3,6,9,......,99)\u3002\n......\n\u95ee\u9898\u662f\uff0c\u5728\u7b2c100\u4e2a\u540c\u5b66\u6309\u8fc7\u4e4b\u540e\uff0c\u6709\u591a\u5c11\u76cf\u706f\u662f\u4eae\u7740\u7684\uff1f\u8fd9\u4e9b\u706f\u7684\u7f16\u53f7\u662f\u591a\u5c11\uff1f\u8981\u6c42\u7ed9\u51fa\u89e3\u9898\u601d\u8def\u6216\u7ed9\u51fa\u4f2a\u7801\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u601d\u8def\uff1a \nF0=an;\nF1=anx+an-1\nFn=xF(n-1)+an-1\n\u4ee3\u7801\uff1a    \n\nfunction sum(int a[], int n, int x){\n    s=a[n]\n    for(int i=1; i<=n; i++){\n        s += x*s + a[n-i]\n    }\n    return s;\n}",
      "ID": "55f2e51de4b0152a61143363",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8ba1\u7b97\u673a\u4e2d\u5904\u7406\u4e58\u6cd5\u7684\u6307\u4ee4\u8981\u6bd4\u52a0\u6cd5\u590d\u6742\u7684\u591a\uff0c \u56e0\u4e3a\u5728\u4e00\u4e9b\u5173\u952e\u7cfb\u7edf\u4e2d\u6211\u4eec\u5e38\u5e38\u4f1a\u8003\u8651\u5982\u4f55\u5c3d\u53ef\u80fd\u51cf\u5c11\u4e58\u6cd5\u7684\u8fd0\u7b97\u3002\n\u73b0\u5728\u6709\u5982\u4e0b\u7684\u8868\u8fbe\u5f0f\ny= anxn+an-1xn-1 +\u2026..+a1x +a0\n\u5176\u4e2dan, an-1, \u2026.a1, a0\u662f\u5e38\u6570\uff0c \u7ed9\u4e00\u4e2ax\uff0c \u8981\u6c42\u5c3d\u5feb\u7b97\u51fay\u7684\u503c\u3002\u8bf7\u5c1d\u8bd5\u5199\u51fa\u8fd9\u6837\u7684\u4e00\u4e2a\u51fd\u6570\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a6114312f",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "car.taxi",
      "optionC": "1234",
      "optionAnswer": "B",
      "answer": "A \u5173\u952e\u5b57; C\u6570\u5b57\u5f00\u5934;D\uff1a\u6709.",
      "optionB": "$Usdollars",
      "type": "1",
      "optionA": "new",
      "question": "\u4e0b\u5217\u6807\u8bc6\u7b26\u5408\u6cd5\u7684\u6709\uff08 \uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143139",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u5168\u9519",
      "optionC": "\u8fd9\u6837\u505a\u662f\u9519\u8bef\u7684",
      "optionAnswer": "A",
      "answer": "C++\u7684\u591a\u6001\u80af\u5b9a\u662f\u4f7f\u7528\u7236\u7c7b\u7684\u6307\u9488\u6307\u5411\u5b50\u7c7b\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u80af\u5b9a\u662f\u91ca\u653e\u5b50\u7c7b\u7684\u5bf9\u8c61\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u865a\u51fd\u6570\u7684\u8bdd\uff0c \u7236\u7c7b\u7684\u6307\u9488\u5c31\u53ea\u80fd\u591f\u91ca\u653e\u7236\u7c7b\u7684\u5bf9\u8c61\u3002",
      "optionB": "\u91ca\u653e\u5b50\u7c7b\u6307\u9488\u65f6\u80fd\u6b63\u786e\u91ca\u653e\u7236\u7c7b\u5bf9\u8c61",
      "type": "1",
      "optionA": "\u91ca\u653e\u7236\u7c7b\u6307\u9488\u65f6\u80fd\u6b63\u786e\u91ca\u653e\u5b50\u7c7b\u5bf9\u8c61",
      "question": "C++\u5c06\u7236\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\uff0c\u4e0b\u5217\u6b63\u786e\u7684\u662f\u54ea\u4e2a\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114323c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "24\u5b57\u8282",
      "optionC": "20\u5b57\u8282",
      "optionAnswer": "B",
      "answer": "\u89e3\u91ca \uff1a\n(1) ch \u4e00\u4e2a\u5b57\u8282 \uff0c\u4f46\u8981\u5b57\u8282\u5bf9\u9f50\uff0c\u6240\u4ee5\u662f4\u4e2a\u5b57\u8282\n\uff082\uff09* ptr \u6307\u9488 \u572832\u4e3a\u673a\u5668\u4fa0\uff0c\u662f4\u4e2a\u5b57\u8282\n\uff083\uff09union \u53d6\u6700\u957f\u7684\u53d8\u91cf\u7684\u5b57\u8282\u6570\uff0c \u662f4\u4e2a\u5b57\u8282\n\uff084\uff09*next \u4e5f\u662f\u6307\u9488\uff0c 4\u4e2a\u5b57\u8282\n\u52a0\u8d77\u6765\u662f16\u4e2a\u5b57\u8282\u3002",
      "optionB": "16\u5b57\u8282",
      "type": "1",
      "optionA": "12\u5b57\u8282",
      "question": "\u4e0b\u9762\u7ed3\u6784\u4f53\n\nstruct s1 {\n    char ch, *ptr;\n    union {\n        short a, b;\n        unsigned int c:2, d:1;\n    }\n    struct s1 *next;\n};\n\u7684\u5927\u5c0f\u662f_____\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de814",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u8be5\u7c7b\u7684\u9759\u6001\u6570\u636e\u6210\u5458\u53d8\u91cf\u7684\u503c\u4e0d\u53ef\u4fee\u6539",
      "optionC": "\u8be5\u7c7b\u7684\u9759\u6001\u65b9\u6cd5\u53ea\u80fd\u8bbf\u95ee\u8be5\u7c7b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf",
      "optionAnswer": "D",
      "answer": "\u9759\u6001\u6570\u636e\u6210\u5458\u53d8\u91cf\u7684\u503c\u53ef\u4ee5\u4fee\u6539",
      "optionB": "\u9759\u6001\u6210\u5458\u53d8\u91cf\u53ef\u88ab\u8be5\u7c7b\u7684\u6240\u6709\u65b9\u6cd5\u8bbf\u95ee",
      "type": "1",
      "optionA": "\u8be5\u7c7b\u7684\u5bf9\u8c61\u5171\u4eab\u5176\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u503c",
      "question": "\u4e0b\u5217\u5173\u4e8e\u4e00\u4e2a\u7c7b\u7684\u9759\u6001\u6210\u5458\u7684\u63cf\u8ff0\u4e2d\uff0c\u4e0d\u6b63\u786e\u7684\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143268",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "-1",
      "optionC": "1",
      "optionAnswer": "D",
      "answer": "\u672c\u9898\u8003\u67e5\u4f4d\u8fd0\u7b97\u4e2d\u6309\u4f4d\u53d6\u53cd,0\u6309\u4f4d\u53d6\u53cd\u5c31\u662f\uff0d1,\u6240\u4ee5\u9009\u9879D\u6b63\u786e\u3002",
      "optionB": "0",
      "type": "1",
      "optionA": "8",
      "question": "\u6709\u4ee5\u4e0b\u7a0b\u5e8f\n\n#include <stdio.h>\nmain(){\n    int i=0;\n    i=\uff5ei;\n    printf(\"%d\\n\",i);\n\uff5d\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f?",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c74",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "a.operator++()",
      "optionC": "operator++(a,1)",
      "optionAnswer": "D",
      "answer": "\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\uff0c\u524d\u7f00\u5148\u8ba9\u53d8\u91cf\u53d8\u5316\u3002\u8c03\u7528\uff0b\uff0ba\uff0c\u7b49\u4ef7\u4e3aa.operator++(),\u6ce8\u610f\u65e0\u53c2\n\u7684\u5f62\u5f0f\u3002\u540e\u7f00\u7684\u8bdda++,\u7b49\u4ef7\u4e8ea.operator(0),\u5e26\u5f62\u53c2\uff0c\u5f62\u53c2\u540d\u53ef\u7701\u3002",
      "optionB": "operator++(a)",
      "type": "1",
      "optionA": "a.operator++(1)",
      "question": "\u5982\u679c\u8868\u8fbe\u5f0f++a\u4e2d\u7684\u201c++\u201d\u662f\u4f5c\u4e3a\u6210\u5458\u51fd\u6570\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\uff0c\u82e5\u91c7\u7528\u8fd0\u7b97\u7b26\u51fd\u6570\u8c03\u7528\u683c\u5f0f\uff0c\u5219\u53ef\u8868\u793a\u4e3a\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143133",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u7528\u6cd5\u6b63\u786e",
      "optionC": "\u51fd\u6570\u5185\uff0c\u5916\u7684\u90fd\u6709\u95ee\u9898",
      "optionAnswer": "A",
      "answer": "\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u4e3a6\uff0c\u56e0\u4e3a\u8fd8\u6709'\\0'\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a\u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c\u4e00\u4e2a\u6307\u9488\u4e3a4\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8fd4\u56de4\u3002",
      "optionB": "\u51fd\u6570\u5916\u7684\u6709\u95ee\u9898",
      "type": "1",
      "optionA": "\u51fd\u6570\u5185\u7684\u6709\u95ee\u9898",
      "question": "\u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f\nvoid UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd\n{\n    for ( size_t i = 0; i < sizeof(str) / sizeof(str[0]); ++i )\n        if ( 'a' <= str && str <= 'z' )\n            str -= ('a' - 'A' );\n}\nchar str[] = \"aBcDe\";\ncout < < \"str\u5b57\u7b26\u957f\u5ea6\u4e3a: \" < < sizeof(str) / sizeof(str[0]) < < endl;\nUpperCase( str );\ncout < < str < < endl;",
      "title": "C&C++"
    },
    {
      "answer": "\u5e73\u8861\u4e8c\u53c9\u6811\uff08Balanced Binary Tree\uff09\u53c8\u88ab\u79f0\u4e3aAVL\u6811\uff08\u6709\u522b\u4e8eAVL\u7b97\u6cd5\uff09\uff0c\u4e14\u5177\u6709\u4ee5\u4e0b\u6027\u8d28\uff1a\u5b83\u662f\u4e00 \u68f5\u7a7a\u6811\u6216\u5b83\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc71\uff0c\u5e76\u4e14\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u90fd\u662f\u4e00\u68f5\u5e73\u8861\u4e8c\u53c9\u6811\u3002\u6784\u9020\u4e0e\u8c03\u6574\u65b9\u6cd5 \u5e73\u8861\u4e8c\u53c9\u6811\u7684\u5e38\u7528\u7b97\u6cd5\u6709\u7ea2\u9ed1\u6811\u3001AVL\u3001Treap\u7b49\u3002 \u6700\u5c0f\u4e8c\u53c9\u5e73\u8861\u6811\u7684\u8282\u70b9\u7684\u516c\u5f0f\u5982\u4e0b F(n)=F(n-1)+F(n-2)+1 \u8fd9\u4e2a\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u9012\u5f52\u7684\u6570\u5217\uff0c\u53ef\u4ee5\u53c2\u8003Fibonacci\u6570\u5217\uff0c1\u662f\u6839\u8282\u70b9\uff0cF(n-1)\u662f\u5de6\u5b50\u6811\u7684\u8282\u70b9\u6570\u91cf\uff0cF(n-2)\u662f\u53f3\u5b50\u6811\u7684\u8282\u70b9\u6570\u91cf\u3002",
      "ID": "55f2e51ee4b0152a611433d0",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "1)\u5355\u53f0\u7f13\u5b58\u670d\u52a1\u5668\u6545\u969c,\u6574\u4e2a\u5206\u5e03\u5f0f\u7f13\u5b58\u96c6\u7fa4,\u53ef\u4ee5\u7ee7\u7eed\u63d0\u4f9b\u670d\u52a1:\n    \u70ed\u5907;\n2)\u901a\u8fc7\u4e00\u5b9a\u7684\u5206\u914d\u7b56\u7565,\u53ef\u4ee5\u4fdd\u8bc1\u5145\u5206\u5229\u7528\u6bcf\u4e2a\u7f13\u5b58\u670d\u52a1\u7684\u5b58\u50a8\u7a7a\u95f4,\u53ca\u8d1f\u8f7d\u5747\u8861;\n    \u5f53\u90e8\u5206\u670d\u52a1\u5668\u6545\u969c\u6216\u7cfb\u7edf\u6269\u5bb9\u65f6,\u8be5\u5206\u914d\u7b56\u7565\u53ef\u4ee5\u4fdd\u8bc1\u8f83\u5c0f\u7684\u7f13\u5b58\u6587\u4ef6\u91cd\u5206\u914d\u5f00\u9500:\n    \u5355\u53f7\u540e\u4e09\u4f4d\uff0c\u7528\u6237\u53f7\u540e\u4e09\u4f4d\uff0c\u7528\u6237\u8d26\u6237hash\u540e\u4e09\u4f4d\u7b49\u7b49\uff1b  \n\n3)\u5f53\u4e0d\u540c\u7f13\u5b58\u670d\u52a1\u5668\u7684\u5b58\u50a8\u7a7a\u95f4\u5b58\u5728\u5dee\u5f02\u65f6,\u5206\u914d\u7b56\u7565\u53ef\u4ee5\u6ee1\u8db3\u6bd4\u4f8b\u5206\u914d\uff1a\n    \u76d1\u63a7\u3002",
      "ID": "55f2e51ee4b0152a611433ac",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5728\u73b0\u4ee3\u7cfb\u7edf\u7684\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d,\u4e3a\u4e86\u51cf\u8f7b\u8bf7\u6c42\u7684\u538b\u529b,\u901a\u5e38\u91c7\u7528\u7f13\u5b58\u6280\u672f\u3002\u4e3a\u4e86\u8fdb\u4e00\u6b65\u63d0\u5347 \u7f13\u5b58\u7684\u547d\u4e2d\u7387,\u901a\u5e38\u91c7\u7528\u5206\u5e03\u5f0f\u7f13\u5b58\u65b9\u6848\u3002\u5373\u524d\u7aef\u7684\u8c03\u5ea6\u6a21\u5757,\u5c06\u9488\u5bf9\u4e0d\u540c\u5185\u5bb9\u7684\u7528\u6237\u8bf7\u6c42 \u5206\u914d\u4e0d\u540c\u7684\u7f13\u5b58\u670d\u52a1\u5668\u5411\u7528\u6237\u63d0\u4f9b\u670d\u52a1\u3002\u8bf7\u7ed9\u51fa\u4e00\u4e2a\u5206\u5e03\u5f0f\u7f13\u5b58\u65b9\u6848,\u6ee1\u8db3\u5982\u4e0b\u8981\u6c42:\n1)\u5355\u53f0\u7f13\u5b58\u670d\u52a1\u5668\u6545\u969c,\u6574\u4e2a\u5206\u5e03\u5f0f\u7f13\u5b58\u96c6\u7fa4,\u53ef\u4ee5\u7ee7\u7eed\u63d0\u4f9b\u670d\u52a1;\n2)\u901a\u8fc7\u4e00\u5b9a\u7684\u5206\u914d\u7b56\u7565,\u53ef\u4ee5\u4fdd\u8bc1\u5145\u5206\u5229\u7528\u6bcf\u4e2a\u7f13\u5b58\u670d\u52a1\u7684\u5b58\u50a8\u7a7a\u95f4,\u53ca\u8d1f\u8f7d\u5747\u8861\u3002\u5f53 \u90e8\u5206\u670d\u52a1\u5668\u6545\u969c\u6216\u7cfb\u7edf\u6269\u5bb9\u65f6,\u8be5\u5206\u914d\u7b56\u7565\u53ef\u4ee5\u4fdd\u8bc1\u8f83\u5c0f\u7684\u7f13\u5b58\u6587\u4ef6\u91cd\u5206\u914d\u5f00\u9500\u3002\n3)\u5f53\u4e0d\u540c\u7f13\u5b58\u670d\u52a1\u5668\u7684\u5b58\u50a8\u7a7a\u95f4\u5b58\u5728\u5dee\u5f02\u65f6,\u5206\u914d\u7b56\u7565\u53ef\u4ee5\u6ee1\u8db3\u6bd4\u4f8b\u5206\u914d",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de81e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u591a\u6001\u662f\u4e3a\u4e86\u63a5\u53e3\u91cd\u7528\uff0c\u5c01\u88c5\u548c\u7ee7\u627f\u662f\u4e3a\u4e86\u4ee3\u7801\u91cd\u7528",
      "optionC": "\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u7236\u7c7b\u865a\u51fd\u6570\u7684\u65b9\u6cd5\u53eb\u505a\u91cd\u8f7d",
      "optionAnswer": "C",
      "answer": "\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u7236\u7c7b\u865a\u51fd\u6570\u7684\u65b9\u6cd5\u53eb\u505a\u8986\u5199",
      "optionB": "\u6784\u9020\u51fd\u6570\u4e0d\u53ef\u4ee5\u662f\u865a\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u51fd\u6570",
      "type": "1",
      "optionA": "\u9762\u5411\u5bf9\u8c61\u7684\u57fa\u672c\u7279\u6027\u662f\u5c01\u88c5\uff0c\u7ee7\u627f\u548c\u591a\u6001",
      "question": "\u4ee5\u4e0b\u5173\u4e8e\u9762\u5411\u5bf9\u8c61\u7684\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143250",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "hellothird",
      "optionC": "first second",
      "optionAnswer": "D",
      "answer": "case\u8bed\u53e5\u540e\u9762\u6ca1\u6709break\uff0c\u987a\u5e8f\u6267\u884c\u3002",
      "optionB": "hello",
      "type": "1",
      "optionA": "second third",
      "question": "\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1a\n\n#include <iostream.h>\nvoid main() {\n    int x=3,y=3;\n    switch(x%2) {\n        case 1:\n            switch (y) {\n        case 0:cout<<\"first\";\n        case 1:cout<<\"second\";break;\n        default: cout<<\"hello\";\n    }\n    case 2:cout<<\"third\";\n    }\n}",
      "title": "C&C++"
    },
    {
      "answer": "12",
      "ID": "55f2e51ce4b0152a61143327",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u628a4000\u4e2a\u8282\u70b9\u7ec4\u6210\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6700\u5c0f\u9ad8\u5ea6\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c19",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u7c7bA\u7684\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7c7bB\u7684\u5bf9\u8c61\u7684\u4efb\u4f55\u6210\u5458",
      "optionC": "\u7c7bC\u7684\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7c7bB\u7684\u5bf9\u8c61\u7684\u4efb\u4f55\u6210\u5458",
      "optionAnswer": "C",
      "answer": "\u53cb\u5143\u8bf4\u660e\u65b9\u6cd5\u5982\u4e0b\uff1a\nfriend?<\u7c7b\u540d>;//\u53cb\u5143\u7c7b\u7c7b\u540d\n\u4f7f\u7528\u53cb\u5143\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u6210\u5458\uff1a\n(1)\u53cb\u5143\u5173\u7cfb\u4e0d\u80fd\u88ab\u7ee7\u627f\u3002\n(2)\u53cb\u5143\u5173\u7cfb\u662f\u5355\u5411\u7684\uff0c\u4e0d\u5177\u6709\u4ea4\u6362\u6027\u3002\u6240\u4ee5\uff0cB\u9879\u548cD\u9879\u9519\u8bef\u3002\n(3)\u53cb\u5143\u5173\u7cfb\u4e0d\u5177\u6709\u4f20\u9012\u6027\u3002\u6240\u4ee5\uff0cA\u9879\u9519\u8bef\u3002",
      "optionB": "\u7c7bC\u4e00\u5b9a\u662f\u7c7bA\u7684\u53cb\u5143",
      "type": "1",
      "optionA": "\u7c7bA\u4e00\u5b9a\u662f\u7c7bC\u7684\u53cb\u5143",
      "question": "\u5df2\u77e5\u7c7bA\u662f\u7c7bB\u7684\u53cb\u5143\uff0c\u7c7bB\u662f\u7c7bC\u7684\u53cb\u5143\uff0c\u5219\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114322e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "200\uff0c50",
      "optionC": "200\uff0c-100",
      "optionAnswer": "B",
      "answer": "Derived Obj;\nBase *pObj = &Obj;\nprintf(\"%d,\", pObj->Bar((char)(100)))\nprintf(\"%d,\", pObj->Bar(100));\n\u7b2c\u4e00\u4e2aBar\uff08char\uff09\u662f\u975e\u865a\u51fd\u6570\uff0c\u56e0\u6b64\u662f\u9759\u6001\u7ed1\u5b9a\uff0c\u9759\u6001\u7ed1\u5b9a\u662f\u6307\u6307\u9488\u6307\u5411\u58f0\u660e\u65f6\u7684\u5bf9\u8c61\uff0cpObj\u58f0\u660e\u65f6\u4e3aBase\u7c7b\uff0c\u56e0\u6b64\u8c03\u7528\u7684\u662fBase\u7c7b\u7684Bar\uff08char\uff09\n\u7b2c\u4e8c\u4e2aBar\uff08char\uff09\u662f\u865a\u51fd\u6570\uff0c\u56e0\u6b64\u662f\u52a8\u6001\u7ed1\u5b9a\uff0c\u52a8\u6001\u7ed1\u5b9a\u662f\u6307\u6307\u9488\u6307\u5411\u5f15\u7528\u7684\u5bf9\u8c61\uff0cpObj\u5f15\u7528Derived\u5bf9\u8c61\uff0c\u56e0\u6b64\u8c03\u7528\u7684\u662fDerived\u7c7b\u7684Bar\uff08int\uff09",
      "optionB": "100\uff0c50",
      "type": "1",
      "optionA": "100\uff0c-100",
      "question": "\u4e0b\u5217\u4e00\u6bb5C++\u4ee3\u7801\u7684\u8f93\u51fa\u662f?#include \"stdio.h\"\nclass Base\n {\n public:\n     int Bar(char x)\n     {\n         return (int)(x);\n     }\n     virtual int Bar(int x)\n     {\n         return (2 * x);\n     }\n };\n class Derived : public Base\n {\n public:\n     int Bar(char x)\n     {\n         return (int)(-x);\n     }\n     int Bar(int x)\n     {\n         return (x / 2);\n     }\n };\n int main(void)\n {\n     Derived Obj;\n     Base *pObj = &Obj;\n     printf(\"%d,\", pObj->Bar((char)(100)));\n     printf(\"%d,\", pObj->Bar(100));\n }",
      "title": "C&C++"
    },
    {
      "ID": "55e429cfe4b0152a610c8336",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "None of the above.",
      "optionC": "Multiple threads mar cause deadlock,while multiple processes won't cause deadlock.",
      "optionAnswer": "B",
      "answer": "B\u662f\u5bf9\u7684\uff0cAC\u90fd\u6709\u9519",
      "optionB": "Changes to the main thread(cancellation\uff0cpriority change\uff0cetc.) may affect the behavior of the other threads of the process; Changes to the parent process does not affect child processes.",
      "type": "1",
      "optionA": "Threads share the same address space of the parent process;Processes share the same address space of the parent process.",
      "question": "Which statement(s) is(are) correct about thread and process\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114327a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "int* (*fun)(int *)",
      "optionC": "int* fun(int *)",
      "optionAnswer": "B",
      "answer": "int (*func)(int*)",
      "optionB": "int (*fun)(int *)",
      "type": "1",
      "optionA": "int (*fun)(int)",
      "question": "\u5728\u6e38\u620f\u8bbe\u8ba1\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u6839\u636e\u4e0d\u540c\u7684\u6e38\u620f\u72b6\u6001\u8c03\u7528\u4e0d\u540c\u7684\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u6307\u9488\u6765\u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\uff0c\u8bf7\u58f0\u660e\u4e00\u4e2a\u53c2\u6570\u4e3aint *\uff0c\u8fd4\u56de\u503c\u4e3aint\u7684\u51fd\u6570\u6307\u9488\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217",
      "ID": "55f2e51de4b0152a61143387",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u4e00\u4e2a query \u548c\u4e00\u4e2a text,\u5747\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u8981\u6c42\u5728 text \u4e2d\u627e\u51fa\u4ee5\u540c\u6837\u7684\u987a\u5e8f\u8fde \u7eed\u51fa\u73b0\u5728 query \u4e2d\u7684\u6700\u957f\u8fde\u7eed\u5b57\u6bcd\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u4f8b\u5982, query \u4e3a\u201cacbac\u201d,text \u4e3a \u201cacaccbabb\u201d,\u90a3\u4e48 text \u4e2d\u7684\u201ccba\u201d\u4e3a\u6700\u957f\u7684\u8fde\u7eed\u51fa\u73b0\u5728 query \u4e2d\u7684\u5b57\u6bcd\u5e8f\u5217,\u56e0\u6b64, \u8fd4\u56de\u7ed3\u679c\u5e94\u8be5\u4e3a\u5176\u957f\u5ea6 3\u3002\u8bf7\u6ce8\u610f\u7a0b\u5e8f\u6548\u7387\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143156",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u7c7b\u7684\u5185\u8054\u51fd\u6570\u5fc5\u987b\u5728\u7c7b\u4f53\u5916\u901a\u8fc7\u5173\u952e\u5b57inline\u5b9a\u4e49",
      "optionC": "\u7c7b\u7684\u5185\u8054\u51fd\u6570\u5fc5\u987b\u5728\u7c7b\u4f53\u5185\u5b9a\u4e49",
      "optionAnswer": "B",
      "answer": "\u5185\u8054\u51fd\u6570\u662f\u6307\u7528inline\u5173\u952e\u5b57\u4fee\u9970\u7684\u51fd\u6570\u3002\u5728\u7c7b\u5185\u5b9a\u4e49\u7684\u51fd\u6570\u88ab\u9ed8\u8ba4\u6210\u5185\u8054\u51fd\u6570\u3002\n\u5185\u8054\u51fd\u6570\u4ece \u6e90\u4ee3\u7801 \u5c42\u770b\uff0c\u6709\u51fd\u6570\u7684\u7ed3\u6784\uff0c\u800c\u5728\u7f16\u8bd1\u540e\uff0c\u5374\u4e0d\u5177\u5907\u51fd\u6570\u7684\u6027\u8d28\u3002\u5185\u8054\u51fd\u6570\u4e0d\u662f\u5728\u8c03\u7528\u65f6\u53d1\u751f\u63a7\u5236\u8f6c\u79fb\uff0c\u800c\u662f\u5728\u7f16\u8bd1\u65f6\u5c06\u51fd\u6570\u4f53\u5d4c\u5165\u5728\u6bcf\u4e00\u4e2a\u8c03\u7528\u5904\u3002\u7f16\u8bd1\u65f6\uff0c\u7c7b\u4f3c\u5b8f\u66ff\u6362\uff0c\u4f7f\u7528 \u51fd\u6570\u4f53 \u66ff\u6362\u8c03\u7528\u5904\u7684\u51fd\u6570\u540d\u3002\u4e00\u822c\u5728\u4ee3\u7801\u4e2d\u7528inline\u4fee\u9970\uff0c\u4f46\u662f\u80fd\u5426\u5f62\u6210\u5185\u8054\u51fd\u6570\uff0c\u9700\u8981\u770b \u7f16\u8bd1\u5668 \u5bf9\u8be5\u51fd\u6570\u5b9a\u4e49\u7684\u5177\u4f53\u5904\u7406\u3002 \n\u6b63\u786e\u7b54\u6848\u9009B\uff0cC\u548cD\u90fd\u4e0d\u5b8c\u5168\uff0c\u5982\u679c\u5c06C\u548cD\u4e2d\u7684\u201c\u5fc5\u987b\u201d\u6362\u6210\u201c\u53ef\u4ee5\u201d\uff0c\u90a3\u4e48C\u548cD\u4e5f\u662f\u5bf9\u7684\u3002",
      "optionB": "\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5c06\u8be5\u51fd\u6570\u7684\u76ee\u6807\u4ee3\u7801\u63d2\u5165\u6bcf\u4e2a\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5730\u65b9",
      "type": "1",
      "optionA": "\u5185\u8054\u51fd\u6570\u5728\u8fd0\u884c\u65f6\u662f\u5c06\u8be5\u51fd\u6570\u7684\u76ee\u6807\u4ee3\u7801\u63d2\u5165\u6bcf\u4e2a\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5730\u65b9",
      "question": "\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "answer": "\u5178\u578b\u7684\u8d1d\u53f6\u65af\u516c\u5f0f\uff0cp(\u7532|\u5e9f\u54c1) = p(\u7532 && \u5e9f\u54c1) / p(\u5e9f\u54c1) = \uff080.4 \u00d7 0.01\uff09 /\uff080.4 \u00d7 0.01 + 0.6 \u00d7 0.02\uff09 = 0.25",
      "ID": "55f2e51ee4b0152a611433b8",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4e00\u4e2a\u6c7d\u8f66\u516c\u53f8\u7684\u4ea7\u54c1\uff0c\u7532\u5382\u536040%\uff0c\u4e59\u5382\u536060%\uff0c\u7532\u7684\u6b21\u54c1\u7387\u662f1%\uff0c\u4e59\u7684\u6b21\u54c1\u7387\u662f2%\uff0c\u73b0\u5728\u62bd\u51fa\u4e00\u4ef6\u6c7d\u8f66\u65f6\u6b21\u54c1\uff0c\u95ee\u662f\u7532\u751f\u4ea7\u7684\u53ef\u80fd\u6027\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de801",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "6",
      "optionC": "5",
      "optionAnswer": "B",
      "answer": "\u51fd\u6570\u539f\u578bexec((vl\uff0cv2)\uff0c(v3\uff0cv4)\uff0cv5\uff0cv6);\n\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u4e24\u4e2a\u5f62\u53c2\u7ec4\u6210\u662f\u4e00\u4e2a\u9017\u53f7\u8fd0\u7b97\u7b26\u7ec4\u6210\u7684\u8868\u8fbe\u5f0f\nC\u8bed\u8a00\u4e2d\u9017\u53f7\u8fd0\u7b97\u7b26\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a\u8868\u8fbe\u5f0f\u7684\u503c\n\u6240\u4ee5(vl\uff0cv2)\u548c(v3\uff0cv4)\u662f\u4e24\u4e2a\u9017\u53f7\u8868\u8fbe\u5f0f\uff0c\u76f8\u5f53\u4e8e\u4e24\u4e2a\u5b9e\u53c2\n\u6240\u4ee5\u4e00\u51714\u4e2a\u5b9e\u53c2",
      "optionB": "4",
      "type": "1",
      "optionA": "3",
      "question": "\u51fd\u6570\u8c03\u7528exec((vl\uff0cv2)\uff0c(v3\uff0cv4)\uff0cv5\uff0cv6);\u4e2d\uff0c\u5b9e\u53c2\u7684\u4e2a\u6570\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "answer": "public class IsACouldRevertToB { public static boolean didACouldRevertToB(char[] A,char[] B){ if(B==null || B.length != A.length) return false; boolean re = true; int hash = 0; for(int i = 0; i < A.length; i++) { hash |= (1<<(A[i]-'A')); } for(int i = 0; i < B.length; i++) { hash &= (1<<(B[i]-'A')); if(hash==0){ re = false; break; } } // System.out.println(hash); return re; } public static void main(String[] args) { // TODO Auto-generated method stub String A = \"ABCD\"; String B = \"defe\"; didACouldRevertToB(A.toCharArray(),B.toCharArray()); } }",
      "ID": "55f2e51ee4b0152a611433b3",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5b57\u7b26\u4e32ABCD\uff0c\u53ef\u4ee5\u7531\u5b57\u7b26\u4e32BCDA\u6216\u8005CDAB\u901a\u8fc7\u5faa\u73af\u79fb\u4f4d\u800c\u5f97\u5230\u3002\u8bf7\u7f16\u7a0b\u5b9e\u73b0\u4ee5\u4e0b\u68c0\u6d4b\uff1a\u5b57\u7b26\u4e32S1\u662f\u5426\u53ef\u4ee5\u7531\u5b57\u7b26\u4e32S2\u901a \u8fc7\u5faa\u73af\u79fb\u4f4d\u800c\u5f97\u5230\u3002 \u8bed\u8a00\u4e0d\u9650\uff08\u63a8\u8350C/C++,\u4e0d\u63a8\u8350\u5199\u4f2a\u7801\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2dfa6e4b0152a61142e2d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "Many clustered index",
      "optionC": "clustered index and many non-clustered indexes",
      "optionAnswer": "D",
      "answer": "\u4e00\u5f20\u8868\u4e0d\u80fd\u6709\u591a\u4e2a\u4e1b\u805a\u7d22\u5f15",
      "optionB": "A clustered index",
      "type": "1",
      "optionA": "No indexes",
      "question": "A table CANNOT have one or more of the following index configurations.",
      "title": "C&C++"
    },
    {
      "answer": "//step1. add same node to nodes in list\n//step2. init the random pointer\n//step3. split the list to two parts, return newNode\n \nNode *deepCopy (Node *head) {\n                    Node *p = head, *q = head->next, *newNode = NULL;\n     \n    //step 1\n    while (p != NULL) {    \n        newNode = (Node *)malloc(sizeof(Node));\n        newNode->next = p->next;\n        p->next = newNode;\n        newNode->value = p->value;\n        newNode->random = NULL;\n \n        p = q;\n        q = q->next;\n    }\n \n    //step 2\n    p = head;\n    q = p->next;\n    while (q != NULL) {\n        if (p->random != NULL)\n            q->random = q->random->next;\n        if (q->next == NULL)\n            break;\n        p = q->next;\n        q = p->next;\n    }  //step 3\n    newNode = head->next;\n    p = head; q = p->next;\n    while (q != NULL) {\n        p->next = q->next;\n        if (q->next == NULL)\n            break;\n        q->next = p->next->next;\n \n        p = p->next;\n        q = q->next;\n    }\n    return newNode;\n}",
      "ID": "55f2e51ce4b0152a6114332f",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5047\u8bbe\u6709\u5982\u4e0b\u4e00\u4e2a\u94fe\u8868\uff1astruct Node\n{\n    int value ;\n    struct Node *next ;\n    struct Node *random ;\n}\n\u5176\u4e2d\uff0crandom\u6307\u5411\u8be5\u94fe\u8868\u7684\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u6216\u8005NULL\uff0c\u8bf7\u7f16\u7a0b\u5b9e\u73b0\u8be5\u94fe\u8868\u7684\u6df1\u62f7\u8d1d\u3002Node *deepCopy (Node *head)",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c1b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6d3e\u751f\u7c7b\u662f\u57fa\u7c7b\u7684\u7279\u6b8a\u5316",
      "optionC": "\u6d3e\u751f\u7c7b\u662f\u57fa\u7c7b\u5b9a\u4e49\u7684\u5ef6\u7eed",
      "optionAnswer": "B",
      "answer": "\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u4e00\u4e2a\u662f\u6765\u81ea\u57fa\u7c7b\uff0c\u4e00\u4e2a\u6765\u81ea\u672c\u8eab\uff0c\u6240\u4ee5\u6d3e\u751f\u7c7b\u662f\u57fa\u7c7b\u7684\u6269\u5c55\uff0c\u4e5f\u662f\u57fa\n\u7c7b\u7684\u5177\u4f53\u5316\u548c\u7279\u6b8a\u5316\uff0c\u6d3e\u751f\u7c7b\u662f\u5bf9\u57fa\u7c7b\u6269\u5c55\u3002B\u9879\u57fa\u7c7b\u4e0d\u80fd\u7ee7\u627f\u6d3e\u751f\u7c7b\u6210\u5458\uff0c\u6240\u4ee5\u9519\u8bef\u3002",
      "optionB": "\u57fa\u7c7b\u7ee7\u627f\u4e86\u6d3e\u751f\u7c7b\u7684\u5c5e\u6027",
      "type": "1",
      "optionA": "\u6d3e\u751f\u7c7b\u662f\u57fa\u7c7b\u7684\u5177\u4f53\u5316",
      "question": "\u5bf9\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u7684\u5173\u7cfb\u63cf\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c76",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u516c\u6709\u7ee7\u627f\u7684\u516c\u6709\u6210\u5458",
      "optionC": "\u516c\u6709\u7ee7\u627f\u7684\u4fdd\u62a4\u6210\u5458",
      "optionAnswer": "D",
      "answer": "\u516c\u6709\u6210\u5458\u53ef\u4ee5\u5728\u7c7b\u5916\u8bbf\u95ee\uff0c\u4fdd\u62a4\u7c7b\u578b\u6210\u5458\u53ef\u4ee5\u5728\u6d3e\u751f\u7c7b\u4e2d\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u5728\u7c7b\u5916\u8bbf\u95ee\n\uff0c\u5728main\u51fd\u6570\u4e2d\u8bbf\u95ee\uff0c\u8bf4\u660ea\u662f\u516c\u6709\u6210\u5458\u3002\u53ea\u6709\u516c\u6709\u7ee7\u627f\u65f6a\u624d\u80fd\u662f\u516c\u6709\u7684\uff0c\u6240\u4ee5D\u9879\u6b63\u786e\u3002",
      "optionB": "\u516c\u6709\u7ee7\u627f\u7684\u79c1\u6709\u6210\u5458",
      "type": "1",
      "optionA": "\u79c1\u6709\u7ee7\u627f\u7684\u516c\u6709\u6210\u5458",
      "question": "\u5728main\u51fd\u6570\u4e2d\u53ef\u4ee5\u7528p.a\u7684\u5f62\u5f0f\u8bbf\u95ee\u6d3e\u751f\u7c7b\u5bf9\u8c61p\u7684\u57fa\u7c7b\u6210\u5458a\uff0c\u5176\u4e2da\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de808",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "5.168",
      "optionC": "5.169",
      "optionAnswer": "C",
      "answer": "\u672c\u9898\u8003\u67e5\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e0e\u8f93\u51fa\u683c\u5f0f\u3002%f\u7684\u8f93\u51fa\u683c\u5f0f\u662f\u4ee5\u5e26\u5c0f\u6570\u70b9\u7684\u6570\u5b66\u5f62\u5f0f\u8f93\u51fa\u6d6e\u70b9\u6570\u3002\u9996\u5148\u8ba1\u7b97x * 1000,\u7ed3\u679c\u4e3a5168.94\u7136\u540e+0.5,\u7ed3\u679c\u4e3a5169.44,\u7136\u540e\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362,\u8f6c\u6362\u6210\u6574\u578b\u4e3a5169,\u7136\u540e\u9664\u4ee5\u53cc\u7cbe\u5ea6\u6570\u636e1000,\u7ed3\u679c\u4e5f\u4e3a\u53cc\u7cbe\u5ea6\u6570\u636e5.169,\u8f93\u51fa\u65f6\u6309\u7167%f\u7684\u683c\u5f0f\u8f93\u51fa,\u6240\u4ee5\u8f93\u51fa\u7ed3\u679c\u4e3a5.169000\u3002",
      "optionB": "5.175",
      "type": "1",
      "optionA": "5.17",
      "question": "\u82e5\u6709\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5double x =5.16894;\nprintf(\"%f\\n\",(int)(x * 1000+0.5)/(double)1000 );\n\u5219\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "answer": "\u975e\u9012\u5f52\u53ef\u8fd0\u884c\u4ee3\u7801\uff1a\n\ntypedef struct node {\n    struct node *next;\n    int data;\n} node;\nvoid createList(node **head, int data)\n{\n    node *pre, *cur, *new;\n    pre = NULL;\n    cur = *head;\n    while (cur != NULL) {\n        pre = cur;\n        cur = cur->next;\n    }\n    new = (node *)malloc(sizeof(node));\n    new->data = data;\n    new->next = cur;\n    if (pre == NULL)\n    *head = new;\n    else\n    pre->next = new;\n}\nvoid printLink(node *head)\n{\n    while (head->next != NULL) {\n        printf(\"%d \", head->data);\n        head = head->next;\n    }\n    printf(\"%dn\", head->data);\n}\nint linkLen(node *head)\n{\n    int len = 0;\n    while (head != NULL) {\n        len ++;\n        head = head->next;\n    }\n    return len;\n}\nnode* reverseK(node *head, int k)\n{\n    int i, len, time, now;\n    len = linkLen(head);\n    if (len < k) {\n        return head;\n        } else {\n        time = len / k;\n    }\n    node *newhead, *prev, *next, *old, *tail;\n    for (now = 0, tail = NULL; now < time; now ++) {\n        old = head;\n        for (i = 0, prev = NULL; i < k; i ++) {\n            next = head->next;\n            head->next = prev;\n            prev = head;\n            head = next;\n        }\n        if (now == 0) {\n            newhead = prev;\n        }\n        old->next = head;\n        if (tail != NULL) {\n            tail->next = prev;\n        }\n        tail = old;\n    }\n    if (head != NULL) {\n        tail->next = head;\n    }\n    return newhead;\n}\nint main(void)\n{\n    int i, n, k, data;\n    node *head, *newhead;\n    while (scanf(\"%d %d\", &n, &k) != EOF) {\n        for (i = 0, head = NULL; i < n; i ++) {\n            scanf(\"%d\", &data);\n            createList(&head, data);\n        }\n        printLink(head);\n        newhead = reverseK(head, k);\n        printLink(newhead);\n    }\n    return 0;\n}\n",
      "ID": "55f2e51ee4b0152a611433ad",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "k\u94fe\u8868\u7ffb\u8f6c\u3002\u7ed9\u51fa\u4e00\u4e2a\u94fe\u8868\u548c\u4e00\u4e2a\u6570k\uff0c\u6bd4\u5982\u94fe\u88681\u21922\u21923\u21924\u21925\u21926\uff0ck=2\uff0c\u5219\u7ffb\u8f6c\u540e2\u21921\u21924\u21923\u21926\u21925\uff0c\u82e5k=3,\u7ffb\u8f6c\u540e3\u21922\u21921\u21926\u21925\u21924\uff0c\u82e5k=4\uff0c\u7ffb\u8f6c\u540e4\u21923\u21922\u21921\u21925\u21926\uff0c\u7528\u7a0b\u5e8f\u5b9e\u73b0\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u7b54\uff1a\u548cwhile(1)\u76f8\u540c\u3002",
      "ID": "55f2e51ee4b0152a611433c1",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8bed\u53e5for( ;1;)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143276",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "6\uff0c8\uff0c8",
      "optionC": "6\uff0c8\uff0c4",
      "optionAnswer": "D",
      "answer": "sizeof\u5bf9\u6570\u7ec4\u6c42\u957f\u5ea6\u4e3a\u6570\u7ec4\u7684\u771f\u5b9e\u957f\u5ea6\uff0c\u5b57\u7b26\u4e32\u6570\u7ec4\u7684\u957f\u5ea6\u8981\u52a0\u4e0a\u6700\u540e\u7684'\\0'\u5b57\u7b26\u3002\n64\u4f4d\u673a\u5668\u7684\u6307\u9488\u53608\u4e2a\u5b57\u8282\u3002",
      "optionB": "6\uff0c6\uff0c4",
      "type": "1",
      "optionA": "5\uff0c5\uff0c8",
      "question": "\u5728linux\u4e0b64\u4f4dc\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97\u8f93\u51fa\u7684\u4e09\u4e2asizeof\u5206\u522b\u662f\uff08\uff09\n\nvoid func(char str_arg[100])\n{\n     cout<<sizeof(str_arg)<<endl;\n}\nint main(int argc,char* argv[])\n{\n     char str[]=\"Hello\";\n     char *p=str;\n     cout<<sizeof(str)<<endl;\n     cout<<sizeof(p)<<endl;\n     func(\"test\");\n     return 0;\n}",
      "title": "C&C++"
    },
    {
      "answer": "\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7",
      "ID": "55f2e51ee4b0152a611433d6",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "if (fabs(x) < 0.00001f)",
      "ID": "55f2e51ee4b0152a611433d4",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143277",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "a.y[3]=11",
      "optionC": "a.y[2]=11",
      "optionAnswer": "D",
      "answer": "\u5c0f\u7aef\u662f\u6570\u636e\u5730\u4f4d\u5b58\u50a8\u5728\u5185\u5b58\u4f4e\u4f4d,\u6240\u4ee5y[0]=0x44",
      "optionB": "a.y[1]=11",
      "type": "1",
      "optionA": "a.y[0]=11",
      "question": "\u5728\u5c0f\u7aef\u5e8f\u7684\u673a\u5668\u4e2d,\u5982\u679c \n\nunion X{\n    int x;\n    char y[4];\n};\n\u5982\u679c:\nX a;\na.x=0x11223344;//16 \u8fdb\u5236 \u5219:______",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143132",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u8981\u6b63\u786e\u7684\u5b9e\u73b0\u865a\u51fd\u6570\uff0c\u53ea\u80fd\u7528\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\u6765\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61",
      "optionC": "\u548c\u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0e\u975e\u7c7b\u7684\u6210\u5458\u51fd\u6570\u76f8\u6bd4\uff0c\u865a\u51fd\u6570\u7684\u6548\u7387\u8f83\u4f4e",
      "optionAnswer": "A",
      "answer": "\u865a\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5b9e\u73b0\u4e86\u591a\u6001\u6027?",
      "optionB": "\u865a\u51fd\u6570\u7684\u4f5c\u7528\u5c31\u662f\u5b9e\u73b0\u201c\u52a8\u6001\u8054\u7f16\u201d\uff0c\u4e5f\u5c31\u662f\u5728\u7a0b\u5e8f\u7684\u8fd0\u884c\u9636\u6bb5\u52a8\u6001\u5730\u9009\u62e9\u5408\u9002\u7684\u6210\u5458\u51fd\u6570",
      "type": "1",
      "optionA": "\u865a\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5b9e\u73b0\u4e86\u7ee7\u627f\u6027",
      "question": "\u4e0b\u9762\u6709\u5173\u865a\u51fd\u6570\u7684\u63cf\u8ff0\uff0c\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a61143164",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u65e0\u4efb\u4f55\u4f5c\u7528",
      "optionC": "\u6307\u5411\u72ec\u7acb\u7684\u6570\u636e\u7a7a\u95f4",
      "optionAnswer": "C",
      "answer": "1.\u8fd9\u4e2a\u53eb\u67d4\u6027\u6570\u7ec4\uff0c\u5b83\u7684\u4f5c\u7528\u8ddf\u6307\u9488\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u6307\u9488\u5360\u7a7a\u95f4\uff0c\u800c\u5b83\u4e0d\u5360\u7a7a\u95f4\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u53ef\u4ee5\u8282\u7701\u7a7a\u95f4\u3002\n2.\u8be5\u6570\u7ec4\u7684\u5185\u5b58\u5730\u5740\u5c31\u548c\u5b83\u540e\u9762\u7684\u5143\u7d20\u5730\u5740\u76f8\u540c\uff0c\u610f\u5473\u7740\u65e0\u9700\u521d\u59cb\u5316\uff0c\u6570\u7ec4\u540d\u5c31\u662f\u540e\u9762\u5143\u7d20\u7684\u5730\u5740\uff0c\u76f4\u63a5\u5c31\u80fd\u5f53\u6307\u9488\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u5236\u4f5c\u52a8\u6001buffer\uff0c\u53ef\u4ee5\u8fd9\u6837\u5206\u914d\u7a7a\u95f4malloc(sizeof(structXXX) + buff_len); \u76f4\u63a5\u5c31\u628abuffer\u7684\u7ed3\u6784\u4f53\u548c\u7f13\u51b2\u533a\u4e00\u5757\u5206\u914d\u4e86\u3002\u8fd9\u6837\u4f7f\u7528\u91ca\u653e\u4e00\u6b21\u5373\u53ef\uff0c\u5982\u679c\u4f7f\u7528\u6307\u9488\uff0c\u5219\u9700\u8981\u91ca\u653e\u4e24\u6b21\u3002\n3.\u4e5f\u53ef\u4ee5\u5199\u6210data[1]\u6216data[]\uff0c\u662f\u8003\u8651\u5230\u53ef\u79fb\u690d\u6027\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u6709\u4e9b\u7f16\u8bd1\u5668\u4e0d\u652f\u63010\u6570\u7ec4\u3002",
      "optionB": "\u6570\u636e\u5206\u5272\u4f4d",
      "type": "1",
      "optionA": "\u7ef4\u62a4\u6570\u636e\u5305\u7a7a\u95f4\u7684\u8fde\u7eed\u6027",
      "question": "\u5b9a\u4e49\u7f51\u7edc\u4f20\u8f93\u6570\u636e\u5305\u4e3a \nclass packet{\n     int size;\n     void data[0];\n}\n\u5176\u4e2ddata\u7684\u4f5c\u7528\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "int find(node * root, int val) {\n    int ret = 1;\n \n    if (root->get_data() == val) {\n        return ret;\n    } else {\n        int  ret1 = 1 + find(root->get_left(), val);\n        int  ret2 = 1 + find(root->get_right(), val);\n        if (ret1 > ret2)\n            ret = ret2;\n        else\n            ret = ret1;\n \n        return ret;\n    }\n}",
      "ID": "55f2e51de4b0152a61143362",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u51fa\u4e8c\u53c9\u6811\u63a5\u53e3\u4e3a\n\nclass node\n{\n    node *get_left();\n    node *get_right();\n    int get_data();\n}\n\u627e\u51fa\u503c\u4e3aval\u7684\u6700\u6d45\u8282\u70b9\u6240\u5728\u5c42\u6570\u3002\n\nint find(node *root, int val).",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de80e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "++\uff08a-b--\uff09",
      "optionC": "c+++c+++c++",
      "optionAnswer": "C",
      "answer": "\u56e0\u4e3a9\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u5e38\u91cf\u4e0d\u80fd\u81ea\u589e\u81ea\u51cf\uff0c\u800c\uff08 x+y \uff09\u548c\u4e0b\u9762\u7684\uff08 a -b \uff09\u90fd\u662f\u4f5c\u4e3a\u4e00\u79cd\u53ea\u8bfb\u5185\u5b58\u533a\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u90fd\u4e0d\u80fd\u8fdb\u884c\u81ea\u589e\u81ea\u51cf\u64cd\u4f5c\u3002\u9898\u76ee\u5176\u5b9e\u4e0d\u4e25\u8c28\uff0cc\u4e2dc\u5982\u679c\u4f5c\u4e3a\u4e00\u4e2a\u53d8\u91cf\u90a3\u4e48\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f\u5982\u679cc\u7684\u7c7b\u578b\u662f\u6570\u7ec4\u4e5f\u4e0d\u6b63\u786e\u3002",
      "optionB": "\uff08x+y\uff09++",
      "type": "1",
      "optionA": "9++",
      "question": "\u4e0b\u5217\u8868\u8fbe\u5f0f\u6b63\u786e\u7684\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114326b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6267\u884c2\u6b21",
      "optionC": "\u6267\u884c1\u6b21",
      "optionAnswer": "A",
      "answer": "\u8fd9\u662f\u4e00\u4e2a\u6b7b\u5faa\u73af\uff0cfor\u4e2d\u4e24\u4e2a\u5206\u597d\u4e2d\u95f4\u4e3a\u5224\u65ad\u6761\u4ef6\uff0c\u4e3a\u771f\u5219\u6267\u884c\u3002\u8fd9\u91cc\u4e3a1\uff0c\u76f8\u5f53\u4e8etrue\uff0c\u4e5f\u5c31\u662f\u6b7b\u5faa\u73af\u3002\u7b49\u4ef7\u4e8efor(;;)\u4e5f\u7b49\u4ef7\u4e8ewhile(1)",
      "optionB": "\u7f16\u8bd1\u9519\u8bef",
      "type": "1",
      "optionA": "\u6b7b\u5faa\u73af",
      "question": "\u8bed\u53e5for( ;1;)\u662f\u4ec0\u4e48\u610f\u601d\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "4\u4e2a\u7403\u961f\u5355\u5faa\u73af\u4e00\u5171\u8d5b6\u573a\u3002\n\u53ef\u80fd\u51fa\u7ebf\u7684\u6700\u4f4e\u5206\u5e94\u8be5\u662f\u5c0f\u7ec4\u7b2c\u4e8c\u540d\u4e24\u5e73\u4e00\u8d1f\u5f972\u5206\uff0c\u5373\u7b2c\u4e00\u540d\u4e09\u573a\u5168\u80dc\u5f979\u5206\uff0c\u5269\u4e0b\u4e09\u540d\u7686\u4e24\u5e73\u4e00\u8d1f\u5f972\u5206\uff0c\u5176\u4e2d\u8fdb\u7403\u591a\u7684\u90a3\u53ea\u51fa\u7ebf\u3002",
      "ID": "55f2e51ee4b0152a611433af",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "4\u4e2a\u8db3\u7403\u961f\u6253\u5c0f\u7ec4\u5355\u5faa\u73af\uff0c\u8ba1\u5206\u65b9\u5f0f\uff1a\u80dc3\u5206\u5e731\u5206\u8d1f0\u5206\uff0c\u5982\u679c\u8ba1\u5206\u76f8\u540c\uff0c\u5219\u51c0\u80dc\u7403\u591a\u7684\u961f\u4f0d\u6392\u540d\u9760\u524d\uff0c\u5982\u679c\u51c0\u80dc\u7403\u8fd8\u4e00\u6837\uff0c\u5219\u8fdb\u7403\u591a\u7684\u7403\u961f\u6392\u540d\u9760\u524d\u3002\u5c0f\u7ec4\u524d\u4e24\u540d\u51fa\u7ebf\u3002\u95ee\u53ef\u80fd\u51fa\u7ebf\u7684\u6700\u4f4e\u5206\u6570\u662f\u591a\u5c11\u3002\u8bf7\u8bf4\u660e\u63a8\u7406\u8fc7\u7a0b\u3002 \u5907\u6ce8\uff1a\u5355\u5faa\u73af\u8d5b\u662f\u6307\u6240\u6709\u53c2\u52a0\u6bd4\u8d5b\u7684\u961f\u4e24\u4e24\u4e4b\u95f4\u90fd\u6bd4\u8d5b\u4e00\u6b21\uff0c\u6700\u540e\u6309\u5404\u961f\u5728\u5168\u90e8\u6bd4\u8d5b\u4e2d\u7684\u79ef\u5206\uff0c\u5f97\u5931\u5206\u7387\u6392\u5217\u540d\u6b21\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u6808\uff1a\u6808\u5b58\u5728\u4e8eRAM\u4e2d\u3002\u6808\u662f\u52a8\u6001\u7684\uff0c\u5b83\u7684\u5b58\u50a8\u901f\u5ea6\u662f\u7b2c\u4e8c\u5feb\u7684\u3002stack\n\u5806\uff1a\u5806\u4f4d\u4e8eRAM\u4e2d\uff0c\u662f\u4e00\u4e2a\u901a\u7528\u7684\u5185\u5b58\u6c60\u3002\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u5b58\u50a8\u5728\u5806\u4e2d\u3002heap\n\n2 \u7533\u8bf7\u65b9\u5f0f\nstack\u3010\u6808\u3011: \u7531\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\u3002 \u4f8b\u5982\uff0c\u58f0\u660e\u5728\u51fd\u6570\u4e2d\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf int b; \u7cfb\u7edf\u81ea\u52a8\u5728\u6808\u4e2d\u4e3ab\u5f00\u8f9f\u7a7a\u95f4 \u3002\nheap\u3010\u5806\u3011: \u9700\u8981\u7a0b\u5e8f\u5458\u81ea\u5df1\u7533\u8bf7\uff0c\u5e76\u6307\u660e\u5927\u5c0f\uff0c\u5728c\u4e2dmalloc\u51fd\u6570 \u5982p1 = (char *)malloc(10); \u5728C++\u4e2d\u7528new\u8fd0\u7b97\u7b26 \u5982p2 = (char *)malloc(10); \u4f46\u662f\u6ce8\u610f\uff1ap1\u3001p2\u672c\u8eab\u662f\u5728\u6808\u4e2d\u7684\u3002\n\n3 \u7533\u8bf7\u540e\u7cfb\u7edf\u7684\u54cd\u5e94\n\u6808\u3010stack\u3011\uff1a\u53ea\u8981\u6808\u7684\u5269\u4f59\u7a7a\u95f4\u5927\u4e8e\u6240\u7533\u8bf7\u7a7a\u95f4\uff0c\u7cfb\u7edf\u5c06\u4e3a\u7a0b\u5e8f\u63d0\u4f9b\u5185\u5b58\uff0c\u5426\u5219\u5c06\u62a5\u5f02\u5e38\u63d0\u793a\u6808\u6ea2\u51fa\u3002\n\u5806\u3010heap\u3011\uff1a\u9996\u5148\u5e94\u8be5\u77e5\u9053\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e00\u4e2a\u8bb0\u5f55\u7a7a\u95f2\u5185\u5b58\u5730\u5740\u7684\u94fe\u8868\uff0c\u5f53\u7cfb\u7edf\u6536\u5230\u7a0b\u5e8f\u7684\u7533\u8bf7\u65f6\uff0c\u4f1a\u904d\u5386\u8be5\u94fe\u8868\uff0c\u5bfb\u627e\u7b2c\u4e00\u4e2a\u7a7a\u95f4\u5927\u4e8e\u6240\u7533\u8bf7\u7a7a\u95f4\u7684\u5806\u7ed3\u70b9\uff0c\u7136\u540e\u5c06\u8be5\u7ed3\u70b9\u4ece\u7a7a\u95f2\u7ed3\u70b9\u94fe\u8868\u4e2d\u5220\u9664\uff0c\u5e76\u5c06\u8be5\u7ed3\u70b9\u7684\u7a7a\u95f4\u5206\u914d\u7ed9\u7a0b\u5e8f\uff1b\u53e6\u5916\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u7cfb\u7edf\uff0c\u4f1a\u5728\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u9996\u5730\u5740\u5904\u8bb0\u5f55\u672c\u6b21\u5206\u914d\u7684\u5927\u5c0f\uff0c\u8fd9\u6837\uff0c\u4ee3\u7801\u4e2d\u7684delete\u8bed\u53e5\u624d\u80fd\u6b63\u786e\u7684\u91ca\u653e\u672c\u5185\u5b58\u7a7a\u95f4\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u627e\u5230\u7684\u5806\u7ed3\u70b9\u7684\u5927\u5c0f\u4e0d\u4e00\u5b9a\u6b63\u597d\u7b49\u4e8e\u7533\u8bf7\u7684\u5927\u5c0f\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u7684\u5c06\u591a\u4f59\u7684\u90a3\u90e8\u5206\u91cd\u65b0\u653e\u5165\u7a7a\u95f2\u94fe\u8868\u4e2d\u3002\n\n4 \u7533\u8bf7\u5927\u5c0f\u7684\u9650\u5236\n\u6808\u3010stack\u3011\uff1a\u5728Windows\u4e0b\uff0c\u6808\u662f\u5411\u4f4e\u5730\u5740\u6269\u5c55\u7684\u6570\u636e\u7ed3\u6784\uff0c\u662f\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u7684\u533a\u57df\u3002\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\u6808\u9876\u7684\u5730\u5740\u548c\u6808\u7684\u6700\u5927\u5bb9\u91cf\u662f\u7cfb\u7edf\u9884\u5148\u89c4\u5b9a\u597d\u7684\uff0c\u5728WINDOWS\u4e0b\uff0c\u6808\u7684\u5927\u5c0f\u662f2M\uff08\u4e5f\u6709\u7684\u8bf4\u662f1M\uff0c\u603b\u4e4b\u662f\u4e00\u4e2a\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u7684\u5e38\u6570\uff09\uff0c\u5982\u679c\u7533\u8bf7\u7684\u7a7a\u95f4\u8d85\u8fc7\u6808\u7684\u5269\u4f59\u7a7a\u95f4\u65f6\uff0c\u5c06\u63d0\u793aoverflow\u3002\u56e0\u6b64\uff0c\u80fd\u4ece\u6808\u83b7\u5f97\u7684\u7a7a\u95f4\u8f83\u5c0f\u3002\n\u5806\u3010heap\u3011\uff1a\u5806\u662f\u5411\u9ad8\u5730\u5740\u6269\u5c55\u7684\u6570\u636e\u7ed3\u6784\uff0c\u662f\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\u3002\u8fd9\u662f\u7531\u4e8e\u7cfb\u7edf\u662f\u7528\u94fe\u8868\u6765\u5b58\u50a8\u7684\u7a7a\u95f2\u5185\u5b58\u5730\u5740\u7684\uff0c\u81ea\u7136\u662f\u4e0d\u8fde\u7eed\u7684\uff0c\u800c\u94fe\u8868\u7684\u904d\u5386\u65b9\u5411\u662f\u7531\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\u3002\u5806\u7684\u5927\u5c0f\u53d7\u9650\u4e8e\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u6709\u6548\u7684\u865a\u62df\u5185\u5b58\u3002\u7531\u6b64\u53ef\u89c1\uff0c\u5806\u83b7\u5f97\u7684\u7a7a\u95f4\u6bd4\u8f83\u7075\u6d3b\uff0c\u4e5f\u6bd4\u8f83\u5927\u3002\n\n5 \u7533\u8bf7\u6548\u7387\u7684\u6bd4\u8f83\n\u6808\u3010stack\u3011\uff1a\u7531\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\uff0c\u901f\u5ea6\u8f83\u5feb\u3002\u4f46\u7a0b\u5e8f\u5458\u662f\u65e0\u6cd5\u63a7\u5236\u7684\u3002\n\u5806\u3010heap\u3011\uff1a\u662f\u7531new\u5206\u914d\u7684\u5185\u5b58\uff0c\u4e00\u822c\u901f\u5ea6\u6bd4\u8f83\u6162\uff0c\u800c\u4e14\u5bb9\u6613\u4ea7\u751f\u5185\u5b58\u788e\u7247\uff0c\u4e0d\u8fc7\u7528\u8d77\u6765\u6700\u65b9\u4fbf.  \u53e6\u5916\uff0c\u5728WINDOWS\u4e0b\uff0c\u6700\u597d\u7684\u65b9\u5f0f\u662f\u7528VirtualAlloc\u5206\u914d\u5185\u5b58\uff0c\u4ed6\u4e0d\u662f\u5728\u5806\uff0c\u4e5f\u4e0d\u662f\u5728\u6808\u662f\u76f4\u63a5\u5728\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u4e2d\u4fdd\u7559\u4e00\u5feb\u5185\u5b58\uff0c\u867d\u7136\u7528\u8d77\u6765\u6700\u4e0d\u65b9\u4fbf\u3002\u4f46\u662f\u901f\u5ea6\u5feb\uff0c\u4e5f\u6700\u7075\u6d3b\u3002\n6 \u5806\u548c\u6808\u4e2d\u7684\u5b58\u50a8\u5185\u5bb9\n\u6808\u3010stack\u3011\uff1a\u5728\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u7b2c\u4e00\u4e2a\u8fdb\u6808\u7684\u662f\u4e3b\u51fd\u6570\u4e2d\u540e\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\uff08\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u7684\u4e0b\u4e00\u6761\u53ef\u6267\u884c\u8bed\u53e5\uff09\u7684\u5730\u5740\uff0c\u7136\u540e\u662f\u51fd\u6570\u7684\u5404\u4e2a\u53c2\u6570\uff0c\u5728\u5927\u591a\u6570\u7684C\u7f16\u8bd1\u5668\u4e2d\uff0c\u53c2\u6570\u662f\u7531\u53f3\u5f80\u5de6\u5165\u6808\u7684\uff0c\u7136\u540e\u662f\u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u3002\u6ce8\u610f\u9759\u6001\u53d8\u91cf\u662f\u4e0d\u5165\u6808\u7684\u3002  \u5f53\u672c\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u5c40\u90e8\u53d8\u91cf\u5148\u51fa\u6808\uff0c\u7136\u540e\u662f\u53c2\u6570\uff0c\u6700\u540e\u6808\u9876\u6307\u9488\u6307\u5411\u6700\u5f00\u59cb\u5b58\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u4e3b\u51fd\u6570\u4e2d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u7a0b\u5e8f\u7531\u8be5\u70b9\u7ee7\u7eed\u8fd0\u884c\u3002\n\u5806\u3010heap\u3011\uff1a\u4e00\u822c\u662f\u5728\u5806\u7684\u5934\u90e8\u7528\u4e00\u4e2a\u5b57\u8282\u5b58\u653e\u5806\u7684\u5927\u5c0f\u3002\u5806\u4e2d\u7684\u5177\u4f53\u5185\u5bb9\u6709\u7a0b\u5e8f\u5458\u5b89\u6392\u3002 7 \u5b58\u53d6\u6548\u7387\u7684\u6bd4\u8f83 char s1[] = \"aaaaaaaaaaaaaaa\";  char *s2 = \"bbbbbbbbbbbbbbbbb\";  aaaaaaaaaaa\u662f\u5728\u8fd0\u884c\u65f6\u523b\u8d4b\u503c\u7684\uff1b \u800cbbbbbbbbbbb\u662f\u5728\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u7684\uff1b \u4f46\u662f\uff0c\u5728\u4ee5\u540e\u7684\u5b58\u53d6\u4e2d\uff0c\u5728\u6808\u4e0a\u7684\u6570\u7ec4\u6bd4\u6307\u9488\u6240\u6307\u5411\u7684\u5b57\u7b26\u4e32(\u4f8b\u5982\u5806)\u5feb\u3002",
      "ID": "55f2e51ee4b0152a611433da",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u9610\u8ff0\u6808\u548c\u5806\u5728\u751f\u547d\u5468\u671f\u3001\u901f\u5ea6\u3001\u5185\u5b58\u6027\u80fd\u7b49\u65b9\u9762\u7684\u4e0d\u540c\u70b9\u3002\u5047\u5982\u73b0\u5728\u6709\u4e00\u4e2a\u7f13\u51b2 \u533a\u57df\u7edd\u5927\u591a\u6570\u53ea\u9700\u8981 1KB \u7a7a\u95f4\uff0c\u6781\u5c11\u6570\u6781\u7aef\u60c5\u51b5\u4e0b\u9700\u8981 100MB\uff0c\u600e\u4e48\u6837\u5408\u7406\u5206\u914d\u5185 \u5b58\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c5e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u6240\u6709\u7279\u6027\uff0c\u4f46\u4e0d\u5141\u8bb8\u589e\u52a0\u65b0\u7684\u7279\u6027\u6216\u91cd\u5b9a\u4e49\u57fa\u7c7b\u7684\u7279\u6027",
      "optionC": "\u6240\u6709\u7279\u6027\uff0c\u5e76\u5141\u8bb8\u589e\u52a0\u65b0\u7684\u7279\u6027\u6216\u91cd\u5b9a\u4e49\u57fa\u7c7b\u7684\u7279\u6027",
      "optionAnswer": "A",
      "answer": "\u6d3e\u751f\u7c7b\u6709\u4e24\u7c7b\u6210\u5458\uff1a\u4e00\u662f\u57fa\u7c7b\uff0c\u4e8c\u662f\u81ea\u8eab\u7c7b\u3002\u6d3e\u751f\u7c7b\u4e2d\u7684\u6210\u5458\u4e0d\u80fd\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u7684\u79c1",
      "optionB": "\u90e8\u5206\u7279\u6027\uff0c\u4f46\u4e0d\u5141\u8bb8\u589e\u52a0\u65b0\u7684\u7279\u6027\u6216\u91cd\u5b9a\u4e49\u57fa\u7c7b\u7684\u7279\u6027",
      "type": "1",
      "optionA": "\u90e8\u5206\u7279\u6027\uff0c\u5e76\u5141\u8bb8\u589e\u52a0\u65b0\u7684\u7279\u6027\u6216\u91cd\u5b9a\u4e49\u57fa\u7c7b\u7684\u7279\u6027",
      "question": "C++\u7684\u7ee7\u627f\u6027\u5141\u8bb8\u6d3e\u751f\u7c7b\u7ee7\u627f\u57fa\u7c7b\u7684\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a6114315d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\uff08Dependecy-Inversion Principle\uff09",
      "optionC": "\u62bd\u8c61\u7c7b\u539f\u5219\uff08Abstract-Class principle\uff09",
      "optionAnswer": "C",
      "answer": "\u9762\u5411\u5bf9\u8c61\u7684\u4e94\u5927\u57fa\u672c\u539f\u5219\n\n\u5355\u4e00\u804c\u8d23\u539f\u5219\uff08SRP\uff09\n\u5f00\u653e\u5c01\u95ed\u539f\u5219\uff08OCP\uff09 \n\u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff08LSP\uff09 \n\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\uff08DIP\uff09 \n\u63a5\u53e3\u9694\u79bb\u539f\u5219\uff08ISP\uff09",
      "optionB": "\u5f00\u653e\u5c01\u95ed\u539f\u5219\uff08Open-Closed principle\uff09",
      "type": "1",
      "optionA": "\u5355\u4e00\u804c\u8d23\u539f\u5219\uff08Single-Resposibility Principle\uff09",
      "question": "\u4e0b\u9762\u4e0d\u662f\u9762\u5411\u5bf9\u8c61\u7684\u57fa\u672c\u539f\u5219\u7684\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "#\u4e24\u4e2a\u6307\u9488\uff0c\u5206\u522b\u4ece\u5934\u548c\u4ece\u5c3e\u904d\u5386\u6570\u7ec4\uff0c\u8be6\u89c1\u4ee3\u7801\uff0c\u5df2\u6d4b\u8bd5\u901a\u8fc7\n\n#include <stdio.h>\n#include <stdlib.h>\n#define bool int\n#define false 0\n#define true 1\nvoid Reorder(int *pData, unsigned int length, bool (*func)(int));\nbool isEven(int n);\nvoid ReorderOddEven_1(int *pData, unsigned int length)\n{\n    if(pData == NULL || length == 0)\n        return;\n    int *pBegin = pData;\n    int *pEnd = pData + length - 1;\n    while(pBegin < pEnd)\n    {\n        // \u5411\u540e\u79fb\u52a8pBegin\uff0c\u76f4\u5230\u5b83\u6307\u5411\u5076\u6570\n        while(pBegin < pEnd && (*pBegin & 0x1) != 0)\n            pBegin ++;\n        // \u5411\u524d\u79fb\u52a8pEnd\uff0c\u76f4\u5230\u5b83\u6307\u5411\u5947\u6570\n        while(pBegin < pEnd && (*pEnd & 0x1) == 0)\n            pEnd --;\n        if(pBegin < pEnd)\n        {\n            int temp = *pBegin;\n            *pBegin = *pEnd;\n            *pEnd = temp;\n        }\n    }\n}\nvoid Reorder(int *pData, unsigned int length, bool\n  (*func)(int))\n{\n    if(pData == NULL || length == 0)\n        return;\n    int *pBegin = pData;\n    int *pEnd = pData + length - 1;\n    while(pBegin < pEnd)\n    {\n        //\u5411\u540e\u79fb\u52a8pBegin\n        while(pBegin < pEnd &&!func(*pBegin))\n            pBegin ++;\n        // \u5411\u524d\u79fb\u52a8pEnd\n        while(pBegin < pEnd &&func(*pEnd))\n            pEnd --;\n        if(pBegin < pEnd)\n        {\n            int temp = *pBegin;\n            *pBegin = *pEnd;\n            *pEnd = temp;\n        }\n    }\n}\nbool isEven(int n)\n{\n    return (n & 1) == 0;\n}",
      "ID": "55f2e51ee4b0152a611433a2",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u4ec5\u7528O(1)\u7684\u7a7a\u95f4\uff0c\u5c06\u6574\u6570\u6570\u7ec4\u6309\u5947\u5076\u6570\u5206\u62102\u90e8\u5206\uff0c\u6570\u7ec4\u5de6\u8fb9\u662f\u5947\u6570\u3001\u53f3\u8fb9\u662f\u5076\u6570\u3002\uff08\u8981\u6c42\uff1a\u7ed9\u51fa\u5b8c\u6574\u4ee3\u7801\uff0c\u5c3d\u91cf\u9ad8\u6548\uff0c\u7b80\u6d01\uff09",
      "title": "C&C++"
    },
    {
      "answer": "\u8fd9\u9053\u9898\u60f3\u7b49\u6982\u7387\u4ea7\u751f0\u30011\uff0c\u5c31\u9700\u8981\u627e\u5230\u4e24\u4e2a\u72ec\u7acb\u4e8b\u4ef6\uff0c\u8fd9\u4e2a\u4e24\u4e2a\u72ec\u7acb\u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\u76f8\u540c\uff0c\u5df2\u77e5\u968f\u673a\u6570\u751f\u6210\u5668\u53ef\u4ee5\u4ee5p\u4ea7\u751f0\uff0c\u4ee51-p\u4ea7\u751f1\uff0c\u6240\u4ee5\u6709\u4e0b\u97624\u4e2a\u72ec\u7acb\u4e8b\u4ef6\uff0c\u7528\u968f\u673a\u6570\u751f\u6210\u5668\u4ea7\u751f00\uff0c01\uff0c10\uff0c11\uff0c\u5404\u81ea\u7684\u6982\u7387\u5206\u522b\u4e3ap*p\uff0cp*(1-p)\uff0c(1-p)*p\uff0c(1-p)*(1-p)\u53ef\u4ee5\u53d1\u73b0\u751f\u621001\uff0c10\u7684\u6982\u7387\u76f8\u540c\uff0c\u56e0\u6b64\u53ea\u4fdd\u7559\u8fd9\u4e24\u79cd\u60c5\u51b5\u654f\u611f\u8bcd\u820d\u5f03\uff0c\u7136\u540e\u5c0601\u6620\u5c04\u4e3a0\uff0c10\u6620\u5c04\u4e3a1\uff0c\u5219\u7b49\u6982\u73870\uff0c1\u968f\u673a\u6570\u751f\u6210\u5668\u53ef\u5f97\u5230",
      "ID": "55f2e51ee4b0152a611433ae",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6709\u4e00\u4e2a\u968f\u673a\u6570\u53d1\u751f\u5668\uff0c\u4ee5\u6982\u7387P\u4ea7\u751f0\uff0c\u6982\u7387(1-P)\u4ea7\u751f1\uff0c\u8bf7\u95ee\u80fd\u5426\u5229\u7528\u8fd9\u4e2a\u968f\u673a\u6570\u53d1\u751f\u5668\uff0c\u6784\u9020\u51fa\u65b0\u7684\u53d1\u751f\u5668\uff0c\u4ee51/2\u7684\u6982\u7387\u4ea7\u751f0\u548c1\u3002\u8bf7\u5199\u660e\u7ed3\u8bba\u53ca\u63a8\u7406\u8fc7\u7a0b\u3002",
      "title": "C&C++"
    },
    {
      "answer": "public static void main(String[] args) {\n        String s1 = \"asdfghjqweryuiase\";\n        String s2 = \"astyfrtfghjqwsa\";\n        System.out.print(findMaxSame(s1, s2));\n    }\n    private static String findMaxSame(String s1, String s2) {\n        int l1 = s1.length();\n        String maxSame = \"\";\n        String subString = \"\";\n        for (int i = 0; i < l1; i++) {\n            for (int j = i + 1; j < l1; j++) {\n                subString = s1.substring(i, j);\n                if (s2.indexOf(subString) >= 0) {\n                    maxSame = subString.length() > maxSame.length() ? subString : maxSame;\n                } else {\n                    break;\n                }\n            }\n        }\n        return maxSame;\n    }",
      "ID": "55f2e51ee4b0152a611433bb",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u5176\u6700\u957f\u5171\u540c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff1a\u5982\nS1: asdfghjqweryuiase \nS2: astyfrtfghjqwsa \n\u5176\u6700\u957f\u5171\u540c\u5b57\u7b26\u4e32\u4e3afghjqw \u957f\u5ea6\u4e3a6\uff0c\u7ed9\u51fa\u4ee3\u7801\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u9996\u5148,\u4e3a\u4e86\u4fdd\u8bc1\u6210\u529f,\u4e24\u9897\u68cb\u5b50\u4e0d\u80fd\u5168\u788e. \u90a3\u4e48\u7ecf\u8fc7\u8ba1\u7b97,\u7b2c\u4e00\u6b21\u5e94\u8be5\u572816\u5c42\u5c1d\u8bd5.\u5982\u68cb\u5b50\u788e\u5219\u4ece1-15\u5c42\u7ee7\u7eed\u5c1d\u8bd5.\u8fd9\u6837\u6700\u591a\u5c1d\u8bd516\u6b21\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c. \u598216\u5c42\u68cb\u5b50\u672a\u788e,\u5219\u7b2c\u4e8c\u6b21\u5e94\u8be5\u572816+16-1=31\u5c42\u5c1d\u8bd5.\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6700\u591a\u5c1d\u8bd5\u6b21\u6570\u4ecd\u7136\u4e3a16\u6b21.\u5f80\u4e0b\u7c7b\u4f3c. \u8fd9\u6837\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u662f: \u7b2c\u4e00\u9897\u68cb\u5b50\u5e94\u8be5\u4f9d\u6b21\u572816,31,45,58,70,81,91\u8fd9\u4e03\u5c42\u5c1d\u8bd5.\u5982\u5728\u5176\u4e2d\u67d0\u5c42\u788e\u4e86\u5219\u7ee7\u7eed\u7528\u7b2c2\u9897\u5728\u76f8\u90bb\u4e24\u6b21\u5c1d\u8bd5\u697c\u5c42\u4e2d\u95f4\u7ee7\u7eed\u5c1d\u8bd5.\u8fd9\u6837\u6700\u591a\u53ea\u9700\u898116\u6b21\u5c1d\u8bd5\u53ef\u4ee5\u786e\u5b9a\u6b64\u4e34\u754c\u503c.",
      "ID": "55f2e51ee4b0152a611433c8",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u6709\u4e00\u5e62100\u5c42\u9ad8\u7684\u5927\u697c\uff0c\u7ed9\u4f60\u4e24\u4e2a\u5b8c\u5168\u76f8\u540c\u7684\u73bb\u7483\u56f4\u68cb\u5b50\u3002\u5047\u8bbe\u4ece\u67d0\u4e00\u5c42\u5f00\u59cb\uff0c\u4e22\u4e0b\u73bb\u7483\u68cb\u5b50\u5c31\u4f1a\u7834\u788e\u3002\u90a3\u4e48\u600e\u4e48\u5229\u7528\u624b\u4e2d\u7684\u4e24\u9897\u68cb\u5b50\uff0c\u7528\u4e00\u79cd\u4ec0\u4e48\u6837\u7684\u6700\u4f18\u7b56\u7565\uff0c\u77e5\u9053\u8fd9\u4e2a\u4e34\u754c\u7684\u5c42\u9ad8\u5462\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7f5",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e24\u4e2a\u90fd\u662f\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af",
      "optionC": "\u524d\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af\uff0c\u540e\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad",
      "optionAnswer": "B",
      "answer": "do\u2026\u2026while\u5148\u505a\u4e00\u6b21do\u4ee3\u7801\u5757\u4e2d\u7684\u5185\u5bb9\uff0c\u5373\u5148\u505a\u4e00\u6b21\u5faa\u73af\uff0c\u7136\u540e\u5224\u65adwhile\u6761\u4ef6\n\nwhile\u2026\u2026do\u4e0e\u4e4b\u76f8\u53cd\uff0c\u5148\u5224\u5b9awhile\u6761\u4ef6\uff0c\u5982\u679c\u6210\u7acb\uff0c\u5219\u8fdb\u884c\u5faa\u73af ",
      "optionB": "\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af",
      "type": "1",
      "optionA": "\u4e24\u4e2a\u90fd\u662f\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad",
      "question": "do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c8b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u62bd\u8c61\u7c7b",
      "optionC": "\u6d3e\u751f\u7c7b",
      "optionAnswer": "D",
      "answer": "\u5982\u679c\u7236\u7c7b\u7684\u51fd\u6570\uff08\u65b9\u6cd5\uff09\u6839\u672c\u6ca1\u6709\u5fc5\u8981\u6216\u8005\u65e0\u6cd5\u5b9e\u73b0\uff0c\u5b8c\u5168\u8981\u4f9d\u8d56\u5b50\u7c7b\u53bb\u5b9e\u73b0\u7684\u8bdd\uff0c\u53ef\u4ee5\u628a\u6b64\u51fd\u6570\uff08\u65b9\u6cd5\uff09\u8bbe\u4e3avirturl \u51fd\u6570\u540d=0 \u3002\u6211\u4eec\u628a\u8fd9\u6837\u7684\u51fd\u6570\uff08\u65b9\u6cd5\uff09\u79f0\u4e3a\u7eaf\u865a\u51fd\u6570\u3002 \u5982\u679c\u4e00\u4e2a\u7c7b\u5305\u542b\u4e86\u7eaf\u865a\u51fd\u6570\uff0c\u79f0\u6b64\u7c7b\u4e3a\u62bd\u8c61\u7c7b\u3002",
      "optionB": "\u7eaf\u57fa\u7c7b",
      "type": "1",
      "optionA": "\u57fa\u7c7b",
      "question": "\u82e5\u4e00\u4e2a\u7c7b\u4e2d\u542b\u6709\u7eaf\u865a\u51fd\u6570\uff0c\u5219\u8be5\u7c7b\u79f0\u4e3a\uff08   \uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fde4b0152a611431ee",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "register \"C\"",
      "optionC": "explict \"C\"",
      "optionAnswer": "B",
      "answer": "void f(void)\u7528c++ compiler\u6765\u7f16\u8bd1\uff0c\u5728\u4ea7\u751f\u7684obj\u6587\u4ef6\u4e2d\u7684\u540d\u5b57\u53d8\u6210\u4e86 \n\n$f@@@_@0 \n\nvoid f(voi)\u7528c compiler\u7f16\u8bd1\uff0cobj\u4e2d\u53d8\u6210\u4e86 \n\n_f \n\n\u5982\u679c\u662fextern \"C\" void f(void)\uff0c\u4ecd\u7136\u7528c++\u7f16\u8bd1\u5668\u7f16\u8bd1\uff0c\u53d8\u6210 \n\n_f \n\n\u6240\u4ee5extern \"C\"\u662f\u5f3a\u8febc++\u7f16\u8bd1\u5668\u5bf9\u51fd\u6570\u540d\u8fdb\u884c\u4fee\u9970\u7684\u65f6\u5019\u91c7\u7528c\u547d\u540d\u7ea6\u5b9a\u3002 \n\n\u8fd9\u6837\uff0c\u5728c++\u5199\u7684\u7a0b\u5e8f\u4e2d\u5c31\u53ef\u4ee5\u4f7f\u7528\u5df2\u7ecf\u7528c\u7f16\u8bd1\u5668\u7f16\u8bd1\u597d\u7684obj\u6216\u8005lib\u4e86\u3002",
      "optionB": "extern \"C\"",
      "type": "1",
      "optionA": "static \"C\"",
      "question": "C++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55b22670e4b0bb7ded0a8c5c",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u51fd\u6570",
      "optionC": "\u9759\u6001\u53d8\u91cf",
      "optionAnswer": "B",
      "answer": "\u53d8\u91cf\u5b58\u50a8\u7c7b\u53ef\u5206\u4e3a\u4e24\u7c7b\uff1a\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u3002\n\uff081\uff09\u5168\u5c40\u53d8\u91cf\uff1a\u5728\u51fd\u6570\u5916\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\u79f0\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u5176\u4f5c\u7528\u57df\u4e3a\uff1a\u4ece\u5b9a\u4e49\u53d8\u91cf\u7684\u4f4d\u7f6e\u5f00\u59cb\u5230\n\u6e90\u7a0b\u5e8f\u7ed3\u675f\u3002\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u964d\u4f4e\u4e86\u7a0b\u5e8f\u7684\u53ef\u7406\u89e3\u6027\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5b66\u63d0\u5021\u5c3d\u91cf\u907f\u514d\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u3002\n\uff082\uff09\u5c40\u90e8\u53d8\u91cf\uff1a\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\u79f0\u4e3a\u5c40\u90e8\u53d8\u91cf\uff0c\u5176\u4f5c\u7528\u57df\u4e3a\uff1a\u4ece\u5b9a\u4e49\u53d8\u91cf\u7684\u4f4d\u7f6e\u5f00\u59cb\u5230\n\u51fd\u6570\u7ed3\u675f\u3002\u5c40\u90e8\u53d8\u91cf\u5305\u542b\u81ea\u52a8\u53d8\u91cf\uff08auto\uff09\u9759\u6001\u53d8\u91cf\uff08static\uff09\u4ee5\u53ca\u51fd\u6570\u53c2\u6570\u3002\u5f62\u53c2\u4e0d\u80fd\u662f\u9759\u6001\n\u7684\u3002\u6240\u4ee5\u9009\u62e9B\u9879\u3002",
      "optionB": "\u5c40\u90e8\u53d8\u91cf",
      "type": "1",
      "optionA": "\u5168\u5c40\u53d8\u91cf",
      "question": "C++\u8bed\u8a00\u4e2d\u6240\u6709\u5728\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u8fde\u540c\u5f62\u5f0f\u53c2\u6570\uff0c\u90fd\u5c5e\u4e8e\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143230",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "14",
      "optionC": "13",
      "optionAnswer": "A",
      "answer": "\u672c\u9898\u8003\u67e5\u51e0\u70b9\uff0c\u4e00\u662f\u9759\u6001\u53d8\u91cf\uff0c\u53ea\u5206\u914d\u4e00\u6b21\uff0c\u5728\u4e0b\u4e00\u6b21\u4f7f\u7528\u5b83\u65f6\u4ecd\u7ef4\u6301\u4e0a\u6b21\u8c03\u7528\u4ea7\u751f\u7684\u7ed3\u679c\uff0ca=2,\u7136\u540ea++\u4e4b\u540e\u53d8\u62103\uff0c\u4e0b\u6b21\u8c03\u7528\u65f6\u4ecd\u7ef4\u63013\uff1b\u4e8c\u662f\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u5b58\u671f\uff0ci=0\u4e3a\u5168\u5c40\u53d8\u91cf\uff0ci=2\u4e3a\u5c40\u90e8\u53d8\u91cf\u3002",
      "optionB": "12",
      "type": "1",
      "optionA": "11",
      "question": "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f()\n\n#include <iostream>\nusing namespace std;\nint i = 0;\nint fun( int n )\n{\n    static int a = 2;\n    a++;\n    return(a * n);\n}\n \n \nint main()\n{\n    int k = 5;\n    {\n        int i = 2;\n        k += fun( i );\n    }\n    k += fun( i );\n    cout << k;\n    return(0);\n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fde4b0152a611431ea",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "printf(\"\\\"My salary was increased by 15%%!\\\"\\n\");",
      "optionC": "printf(\"My salary was increased by 15'%'!\\n\");",
      "optionAnswer": "D",
      "answer": "A\uff1a \u6ca1\\!\u8fd9\u8f6c\u4e49\u7b26\uff0c\u7f16\u8bd1\u65f6\u62a5\u9519\nB\uff0cC\uff1a \u4e00\u770b\u524d\u9762\u8f93\u51fa\u65f6\u5c31\u5c11\u4e86\u53cc\u5f15\u53f7\n\nD\u662f\u5bf9\u7684\uff0c\u91cc\u9762%%\u662f\u8f93\u51fa\u7684%\uff0c\u867d\u7136\u6709\u4e9b\u7f16\u8bd1\u5668\\%\u4e5f\u80fd\u8f93\u51fa%\uff0c\u4f46\u8c8c\u4f3c\u6807\u51c6c\u4e0d\u652f\u6301",
      "optionB": "printf(\"My salary was increased by 15%!\\n\");",
      "type": "1",
      "optionA": "printf(\"\\\"My salary was increased by 15/%\\!\\\"\\n\");",
      "question": "\"My salary was increased by 15%!\"\n\u4e0b\u5217\u54ea\u4e2a\u9009\u9879\u53ef\u4ee5\u51c6\u786e\u7684\u663e\u793a\u51fa\u4e0a\u8ff0\u8bed\u53e5\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143274",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "int f(int x\uff0cfloat y)",
      "optionC": "float f(int x\uff0cfloat y)",
      "optionAnswer": "A",
      "answer": "\u8003\u5bdf\u51fd\u6570\u91cd\u8f7d\n   \u51fd\u6570\u540d\u76f8\u540c\uff0c\u4f46\uff1a\u51fd\u6570\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\uff0c\u6216\u8005\u51fd\u6570\u53c2\u6570\u7c7b\u578b\u4e0d\u540c \u6216\u8005\u4e2a\u6570\u548c\u7c7b\u578b\u90fd\u4e0d\u540c\u3002  ",
      "optionB": "int f(float a\uff0cint b)",
      "type": "1",
      "optionA": "int f(int x\uff0cint y)",
      "question": "\u5728C++\u8bed\u8a00\u4e2d\uff0c\u82e5\u7c7bC\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b9\u6cd5int f(int a\uff0cint b)\uff0c\u90a3\u4e48\u65b9\u6cd5( )\u4e0d\u80fd\u4e0e\u8be5\u65b9\u6cd5\u540c\u65f6\u5b58\u5728\u4e8e\u7c7bC\u4e2d\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55b22670e4b0bb7ded0a8c5d",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4e0d\u53d7\u4fdd\u62a4",
      "optionC": "\u53d7\u4fdd\u62a4",
      "optionAnswer": "A",
      "answer": "\u79c1\u6709\u7ee7\u627f\u4e0b\uff0c\u57fa\u7c7b\u4e2d\u7684\u516c\u6709\u6216\u4fdd\u62a4\u6210\u5458\u5728\u6d3e\u751f\u7c7b\u4e2d\u4e5f\u662f\u79c1\u6709\u7684\uff0c\u6240\u4ee5\u9009\u62e9A\u9009\u9879\u3002",
      "optionB": "\u4fdd\u6301\u4e0d\u53d8",
      "type": "1",
      "optionA": "\u53d7\u9650\u5236",
      "question": "\u5728\u79c1\u6709\u7ee7\u627f\u7684\u60c5\u51b5\u4e0b\uff0c\u57fa\u7c7b\u6210\u5458\u5728\u6d3e\u751f\u7c7b\u4e2d\u7684\u8bbf\u95ee\u6743\u9650\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114324e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u53d8\u91cfA\u4e0ea\u6309\u4f4d\u76f8\u4e0e\u4f5c\u4e3a\u51fd\u6570Set\uff08\uff09\u7684\u53c2\u6570\u3002",
      "optionC": "a\u662f\u7c7bA\u7684\u5bf9\u8c61\u5f15\u7528\uff0c\u7528\u6765\u4f5c\u51fd\u6570Set\uff08\uff09\u7684\u5f62\u53c2\uff1b",
      "optionAnswer": "C",
      "answer": "a\u662f\u7c7bA\u7684\u5bf9\u8c61\u5f15\u7528\uff0c\u7528\u6765\u4f5c\u51fd\u6570Set\uff08\uff09\u7684\u5f62\u53c2",
      "optionB": "\u5c06a\u7684\u5730\u5740\u503c\u8d4b\u7ed9\u53d8\u91cfSet\uff1b",
      "type": "1",
      "optionA": "\u6307\u5411\u7c7bA\u7684\u6307\u9488\u4e3aa;",
      "question": "\u5df2\u77e5\uff1a\u7c7bA\u4e2d\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u8bf4\u660e\u5982\u4e0b\uff1avoid Set(A&a);\u5176\u4e2d\uff0cA&a\u7684\u542b\u610f\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85be4b0152a610de824",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "32",
      "optionC": "24",
      "optionAnswer": "C",
      "answer": "\u6307\u9488\u572864\u4f4d\u7cfb\u7edf\u4e2d\u5360\u75288\u4e2a\u5b57\u8282\uff0cA\u7c7b\u4e2d\u67093\u4e2a\u6307\u9488\uff0c\u6545\u5360\u752824\u4e2a\u5b57\u8282\u3002B\u7c7b\u7ee7\u627f\u81eaA\u7c7b\u4e14\u65e0\u6210\u5458\u53d8\u91cf\u548c\u865a\u51fd\u6570\u8868\uff0c\u5360\u7528\u5b57\u8282\u548cA\u76f8\u540c\u3002",
      "optionB": "16",
      "type": "1",
      "optionA": "8",
      "question": "\u572864\u4f4d\u7cfb\u7edf\u4e2d\uff0c\u6709\u5982\u4e0b\u7c7b\uff1aclass A\n{\npublic:\n    void *p1;\nprivate:\n    void *p2;\nprotected:\n    void *p3;\n};\nclass B: public A {};\n\u90a3\u4e48sizeof(B)\u7684\u6570\u503c\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "answer": "0,1\u80cc\u5305\u95ee\u9898\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n*max)\nint getFirstUnFormedNum(vector<int> arr, int len) {      \nint i,j;          \nint mi = arr[0],sum = 0;          \nfor (i = 0;i<len;i++)          \n{              \nsum sum  +=  arr [ i ];              \nif   ( arr [ i ]< mi )                  \nmi  =  arr [ i ];          \n}          \nvector <int>  dp ( sum + 1 , 0 );          \nfor   ( i  =   0 ; i < len ; i ++)              \nfor   ( j  =  sum ; j >= arr [ i ]; j --)              \n{                  \nif   ( dp [ j - arr [ i ]]+ arr [ i ]> dp [ j ])                      \ndp [ j ]   =  dp [ j - arr [ i ]]+ arr [ i ];                  \nelse                      \ndp [ j ]   =  dp [ j ];              \n}          \nfor   ( i  =  mi ; i <= sum ; i ++)          \n{              \nif   ( i  !=  dp [ i ])                \nreturn  i ;          \n}          \nreturn  i ;      \n} ",
      "ID": "55f2e51de4b0152a61143343",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u4e00\u4e2a\u5168\u662f\u6b63\u6570\u7684\u6570\u7ec4arr\uff0c\u5b9a\u4e49\u4e00\u4e0barr\u7684\u6700\u5c0f\u4e0d\u53ef\u7ec4\u6210\u548c\u7684\u6982\u5ff5\uff1a 1\uff0carr\u7684\u6240\u6709\u975e\u7a7a\u5b50\u96c6\u4e2d\uff0c\u628a\u6bcf\u4e2a\u5b50\u96c6\u5185\u7684\u6240\u6709\u5143\u7d20\u52a0\u8d77\u6765\u4f1a\u51fa\u73b0\u5f88\u591a\u7684\u503c\uff0c\u5176\u4e2d\u6700\u5c0f\u7684\u8bb0\u4e3amin\uff0c\u6700\u5927\u7684\u8bb0\u4e3amax\uff1b 2\uff0c\u5728\u533a\u95f4[min,max]\u4e0a\uff0c\u5982\u679c\u6709\u4e00\u4e9b\u6b63\u6570\u4e0d\u53ef\u4ee5\u88abarr\u67d0\u4e00\u4e2a\u5b50\u96c6\u76f8\u52a0\u5f97\u5230\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6b63\u6570\u4e2d\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u5c31\u662farr\u7684\u6700\u5c0f\u4e0d\u53ef\u7ec4\u6210\u548c\uff1b 3\uff0c\u5728\u533a\u95f4[min,max]\u4e0a\uff0c\u5982\u679c\u6240\u6709\u7684\u6570\u90fd\u53ef\u4ee5\u88abarr\u7684\u67d0\u4e00\u4e2a\u5b50\u96c6\u76f8\u52a0\u5f97\u5230\uff0c\u90a3\u4e48max+1\u662farr\u7684\u6700\u5c0f\u4e0d\u53ef\u7ec4\u6210\u548c\uff1b \u4e3e\u4f8b\uff1a arr = {3,2,5} arr\u7684min\u4e3a2\uff0cmax\u4e3a10\uff0c\u5728\u533a\u95f4[2,10]\u4e0a\uff0c4\u662f\u4e0d\u80fd\u88ab\u4efb\u4f55\u4e00\u4e2a\u5b50\u96c6\u76f8\u52a0\u5f97\u5230\u7684\u503c\u4e2d\u6700\u5c0f\u7684\uff0c\u6240\u4ee54\u662farr\u7684\u6700\u5c0f\u4e0d\u53ef\u7ec4\u6210\u548c\uff1b arr = {3,2,4} arr\u7684min\u4e3a2\uff0cmax\u4e3a9\uff0c\u5728\u533a\u95f4[2,9]\u4e0a\uff0c8\u662f\u4e0d\u80fd\u88ab\u4efb\u4f55\u4e00\u4e2a\u5b50\u96c6\u76f8\u52a0\u5f97\u5230\u7684\u503c\u4e2d\u6700\u5c0f\u7684\uff0c\u6240\u4ee58\u662farr\u7684\u6700\u5c0f\u4e0d\u53ef\u7ec4\u6210\u548c\uff1b arr = {3,1,2} arr\u7684min\u4e3a1\uff0cmax\u4e3a6\uff0c\u5728\u533a\u95f4[2,6]\u4e0a\uff0c\u4efb\u4f55\u6570\u90fd\u53ef\u4ee5\u88ab\u67d0\u4e00\u4e2a\u5b50\u96c6\u76f8\u52a0\u5f97\u5230\uff0c\u6240\u4ee57\u662farr\u7684\u6700\u5c0f\u4e0d\u53ef\u7ec4\u6210\u548c\uff1b \u8bf7\u5199\u51fd\u6570\u8fd4\u56dearr\u7684\u6700\u5c0f\u4e0d\u53ef\u7ec4\u6210\u548c\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c24",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5f15\u8fdb\u4e86\u7c7b\u548c\u5bf9\u8c61\u7684\u6982\u5ff5",
      "optionC": "\u89c4\u5b9a\u51fd\u6570\u8bf4\u660e\u7b26\u5fc5\u987b\u7528\u539f\u578b",
      "optionAnswer": "D",
      "answer": "C++\u662f\u4e00\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u9762\u5411\u5bf9\u8c61\u7684\u7279\u5f81\uff0c\u62bd\u8c61\u3001\u591a\u6001\u3001\u7ee7\u627f\u548c\u5c01\u88c5\u3002",
      "optionB": "\u5141\u8bb8\u51fd\u6570\u91cd\u8f7d\uff0c\u5e76\u5141\u8bb8\u8bbe\u7f6e\u7f3a\u7701\u53c2\u6570",
      "type": "1",
      "optionA": "\u589e\u52a0\u4e86\u4e00\u4e9b\u65b0\u7684\u8fd0\u7b97\u7b26",
      "question": "C++\u5bf9C\u8bed\u8a00\u505a\u4e86\u5f88\u591a\u6539\u8fdb\uff0c\u5373\u4ece\u9762\u5411\u8fc7\u7a0b\u53d8\u6210\u4e3a\u9762\u5411\u5bf9\u8c61\u7684\u4e3b\u8981\u539f\u56e0\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431f1",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "2\uff0c4",
      "optionC": "1\uff0c3",
      "optionAnswer": "A",
      "answer": "\u7b54\u6848A(1, 4)\n\u89e3\u91ca\uff1a\u9996\u5148\u770b\u770b\u5404\u4e2a\u5bb9\u5668\u7684erase(pos)\u5b9e\u73b0\u5427\uff1a\n1. vector\uff0cerase(pos)\uff0c\u76f4\u63a5\u628apos+1\u5230finish\u7684\u6570\u636e\u62f7\u8d1d\u5230\u4ee5pos\u4e3a\u8d77\u70b9\u7684\u533a\u95f4\u4e0a\uff0c\u4e5f\u5c31\u662fvector\u7684\u957f\u5ea6\u4f1a\u9010\u6e10\u53d8\u77ed\uff0c\u540c\u65f6iter\u4f1a\u9010\u6e10\u5f80\u540e\u79fb\u52a8\uff0c\u76f4\u5230iter == cont.end()\uff0c\u7531\u4e8e\u5bb9\u5668\u4e2dend()\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\uff08\u8fd9\u4e2a\u5730\u65b9\u6ca1\u6709\u4efb\u4f55\u503c\uff09\uff0c\u73b0\u5728\u8003\u8651\u8fd9\u4e2a\u72b6\u6001\u524d\u4e00\u4e2a\u72b6\u6001\uff0c\u6b64\u65f6\u8981\u5220\u9664\u7684\u70b9\u662fiter, tempIt = iter, ++iter\u4f1a\u6307\u5411\u6b64\u65f6\u7684end()\uff0c\u4f46\u662f\u6267\u884cerase(tempIt)\u4e4b\u540e\uff0cend()\u5411\u524d\u79fb\u52a8\u4e86\uff01\uff01\uff01\u95ee\u9898\u6765\u4e86\uff0c\u6b64\u65f6iter\u7a7a\u4e86\uff01\uff01\uff01\u4e0d\u5d29\u6e83\u624d\u602a\u3002\n\n2. list\uff0cerase(pos)\uff0c\u5e72\u7684\u4e8b\u60c5\u5f88\u7b80\u5355\uff0c\u5220\u9664\u81ea\u5df1\uff0c\u524d\u540e\u7684\u8282\u70b9\u8fde\u63a5\u8d77\u6765\u5c31\u5b8c\u4e86\uff0c\u6240\u4ee5iter\u81ea\u589e\u7684\u8fc7\u7a0b\u4e0d\u4f1a\u6307\u7a7a\uff0c\u4e0d\u4f1a\u5d29\u6e83\u55bd\u3002\n\n3. map\uff0cerase(pos)\uff0c\u5e72\u7684\u4e8b\u60c5\u592a\u590d\u6742\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\u4fe1\u606f\u5176\u5b9e\u5f88\u5c11\u3002\u8be5\u5bb9\u5668\u5e95\u5c42\u5b9e\u73b0\u662fRBTree\uff0c\u5220\u9664\u64cd\u4f5c\u5206\u4e86\u5f88\u591a\u79cd\u60c5\u5f62\u6765\u8ba8\u8bba\u7684\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u7ef4\u6301\u7ea2\u9ed1\u6811\u6027\u8d28\u3002\u4f46\u662f\u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\u5c31\u662f\u6bcf\u4e2a\u8282\u70b9\u7c7b\u4f3c\u4e8elist\u8282\u70b9\uff0c\u90fd\u662f\u5355\u72ec\u5206\u914d\u7684\u7a7a\u95f4\uff0c\u6240\u4ee5\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u5e76\u4e0d\u4f1a\u5bf9\u5176\u4ed6\u8fed\u4ee3\u5668\u4ea7\u751f\u5f71\u54cd\uff0c\u5bf9\u5e94\u5230\u9898\u76ee\u4e2d\uff0c\u4e0d\u4f1a\u5d29\u6e83\u55bd\u3002\n\n4. deque\uff0cerase(pos)\uff0c\u4e0evector\u7684erase(pos)\u6709\u4e9b\u7c7b\u4f3c\uff0c\u57fa\u4e8e\u7ed3\u6784\u7684\u4e0d\u540c\u5bfc\u81f4\u4e2d\u95f4\u6709\u4e9b\u6b65\u9aa4\u4e0d\u592a\u4e00\u81f4\u3002\u5148\u8bf4\u8bf4deque\u7684\u7ed3\u6784\uff08\u8fd9\u4e2a\u7ed3\u6784\u672c\u8eab\u6bd4\u8f83\u590d\u6742\uff0c\u62e3\u91cd\u8981\u8bf4\u5427\uff0c\u5177\u4f53\u770bSTL\u6e90\u7801\uff09\uff0c\u5b83\u662f\u4e00\u4e2a\u53cc\u5411\u5f00\u53e3\u7684\u8fde\u7eed\u7ebf\u6027\u7a7a\u95f4\uff0c\u5b9e\u8d28\u662f\u5206\u6bb5\u8fde\u7eed\u7684\uff0c\u7531\u4e2d\u63a7\u5668map\u7ef4\u6301\u5176\u6574\u4f53\u8fde\u7eed\u7684\u5047\u8c61\u3002\u5176\u5b9e\u9898\u4e2d\u53ea\u8981\u77e5\u9053\u5b83\u662f\u53cc\u5411\u5f00\u53e3\u7684\u5c31\u591f\u4e86\uff08\u53ef\u4ee5\u5728\u5934\u90e8\u6216\u5c3e\u90e8\u589e\u52a0\u3001\u5220\u9664\uff09\u3002\u5728\u9898\u4e2d\u6709erase(pos)\uff0cdeque\u662f\u8fd9\u6837\u5904\u7406\u7684\uff1a\u5982\u679cpos\u4e4b\u524d\u7684\u5143\u7d20\u4e2a\u6570\u6bd4\u8f83\u5c11\uff0c\u90a3\u4e48\u628astart\u5230pos-1\u7684\u6570\u636e\u79fb\u5230\u8d77\u59cb\u5730\u5740\u4e3astart+1\u7684\u533a\u95f4\u5185\uff1b\u5426\u5219\u628apos\u540e\u9762\u7684\u6570\u636e\u79fb\u5230\u8d77\u59cb\u5730\u5740\u4e3apos\u7684\u533a\u95f4\u5185\u3002\u5728\u9898\u4e2diter\u4e00\u76f4\u5f80\u540e\u79fb\u52a8\uff0c\u603b\u4f1a\u51fa\u73b0\u540e\u9762\u6570\u636e\u6bd4\u524d\u9762\u5c11\u7684\u65f6\u5019\uff0c\u8fd9\u65f6\u5019\u95ee\u9898\u5c31\u548c1\u4e00\u6837\u4e86\uff0c\u5fc5\u987b\u5d29\u6e83\uff01",
      "optionB": "2\uff0c3",
      "type": "1",
      "optionA": "1\uff0c4",
      "question": "CONTAINER::iterator iter , tempIt;\nfor (iter = cont.begin() ; iter != cont.end() ; )    \u3000\u3000\n{\n    tempIt = iter;\n    ++iter;\n    cont.erase(tempIt);\n    \u3000\u3000\n}\n \n\u5047\u8bbecont\u662f\u4e00\u4e2aCONTAINER\u7684\u793a\u4f8b\uff0c\u91cc\u9762\u5305\u542b\u6570\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u5f53CONTAINER\u4e3a\uff1a 1\u3001vector 2\u3001list 3\u3001map 4\u3001deque \u4f1a\u5bfc\u81f4\u4e0a\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u5d29\u6e83\u7684CONTAINER\u7c7b\u578b\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa",
      "ID": "55f2e51ee4b0152a611433c5",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u7b54\uff1a\u9996\u5148\uff0c1000\u4ebf\u6761\u8bb0\u5f55\u5168\u90e8\u653e\u5230\u5185\u5b58\u80af\u5b9a\u4e0d\u591f\uff0c\u90a3\u5c31\u662f\u5206\u6210\u5c0f\u6587\u4ef6\u4e86\uff0c\u7136\u540e\u6574\u5408\uff1b\n\u516c\u5171\u7684\u65f6\u95f4\u6bb5\uff0c\u56e0\u4e3a\u7cbe\u786e\u5230\u5206\u949f\uff0c\u6211\u4eec\u628a\u8fd9\u6bcf\u4e00\u5206\u949f\u5efa\u6210\u4e00\u4e2a\u5c0f\u6587\u4ef6\uff0c\u6bcf\u4e2a\u5c0f\u6587\u4ef6\u80af\u5b9a\u4f1a\u6709\u8bb8\u591a\u91cd\u590d\u7684ip\uff0curl\uff1b\n\u73b0\u5728\u7edf\u8ba1\u6bcf\u4e2a\u5c0f\u7684\u6587\u4ef6\u4e2durl\u7684\u8bbf\u95ee\u91cf\u548cip\u7684\u8bbf\u95ee\u6b21\u6570\uff0c\u65b9\u6cd5\u5c31\u662f\u5efa\u7acb\u7d22\u5f15\uff1b\n\uff08\u5efa\u7acb\u7d22\u5f15\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u51cf\u5c11\u67e5\u8be2\u6b21\u6570\uff0c\u4f46\u662f\u968f\u7740\u7d22\u5f15\u7ea7\u6570\u589e\u591a\u4e5f\u4f1a\u9020\u6210\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u5728\u5efa\u7acb\u7d22\u5f15\u4e0a\uff09\uff1b\n\u5efa\u7acburl\u7684\u7d22\u5f15\uff0c\u5047\u5982\u662fwww.nowcoder.com/question,\u53ef\u4ee5\u5206\u522b\u7ed9www.nowcoder.com\u548cquestion\u5efa\u7acb\u7d22\u5f15\uff0c\u90a3\u4e48\u6765\u4e86\u4e00\u6761url\uff0c\u5148\u770b\u4e00\u7ea7\u7d22\u5f15\u662f\u4e0d\u662f\u5339\u914d\uff0c\u5339\u914d\u518d\u770b\u4e8c\u7ea7\u7d22\u5f15\uff0c\u76f8\u540c\u7684\u8bdd\u5c31\u662f\u6211\u4eec\u8981\u7684url\u76ee\u6807\uff1b\nip\u7684\u7d22\u5f15\u4e5f\u662f\u4e00\u6837\uff0cip\u5206\u62104\u6bb5\u5efa\u7acb\u7d22\u5f15\uff1b\n\u6240\u4ee5\u8fd9\u91cc\u5f71\u54cd\u6548\u7387\u7684\u5c31\u662f\u5728\u7d22\u5f15\u5efa\u7acb\u8fd9\u5757\uff0c\u7d22\u5f15\u5efa\u7acb\u597d\u90a3\u5c31\u662f\u67e5\u8be2\u7684\u4e8b\u4e86\u7684\uff0c\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u5feb\u3002\n\u5047\u5b9a\u7ed9\u5b9a\u4e86\u67d0\u4e2a\u65f6\u95f4\u6bb5\uff0c\u627e\u51faurl\u7684\u8bbf\u95ee\u91cf\uff0c\u90a3\u4e48\u5148\u627e\u5230\u7ed9\u5b9a\u7684\u65f6\u95f4\u6bb5\uff0c\u5bf9\u5e94\u7740\u521a\u5f00\u59cb\u5206\u5272\u7684\u5c0f\u7684\u6587\u4ef6\uff08\u6bcf\u4e00\u4e2a\u5206\u949f\uff09\u4e2d\u641c\u7d22\uff0c\u901a\u8fc7\u7d22\u5f15\u627e\u5230\u76f8\u540c\u7684url\u4e4b\u540e\uff0c\u5f00\u59cb\u7edf\u8ba1\uff0c\u76f4\u5230\u641c\u7d22\u5b8c\u6240\u6709\u7684\u7ed9\u5b9a\u65f6\u95f4\u6bb5\u5185\u7684\u6240\u6709\u7684\u5c0f\u7684\u6587\u4ef6\uff1b\n\u6c42ip\u7684\u8bbf\u95ee\u6b21\u6570\u4e5f\u662f\u4e00\u6837\uff0c\u6309\u7167\u7ed9\u5b9a\u7684\u65f6\u95f4\u6bb5\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u5c0f\u7684\u6587\u4ef6\uff0c\u901a\u8fc7\u7d22\u5f15\u627e\u5230\u76f8\u540c\u7684ip\u540e\u7edf\u8ba1\uff0c\u76f4\u5230\u641c\u7d22\u5b8c\u4e86\u7ed9\u5b9a\u65f6\u95f4\u6bb5\u5185\u7684\u6240\u6709\u7684\u5c0f\u7684\u6587\u4ef6\u3002",
      "ID": "55f2e51de4b0152a6114333d",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u67091000\u4ebf\u6761\u8bb0\u5f55\uff0c\u6bcf\u6761\u8bb0\u5f55\u7531url,ip,\u65f6\u95f4\u7ec4\u6210\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7cfb\u7edf\u80fd\u591f\u5feb\u901f\u67e5\u8be2\u4ee5\u4e0b\u5185\u5bb9\n1.\u7ed9\u5b9aurl\u548c\u65f6\u95f4\u6bb5\uff08\u7cbe\u786e\u5230\u5206\u949f\uff09\u7edf\u8ba1url\u7684\u8bbf\u95ee\u6b21\u6570\n2.\u7ed9\u5b9aip\u548c\u65f6\u95f4\u6bb5\uff08\u7cbe\u786e\u5230\u5206\u949f\uff09\u7edf\u8ba1ip\u7684\u8bbf\u95ee\u6b21\u6570",
      "title": "C&C++"
    },
    {
      "answer": "1\uff0e\u5bf9\u4e8e\u6bcf\u76cf\u706f\uff0c\u62c9\u52a8\u7684\u6b21\u6570\u662f\u5947\u6570\u65f6\uff0c\u706f\u5c31\u662f\u4eae\u7740\u7684\uff0c\u62c9\u52a8\u7684\u6b21\u6570\u662f\u5076\u6570\u65f6\uff0c\u706f\u5c31\u662f\u5173\u7740\u7684\u3002\n2\uff0e\u6bcf\u76cf\u706f\u62c9\u52a8\u7684\u6b21\u6570\u4e0e\u5b83\u7684\u7f16\u53f7\u6240\u542b\u7ea6\u6570\u7684\u4e2a\u6570\u6709\u5173\uff0c\u5b83\u7684\u7f16\u53f7\u6709\u51e0\u4e2a\u7ea6\u6570\uff0c\u8fd9\u76cf\u706f\u5c31\u88ab\u62c9\u52a8\u51e0\u6b21\u3002 \n3\uff0e1\u2014\u2014100\u8fd9100\u4e2a\u6570\u4e2d\u6709\u54ea\u51e0\u4e2a\u6570\uff0c\u7ea6\u6570\u7684\u4e2a\u6570\u662f\u5947\u6570\u3002\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u6570\u7684\u7ea6\u6570\u90fd\u662f\u6210\u5bf9\u51fa\u73b0\u7684\uff0c\u53ea\u6709\u5b8c\u5168\u5e73\u65b9\u6570\u7ea6\u6570\u7684\u4e2a\u6570\u624d\u662f\u5947\u6570\u4e2a\u3002 \u6240\u4ee5\u8fd9100\u76cf\u706f\u4e2d\u670910\u76cf\u706f\u662f\u4eae\u7740\u7684\u3002 \u5b83\u4eec\u7684\u7f16\u53f7\u5206\u522b\u662f\uff1a 1\u30014\u30019\u300116\u300125\u300136\u300149\u300164\u300181\u3001100\u3002",
      "ID": "55f2e51de4b0152a61143367",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u73b0\u5728\u6709100\u4e2a\u706f\u6ce1\uff0c\u6bcf\u4e2a\u706f\u6ce1\u90fd\u662f\u5173\u7740\u7684\uff0c\u7b2c\u4e00\u8d9f\u628a\u6240\u6709\u7684\u706f\u6ce1\u706f\u6ce1\u6253\u5f00\uff0c\u7b2c\u4e8c\u8d9f\u628a\u5076\u6570\u4f4d\u7684\u706f\u6ce1\u5236\u53cd\uff08\u4e5f\u5c31\u662f\u5f00\u4e86\u7684\u5173\u6389\uff0c\u5173\u4e86\u7684\u6253\u5f00\uff09\uff0c\u7b2c\u4e09\u8d9f\u8ba9\u7b2c3,6,9....\u7684\u706f\u6ce1\u5236\u53cd.......\u7b2c100\u8d9f\u8ba9\u7b2c100\u4e2a\u706f\u6ce1\u5236\u53cd\uff0c\u95ee\u7ecf\u8fc7\u4e00\u767e\u8d9f\u4ee5\u540e\u6709\u591a\u5c11\u706f\u6ce1\u4eae\u7740\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a611431f5",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "8,val1\u4f1a\u88ab\u8986\u76d6",
      "optionC": "8,val2\u4f1a\u88ab\u8986\u76d6",
      "optionAnswer": "C",
      "answer": "sizeof(src) \u5e94\u8be5\u662f\u4e00\u4e2a\u6307\u9488\u7684\u5927\u5c0f\u5427 ?\u572864\u4f4d\u5e73\u53f0\u4e0b\u624d\u662f8\u5427 \u8fd8\u6709\u6808\u4e0a\u5185\u5b58\u5e8f\u53f7\u662f\u4ece\u5c0f\u5230\u5927\u5206\u914d\u7684\u5427 ?val1\u624d\u662f\u5728\u6570\u7ec4dst\u7684\u540e\u9762\u5427",
      "optionB": "\u5176\u4ed6\u4e09\u9879\u90fd\u4e0d\u5bf9",
      "type": "1",
      "optionA": "16,val2\u4f1a\u88ab\u8986\u76d6",
      "question": "int function(const int src[16]){\n    int val1=0;\n    int dst[16]={0};\n    int val2=0;\n    const int *psrc=src;\n    //\u95ee\u98981\uff1a\u5982\u4e0b\u4ee3\u7801\u884c\u8f93\u51fa\u4ec0\u4e48\uff1f\n    fprintf(stdout,\"size of src=%lu\\n\",sizeof(src));\n    //\u95ee\u98982\uff1a\u5982\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u526f\u4f5c\u7528\uff1f\n    for(int i=0;i<=16;i++){\n     dst[i]=*psrc+i;\n     psrc++;\n    }\n    return 0;\n}\n\u5728gcc\u7f16\u8bd1\u5668\u4e0b\uff0c\u4ee5\u4e0b\u8bf4\u6cd5\u6b63\u786e\u7684\u662f",
      "title": "C&C++"
    },
    {
      "answer": "\u89e3\u7b54\uff1a\uff081\uff09\u8f6e\u8be2\u8c03\u5ea6\u7684\u539f\u7406\u662f\u6bcf\u4e00\u6b21\u628a\u6765\u81ea\u7528\u6237\u7684\u8bf7\u6c42\u8f6e\u6d41\u5206\u914d\u7ed9\u5185\u90e8\u4e2d\u7684\u670d\u52a1\u5668\uff0c\u4ece1\u5f00\u59cb\uff0c\u76f4\u5230N(\u5185\u90e8\u670d\u52a1\u5668\u4e2a\u6570)\uff0c\u7136\u540e\u91cd\u65b0\u5f00\u59cb\u5faa\u73af\u3002\u53ea\u6709\u5728\u5f53\u524d\u4efb\u52a1\u4e3b\u52a8\u653e\u5f03CPU\u63a7\u5236\u6743\u7684\u60c5\u51b5\u4e0b\uff08\u6bd4\u5982\u4efb\u52a1\u6302\u8d77\uff09\uff0c\u624d\u5141\u8bb8\u5176\u4ed6\u4efb\u52a1\uff08\u5305\u62ec\u9ad8\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\uff09\u63a7\u5236CPU\u3002\u5176\u4f18\u70b9\u662f\u5176\u7b80\u6d01\u6027\uff0c\u5b83\u65e0\u9700\u8bb0\u5f55\u5f53\u524d\u6240\u6709\u8fde\u63a5\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u5b83\u662f\u4e00\u79cd\u65e0\u72b6\u6001\u8c03\u5ea6\u3002\u4f46\u4e0d\u5229\u4e8e\u540e\u9762\u7684\u8bf7\u6c42\u53ca\u65f6\u5f97\u5230\u54cd\u5e94\u3002\n\uff082\uff09\u62a2\u5360\u5f0f\u8c03\u5ea6\u5141\u8bb8\u9ad8\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u6253\u65ad\u5f53\u524d\u6267\u884c\u7684\u4efb\u52a1\uff0c\u62a2\u5360CPU\u7684\u63a7\u5236\u6743\u3002\u8fd9\u6709\u5229\u4e8e\u540e\u9762\u7684\u9ad8\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u4e5f\u80fd\u53ca\u65f6\u5f97\u5230\u54cd\u5e94\u3002\u4f46\u5b9e\u73b0\u76f8\u5bf9\u8f83\u590d\u6742\u4e14\u53ef\u80fd\u51fa\u73b0\u4f4e\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u957f\u671f\u5f97\u4e0d\u5230\u8c03\u5ea6\u3002",
      "ID": "55f2e51ee4b0152a611433aa",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u8f6e\u8be2\u4efb\u52a1\u8c03\u5ea6\u548c\u53ef\u62a2\u5360\u5f0f\u8c03\u5ea6\u6709\u4ec0\u4e48\u533a\u522b\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "\u53bb\u9664\u4e2d\u95f4\u7a7a\u683c\u7684\u51fd\u6570\uff0cchar* removeEmpty(char *str, char ch) {\n    char *it1 = str;\n    char *it2 = str;\n    while (*it2 != '\\0') {\n        //while (*it2 == ch) {it2++; }\n        while (*it2 == ch  && *(it2 + 1) == ch)\n        {\n            it2++;\n        }\n        *it1++ = *it2++;\n    }\n     return str;\n}\nvoid FormatString(char str[], int len){\n    str = removeEmpty(str, ' ');\n}",
      "ID": "55f2e51ce4b0152a61143337",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7ed9\u5b9a\u5b57\u7b26\u4e32\uff08ASCII\u78010-255\uff09\u6570\u7ec4\uff0c\u8bf7\u5728\u4e0d\u5f00\u8f9f\u989d\u5916\u7a7a\u95f4\u7684\u60c5\u51b5\u4e0b\u5220\u9664\u5f00\u59cb\u548c\u7ed3\u5c3e\u5904\u7684\u7a7a\u683c\uff0c\u5e76\u5c06\u4e2d\u95f4\u7684\u591a\u4e2a\u8fde\u7eed\u7684\u7a7a\u683c\u5408\u5e76\u6210\u4e00\u4e2a\u3002\u4f8b\u5982\uff1a\"   i    am a      little boy.    \"\uff0c\u53d8\u6210\"i am a little boy\",\u8bed\u8a00\u4e0d\u9650\uff0c\u4f46\u4e0d\u8981\u7528\u4f2a\u4ee3\u7801\u4f5c\u7b54\uff0c\u51fd\u6570\u8f93\u5165\u8f93\u51fa\u8bf7\u53c2\u8003\u5982\u4e0b\u7684\u51fd\u6570\u539f\u578b\uff1aC++\u51fd\u6570\u539f\u578b\uff1a\nvoid FormatString(char str[],int len){\n}",
      "title": "C&C++"
    },
    {
      "answer": "#include<iostream>\n#include<math.h>\n#include <time.h>\nusing namespace std;\nint num[10];\ninline void SrandNum()\n{\n    num[0]=rand()%100000;\n    num[1]=rand()%100000;\n    num[2]=rand()%100000;\n    num[3]=rand()%100000;\n    num[4]=rand()%100000;\n    num[5]=rand()%100000;\n    num[6]=rand()%100000;\n    num[7]=rand()%100000;\n    num[8]=rand()%100000;\n    num[9]=rand()%100000;\n}\nint MaxNum()\n{\n    int Max=-1;\n    for(int i=0;i<10;i++)\n    {\n        if(num[i]>=Max)\n            Max=num[i];\n    }\n    return Max;\n}\nint AfterMax()\n{\n    int Max=-1;\n    for(int i=0;i<4;i++)\n        if(num[i]>=Max)\n            Max=num[i];\n        for(int i=4;i<9;i++)\n            if(num[i]>Max)\n                return num[i];\n    return num[9];\n}\nint main()\n{\n    srand((unsigned) time(NULL));\n    int times=0;\n    int total=0;\n    int max=-1;\n    int afternum=-1;\n    while(times<1000000)\n    {\n        SrandNum();\n        max=MaxNum();\n        afternum=AfterMax();\n        if(afternum==max)\n            total++;\n        times++;\n    }\n    cout<<total<<endl;\n    return 0;\n}",
      "ID": "55f2e51de4b0152a61143391",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "10\u4e2a\u623f\u95f4\u91cc\u653e\u7740\u968f\u673a\u6570\u91cf\u7684\u91d1\u5e01\u3002\u6bcf\u4e2a\u623f\u95f4\u53ea\u80fd\u8fdb\u5165\u4e00\u6b21\uff0c\u5e76\u53ea\u80fd\u5728\u4e00\u4e2a\u623f\u95f4\u4e2d\u62ff\u91d1\u5e01\u3002 \u4e00\u4e2a\u4eba\u91c7\u53d6\u5982\u4e0b\u7b56\u7565\uff1a\u524d\u56db\u4e2a\u623f\u95f4\u53ea\u770b\u4e0d\u62ff\u3002\u968f\u540e\u7684\u623f\u95f4\u53ea\u8981\u770b\u5230\u6bd4\u524d\u56db\u4e2a\u623f\u95f4\u90fd\u591a\u7684\u91d1\u5e01\u6570\uff0c \u5c31\u62ff\u3002\u5426\u5219\u5c31\u62ff\u6700\u540e\u4e00\u4e2a\u623f\u95f4\u7684\u91d1\u5e01\u3002\u7f16\u7a0b\u8ba1\u7b97\u8fd9\u79cd\u7b56\u7565\u62ff\u5230\u6700\u591a\u91d1\u5e01\u7684\u6982\u7387\u3002",
      "title": "C&C++"
    },
    {
      "answer": "\u6709A\u3001B\u4e24\u4e2a\u6808\uff0c\u8fdb\u961f\u5217push\u5230A\uff0c\u51fa\u961f\u5217\u4eceB\u4e2d;pop\u5728\u8fdb\u961f\u5217\u524d\u628aB\u4e2d\u7684\u5143\u7d20\u5168\u90e8pop\u51fa\u6765\u5e76push\u5230A\u4e2d;\u5728\u51fa\u961f\u5217\u524d\u628aA\u4e2d\u7684\u5143\u7d20\u5168\u90e8pop\u51fa\u6765\u5e76push\u5230B\u4e2d",
      "ID": "55f2e51ee4b0152a611433b9",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u7528\u4e24\u4e2a\u6808\u6a21\u62df\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6a21\u62df\u5176add\u548cromve\u529f\u80fd\uff0c\u7ed9\u51fa\u601d\u8def\u548c\u4ee3\u7801\u3002",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114326a",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "8",
      "optionC": "7",
      "optionAnswer": "B",
      "answer": "C\u8bed\u8a00\u533a\u5206\u5927\u5c0f\u5199,pad\u4e0epAd\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\u3002\u9996\u5148\u5c065\u8d4b\u503c\u7ed9\u4e24\u4e2a\u53d8\u91cf,\u7531\u4e8e\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u9017\u53f7\u8fd0\u7b97\u7b26,\u6240\u4ee5\u8ba1\u7b97pAd = + + sum,\u6b64\u65f6pAd\u4e3a6,sum\u4e5f\u4e3a6,\u7136\u540e\u8ba1\u7b97pAd + +,pAd\u7684\u503c\u53d8\u4e3a7,+ + pad,pad\u7684\u503c\u53d8\u4e3a6,\u6240\u4ee5\u9009\u62e9B\u3002",
      "optionB": "6",
      "type": "1",
      "optionA": "5",
      "question": "\u6709\u4ee5\u4e0b\u7a0b\u5e8f\n\n<stdio. h=\"\">main( )\n</stdio.><stdio. h=\"\">{ \n</stdio.><stdio. h=\"\">   int sum,pad,pAd;\n</stdio.><stdio. h=\"\">   sum = pad = 5;\n</stdio.><stdio. h=\"\">   pAd = + + sum,pAd + +,+ + pad;\n</stdio.><stdio. h=\"\">   printf(\"%d\\n\",pad); \n</stdio.><stdio. h=\"\">}</stdio.>\n\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f",
      "title": "C&C++"
    },
    {
      "answer": "\u7b54\uff1a\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002\n\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519",
      "ID": "55f2e51ee4b0152a611433c0",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e469e4b0152a61143137",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "0",
      "optionC": "1",
      "optionAnswer": "D",
      "answer": "\u5b8f\u66ff\u6362\u662f\u76f4\u63a5\u66ff\u6362\u3002 \nx/=SQR(y+z)/SQR(y+z); \u76f8\u5f53\u4e8e\uff1ax/=y+z*y+z/y+z*y+z;\n\u800c\u9664\u7b49\uff08/=\uff09\u7684\u4f18\u5148\u7ea7\u4f4e\u4e8e+\u3001-\u3001*\u3001\\\u3002\u6240\u4ee5\u5148\u8ba1\u7b97/=\u53f3\u8fb9\u7684.\u800cx\u4e3aint\u578b\uff0c\u7ed3\u679c\u4fdd\u7559\u6574\u6570\u4f4d\uff0c\u6240\u4ee5\u4e3a0\uff0c\u9009\u62e9D\u3002",
      "optionB": "6",
      "type": "1",
      "optionA": "5",
      "question": "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002 \n\n#include < iostream.h> \n#define SQR(A) A*A\nvoid main() { \n    int x=6,y=3,z=2; \n    x/=SQR(y+z)/SQR(y+z); \n    cout< < x< < endl; \n}",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143207",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u7c7b\u6a21\u677f\u7684\u6210\u5458\u51fd\u6570\u90fd\u662f\u51fd\u6570\u6a21\u677f\uff0c\u7c7b\u6a21\u677f\u5b9e\u4f8b\u5316\u540e\uff0c\u6210\u5458\u51fd\u6570\u4e5f\u968f\u4e4b\u5b9e\u4f8b\u5316",
      "optionC": "\u4e00\u4e2a\u7c7b\u5b9a\u4e49\u4e2d\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\uff0c\u5219\u8fd9\u4e2a\u7c7b\u662f\u7c7b\u6a21\u677f",
      "optionAnswer": "A",
      "answer": "\u6b63\u786e\u7684\u8bf4\u6cd5\u662f\u51fd\u6570\u6a21\u677f\u5fc5\u987b\u7531\u7f16\u8bd1\u5668\u6839\u636e\u7a0b\u5e8f\u5458\u7684\u8c03\u7528\u7c7b\u578b\u5b9e\u4f8b\u5316\u4e3a\u53ef\u6267\u884c\u7684\u51fd\u6570\u3002",
      "optionB": "\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u7531\u7f16\u8bd1\u5668\u5b9e\u73b0",
      "type": "1",
      "optionA": "\u51fd\u6570\u6a21\u677f\u5fc5\u987b\u7531\u7a0b\u5e8f\u5458\u5b9e\u4f8b\u5316\u4e3a\u53ef\u6267\u884c\u7684\u51fd\u6570\u6a21\u677f",
      "question": "\u5173\u4e8e\u51fd\u6570\u6a21\u677f,\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff1f?",
      "title": "C&C++"
    },
    {
      "ID": "55b22671e4b0bb7ded0a8c88",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "P=f1()\uff1b",
      "optionC": "P=A::fl()\uff1b",
      "optionAnswer": "B",
      "answer": "\u6307\u5411\u666e\u901a\u51fd\u6570\u7684\u6307\u9488  int max(int a, int b){\u2026}   int (*p)(int, int);    p=max;\n\u6307\u5411\u7c7b\u4e2d\u516c\u6709\u51fd\u6570\u7684\u6307\u9488\u7684\u8d4b\u503c\u4e0e\u4e0a\u76f8\u540c \u6307\u9488\u540d=\u7c7b\u540d::\u51fd\u6570\u540d\uff0c\u5373 p=A::max;",
      "optionB": "P=A::f1\uff1b",
      "type": "1",
      "optionA": "p=fl\uff1b",
      "question": "\u5df2\u77e5fl(int)\u662f\u7c7bA\u7684\u516c\u6709\u6210\u5458\u51fd\u6570\uff0cP\u662f\u6307\u5411\u6210\u5458\u51fd\u6570f1()\u7684\u6307\u9488\uff0c\u91c7\u7528\uff08\uff09\u662f\u6b63\u786e\u7684\u3002",
      "title": "C&C++"
    },
    {
      "answer": "ARP(AddressResolutionProtocol)\uff08\u5730\u5740\u89e3\u6790\u534f\u8bae)",
      "ID": "55f2e51ee4b0152a611433cb",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114325b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5728C#\u4e2d\u8981\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u5fc5\u987b\u5728\u524d\u9762\u52a0Override\u3002",
      "optionC": "\u5728C#\u4e2d\u53ef\u4f7f\u7528 new \u4fee\u9970\u7b26\u663e\u5f0f\u9690\u85cf\u4ece\u57fa\u7c7b\u7ee7\u627f\u7684\u6210\u5458\u3002",
      "optionAnswer": "A",
      "answer": "C#\u62bd\u8c61\u7c7b\u4f7f\u7528?abstract \u4fee\u9970",
      "optionB": "C++\u4e2d\u53ef\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7c7b\u7684\u6210\u5458\u800c\u5728CPP\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7c7b\u7684\u6210\u5458\uff0c\u5728C#\u4e2d\u6ca1\u6709\u5934\u6587\u4ef6\u5e76\u4e14\u5728\u540c\u4e00\u5904\u58f0\u660e\u548c\u5b9a\u4e49\u7c7b\u7684\u6210\u5458\u3002",
      "type": "1",
      "optionA": "\u5728C++\u4e2d\u652f\u6301\u62bd\u8c61\u7c7b\u800c\u5728C#\u4e2d\u4e0d\u652f\u6301\u62bd\u8c61\u7c7b\u3002",
      "question": "\u4ee5\u4e0b\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a6114327b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u4ee5\u4e0a\u7b54\u6848\u90fd\u4e0d\u6b63\u786e",
      "optionC": "\u8fd0\u884c\u5f02\u5e38",
      "optionAnswer": "A",
      "answer": "\u6700\u4f73\u7b54\u6848\uff0c\u6ca1\u6709\u4e4b\u4e00\uff1a fclose\u662f\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u529f\u80fd\u662f\u5173\u95ed\u4e00\u4e2a\u6d41\u3002\u4f7f\u7528fclose()\u51fd\u6570\u5c31\u53ef\u4ee5\u628a \u7f13\u51b2\u533a \u5185\u6700\u540e\u5269\u4f59\u7684\u6570\u636e\u8f93\u51fa\u5230\u5185\u6838\u7f13\u51b2\u533a\uff0c\u5e76\u91ca\u653e \u6587\u4ef6\u6307\u9488 \u548c\u6709\u5173\u7684\u7f13\u51b2\u533a\u3002 \u51fd\u6570\u539f\u578b\uff1aint fclose( FILE *fp ).\n\u4e00\u6b21\u6b63\u5e38\u7684fclose\u4f1a\u4e89\u53d6\u91ca\u653eFILE\u6307\u9488\u7684\u76f8\u5173\u5185\u5bb9\u3002\u518d\u6b21fclose\u91ca\u653e\u5df2\u7ecf\u91ca\u653e\u6389\u4e86\u7684FILE\u6307\u9488\uff0c\u6240\u4ee5\u4f1a\u51fa\u9519",
      "optionB": "\u4e0d\u4f1a\u51fa\u73b0\u5f02\u5e38\uff0c\u91ca\u653e\u4e00\u4e2a\u5df2\u7ecf\u91ca\u653e\u7684\u6307\u9488\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5ffd\u7565",
      "type": "1",
      "optionA": "\u5bfc\u81f4\u6587\u4ef6\u63cf\u8ff0\u7b26\u7ed3\u6784\u4e2d\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u88ab\u91cd\u590d\u91ca\u653e\uff0c\u8fdb\u800c\u5bfc\u81f4\u4e00\u4e9b\u4e0d\u53ef\u9884\u671f\u7684\u5f02\u5e38",
      "question": "\u91cd\u590d\u591a\u6b21 fclose \u4e00\u4e2a\u6253\u5f00\u8fc7\u4e00\u6b21\u7684 FILE *fp \u6307\u9488\u4f1a\u6709\u4ec0\u4e48\u7ed3\u679c\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a6114321e",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "a[p-a]",
      "optionC": "*a",
      "optionAnswer": "B",
      "answer": "A\u7684\u503c\u4e3a1\nB\u8d8a\u754c\nC\u548cA\u76f8\u540c\nD p-a\u5730\u5740\u76f8\u51cf\u4e3a0\uff0c\u8bbf\u95ee\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20",
      "optionB": "a[10]",
      "type": "1",
      "optionA": "*p",
      "question": "\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\u548c\u8bed\u53e5\uff1a\nint a[10]={1,2,3,4,5,6,7,8,9,10},*p=a;\n\u5219\u4e0d\u80fd\u8868\u793aa\u6570\u7ec4\u5143\u7d20\u7684\u8868\u8fbe\u5f0f\u662f",
      "title": "C&C++"
    },
    {
      "ID": "55f2e46ae4b0152a6114315b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "Open The Door",
      "optionC": "open the door",
      "optionAnswer": "C",
      "answer": "\u5b57\u7b26\u4e32\u8f93\u5165\u51fd\u6570gets\u7684\u529f\u80fd\u662f\u4ece\u6807\u51c6\u8f93\u5165\u8bbe\u5907\u952e\u76d8\u4e0a\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u9996\u5148\u4f7f\u6307\u9488\u53d8\u91cfp\u6307\u5411\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u6bcd,while\u5faa\u73af\u8bed\u53e5\u4e2d\u5bf9\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\u8fdb\u884cfun\u51fd\u6570\u64cd\u4f5c\u3002fun\u51fd\u6570\u7684\u529f\u80fd\u662f,\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5927\u5199\u5b57\u6bcd\u53d8\u5c0f\u5199\u5b57\u6bcd\u3002\u5c06\u5904\u7406\u7ed3\u679c\u8fd4\u56de\u4e3b\u51fd\u6570,\u4e3b\u51fd\u6570\u901a\u8fc7putchar( )\u5b57\u7b26\u8f93\u51fa\u51fd\u6570\u8fdb\u884c\u8f93\u51fa\u3002\u56e0\u6b64C\u9009\u9879\u6b63\u786e\u3002",
      "optionB": "oPEN tHE dOOR",
      "type": "1",
      "optionA": "OPEN THE DOOR",
      "question": "\u6709\u4ee5\u4e0b\u7a0b\u5e8f\n\n#include <stdio.h>\nchar fun(char *c)\n{\n     if(*c<=`Z`&& *c>=`A`)\n        *c-=`A`-`a`;\n     return *c;\n}\nmain()\n{\n    char s[81],*p=s;\n    gets(s);\n    while(*p)\n    {\n        *p = fun(p);\n        putchar( *p);\n        p++;\n    }\n    printf(\"\\n\");\n}\n\u82e5\u8fd0\u884c\u65f6\u4ece\u952e\u76d8\u4e0a\u8f93\u5165OPEN THE DOOR<\u56de\u8f66>,\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f?",
      "title": "C&C++"
    },
    {
      "ID": "55b22610e4b0bb7ded0a8c0b",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u7f16\u8bd1\u3001\u7f16\u8f91\u3001\u8fde\u63a5\u3001\u8fd0\u884c",
      "optionC": "\u7f16\u8bd1\u3001\u8c03\u8bd5\u3001\u7f16\u8f91\u3001\u8fde\u63a5",
      "optionAnswer": "B",
      "answer": "\u7ecf\u8fc7\u7f16\u8f91\u3001\u7f16\u8bd1\u3001\u8fde\u63a5\u548c\u8fd0\u884c\u56db\u4e2a\u6b65\u9aa4\u3002\u7f16\u8f91\u662f\u5c06C++\u6e90\u7a0b\u5e8f\u8f93\u5165\u8ba1\u7b97\u673a\u7684\u8fc7\u7a0b\uff0c\u4fdd\n\u5b58\u6587\u4ef6\u540d\u4e3acpp\u3002\u7f16\u8bd1\u662f\u4f7f\u7528\u7cfb\u7edf\u63d0\u4f9b\u7684\u7f16\u8bd1\u5668\u5c06\u6e90\u7a0b\u5e8fcpp\u751f\u6210\u673a\u5668\u8bed\u8a00\u7684\u8fc7\u7a0b\uff0c\u76ee\u6807\u6587\u4ef6\u4e3a\nobj\uff0c\u7531\u4e8e\u6ca1\u6709\u5f97\u5230\u7cfb\u7edf\u5206\u914d\u7684\u7edd\u5bf9\u5730\u5740\uff0c\u8fd8\u4e0d\u80fd\u76f4\u63a5\u8fd0\u884c\u3002\u8fde\u63a5\u662f\u5c06\u76ee\u6807\u6587\u4ef6obj\u8f6c\u6362\u4e3a\u53ef\u6267\u884c\n\u7a0b\u5e8f\u7684\u8fc7\u7a0b\uff0c\u7ed3\u679c\u4e3aexe\u3002\u8fd0\u884c\u662f\u6267\u884cexe\uff0c\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u7ed3\u679c\u7684\u8fc7\u7a0b\u3002",
      "optionB": "\u7f16\u8f91\u3001\u7f16\u8bd1\u3001\u8fde\u63a5\u3001\u8fd0\u884c",
      "type": "1",
      "optionA": "\u7f16\u8f91\u3001\u8c03\u8bd5\u3001\u7f16\u8bd1\u3001\u8fde\u63a5",
      "question": "\u7f16\u5199C++\u7a0b\u5e8f\u4e00\u822c\u9700\u7ecf\u8fc7\u7684\u51e0\u4e2a\u6b65\u9aa4\u4f9d\u6b21\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de803",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "protected\u548cprivate",
      "optionC": "public\u548cprivate",
      "optionAnswer": "B",
      "answer": "private\u53ea\u80fd\u7531\u8be5\u7c7b\u4e2d\u7684\u51fd\u6570\u6216\u5176\u53cb\u5143\u51fd\u6570\u8bbf\u95ee\u3002",
      "optionB": "public\u548cprotected",
      "type": "1",
      "optionA": "\u90fd\u80fd\u8bbf\u95ee",
      "question": "\u7c7b\u7684\u6210\u5458\u6709\u4e09\u79cd\u8bbf\u95ee\u5c5e\u6027\uff0c\u5206\u522b\u662fpublic\u3001protected\u3001private\uff0c\u5b50\u7c7b\u80fd\u591f\u8bbf\u95ee\u7684\u6210\u5458\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4ffe4b0152a61143270",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "24",
      "optionC": "23",
      "optionAnswer": "B",
      "answer": "\u8fd9\u9898\u7684\u6b63\u786e\u7b54\u6848\u5e94\u8be5\u662f32\u4f4d\u7cfb\u7edf\u662f4 64\u4f4d\u7cfb\u7edf\u662f8\uff0c\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u662f\u4f1a\u9000\u5316\u4e3a\u51fd\u6570\u6307\u9488\u7684\uff0c\u60f3\u60f3\u770b\uff0c\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u7684\u65f6\u5019\u7ecf\u5e38\u662f\u9700\u8981\u4f20\u9012\u6570\u7ec4\u5927\u5c0f\u7684",
      "optionB": "4",
      "type": "1",
      "optionA": "0",
      "question": "\u572832\u4f4d\u673a\u5668\u4e2d\uff0c\u5982\u4e0b\u4ee3\u7801\uff1a\n\nvoid example(char acWelcome[]){\n    printf(\"%d\",sizeof(acWelcome));\n    return;\n}\nvoid main(){\n    char acWelcome[]=\"Welcome to Huawei Test\";\n    example(acWelcome);\n    return;\n}\n\u7684\u8f93\u51fa\u662f?",
      "title": "C&C++"
    },
    {
      "ID": "55f2e4fee4b0152a61143209",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5806\uff0c\u5806",
      "optionC": "\u6808\uff0c \u6808",
      "optionAnswer": "B",
      "answer": "\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\uff0c\u5f62\u53c2\u90fd\u662f\u5728\u6808\u5185\u5b58\u7a7a\u95f4\u4e2d\u7533\u8bf7\u7684\uff0c\u968f\u7740\u51fd\u6570\u7684\u7ed3\u675f\u800c\u6d88\u5931\nmalloc\u548cnew\u5173\u952e\u5b57\u5728\u5806\u5185\u5b58\u7533\u8bf7\u7a7a\u95f4\uff0c\u4f7f\u7528\u7ed3\u675f\u9700\u8981\u8ba4\u4e3a\u7684\u91ca\u653e",
      "optionB": "\u6808\uff0c\u5806",
      "type": "1",
      "optionA": "\u5806\uff0c\u6808",
      "question": "\u51fd\u6570\u53c2\u6570\u4f7f\u7528\u7684\u7a7a\u95f4\u662f\u5728\uff08\uff09\u4e2d\u7533\u8bf7\u7684\uff0cmalloc\u6216new\u662f\u5728\uff08\uff09\u4e2d\u7533\u8bf7\u7a7a\u95f4\u7684\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "55e6d85ae4b0152a610de7f9",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u90fd\u4e0d\u5bf9",
      "optionC": "b\u768416\u8fdb\u5236\u4e3a0xffffffe0",
      "optionAnswer": "C",
      "answer": "a\u7684\u503c\u4e3a-32\uff0c\u6240\u4ee5a<0.\n\u76f8\u53cd\uff0cc\u7684\u503c\u4e3a224\uff0c\u5927\u4e8e0.\nb\u768416\u8fdb\u5236\u8868\u793a\u4e3affffffe0",
      "optionB": "c==a \u4e3a\u771f",
      "type": "1",
      "optionA": "(a>0 )&&(b>0)\u4e3a\u771f",
      "question": "signed char a=0xe0;\nunsigned int b=a;\nunsigned char c=a;\n\u4e0b\u9762\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff1a",
      "title": "C&C++"
    },
    {
      "answer": "hosts\u6587\u4ef6\u7be1\u6539\uff0c \u672c\u673aDNS\u670d\u52a1\u5668IP\u5730\u5740\u7be1\u6539\uff0cDNS\u901a\u8baf\u5305\u7be1\u6539\u3002",
      "ID": "55f2e51de4b0152a6114334c",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "DNS\u6b3a\u9a97\u7684\u65b9\u5f0f\u6709\u54ea\u4e9b\uff1f",
      "title": "C&C++"
    },
    {
      "answer": "1\u67088\u65e5",
      "ID": "55f2e51de4b0152a61143360",
      "typeID": "54993f56e4b06783458c3b0f",
      "type": "2",
      "question": "\u5728\u533a\u95f4[-1, 1]\u968f\u610f\u53d6\u4e24\u4e2a\u6570\uff0c\u5b83\u4eec\u7684\u548c\u5927\u4e8e1\u7684\u6982\u7387\u662f___\u3002(\u5206\u6570\u8868\u793a)",
      "title": "C&C++"
    },
    {
      "ID": "55b22611e4b0bb7ded0a8c27",
      "typeID": "54993f56e4b06783458c3b0f",
      "optionD": "\u5728\u4e00\u4e2a\u7c7b\u4e2d\u53ef\u4ee5\u8bf4\u660e\u5177\u6709\u7c7b\u7c7b\u578b\u7684\u6570\u636e\u6210\u5458",
      "optionC": "\u6790\u6784\u51fd\u6570\u9700\u8981\u6307\u5b9a\u53c2\u6570",
      "optionAnswer": "C",
      "answer": "\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u6709\u53c2\u6570\u3001\u53ef\u4ee5\u91cd\u8f7d\u3001\u56e0\u6b64\u53ef\u4ee5\u6709\u591a\u4e2a\uff0cA\u9879\u6b63\u786e\u3002\u6790\u6784\u51fd\u6570\u53ea\u6709\u4e00\u4e2a\u4e0d\n\u80fd\u91cd\u8f7d\u3001\u4e0d\u80fd\u7ee7\u627f\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\uff0cB\u9879\u6b63\u786e\uff0cC\u9879\u9519\u8bef\u3002",
      "optionB": "\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u6790\u6784\u51fd\u6570",
      "type": "1",
      "optionA": "\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\u6784\u9020\u51fd\u6570",
      "question": "\u4e0b\u9762\u6709\u5173\u7c7b\u8bf4\u6cd5\u4e0d\u6b63\u786e\u7684\u662f\uff08\uff09",
      "title": "C&C++"
    },
    {
      "ID": "461",
      "typeID": "12",
      "question": "\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f",
      "answer": "\u65e0\u9650\u5faa\u73af\uff0c\u548cwhile(1)\u76f8\u540c\u3002",
      "title": "C&C++"
    },
    {
      "ID": "460",
      "typeID": "12",
      "question": "\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f",
      "answer": "\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002\r\n    \u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519\u3002",
      "title": "C&C++"
    },
    {
      "ID": "459",
      "typeID": "12",
      "question": "\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f",
      "answer": "extern\r\n     \u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4 \u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519\u3002",
      "title": "C&C++"
    },
    {
      "ID": "458",
      "typeID": "12",
      "question": "\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f",
      "answer": "\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\"::\"\r\n\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185\u3002",
      "title": "C&C++"
    },
    {
      "ID": "457",
      "typeID": "12",
      "question": "Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f",
      "answer": "ARP (Address Resolution Protocol)\uff08\u5730\u5740\u89e3\u6790\u5354\u8b70\uff09",
      "title": "C&C++"
    },
    {
      "ID": "456",
      "typeID": "12",
      "question": "Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f",
      "answer": "Tcp/Ip\u534f\u8bae\r\n\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\u4e3a\uff1a \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42\u3002",
      "title": "C&C++"
    },
    {
      "ID": "455",
      "typeID": "12",
      "question": "\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f",
      "answer": "\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n^2)\u3002",
      "title": "C&C++"
    },
    {
      "ID": "454",
      "typeID": "12",
      "question": "\u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f",
      "answer": "constructor\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002",
      "title": "C&C++"
    },
    {
      "ID": "453",
      "typeID": "12",
      "question": "\u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f",
      "answer": "\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90\u3002",
      "title": "C&C++"
    },
    {
      "ID": "452",
      "typeID": "12",
      "question": "\u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f",
      "answer": "\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1\u3002",
      "title": "C&C++"
    },
    {
      "ID": "451",
      "typeID": "12",
      "question": "\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f",
      "answer": "\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u5e93\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808\u3002",
      "title": "C&C++"
    },
    {
      "ID": "450",
      "typeID": "12",
      "question": "\u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f",
      "answer": "1) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002\r\n2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002\r\n3) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002",
      "title": "C&C++"
    },
    {
      "ID": "449",
      "typeID": "12",
      "question": "\u52a8\u6001\u8fde\u63a5\u5e93\u7684\u4e24\u79cd\u65b9\u5f0f?",
      "answer": "\u8c03\u7528\u4e00\u4e2aDLL\u4e2d\u7684\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\r\n1\uff0e\u8f7d\u5165\u65f6\u52a8\u6001\u94fe\u63a5\uff08load-time dynamic linking\uff09\uff0c\u6a21\u5757\u975e\u5e38\u660e\u786e\u8c03\u7528\u67d0\u4e2a\u5bfc\u51fa\u51fd\u6570\r\n\uff0c\u4f7f\u5f97\u4ed6\u4eec\u5c31\u50cf\u672c\u5730\u51fd\u6570\u4e00\u6837\u3002\u8fd9\u9700\u8981\u94fe\u63a5\u65f6\u94fe\u63a5\u90a3\u4e9b\u51fd\u6570\u6240\u5728DLL\u7684\u5bfc\u5165\u5e93\uff0c\u5bfc\u5165\u5e93\u5411\r\n\u7cfb\u7edf\u63d0\u4f9b\u4e86\u8f7d\u5165DLL\u65f6\u6240\u9700\u7684\u4fe1\u606f\u53caDLL\u51fd\u6570\u5b9a\u4f4d\u3002 \r\n2\uff0e\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5\uff08run-time dynamic linking\uff09\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7LoadLibrary\u6216Loa\r\ndLibraryEx\u51fd\u6570\u8f7d\u5165DLL\u3002DLL\u8f7d\u5165\u540e\uff0c\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528GetProcAddress\u83b7\u53d6DLL\u51fd\u6570\u7684\r\n\u51fa\u53e3\u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u7684\u51fd\u6570\u6307\u9488\u8c03\u7528DLL\u51fd\u6570\u4e86\u3002\u5982\u6b64\u5373\u53ef\u907f\u514d\u5bfc\u5165\u5e93\u6587\u4ef6\u4e86\r\n\u3002",
      "title": "C&C++"
    },
    {
      "ID": "447",
      "typeID": "12",
      "question": "int i=10, j=10, k=3; k*=i+j; k\u6700\u540e\u7684\u503c\u662f\uff1f",
      "answer": "60\uff0c\u6b64\u9898\u8003\u5bdf\u4f18\u5148\u7ea7\uff0c\u5b9e\u9645\u5199\u6210\uff1a k*=(i+j);\uff0c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u6700\u4f4e",
      "title": "C&C++"
    },
    {
      "ID": "446",
      "typeID": "12",
      "question": "\u5173\u4e8e\u5185\u5b58\u5bf9\u9f50\u7684\u95ee\u9898\u4ee5\u53casizof()\u7684\u8f93\u51fa",
      "answer": "\u7f16\u8bd1\u5668\u81ea\u52a8\u5bf9\u9f50\u7684\u539f\u56e0\uff1a\u4e3a\u4e86\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u6570\u636e\u7ed3\u6784\uff08\u5c24\u5176\u662f\u6808\uff09\u5e94\u8be5\u5c3d\u53ef\u80fd\r\n\u5730\u5728\u81ea\u7136\u8fb9\u754c\u4e0a\u5bf9\u9f50\u3002\u539f\u56e0\u5728\u4e8e\uff0c\u4e3a\u4e86\u8bbf\u95ee\u672a\u5bf9\u9f50\u7684\u5185\u5b58\uff0c\u5904\u7406\u5668\u9700\u8981\u4f5c\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee\r\n\uff1b\u7136\u800c\uff0c\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\u4ec5\u9700\u8981\u4e00\u6b21\u8bbf\u95ee\u3002",
      "title": "C&C++"
    },
    {
      "ID": "445",
      "typeID": "12",
      "question": "SQL Server\u662f\u5426\u652f\u6301\u884c\u7ea7\u9501\uff0c\u6709\u4ec0\u4e48\u597d\u5904\uff1f",
      "answer": "\u652f\u6301\uff0c\u8bbe\u7acb\u5c01\u9501\u673a\u5236\u4e3b\u8981\u662f\u4e3a\u4e86\u5bf9\u5e76\u53d1\u64cd\u4f5c\u8fdb\u884c\u63a7\u5236\uff0c\u5bf9\u5e72\u6270\u8fdb\u884c\u5c01\u9501\uff0c\u4fdd\u8bc1\u6570\u636e\r\n\u7684\u4e00\u81f4\u6027\u548c\u51c6\u786e\u6027\uff0c\u884c\u7ea7\u5c01\u9501\u786e\u4fdd\u5728\u7528\u6237\u53d6\u5f97\u88ab\u66f4\u65b0\u7684\u884c\u5230\u8be5\u884c\u8fdb\u884c\u66f4\u65b0\u8fd9\u6bb5\u65f6\u95f4\u5185\u4e0d\r\n\u88ab\u5176\u5b83\u7528\u6237\u6240\u4fee\u6539\u3002\u56e0\u800c\u884c\u7ea7\u9501\u5373\u53ef\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u53c8\u80fd\u63d0\u9ad8\u6570\u636e\u64cd\u4f5c\u7684\u8ff8\u53d1\u6027\u3002",
      "title": "C&C++"
    },
    {
      "ID": "444",
      "typeID": "12",
      "question": "\u4e00\u822c\u6570\u636e\u5e93\u82e5\u51fa\u73b0\u65e5\u5fd7\u6ee1\u4e86\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f",
      "answer": "\u53ea\u80fd\u6267\u884c\u67e5\u8be2\u7b49\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6267\u884c\u66f4\u6539\uff0c\u5907\u4efd\u7b49\u5199\u64cd\u4f5c\uff0c\u539f\u56e0\u662f\u4efb\u4f55\u5199\u64cd\u4f5c\u90fd\u8981\u8bb0\r\n\u5f55\u65e5\u5fd7\u3002\u4e5f\u5c31\u662f\u8bf4\u57fa\u672c\u4e0a\u5904\u4e8e\u4e0d\u80fd\u4f7f\u7528\u7684\u72b6\u6001\u3002",
      "title": "C&C++"
    },
    {
      "ID": "443",
      "typeID": "12",
      "question": "\u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f\u6709\u4ec0\u4e48\u533a\u522b\uff1f",
      "answer": "\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u662f\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5904\u7406\u51fd\u6570\u8c03\u7528\u65f6\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u800c\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\r\n\u5fc5\u987b\u7531\u7a0b\u5e8f\u5458\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u6307\u5b9a\u3002",
      "title": "C&C++"
    },
    {
      "ID": "442",
      "typeID": "12",
      "question": "\u4f7f\u7528\u7ebf\u7a0b\u662f\u5982\u4f55\u9632\u6b62\u51fa\u73b0\u5927\u7684\u6ce2\u5cf0\uff1f",
      "answer": "\u610f\u601d\u662f\u5982\u4f55\u9632\u6b62\u540c\u65f6\u4ea7\u751f\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u65b9\u6cd5\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u5177\u6709\u53ef\u4ee5\u540c\u65f6\u63d0\r\n\u9ad8\u8c03\u5ea6\u6548\u7387\u548c\u9650\u5236\u8d44\u6e90\u4f7f\u7528\u7684\u597d\u5904\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u8fbe\u5230\u6700\u5927\u6570\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5c31\u4f1a\u6392\u961f\r\n\u7b49\u5019\u3002",
      "title": "C&C++"
    },
    {
      "ID": "441",
      "typeID": "12",
      "question": "C++\u4e2d\u4ec0\u4e48\u6570\u636e\u5206\u914d\u5728\u6808\u6216\u5806\u4e2d\uff0cNew\u5206\u914d\u6570\u636e\u662f\u5728\u8fd1\u5806\u8fd8\u662f\u8fdc\u5806\u4e2d\uff1f",
      "answer": "\u6808: \u5b58\u653e\u5c40\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u53c2\u6570,\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u8fd4\u56de\u5730\u5740\uff0c\u7531\u7cfb\u7edf\u7ba1\u7406\r\n\u5806: \u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u7533\u8bf7\uff0cnew \u548c\u3000malloc\u7533\u8bf7\u7684\u5185\u5b58\u5c31\u5728\u5806\u4e0a\r\nnew\u5728\u8fd1\u5806",
      "title": "C&C++"
    },
    {
      "ID": "440",
      "typeID": "12",
      "question": "Linux\u6709\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\uff1f",
      "answer": "\u7ebf\u7a0b\u901a\u5e38\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u4ee3\u7801\u7684\u4e0d\u540c\u6267\u884c\u8def\u7ebf\u3002\u4ece\u5b9e\u73b0\u65b9\u5f0f\u4e0a\u5212\u5206\uff0c\u7ebf\u7a0b\u6709\u4e24\r\n\u79cd\u7c7b\u578b\uff1a\u201c\u7528\u6237\u7ea7\u7ebf\u7a0b\u201d\u548c\u201c\u5185\u6838\u7ea7\u7ebf\u7a0b\u201d\u3002 \u7528\u6237\u7ebf\u7a0b\u6307\u4e0d\u9700\u8981\u5185\u6838\u652f\u6301\u800c\u5728\u7528\u6237\u7a0b\u5e8f\r\n\u4e2d\u5b9e\u73b0\u7684\u7ebf\u7a0b\uff0c\u5176\u4e0d\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u5e94\u7528\u8fdb\u7a0b\u5229\u7528\u7ebf\u7a0b\u5e93\u63d0\u4f9b\u521b\u5efa\u3001\u540c\u6b65\u3001\u8c03\u5ea6\r\n\u548c\u7ba1\u7406\u7ebf\u7a0b\u7684\u51fd\u6570\u6765\u63a7\u5236\u7528\u6237\u7ebf\u7a0b\u3002\u8fd9\u79cd\u7ebf\u7a0b\u751a\u81f3\u5728\u8c61 DOS \u8fd9\u6837\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4e5f\u53ef\u5b9e\u73b0\r\n\uff0c\u4f46\u7ebf\u7a0b\u7684\u8c03\u5ea6\u9700\u8981\u7528\u6237\u7a0b\u5e8f\u5b8c\u6210\uff0c\u8fd9\u6709\u4e9b\u7c7b\u4f3c Windows 3.x \u7684\u534f\u4f5c\u5f0f\u591a\u4efb\u52a1\u3002\u53e6\u5916\u4e00\r\n\u79cd\u5219\u9700\u8981\u5185\u6838\u7684\u53c2\u4e0e\uff0c\u7531\u5185\u6838\u5b8c\u6210\u7ebf\u7a0b\u7684\u8c03\u5ea6\u3002\u5176\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u7531\u5185\u6838\u7684\u5185\u90e8\r\n\u9700\u6c42\u8fdb\u884c\u521b\u5efa\u548c\u64a4\u9500\uff0c\u8fd9\u4e24\u79cd\u6a21\u578b\u5404\u6709\u5176\u597d\u5904\u548c\u7f3a\u70b9\u3002\u7528\u6237\u7ebf\u7a0b\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u6838\u5f00\u652f\r\n\uff0c\u5e76\u4e14\u7528\u6237\u6001\u7ebf\u7a0b\u7684\u5b9e\u73b0\u65b9\u5f0f\u53ef\u4ee5\u88ab\u5b9a\u5236\u6216\u4fee\u6539\u4ee5\u9002\u5e94\u7279\u6b8a\u5e94\u7528\u7684\u8981\u6c42\uff0c\u4f46\u662f\u5f53\u4e00\u4e2a\u7ebf\r\n\u7a0b\u56e0 I/O \u800c\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u65f6\uff0c\u6574\u4e2a\u8fdb\u7a0b\u5c31\u4f1a\u88ab\u8c03\u5ea6\u7a0b\u5e8f\u5207\u6362\u4e3a\u7b49\u5f85\u72b6\u6001\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5f97\u4e0d\r\n\u5230\u8fd0\u884c\u7684\u673a\u4f1a\uff1b\u800c\u5185\u6838\u7ebf\u7a0b\u5219\u6ca1\u6709\u5404\u4e2a\u9650\u5236\uff0c\u6709\u5229\u4e8e\u53d1\u6325\u591a\u5904\u7406\u5668\u7684\u5e76\u53d1\u4f18\u52bf\uff0c\u4f46\u5374\u5360\r\n\u7528\u4e86\u66f4\u591a\u7684\u7cfb\u7edf\u5f00\u652f\u3002 ",
      "title": "C&C++"
    },
    {
      "ID": "439",
      "typeID": "12",
      "question": "\u7a0b\u5e8f\u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u4f7f\u7528\u7ebf\u7a0b\uff0c\u4ec0\u4e48\u65f6\u5019\u5355\u7ebf\u7a0b\u6548\u7387\u9ad8\uff1f",
      "answer": "1\uff0e\u8017\u65f6\u7684\u64cd\u4f5c\u4f7f\u7528\u7ebf\u7a0b\uff0c\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94\r\n2\uff0e\u5e76\u884c\u64cd\u4f5c\u65f6\u4f7f\u7528\u7ebf\u7a0b\uff0c\u5982C/S\u67b6\u6784\u7684\u670d\u52a1\u5668\u7aef\u5e76\u53d1\u7ebf\u7a0b\u54cd\u5e94\u7528\u6237\u7684\u8bf7\u6c42\u3002\r\n3\uff0e\u591aCPU\u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u7ebf\u7a0b\u63d0\u9ad8CPU\u5229\u7528\u7387\r\n4\uff0e\u6539\u5584\u7a0b\u5e8f\u7ed3\u6784\u3002\u4e00\u4e2a\u65e2\u957f\u53c8\u590d\u6742\u7684\u8fdb\u7a0b\u53ef\u4ee5\u8003\u8651\u5206\u4e3a\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6210\u4e3a\u51e0\u4e2a\u72ec\u7acb\u6216\u534a\u72ec\r\n\u7acb\u7684\u8fd0\u884c\u90e8\u5206\uff0c\u8fd9\u6837\u7684\u7a0b\u5e8f\u4f1a\u5229\u4e8e\u7406\u89e3\u548c\u4fee\u6539\u3002",
      "title": "C&C++"
    },
    {
      "ID": "438",
      "typeID": "12",
      "question": "NEWTEXTMETRIC \u662f\u4ec0\u4e48\uff1f",
      "answer": "\u7269\u7406\u5b57\u4f53\u7ed3\u6784\uff0c\u7528\u6765\u8bbe\u7f6e\u5b57\u4f53\u7684\u9ad8\u5bbd\u5927\u5c0f",
      "title": "C&C++"
    },
    {
      "ID": "437",
      "typeID": "12",
      "question": "CSingleLock\u662f\u5e72\u4ec0\u4e48\u7684\u3002",
      "answer": "\u540c\u6b65\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u4e00\u4e2a\u6570\u636e\u7c7b\u7684\u540c\u65f6\u8bbf\u95ee",
      "title": "C&C++"
    },
    {
      "ID": "436",
      "typeID": "12",
      "question": "C++\u4e2d\u4e3a\u4ec0\u4e48\u7528\u6a21\u677f\u7c7b\uff1f",
      "answer": "(1)\u53ef\u7528\u6765\u521b\u5efa\u52a8\u6001\u589e\u957f\u548c\u51cf\u5c0f\u7684\u6570\u636e\u7ed3\u6784\r\n\uff082\uff09\u5b83\u662f\u7c7b\u578b\u65e0\u5173\u7684\uff0c\u56e0\u6b64\u5177\u6709\u5f88\u9ad8\u7684\u53ef\u590d\u7528\u6027\u3002\r\n\uff083\uff09\u5b83\u5728\u7f16\u8bd1\u65f6\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u68c0\u67e5\u6570\u636e\u7c7b\u578b\uff0c\u4fdd\u8bc1\u4e86\u7c7b\u578b\u5b89\u5168\r\n\uff084\uff09\u5b83\u662f\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u53ef\u79fb\u690d\u6027\r\n\uff085\uff09\u53ef\u7528\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b",
      "title": "C&C++"
    },
    {
      "ID": "435",
      "typeID": "12",
      "question": "MFC\u4e2dCString\u662f\u7c7b\u578b\u5b89\u5168\u7c7b\u4e48\uff1f",
      "answer": "\u4e0d\u662f\uff0c\u5176\u5b83\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5230CString\u53ef\u4ee5\u4f7f\u7528CString\u7684\u6210\u5458\u51fd\u6570Format\u6765\u8f6c\u6362",
      "title": "C&C++"
    },
    {
      "ID": "434",
      "typeID": "12",
      "question": "\u7f16\u5199strcat\u51fd\u6570",
      "answer": "\u5df2\u77e5strcat\u51fd\u6570\u7684\u539f\u578b\u662fchar *strcat (char *strDest, const char *strSrc);\r\n\u5176\u4e2dstrDest \u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc \u662f\u6e90\u5b57\u7b26\u4e32\u3002\r\n\uff081\uff09\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcat\r\n\u7b54\uff1a\r\nVC\u6e90\u7801\uff1a\r\nchar * __cdecl strcat (char * dst, const char * src)\r\n{\r\nchar * cp = dst;\r\nwhile( *cp )\r\ncp++; /* find end of dst */\r\nwhile( *cp++ = *src++ ) ; /* Copy src to end of dst */\r\nreturn( dst ); /* return dst */\r\n}\r\n\uff082\uff09strcat\u80fd\u628astrSrc \u7684\u5185\u5bb9\u8fde\u63a5\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f\r\n\u7b54\uff1a\u65b9\u4fbf\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf",
      "title": "C&C++"
    },
    {
      "ID": "433",
      "typeID": "12",
      "question": "switch()\u4e2d\u4e0d\u5141\u8bb8\u7684\u6570\u636e\u7c7b\u578b\u662f?",
      "answer": "\u5b9e\u578b",
      "title": "C&C++"
    },
    {
      "ID": "432",
      "typeID": "12",
      "question": "\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f",
      "answer": "\u51fd\u6570\u548c\u53d8\u91cf\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u88abextern \"C\"\u4fee\u9970\u7684\u53d8\r\n\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684\u3002\u7531\u4e8e\u7f16\u8bd1\u540e\u7684\u540d\u5b57\u4e0d\u540c\uff0cC++\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8c03\r\n\u7528C \u51fd\u6570\u3002C++\u63d0\u4f9b\u4e86\u4e00\u4e2aC \u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\r\n",
      "title": "C&C++"
    },
    {
      "ID": "431",
      "typeID": "12",
      "question": "\uff03i nclude \u548c \uff03i nclude \u201cfilename.h\u201d \u6709\u4ec0\u4e48\u533a\u522b\uff1f",
      "answer": "\u524d\u8005\u7528\u6765\u5305\u542b\u5f00\u53d1\u73af\u5883\u63d0\u4f9b\u7684\u5e93\u5934\u6587\u4ef6\uff0c\u540e\u8005\u7528\u6765\u5305\u542b\u81ea\u5df1\u7f16\u5199\u7684\u5934\u6587\u4ef6\u3002",
      "title": "C&C++"
    },
    {
      "ID": "430",
      "typeID": "12",
      "question": "\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f",
      "answer": "\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528",
      "title": "C&C++"
    },
    {
      "ID": "429",
      "typeID": "12",
      "question": "\u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f?",
      "answer": "\u4e00\u4e2a\u5b9a\u4e49\u4e3avolatile\u7684\u53d8\u91cf\u662f\u8bf4\u8fd9\u53d8\u91cf\u53ef\u80fd\u4f1a\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u6539\u53d8\uff0c\u8fd9\u6837\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u53bb\u5047\u8bbe\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u4e86\u3002\u7cbe\u786e\u5730\u8bf4\u5c31\u662f\uff0c\u4f18\u5316\u5668\u5728\u7528\u5230\u8fd9\u4e2a\u53d8\u91cf\u65f6\u5fc5\u987b\u6bcf\u6b21\u90fd\u5c0f\u5fc3\u5730\u91cd\u65b0\u8bfb\u53d6\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u91cc\u7684\u5907\u4efd\u3002\u4e0b\u9762\u662fvolatile\u53d8\u91cf\u7684\u51e0\u4e2a\u4f8b\u5b50\uff1a\r\n1) \u5e76\u884c\u8bbe\u5907\u7684\u786c\u4ef6\u5bc4\u5b58\u5668\uff08\u5982\uff1a\u72b6\u6001\u5bc4\u5b58\u5668\uff09\r\n2) \u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4e2d\u4f1a\u8bbf\u95ee\u5230\u7684\u975e\u81ea\u52a8\u53d8\u91cf(Non-automatic variables)\r\n3) \u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\u88ab\u51e0\u4e2a\u4efb\u52a1\u5171\u4eab\u7684\u53d8\u91cf",
      "title": "C&C++"
    },
    {
      "ID": "428",
      "typeID": "12",
      "question": "\u5173\u952e\u5b57const\u6709\u4ec0\u4e48\u542b\u610f\uff1f",
      "answer": "1) \u5173\u952e\u5b57const\u7684\u4f5c\u7528\u662f\u4e3a\u7ed9\u8bfb\u4f60\u4ee3\u7801\u7684\u4eba\u4f20\u8fbe\u975e\u5e38\u6709\u7528\u7684\u4fe1\u606f\uff0c\u5b9e\u9645\u4e0a\uff0c\u58f0\u660e\u4e00\u4e2a\u53c2\u6570\u4e3a\u5e38\u91cf\u662f\u4e3a\u4e86\u544a\u8bc9\u4e86\u7528\u6237\u8fd9\u4e2a\u53c2\u6570\u7684\u5e94\u7528\u76ee\u7684\u3002\u5982\u679c\u4f60\u66fe\u82b1\u5f88\u591a\u65f6\u95f4\u6e05\u7406 \u5176\u5b83\u4eba\u7559\u4e0b\u7684\u5783\u573e\uff0c\u4f60\u5c31\u4f1a\u5f88\u5feb\u5b66\u4f1a\u611f\u8c22\u8fd9\u70b9\u591a\u4f59\u7684\u4fe1\u606f\u3002\uff08\u5f53\u7136\uff0c\u61c2\u5f97\u7528const\u7684\u7a0b\u5e8f\u5458\u5f88\u5c11\u4f1a\u7559\u4e0b\u7684\u5783\u573e\u8ba9\u522b\u4eba\u6765\u6e05\u7406\u7684\u3002\uff09\r\n2) \u901a\u8fc7\u7ed9\u4f18\u5316\u5668\u4e00\u4e9b\u9644\u52a0\u7684\u4fe1\u606f\uff0c\u4f7f\u7528\u5173\u952e\u5b57const\u4e5f\u8bb8\u80fd\u4ea7\u751f\u66f4\u7d27\u51d1\u7684\u4ee3\u7801\u3002\r\n3) \u5408\u7406\u5730\u4f7f\u7528\u5173\u952e\u5b57const\u53ef\u4ee5\u4f7f\u7f16\u8bd1\u5668\u5f88\u81ea\u7136\u5730\u4fdd\u62a4\u90a3\u4e9b\u4e0d\u5e0c\u671b\u88ab\u6539\u53d8\u7684\u53c2\u6570\uff0c\u9632\u6b62\u5176\u88ab\u65e0\u610f\u7684\u4ee3\u7801\u4fee\u6539\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11bug\u7684\u51fa\u73b0\u3002",
      "title": "C&C++"
    },
    {
      "ID": "427",
      "typeID": "12",
      "question": "\u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f",
      "answer": "\u5728C\u8bed\u8a00\u4e2d\uff0c\u5173\u952e\u5b57static\u6709\u4e09\u4e2a\u660e\u663e\u7684\u4f5c\u7528\uff1a\r\n1)\u5728\u51fd\u6570\u4f53\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u5728\u8fd9\u4e00\u51fd\u6570\u88ab\u8c03\u7528\u8fc7\u7a0b\u4e2d\u7ef4\u6301\u5176\u503c\u4e0d\u53d8\u3002\r\n2) \u5728\u6a21\u5757\u5185\uff08\u4f46\u5728\u51fd\u6570\u4f53\u5916\uff09\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\u3002\u5b83\u662f\u4e00\u4e2a\u672c\u5730\u7684\u5168\u5c40\u53d8\u91cf\u3002\r\n3) \u5728\u6a21\u5757\u5185\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\u3002\u90a3\u5c31\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u7684\u672c\u5730\u8303\u56f4\u5185\u4f7f\u7528\u3002",
      "title": "C&C++"
    },
    {
      "ID": "426",
      "typeID": "12",
      "question": "\u600e\u4e48\u6837\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u5462\uff1f",
      "answer": "while(1)\r\n{\r\n}\r\n",
      "title": "C&C++"
    },
    {
      "ID": "425",
      "typeID": "12",
      "question": "\u5199\u4e00\u4e2a\"\u6807\u51c6\"\u5b8fMIN \uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\uff1f",
      "answer": " #define MIN(A,B) \uff08\uff08A\uff09 <= (B) ? (A) : (B)) ",
      "title": "C&C++"
    },
    {
      "ID": "424",
      "typeID": "12",
      "question": "\u7528\u9884\u5904\u7406\u6307\u4ee4#define \u58f0\u660e\u4e00\u4e2a\u5e38\u6570\uff0c\u7528\u4ee5\u8868\u660e1\u5e74\u4e2d\u6709\u591a\u5c11\u79d2\uff08\u5ffd\u7565\u95f0\u5e74\u95ee\u9898\uff09",
      "answer": " #define SECONDS_PER_YEAR (60 * 60 * 24 * 365)UL",
      "title": "C&C++"
    },
    {
      "ID": "277",
      "typeID": "12",
      "question": "\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06\u4e24\u4e2a\u4e24\u4f4d\u6570\u7684\u6b63\u6574\u6570a\u3001b\u5408\u5e76\u5f62\u6210\u4e00\u4e2a\u6574\u6570\u653e\u5728c\u4e2d\u3002\u5408\u5e76\u7684\u65b9\u5f0f\u662f\uff1a\u5c06a\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u5343\u4f4d\u548c\u5341\u4f4d\u4e0a\uff0cb\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u767e\u4f4d\u548c\u4e2a\u4f4d\u4e0a\u3002",
      "answer": "#include <conio.h>\r\n\r\n#include <stdio.h>\r\n\r\n \r\n\r\nvoid fun (int a, int b ,long *c)\r\n\r\n{\r\n\r\n}\r\n\r\n \r\n\r\nmain ()\r\n\r\n{\r\n\r\nint a,b;\r\n\r\nlong c;\r\n\r\nclrscr ();\r\n\r\nprintf (\u201cInput a, b:\u201d);\r\n\r\nscanf(\u201c%d%d\u201d, &a, &b);\r\n\r\nfun (a, b, &c);\r\n\r\nprintf (\u201cThe result is: %d\n\u201d,  c);\r\n\r\n}",
      "title": "C&C++"
    },
    {
      "ID": "276",
      "typeID": "12",
      "question": "\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u53ef\u4ee5\u7edf\u8ba1\u4e00\u4e2a\u957f\u5ea6\u4e3a2\u7684\u5b57\u7b26\u4e32\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\u4f8b\u5982\uff0c\u5047\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e3a\uff1aasd asasdfg asd as zx67 asd mklo\uff0c\u5b50\u5b57\u7b26\u4e32\u4e3aas\uff0c\u5219\u5e94\u8f93\u51fa6\u3002",
      "answer": "#include <stdio.h>\r\n\r\n#include <string.h>\r\n\r\n#include <conio.h>\r\n\r\n \r\n\r\nint fun(char *str,char *substr)\r\n\r\n{\r\n\r\n \r\n\r\n}\r\n\r\n \r\n\r\nmain()\r\n\r\n{\r\n\r\nchar str[81],substr[3];\r\n\r\nint n;\r\n\r\n \r\n\r\nclrscr() ;\r\n\r\nprintf(\u201c\u8f93\u5165\u4e3b\u5b57\u7b26\u4e32: \u201c);\r\n\r\ngets(str);\r\n\r\nprintf(\u201c\u8f93\u5165\u5b50\u5b57\u7b26\u4e32: \u201c);\r\n\r\ngets(substr);\r\n\r\nputs(str);\r\n\r\nputs(substr);\r\n\r\nn=fun(str,substr);\r\n\r\nprintf(\u201cn=%d\n\u201d,n);\r\n\r\n}",
      "title": "C&C++"
    },
    {
      "ID": "275",
      "typeID": "12",
      "question": "\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u7ed9\u4e00\u7ef4\u6570\u7ec4a\u8f93\u5165\u4efb\u610f4\u4e2a\u6574\u6570\uff0c\u5e76\u6309\u5982\u4e0b\u7684\u89c4\u5f8b\u8f93\u51fa\u3002\u4f8b\u5982\u8f93\u51651\u30012\u30013\u30014",
      "answer": "#include <stdio.h>\r\n\r\n#define   M   4\r\n\r\n \r\n\r\n/********found********/\r\n\r\nint fun(int a)\r\n\r\n{\r\n\r\nint i,j,k,m;\r\n\r\nprintf(\u201cEnter 4 number : \u201c);\r\n\r\nfor(i=0; i<M; i++)\r\n\r\nscanf(\u201c%d\u201d,&a[i]);\r\n\r\nprintf(\u201c\n\nThe result  :\n\n\u201d);\r\n\r\nfor(i=M;i>0;i\u2013)\r\n\r\n{\r\n\r\nk=a[M-1];\r\n\r\n/********found********/\r\n\r\nfor(j=M-1;j>0;j\u2013)\r\n\r\na[j]=a[j+1];\r\n\r\na[0]=k;\r\n\r\nfor(m=0; m<M; m++)\r\n\r\nprintf(\u201c%d  \u201c,a[m]);\r\n\r\nprintf(\u201c\n\u201d);\r\n\r\n}\r\n\r\n}\r\n\r\nmain()\r\n\r\n{\r\n\r\nint a[M];\r\n\r\nfun(a);\r\n\r\nprintf(\u201c\n\n\u201d);\r\n\r\n}\r\n",
      "title": "C&C++"
    },
    {
      "ID": "274",
      "typeID": "12",
      "question": "\u7f16\u5199\u4e00\u4e2a\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u5b9e\u73b0\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u8fde\u63a5\uff08\u4e0d\u4f7f\u7528\u5e93\u51fd\u6570strcat\uff09\uff0c\u5373\u628ap2\u6240\u6307\u7684\u5b57\u7b26\u4e32\u8fde\u63a5\u5230p1\u6240\u6307\u7684\u5b57\u7b26\u4e32\u540e\u3002",
      "answer": "#include <stdio.h>\r\n\r\n#include <conio.h>\r\n\r\n \r\n\r\nvoid fun(char p1[], char p2[])\r\n\r\n{\r\n\r\n}\r\n\r\n \r\n\r\nmain()\r\n\r\n{\r\n\r\nchar s1[80], s2[40] ;\r\n\r\nclrscr() ;\r\n\r\nprintf(\u201cEnter s1 and s2:\n\u201d) ;\r\n\r\nscanf(\u201c%s%s\u201d, s1, s2) ;\r\n\r\nprintf(\u201cs1=%s\n\u201d, s1) ;\r\n\r\nprintf(\u201cs2=%s\n\u201d, s2) ;\r\n\r\nprintf(\u201cInvoke fun(s1,s2):\n\u201d) ;\r\n\r\nfun(s1, s2) ;\r\n\r\nprintf(\u201cAfter invoking:\n\u201d) ;\r\n\r\nprintf(\u201c%s\n\u201d, s1) ;\r\n\r\n}",
      "title": "C&C++"
    },
    {
      "ID": "273",
      "typeID": "12",
      "question": "\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\u8ba1\u7b97\uff1a\r\n\r\ns =  (ln(1)+ln(2)+ln(3)+\u2026+ln(m))0.5\uff0c\r\n\r\ns\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002\u5728C\u8bed\u8a00\u4e2d\u53ef\u8c03\u7528log(n)\u51fd\u6570\u6c42ln(n)\u3002log\u51fd\u6570\u7684\u5f15\u7528\u8bf4\u660e\u662f\uff1adouble log(double x)\u3002\u4f8b\u5982\uff0c\u82e5m\u7684\u503c\u4e3a20\uff0c\u5219fun\u51fd\u6570\u503c\u4e3a6.506583\u3002",
      "answer": "#include <conio.h>\r\n\r\n#include <math.h>\r\n\r\n#include <stdio.h>\r\n\r\n \r\n\r\ndouble  fun( int  m )\r\n\r\n{\r\n\r\n}\r\n\r\n \r\n\r\nmain()\r\n\r\n{\r\n\r\nclrscr();\r\n\r\nprintf(\u201c%f\n\u201d,fun(20));\r\n\r\n}",
      "title": "C&C++"
    },
    {
      "ID": "272",
      "typeID": "12",
      "question": "\u5806\u548c\u6808\u7684\u7406\u8bba\u77e5\u8bc6",
      "answer": " \u7533\u8bf7\u65b9\u5f0f\r\n\u6808: \u7531\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\u3002 \u4f8b\u5982\uff0c\u58f0\u660e\u5728\u51fd\u6570\u4e2d\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf int a; \u7cfb\u7edf\u81ea\u52a8\u5728\u6808\u4e2d\u4e3aa\u5f00\u8f9f\u7a7a\u95f4\r\n\u5806: \u9700\u8981\u7a0b\u5e8f\u5458\u81ea\u5df1\u7533\u8bf7\uff0c\u5e76\u6307\u660e\u5927\u5c0f\uff0c\u5728c\u4e2dmalloc\u51fd\u6570\uff1a\u5982p1 = (char *)malloc(10); \u5728C++\u4e2d\u7528new\u8fd0\u7b97\u7b26 \u5982p2 = (char *)malloc(10); \u4f46\u662f\u6ce8\u610f\u5c40\u90e8\u53d8\u91cfp1\u3001p2\u672c\u8eab\u662f\u5728\u6808\u4e2d\u7684\uff0c\u4f46\u662f\u4ed6\u4eec\u6307\u5411\u7684\u7533\u8bf7\u5230\u7684\u5185\u5b58\u662f\u5728\u5806\u533a\uff0c\u8fd9\u70b9\u8981\u660e\u786e!\r\n\u7533\u8bf7\u540e\u7cfb\u7edf\u7684\u54cd\u5e94\r\n\u6808\uff1a\u53ea\u8981\u6808\u7684\u5269\u4f59\u7a7a\u95f4\u5927\u4e8e\u6240\u7533\u8bf7\u7a7a\u95f4\uff0c\u7cfb\u7edf\u5c06\u4e3a\u7a0b\u5e8f\u63d0\u4f9b\u5185\u5b58\uff0c\u5426\u5219\u5c06\u62a5\u5f02\u5e38\u63d0\u793a\u6808\u6ea2\u51fa\u3002\r\n\u5806\uff1a\u9996\u5148\u5e94\u8be5\u77e5\u9053\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e00\u4e2a\u8bb0\u5f55\u7a7a\u95f2\u5185\u5b58\u5730\u5740\u7684\u94fe\u8868\uff0c\u5f53\u7cfb\u7edf\u6536\u5230\u7a0b\u5e8f\u7684\u7533\u8bf7\u65f6\uff0c \u4f1a\u904d\u5386\u8be5\u94fe\u8868\uff0c\u5bfb\u627e\u7b2c\u4e00\u4e2a\u7a7a\u95f4\u5927\u4e8e\u6240\u7533\u8bf7\u7a7a\u95f4\u7684\u5806\u7ed3\u70b9\uff0c\u7136\u540e\u5c06\u8be5\u7ed3\u70b9\u4ece\u7a7a\u95f2\u7ed3\u70b9\u94fe\u8868\u4e2d\u5220\u9664\uff0c\u5e76\u5c06\u8be5\u7ed3\u70b9\u7684\u7a7a\u95f4\u5206\u914d\u7ed9\u7a0b\u5e8f\uff0c\u53e6\u5916\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u7cfb\u7edf\uff0c\u4f1a\u5728\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u9996\u5730\u5740\u5904\u8bb0\u5f55\u672c\u6b21\u5206\u914d\u7684\u5927\u5c0f\uff0c\u8fd9\u6837\uff0c\u4ee3\u7801\u4e2d\u7684delete\u8bed\u53e5\u624d\u80fd\u6b63\u786e\u7684\u91ca\u653e\u672c\u5185\u5b58\u7a7a\u95f4\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u627e\u5230\u7684\u5806\u7ed3\u70b9\u7684\u5927\u5c0f\u4e0d\u4e00\u5b9a\u6b63\u597d\u7b49\u4e8e\u7533\u8bf7\u7684\u5927\u5c0f\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u7684\u5c06\u591a\u4f59\u7684\u90a3\u90e8\u5206\u91cd\u65b0\u653e\u5165\u7a7a\u95f2\u94fe\u8868\u4e2d\u3002\r\n\u7533\u8bf7\u5927\u5c0f\u7684\u9650\u5236\r\n\u6808\uff1a\u5728Windows\u4e0b,\u6808\u662f\u5411\u4f4e\u5730\u5740\u6269\u5c55\u7684\u6570\u636e\u7ed3\u6784\uff0c\u662f\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\u3002\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\u6808\u9876\u7684\u5730\u5740\u548c\u6808\u7684\u6700\u5927\u5bb9\u91cf\u662f\u7cfb\u7edf\u9884\u5148\u89c4\u5b9a\u597d\u7684\uff0c\u5728WINDOWS\u4e0b\uff0c\u6808\u7684\u5927\u5c0f\u662f2M(\u4e5f\u6709\u7684\u8bf4\u662f1M\uff0c\u603b\u4e4b\u662f\u4e00\u4e2a\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u7684\u5e38\u6570)\uff0c\u5982\u679c\u7533\u8bf7\u7684\u7a7a\u95f4\u8d85\u8fc7\u6808\u7684\u5269\u4f59\u7a7a\u95f4\u65f6\uff0c\u5c06\u63d0\u793aoverflow\u3002\u56e0\u6b64\uff0c\u80fd\u4ece\u6808\u83b7\u5f97\u7684\u7a7a\u95f4\u8f83\u5c0f\u3002\r\n\u5806\uff1a\u5806\u662f\u5411\u9ad8\u5730\u5740\u6269\u5c55\u7684\u6570\u636e\u7ed3\u6784\uff0c\u662f\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\u3002\u8fd9\u662f\u7531\u4e8e\u7cfb\u7edf\u662f\u7528\u94fe\u8868\u6765\u5b58\u50a8\u7684\u7a7a\u95f2\u5185\u5b58\u5730\u5740\u7684\uff0c\u81ea\u7136\u662f\u4e0d\u8fde\u7eed\u7684\uff0c\u800c\u94fe\u8868\u7684\u904d\u5386\u65b9\u5411\u662f\u7531\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\u3002\u5806\u7684\u5927\u5c0f\u53d7\u9650\u4e8e\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u6709\u6548\u7684\u865a\u62df\u5185\u5b58\u3002\u7531\u6b64\u53ef\u89c1\uff0c\u5806\u83b7\u5f97\u7684\u7a7a\u95f4\u6bd4\u8f83\u7075\u6d3b\uff0c\u4e5f\u6bd4\u8f83\u5927\u3002\r\n \u7533\u8bf7\u6548\u7387\u7684\u6bd4\u8f83\uff1a\r\n\u6808\uff1a\u7531\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\uff0c\u901f\u5ea6\u8f83\u5feb\u3002\u4f46\u7a0b\u5e8f\u5458\u662f\u65e0\u6cd5\u63a7\u5236\u7684\u3002\r\n\u5806\uff1a\u662f\u7531malloc/new\u5206\u914d\u7684\u5185\u5b58\uff0c\u4e00\u822c\u901f\u5ea6\u6bd4\u8f83\u6162\uff0c\u800c\u4e14\u5bb9\u6613\u4ea7\u751f\u5185\u5b58\u788e\u7247,\u4e0d\u8fc7\u7528\u8d77\u6765\u6700\u65b9\u4fbf\u3002\r\n\r\n \u5806\u548c\u6808\u4e2d\u7684\u5b58\u50a8\u5185\u5bb9\r\n\u6808\uff1a \u5728\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u7b2c\u4e00\u4e2a\u8fdb\u6808\u7684\u662f\u4e3b\u51fd\u6570\u4e2d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4(\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u7684\u4e0b\u4e00\u6761\u53ef\u6267\u884c\u8bed\u53e5)\u7684\u5730\u5740\uff0c\u7136\u540e\u662f\u51fd\u6570\u7684\u5404\u4e2a\u53c2\u6570\uff0c\u5728\u5927\u591a\u6570\u7684C\u7f16\u8bd1\u5668\u4e2d\uff0c\u53c2\u6570\u662f\u7531\u53f3\u5f80\u5de6\u5165\u6808\u7684\uff0c\u7136\u540e\u662f\u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u3002\u6ce8\u610f\u9759\u6001\u53d8\u91cf\u662f\u4e0d\u5165\u6808\u7684\u3002\u5f53\u672c\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u5c40\u90e8\u53d8\u91cf\u5148\u51fa\u6808\uff0c\u7136\u540e\u662f\u53c2\u6570\uff0c\u6700\u540e\u6808\u9876\u6307\u9488\u6307\u5411\u6700\u5f00\u59cb\u5b58\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u4e3b\u51fd\u6570\u4e2d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u7a0b\u5e8f\u7531\u8be5\u70b9\u7ee7\u7eed\u8fd0\u884c\u3002\r\n\u5806\uff1a\u4e00\u822c\u662f\u5728\u5806\u7684\u5934\u90e8\u7528\u4e00\u4e2a\u5b57\u8282\u5b58\u653e\u5806\u7684\u5927\u5c0f\u3002\u5806\u4e2d\u7684\u5177\u4f53\u5185\u5bb9\u6709\u7a0b\u5e8f\u5458\u5b89\u6392\u3002\r\n\r\n\u5b58\u53d6\u6548\u7387\u7684\u6bd4\u8f83\r\nchar s1\uff3b\uff3d = \u201caaaaaaaaaaaaaaa\u201d;\r\nchar *s2 = \u201cbbbbbbbbbbbbbbbbb\u201d;\r\naaaaaaaaaaa\u662f\u5728\u8fd0\u884c\u65f6\u523b\u8d4b\u503c\u7684\uff1b\r\n\u800cbbbbbbbbbbb\u662f\u5728\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u7684\uff1b\r\n\u4f46\u662f\uff0c\u5728\u4ee5\u540e\u7684\u5b58\u53d6\u4e2d\uff0c\u5728\u6808\u4e0a\u7684\u6570\u7ec4\u6bd4\u6307\u9488\u6240\u6307\u5411\u7684\u5b57\u7b26\u4e32(\u4f8b\u5982\u5806)\u5feb\u3002\r\n\u6bd4\u5982\uff1a\r\n#include\r\nvoid main()\r\n{\r\nchar a = 1;\r\nchar c\uff3b\uff3d = \u201c1234567890\u2033;\r\nchar *p =\u201d1234567890\u2033;\r\na = c\uff3b1\uff3d;\r\na = p\uff3b1\uff3d;\r\nreturn;\r\n}\r\n\u5bf9\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\r\n10: a = c\uff3b1\uff3d;\r\n00401067 8A 4D F1 mov cl,byte ptr \uff3bebp-0Fh\uff3d\r\n0040106A 88 4D FC mov byte ptr \uff3bebp-4\uff3d,cl\r\n11: a = p\uff3b1\uff3d;\r\n0040106D 8B 55 EC mov edx,dword ptr \uff3bebp-14h\uff3d\r\n00401070 8A 42 01 mov al,byte ptr \uff3bedx+1\uff3d\r\n00401073 88 45 FC mov byte ptr \uff3bebp-4\uff3d,al\r\n\u7b2c\u4e00\u79cd\u5728\u8bfb\u53d6\u65f6\u76f4\u63a5\u5c31\u628a\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u7d20\u8bfb\u5230\u5bc4\u5b58\u5668cl\u4e2d\uff0c\u800c\u7b2c\u4e8c\u79cd\u5219\u8981\u5148\u628a\u6307\u9488\u503c\u8bfb\u5230edx\u4e2d\uff0c\u5728\u6839\u636eedx\u8bfb\u53d6\u5b57\u7b26\uff0c\u663e\u7136\u6162\u4e86\u3002\r\n\u5c0f\u7ed3\r\n\u5806\u548c\u6808\u7684\u533a\u522b\u53ef\u4ee5\u7528\u5982\u4e0b\u7684\u6bd4\u55bb\u6765\u770b\u51fa\uff1a \u4f7f\u7528\u6808\u5c31\u8c61\u6211\u4eec\u53bb\u996d\u9986\u91cc\u5403\u996d\uff0c\u53ea\u7ba1\u70b9\u83dc(\u53d1\u51fa\u7533\u8bf7)\u3001\u4ed8\u94b1\u3001\u548c\u5403(\u4f7f\u7528)\uff0c\u5403\u9971\u4e86\u5c31\u8d70\uff0c\u4e0d\u5fc5\u7406\u4f1a\u5207\u83dc\u3001\u6d17\u83dc\u7b49\u51c6\u5907\u5de5\u4f5c\u548c\u6d17\u7897\u3001\u5237\u9505\u7b49\u626b\u5c3e\u5de5\u4f5c\uff0c\u4ed6\u7684\u597d\u5904\u662f\u5feb\u6377\uff0c\u4f46\u662f\u81ea\u7531\u5ea6\u5c0f\u3002\u4f7f\u7528\u5806\u5c31\u8c61\u662f\u81ea\u5df1\u52a8\u624b\u505a\u559c\u6b22\u5403\u7684\u83dc\u80b4\uff0c\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4f46\u662f\u6bd4\u8f83\u7b26\u5408\u81ea\u5df1\u7684\u53e3\u5473\uff0c\u800c\u4e14\u81ea\u7531\u5ea6\u5927\u3002\r\n\u8fd8\u6709\u5c31\u662f\u51fd\u6570\u8c03\u7528\u65f6\u4f1a\u5728\u6808\u4e0a\u6709\u4e00\u7cfb\u5217\u7684\u4fdd\u7559\u73b0\u573a\u53ca\u4f20\u9012\u53c2\u6570\u7684\u64cd\u4f5c\u3002\u6808\u7684\u7a7a\u95f4\u5927\u5c0f\u6709\u9650\u5b9a\uff0cVC\u7684\u7f3a\u7701\u662f2M\u3002\u6808\u4e0d\u591f\u7528\u7684\u60c5\u51b5\u4e00\u822c\u662f\u7a0b\u5e8f\u4e2d\u5206\u914d\u4e86\u5927\u91cf\u6570\u7ec4\u548c\u9012\u5f52\u51fd\u6570\u5c42\u6b21\u592a\u6df1\u3002\u6709\u4e00\u70b9\u5fc5\u987b\u77e5\u9053\uff0c\u5f53\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u5b8c\u8fd4\u56de\u540e\u5b83\u4f1a\u91ca\u653e\u8be5\u51fd\u6570\u4e2d\u6240\u6709\u7684\u6808\u7a7a\u95f4\u3002\u6808\u662f\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u7ba1\u7406\u7684\uff0c\u4e0d\u7528\u4f60\u64cd\u5fc3\u3002\u5806\u662f\u52a8\u6001\u5206\u914d\u5185\u5b58\u7684\uff0c\u5e76\u4e14\u4f60\u53ef\u4ee5\u5206\u914d\u4f7f\u7528\u5f88\u5927\u7684\u5185\u5b58\u3002\u4f46\u662f\u7528\u4e0d\u597d\u4f1a\u4ea7\u751f\u5185\u5b58\u6cc4\u6f0f\u3002\u5e76\u4e14\u9891\u7e41\u5730malloc\u548cfree\u4f1a\u4ea7\u751f\u5185\u5b58\u788e\u7247(\u6709\u70b9\u7c7b\u4f3c\u78c1\u76d8\u788e\u7247)\uff0c\u56e0\u4e3aC\u5206\u914d\u52a8\u6001\u5185\u5b58\u65f6\u662f\u5bfb\u627e\u5339\u914d\u7684\u5185\u5b58\u7684\u3002\u800c\u7528\u6808\u5219\u4e0d\u4f1a\u4ea7\u751f\u788e\u7247\u3002\u5728\u6808\u4e0a\u5b58\u53d6\u6570\u636e\u6bd4\u901a\u8fc7\u6307\u9488\u5728\u5806\u4e0a\u5b58\u53d6\u6570\u636e\u5feb\u4e9b\u3002\u4e00\u822c\u5927\u5bb6\u8bf4\u7684\u5806\u6808\u548c\u6808\u662f\u4e00\u6837\u7684\uff0c\u5c31\u662f\u6808(stack)\uff0c\u800c\u8bf4\u5806\u65f6\u624d\u662f\u5806heap\u3002\u6808\u662f\u5148\u5165\u540e\u51fa\u7684\uff0c\u4e00\u822c\u662f\u7531\u9ad8\u5730\u5740\u5411\u4f4e\u5730\u5740\u751f\u957f\u3002",
      "title": "C&C++"
    },
    {
      "ID": "271",
      "typeID": "12",
      "question": "\u7a0b\u5e8f\u7684\u5185\u5b58\u5206\u914d",
      "answer": "1\u3001\u6808\u533a(stack)\uff1a \u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u7b49\u3002\u5176\u64cd\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6808\u3002\r\n2\u3001\u5806\u533a(heap)\uff1a \u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e\uff08malloc/free\u3001new/delete\uff09\uff0c \u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u53ef\u80fd\u7531\u64cd\u4f5c\u7cfb\u7edf\u56de\u6536\u3002\u6ce8\u610f\u5b83\u4e0e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u5806\u662f\u4e24\u56de\u4e8b\uff0c\u5206\u914d\u65b9\u5f0f\u5012\u662f\u7c7b\u4f3c\u4e8e\u94fe\u8868\u3002\r\n3\u3001\u5168\u5c40\u533a(static)\uff1a \u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u7684\u5b58\u50a8\u662f\u653e\u5728\u4e00\u5757\u7684\uff0c\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u5728\u4e00\u5757\u533a\u57df\uff0c \u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u672a\u521d\u59cb\u5316\u7684\u9759\u6001\u53d8\u91cf\u5728\u76f8\u90bb\u7684\u53e6\u4e00\u5757\u533a\u57df\uff0c\u7a0b\u5e8f\u7ed3\u675f\u540e\u7531\u7cfb\u7edf\u91ca\u653e\u3002\r\n4\u3001\u6587\u5b57\u5e38\u91cf\u533a\uff1a \u5e38\u91cf\u5b57\u7b26\u4e32\u5c31\u662f\u653e\u5728\u8fd9\u91cc\u7684\uff0c \u7a0b\u5e8f\u7ed3\u675f\u540e\u7531\u7cfb\u7edf\u91ca\u653e\u3002\r\n5\u3001\u7a0b\u5e8f\u4ee3\u7801\u533a\uff1a \u5b58\u653e\u51fd\u6570\u4f53\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u3002\r\nExample:\r\nint a = 0; // \u5168\u5c40\u521d\u59cb\u5316\u533a\r\nchar *p1; // \u5168\u5c40\u672a\u521d\u59cb\u5316\u533a\r\nmain()\r\n{\r\nint a; // \u6808\u533a\r\nchar s\uff3b\uff3d = \u201cabc\u201d; // \u6808\u533a\r\nchar *p2; // \u6808\u533a\r\nchar *p3 = \u201c123456\u2033; // 123456\u0000\u5728\u5e38\u91cf\u533a\uff0cp3\u5728\u6808\u4e0a\u3002\r\nstatic int c =0\uff1b // \u5168\u5c40(\u9759\u6001)\u521d\u59cb\u5316\u533a\r\np1 = (char *)malloc(10);\r\np2 = (char *)malloc(20); // \u5206\u914d\u5f97\u6765\u5f9710\u548c20\u5b57\u8282\u7684\u533a\u57df\u5c31\u5728\u5806\u533a\u3002\r\nstrcpy(p1, \u201c123456\u2033); // 123456\u0000\u653e\u5728\u5e38\u91cf\u533a\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u5c06\u5b83\u4e0ep3\u6240\u6307\u5411\u7684\u201d123456\u2033\u4f18\u5316\u6210\u4e00\u4e2a\u5730\u65b9\u3002\r\n}",
      "title": "C&C++"
    },
    {
      "ID": "270",
      "typeID": "12",
      "question": "c++\u5185\u5b58\u6cc4\u6f0f\u68c0\u6d4b",
      "answer": "\u68c0\u6d4b\u5185\u5b58\u6cc4\u6f0f\u7684\u65b9\u6cd5\u591a\u79cd\u591a\u6837\uff0c\u6709\u4f7f\u7528\u5185\u5b58\u6cc4\u6f0f\u68c0\u6d4b\u5de5\u5177\uff08\u6bd4\u5982BoundsChecker\uff09\u68c0\u6d4b\u5185\u5b58\u6cc4\u6f0f\uff1b\u6709\u76f4\u63a5\u770b\u4ee3\u7801\u68c0\u6d4b\u4ee3\u7801\u903b\u8f91\uff0c\u770b\u90a3\u4e9b\u5730\u65b9\u662f\u5426\u6ca1\u6709\u91ca\u653e\u5185\u5b58\u3002\u4e00\u822c\u5730\u9759\u6001\u5185\u5b58\u6cc4\u6f0f\u901a\u8fc7\u5de5\u5177\u4e0e\u4ee3\u7801\u68c0\u67e5\u5f88\u5bb9\u6613\u627e\u5230\u6cc4\u6f0f\u70b9\uff1b\u52a8\u6001\u7684\u5185\u5b58\u6cc4\u6f0f\u5f88\u96be\u67e5\uff0c\u4e00\u822c\u901a\u8fc7\u5728\u4ee3\u7801\u4e2d\u52a0\u65ad\u70b9\u8ddf\u8e2a\u548cRun-Time\u5185\u5b58\u68c0\u6d4b\u5de5\u5177\u6765\u67e5\u627e\u3002",
      "title": "C&C++"
    },
    {
      "ID": "269",
      "typeID": "12",
      "question": "C++\u5185\u5b58\u6cc4\u6f0f\u7684\u53d1\u751f\u65b9\u5f0f",
      "answer": "1. \u5e38\u53d1\u6027\u5185\u5b58\u6cc4\u6f0f\u3002\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\u7684\u4ee3\u7801\u4f1a\u88ab\u591a\u6b21\u6267\u884c\u5230\uff0c\u6bcf\u6b21\u88ab\u6267\u884c\u7684\u65f6\u5019\u90fd\u4f1a\u5bfc\u81f4\u4e00\u5757\u5185\u5b58\u6cc4\u6f0f\u3002\u6bd4\u5982\u4f8b\u4e8c\uff0c\u5982\u679cSomething()\u51fd\u6570\u4e00\u76f4\u8fd4\u56deTrue\uff0c\u90a3\u4e48pOldBmp\u6307\u5411\u7684HBITMAP\u5bf9\u8c61\u603b\u662f\u53d1\u751f\u6cc4\u6f0f\u3002\r\n\r\n2. \u5076\u53d1\u6027\u5185\u5b58\u6cc4\u6f0f\u3002\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\u7684\u4ee3\u7801\u53ea\u6709\u5728\u67d0\u4e9b\u7279\u5b9a\u73af\u5883\u6216\u64cd\u4f5c\u8fc7\u7a0b\u4e0b\u624d\u4f1a\u53d1\u751f\u3002\u6bd4\u5982\u4f8b\u4e8c\uff0c\u5982\u679cSomething()\u51fd\u6570\u53ea\u6709\u5728\u7279\u5b9a\u73af\u5883\u4e0b\u624d\u8fd4\u56deTrue\uff0c\u90a3\u4e48pOldBmp\u6307\u5411\u7684HBITMAP\u5bf9\u8c61\u5e76\u4e0d\u603b\u662f\u53d1\u751f\u6cc4\u6f0f\u3002\u5e38\u53d1\u6027\u548c\u5076\u53d1\u6027\u662f\u76f8\u5bf9\u7684\u3002\u5bf9\u4e8e\u7279\u5b9a\u7684\u73af\u5883\uff0c\u5076\u53d1\u6027\u7684\u4e5f\u8bb8\u5c31\u53d8\u6210\u4e86\u5e38\u53d1\u6027\u7684\u3002\u6240\u4ee5\u6d4b\u8bd5\u73af\u5883\u548c\u6d4b\u8bd5\u65b9\u6cd5\u5bf9\u68c0\u6d4b\u5185\u5b58\u6cc4\u6f0f\u81f3\u5173\u91cd\u8981\u3002\r\n\r\n3. \u4e00\u6b21\u6027\u5185\u5b58\u6cc4\u6f0f\u3002\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\u7684\u4ee3\u7801\u53ea\u4f1a\u88ab\u6267\u884c\u4e00\u6b21\uff0c\u6216\u8005\u7531\u4e8e\u7b97\u6cd5\u4e0a\u7684\u7f3a\u9677\uff0c\u5bfc\u81f4\u603b\u4f1a\u6709\u4e00\u5757\u4ec5\u4e14\u4e00\u5757\u5185\u5b58\u53d1\u751f\u6cc4\u6f0f\u3002\u6bd4\u5982\uff0c\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u5206\u914d\u5185\u5b58\uff0c\u5728\u6790\u6784\u51fd\u6570\u4e2d\u5374\u6ca1\u6709\u91ca\u653e\u8be5\u5185\u5b58\uff0c\u4f46\u662f\u56e0\u4e3a\u8fd9\u4e2a\u7c7b\u662f\u4e00\u4e2aSingleton\uff0c\u6240\u4ee5\u5185\u5b58\u6cc4\u6f0f\u53ea\u4f1a\u53d1\u751f\u4e00\u6b21\u3002\r\n\r\n4. \u9690\u5f0f\u5185\u5b58\u6cc4\u6f0f\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u505c\u7684\u5206\u914d\u5185\u5b58\uff0c\u4f46\u662f\u76f4\u5230\u7ed3\u675f\u7684\u65f6\u5019\u624d\u91ca\u653e\u5185\u5b58\u3002\u4e25\u683c\u7684\u8bf4\u8fd9\u91cc\u5e76\u6ca1\u6709\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\uff0c\u56e0\u4e3a\u6700\u7ec8\u7a0b\u5e8f\u91ca\u653e\u4e86\u6240\u6709\u7533\u8bf7\u7684\u5185\u5b58\u3002\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a \u670d\u52a1\u5668\u7a0b\u5e8f\uff0c\u9700\u8981\u8fd0\u884c\u51e0\u5929\uff0c\u51e0\u5468\u751a\u81f3\u51e0\u4e2a\u6708\uff0c\u4e0d\u53ca\u65f6\u91ca\u653e\u5185\u5b58\u4e5f\u53ef\u80fd\u5bfc\u81f4\u6700\u7ec8\u8017\u5c3d\u7cfb\u7edf\u7684\u6240\u6709\u5185\u5b58\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u79f0\u8fd9\u7c7b\u5185\u5b58\u6cc4\u6f0f\u4e3a\u9690\u5f0f\u5185\u5b58\u6cc4\u6f0f\u3002",
      "title": "C&C++"
    },
    {
      "ID": "268",
      "typeID": "12",
      "question": "\u4e0d\u80fd\u505aswitch\uff08\uff09\u7684\u53c2\u6570\u7c7b\u578b\u662f\uff1a",
      "answer": "SWITH\uff08\u8868\u8fbe\u5f0f\uff09\uff0c\u8868\u8fbe\u5f0f\u53ef\u4ee5\u662f\u6574\u578b\u3001\u5b57\u7b26\u578b\u4ee5\u53ca\u679a\u4e3e\u7c7b\u578b\u7b49\u8868\u8fbe\u5f0f\u3002\r\n\r\nswitch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002",
      "title": "C&C++"
    },
    {
      "ID": "267",
      "typeID": "12",
      "question": "\u7528\u6237\u8f93\u5165M\uff0cN\u503c\uff0c\u4ece1\u81f3N\u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u8f93\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199\u51faC\u7a0b\u5e8f\u3002",
      "answer": "\u5faa\u73af\u94fe\u8868\uff0c\u7528\u53d6\u4f59\u64cd\u4f5c\u505a \u2014\u2014>\uff1f\uff1f",
      "title": "C&C++"
    },
    {
      "ID": "266",
      "typeID": "12",
      "question": "IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f",
      "answer": "IP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002\u4e0d\u8fc7\u662f\u8981\u548c\u201c\u5b50\u7f51\u63a9\u7801\u201d\u6309\u4f4d\u4e0e\u4e0a\u4e4b\u540e\u624d\u80fd\u533a\u5206\u54ea\u4e9b\u662f\u7f51\u7edc\u4f4d\u54ea\u4e9b\u662f\u4e3b\u673a\u4f4d\u3002",
      "title": "C&C++"
    },
    {
      "ID": "265",
      "typeID": "12",
      "question": "Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f",
      "answer": "ARP \uff08Address Resolution Protocol\uff09\uff08\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09",
      "title": "C&C++"
    },
    {
      "ID": "264",
      "typeID": "12",
      "question": " Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f",
      "answer": "tcp/ip \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42",
      "title": "C&C++"
    },
    {
      "ID": "263",
      "typeID": "12",
      "question": "\u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u3002",
      "answer": "if\uff08x>0.000001&&x<-0.000001\uff09",
      "title": "C&C++"
    },
    {
      "ID": "262",
      "typeID": "12",
      "question": " \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f",
      "answer": "O\uff08n^2\uff09",
      "title": "C&C++"
    },
    {
      "ID": "261",
      "typeID": "12",
      "question": "\u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f",
      "answer": "constructor ==>C++\u4e2d\u7684\u7c7b\u7684\u6784\u9020\u51fd\u6570\u58f0\u660e",
      "title": "C&C++"
    },
    {
      "ID": "260",
      "typeID": "12",
      "question": "\u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f",
      "answer": "\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90\r\n",
      "title": "C&C++"
    },
    {
      "ID": "259",
      "typeID": "12",
      "question": "\u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f",
      "answer": "\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1",
      "title": "C&C++"
    },
    {
      "ID": "258",
      "typeID": "12",
      "question": "\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f",
      "answer": "\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u533a\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808",
      "title": "C&C++"
    },
    {
      "ID": "257",
      "typeID": "12",
      "question": "\u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027",
      "answer": "\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027",
      "title": "C&C++"
    },
    {
      "ID": "256",
      "typeID": "12",
      "question": "\u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f",
      "answer": "1\uff09 \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002\r\n\r\n2\uff09 \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002\r\n\r\n3\uff09 \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002",
      "title": "C&C++"
    },
    {
      "ID": "255",
      "typeID": "12",
      "question": "static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09",
      "answer": "1.\u9650\u5236\u53d8\u91cf\u7684\u4f5c\u7528\u57df\r\n\r\n2.\u8bbe\u7f6e\u53d8\u91cf\u7684\u5b58\u50a8\u57df",
      "title": "C&C++"
    },
    {
      "ID": "254",
      "typeID": "12",
      "question": "C++\u7ee7\u627f\u673a\u5236",
      "answer": "n\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\r\n\r\npublic\uff1a\u7c7b\u672c\u8eab\u3001\u6d3e\u751f\u7c7b\u548c\u5176\u5b83\u7c7b\u5747\u53ef\u8bbf\u95ee\uff1b\r\n\r\nprotected\uff1a\u7c7b\u672c\u8eab\u548c\u6d3e\u751f\u7c7b\u5747\u53ef\u8bbf\u95ee\uff0c\u5176\u5b83\u7c7b\u4e0d\u80fd\u8bbf\u95ee\uff1b\r\n\r\nprivate\uff08\u9ed8\u8ba4\uff09\uff1a\u7c7b\u672c\u8eab\u53ef\u8bbf\u95ee\uff0c\u6d3e\u751f\u7c7b\u548c\u5176\u5b83\u7c7b\u4e0d\u80fd\u8bbf\u95ee\u3002",
      "title": "C&C++"
    },
    {
      "ID": "253",
      "typeID": "12",
      "question": "\u8f6f\u4ef6\u5f00\u53d1\u6d41\u7a0b",
      "answer": "\u9700\u6c42\u5206\u6790\u548c\u9879\u76ee\u8ba1\u5212\uff1a\u53ef\u884c\u6027\u8ba1\u5212\uff0c\u9879\u76ee\u8ba1\u5212\uff0c\u9700\u6c42\u5206\u6790\uff0c\u6d4b\u8bd5\u8ba1\u5212\r\n\r\n\u8f6f\u4ef6\u8bbe\u8ba1\u8bf4\u660e\u4e66\uff1a\u529f\u80fd\u8bbe\u8ba1\u8bf4\u660e\u4e66\uff0c\u5b9e\u73b0\u8bbe\u8ba1\u8bf4\u660e\u4e66\r\n\r\n\u4f7f\u7528\u624b\u518c\r\n\r\n\u6d4b\u8bd5\u62a5\u544a\r\n\r\n\u9879\u76ee\u603b\u7ed3",
      "title": "C&C++"
    },
    {
      "ID": "252",
      "typeID": "12",
      "question": "C++\u591a\u6001\u5b9e\u73b0\u673a\u5236",
      "answer": "\u5728C++\u4e2d\uff0c\u5bf9\u4e8e\u6709virtual\u7684\u7c7b\uff0c\u5176sizeof\u4f1a\u6bd4\u6b63\u5e38\u60c5\u51b5\u591a\u59044\u4e2a\u5b57\u8282\u3002\u65e2\u5728\u7c7b\u7684\u6700\u5f00\u59cb\u56db\u4e2a\u5b57\u8282\uff0c\u653e\u7684\u662fVTABLE\u8868\u7684\u5730\u5740\uff08void *\u7c7b\u578b\uff09\u3002\u800c\u5728VTABLE\u4e2d\uff0c\u6240\u6709\u865a\u51fd\u6570\u662f\u4ee5\u6307\u9488\u6570\u7ec4\u7684\u5f62\u5f0f\u5b58\u653e\u3002 \u5bf9\u4e8e\u6d3e\u751f\u7684\u7c7b\uff0c\u5373\u65f6\u6ca1\u6709\u91cd\u8f7d\u57fa\u7c7b\u7684\u865a\u51fd\u6570\uff0c\u4e5f\u4f1a\u5728\u5176VTABLE\u5360\u7528\u4e00\u683c\u3002\u9020\u6210\u7a7a\u95f4\u4e0a\u7684\u6d6a\u8d39\u3002\u975e\u865a\u57fa\u7c7b\u6ca1\u6709VTABLE\uff0cVTABLE\u662f\u5728\u6784\u9020\u7684\u65f6\u5019\u7f16\u8bd1\u5668\u751f\u6210\u7684\u3002",
      "title": "C&C++"
    },
    {
      "ID": "251",
      "typeID": "12",
      "question": "\u627e\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u5927\u516c\u5171\u5b50\u5b57\u7b26\u4e32,\u5982\"abccade\",\"dgcadde\"\u7684\u6700\u5927\u5b50\u4e32\u4e3a\"cad\" ",
      "answer": "int GetCommon(char *s1, char *s2, char **r1, char **r2)\r\n{\r\nint len1 = strlen(s1);\r\nint len2 = strlen(s2);\r\nint maxlen = 0;\r\nfor(int i = 0; i < len1; i++)\r\n{\r\nfor(int j = 0; j < len2; j++)\r\n{\r\nif(s1[i] == s2[j])\r\n{\r\nint as = i, bs = j, count = 1;\r\nwhile(as + 1 < len1 && bs + 1 < len2 && s1[++as] == s2[++bs])\r\ncount++;\r\nif(count > maxlen)\r\n{\r\nmaxlen = count;\r\n*r1 = s1 + i;\r\n*r2 = s2 + j;\r\n}\r\n}\r\n}\r\n}\r\n",
      "title": "C&C++"
    },
    {
      "ID": "243",
      "typeID": "12",
      "question": "\u8c08\u8c08\u4f60\u5bf9\u9762\u5411\u5bf9\u8c61\u7684\u8ba4\u8bc6",
      "answer": "\u9762\u5411\u5bf9\u8c61\u53ef\u4ee5\u7406\u89e3\u6210\u5bf9\u5f85\u6bcf\u4e00\u4e2a\u95ee\u9898,\u90fd\u662f\u9996\u5148\u8981\u786e\u5b9a\u8fd9\u4e2a\u95ee\u9898\u7531\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210,\u800c\u6bcf\u4e00\u4e2a\u90e8\u5206\u5176 \u5b9e\u5c31\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002\u7136\u540e\u518d\u5206\u522b\u8bbe\u8ba1\u8fd9\u4e9b\u5bf9\u8c61,\u6700\u540e\u5f97\u5230\u6574\u4e2a\u7a0b\u5e8f\u3002\u4f20\u7edf\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u591a\u662f\u57fa\u4e8e\u529f\u80fd\u7684\u601d\u60f3 \u6765\u8fdb\u884c\u8003\u8651\u548c\u8bbe\u8ba1\u7684,\u800c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5219\u662f\u57fa\u4e8e\u5bf9\u8c61\u7684\u89d2\u5ea6\u6765\u8003\u8651\u95ee\u9898\u3002\u8fd9\u6837\u505a\u80fd\u591f\u4f7f\u5f97\u7a0b\u5e8f\u66f4 \u52a0\u7684\u7b80\u6d01\u6e05\u6670\u3002\r\n\u8bf4\u660e:\u7f16\u7a0b\u4e2d\u63a5\u89e6\u6700\u591a\u7684\u201c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6280\u672f\u201d\u4ec5\u4ec5\u662f\u9762\u5411\u5bf9\u8c61\u6280\u672f\u4e2d\u7684\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\u3002\u53d1\u6325\u9762\u5411 \u5bf9\u8c61\u6280\u672f\u7684\u4f18\u52bf\u662f\u4e00\u4e2a\u7efc\u5408\u7684\u6280\u672f\u95ee\u9898,\u4e0d\u4ec5\u9700\u8981\u9762\u5411\u5bf9\u8c61\u7684\u5206\u6790,\u8bbe\u8ba1\u548c\u7f16\u7a0b\u6280\u672f,\u800c\u4e14\u9700\u8981\u501f\u52a9\u5fc5 \u8981\u7684\u5efa\u6a21\u548c\u5f00\u53d1\u5de5\u5177\u3002",
      "title": "C&C++"
    },
    {
      "ID": "242",
      "typeID": "12",
      "question": "\u7528 C \u7f16\u5199\u4e00\u4e2a\u6b7b\u5faa\u73af\u7a0b\u5e8f",
      "answer": "while(1)\r\n{}\r\n\u8bf4\u660e:\u5f88\u591a\u79cd\u9014\u5f84\u90fd\u53ef\u5b9e\u73b0\u540c\u4e00\u79cd\u529f\u80fd,\u4f46\u662f\u4e0d\u540c\u7684\u65b9\u6cd5\u65f6\u95f4\u548c\u7a7a\u95f4\u5360\u7528\u5ea6\u4e0d\u540c,\u7279\u522b\u662f\u5bf9\u4e8e\u5d4c\u5165\r\n\u5f0f\u8f6f\u4ef6,\u5904\u7406\u5668\u901f\u5ea6\u6bd4\u8f83\u6162,\u5b58\u50a8\u7a7a\u95f4\u8f83\u5c0f,\u6240\u4ee5\u65f6\u95f4\u548c\u7a7a\u95f4\u4f18\u52bf\u662f\u9009\u62e9\u5404\u79cd\u65b9\u6cd5\u7684\u9996\u8981\u8003\u8651\u6761\u4ef6\u3002",
      "title": "C&C++"
    },
    {
      "ID": "241",
      "typeID": "12",
      "question": "\u7b80\u8ff0 strcpy\u3001sprintf \u4e0e memcpy \u7684\u533a\u522b",
      "answer": "\u4e09\u8005\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e0d\u540c\u4e4b\u5904:\r\n(1)\u64cd\u4f5c\u5bf9\u8c61\u4e0d\u540c,strcpy\u7684\u4e24\u4e2a\u64cd\u4f5c\u5bf9\u8c61\u5747\u4e3a\u5b57\u7b26\u4e32,sprintf\u7684\u64cd\u4f5c\u6e90\u5bf9\u8c61\u53ef\u4ee5\u662f\u591a\u79cd\u6570\u636e\u7c7b\u578b,\u76ee\u7684\u64cd\u4f5c\u5bf9\u8c61\u662f\u5b57\u7b26\u4e32,memcpy \u7684\u4e24\u4e2a\u5bf9\u8c61\u5c31\u662f\u4e24\u4e2a\u4efb\u610f\u53ef\u64cd\u4f5c\u7684\u5185\u5b58\u5730\u5740,\u5e76\u4e0d\u9650\u4e8e\u4f55\u79cd\u6570\u636e\u7c7b\u578b\u3002 (2)\u6267\u884c\u6548\u7387\u4e0d\u540c,memcpy \u6700\u9ad8,strcpy \u6b21\u4e4b,sprintf \u7684\u6548\u7387\u6700\u4f4e\u3002\r\n(3)\u5b9e\u73b0\u529f\u80fd\u4e0d\u540c,strcpy \u4e3b\u8981\u5b9e\u73b0\u5b57\u7b26\u4e32\u53d8\u91cf\u95f4\u7684\u62f7\u8d1d,sprintf \u4e3b\u8981\u5b9e\u73b0\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u683c\u5f0f\u5230\u5b57\r\n\u7b26\u4e32\u7684\u8f6c\u5316,memcpy \u4e3b\u8981\u662f\u5185\u5b58\u5757\u95f4\u7684\u62f7\u8d1d\u3002\r\n\u8bf4\u660e:strcpy\u3001sprintf \u4e0e memcpy \u90fd\u53ef\u4ee5\u5b9e\u73b0\u62f7\u8d1d\u7684\u529f\u80fd,\u4f46\u662f\u9488\u5bf9\u7684\u5bf9\u8c61\u4e0d\u540c,\u6839\u636e\u5b9e\u9645\u9700\u6c42,\u6765\r\n\u9009\u62e9\u5408\u9002\u7684\u51fd\u6570\u5b9e\u73b0\u62f7\u8d1d\u529f\u80fd\u3002\r\n",
      "title": "C&C++"
    },
    {
      "ID": "240",
      "typeID": "12",
      "question": "\u5e38\u5f15\u7528\u6709\u4ec0\u4e48\u4f5c\u7528",
      "answer": "\u5e38\u5f15\u7528\u7684\u5f15\u5165\u4e3b\u8981\u662f\u4e3a\u4e86\u907f\u514d\u4f7f\u7528\u53d8\u91cf\u7684\u5f15\u7528\u65f6,\u5728\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u53d8\u91cf\u7684\u503c\u3002\u5e38\u5f15\u7528\u4e3b\u8981\u7528 \u4e8e\u5b9a\u4e49\u4e00\u4e2a\u666e\u901a\u53d8\u91cf\u7684\u53ea\u8bfb\u5c5e\u6027\u7684\u522b\u540d\u3001\u4f5c\u4e3a\u51fd\u6570\u7684\u4f20\u5165\u5f62\u53c2,\u907f\u514d\u5b9e\u53c2\u5728\u8c03\u7528\u51fd\u6570\u4e2d\u88ab\u610f\u5916\u7684\u6539\u53d8\u3002\r\n\u8bf4\u660e:\u5f88\u591a\u60c5\u51b5\u4e0b,\u9700\u8981\u7528\u5e38\u5f15\u7528\u505a\u5f62\u53c2,\u88ab\u5f15\u7528\u5bf9\u8c61\u7b49\u6548\u4e8e\u5e38\u5bf9\u8c61,\u4e0d\u80fd\u5728\u51fd\u6570\u4e2d\u6539\u53d8\u5b9e\u53c2\u7684\u503c, \u8fd9\u6837\u7684\u597d\u5904\u662f\u6709\u8f83\u9ad8\u7684\u6613\u8bfb\u6027\u548c\u8f83\u5c0f\u7684\u51fa\u9519\u7387\u3002",
      "title": "C&C++"
    },
    {
      "ID": "239",
      "typeID": "12",
      "question": "\u5982\u4f55\u907f\u514d\u201c\u91ce\u6307\u9488\u201d",
      "answer": "\u201c\u91ce\u6307\u9488\u201d\u4ea7\u751f\u539f\u56e0\u53ca\u89e3\u51b3\u529e\u6cd5\u5982\u4e0b:\r\n(1)\u6307\u9488\u53d8\u91cf\u58f0\u660e\u65f6\u6ca1\u6709\u88ab\u521d\u59cb\u5316\u3002\u89e3\u51b3\u529e\u6cd5:\u6307\u9488\u58f0\u660e\u65f6\u521d\u59cb\u5316,\u53ef\u4ee5\u662f\u5177\u4f53\u7684\u5730\u5740\u503c,\u4e5f\u53ef \u8ba9\u5b83\u6307\u5411 NULL\u3002\r\n(2)\u6307\u9488 p \u88ab free \u6216\u8005 delete \u4e4b\u540e,\u6ca1\u6709\u7f6e\u4e3a NULL\u3002\u89e3\u51b3\u529e\u6cd5:\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u88ab\u91ca\u653e \u540e\u6307\u9488\u5e94\u8be5\u6307\u5411 NULL\u3002\r\n(3)\u6307\u9488\u64cd\u4f5c\u8d85\u8d8a\u4e86\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u3002\u89e3\u51b3\u529e\u6cd5:\u5728\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u7ed3\u675f\u524d\u91ca\u653e\u6389\u53d8\u91cf\u7684\u5730\u5740\u7a7a\u95f4 \u5e76\u4e14\u8ba9\u6307\u9488\u6307\u5411 NULL\u3002\r\n\u6ce8\u610f:\u201c\u91ce\u6307\u9488\u201d\u7684\u89e3\u51b3\u65b9\u6cd5\u4e5f\u662f\u7f16\u7a0b\u89c4\u8303\u7684\u57fa\u672c\u539f\u5219,\u5e73\u65f6\u4f7f\u7528\u6307\u9488\u65f6\u4e00\u5b9a\u8981\u907f\u514d\u4ea7\u751f\u201c\u91ce\u6307\u9488\u201d, \u5728\u4f7f\u7528\u6307\u9488\u524d\u4e00\u5b9a\u8981\u68c0\u9a8c\u6307\u9488\u7684\u5408\u6cd5\u6027\u3002",
      "title": "C&C++"
    },
    {
      "ID": "238",
      "typeID": "12",
      "question": "\u7b80\u8ff0\u6307\u9488\u5e38\u91cf\u4e0e\u5e38\u91cf\u6307\u9488\u533a\u522b\r\n",
      "answer": "\u6307\u9488\u5e38\u91cf\u662f\u6307\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6307\u9488,\u8fd9\u4e2a\u6307\u9488\u7684\u503c\u53ea\u80fd\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316,\u5176\u4ed6\u5730\u65b9\u4e0d\u80fd\u6539\u53d8\u3002\u5e38\u91cf\u6307\u9488 \u662f\u6307\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6307\u9488,\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a\u53ea\u8bfb\u7684\u5bf9\u8c61,\u4e0d\u80fd\u901a\u8fc7\u5e38\u91cf\u6307\u9488\u6765\u6539\u53d8\u8fd9\u4e2a\u5bf9\u8c61\u7684\u503c\u3002\r\n\u6307\u9488\u5e38\u91cf\u5f3a\u8c03\u7684\u662f\u6307\u9488\u7684\u4e0d\u53ef\u6539\u53d8\u6027,\u800c\u5e38\u91cf\u6307\u9488\u5f3a\u8c03\u7684\u662f\u6307\u9488\u5bf9\u5176\u6240\u6307\u5bf9\u8c61\u7684\u4e0d\u53ef\u6539\u53d8\u6027\u3002\r\n  \u6ce8\u610f:\u65e0\u8bba\u662f\u6307\u9488\u5e38\u91cf\u8fd8\u662f\u5e38\u91cf\u6307\u9488,\u5176\u6700\u5927\u7684\u7528\u9014\u5c31\u662f\u4f5c\u4e3a\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570,\u4fdd\u8bc1\u5b9e\u53c2\u5728\u88ab\u8c03\u7528\r\n\u51fd\u6570\u4e2d\u7684\u4e0d\u53ef\u6539\u53d8\u7279\u6027\u3002",
      "title": "C&C++"
    },
    {
      "ID": "237",
      "typeID": "12",
      "question": "\u6d41\u64cd\u4f5c\u7b26\u91cd\u8f7d\u4e3a\u4ec0\u4e48\u8fd4\u56de\u5f15\u7528",
      "answer": "\u5728\u7a0b\u5e8f\u4e2d,\u6d41\u64cd\u4f5c\u7b26>>\u548c<<\u7ecf\u5e38\u8fde\u7eed\u4f7f\u7528\u3002\u56e0\u6b64\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u7684\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u4ecd\u65e7\u652f\u6301\u8fd9\u4e24\u4e2a \u64cd\u4f5c\u7b26\u7684\u6d41\u5f15\u7528\u3002\u5176\u4ed6\u7684\u6570\u636e\u7c7b\u578b\u90fd\u65e0\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\r\n\u6ce8\u610f:\u9664\u4e86\u5728\u8d4b\u503c\u64cd\u4f5c\u7b26\u548c\u6d41\u64cd\u4f5c\u7b26\u4e4b\u5916\u7684\u5176\u4ed6\u7684\u4e00\u4e9b\u64cd\u4f5c\u7b26\u4e2d,\u5982+\u3001-\u3001*\u3001/\u7b49\u5374\u5343\u4e07\u4e0d\u80fd\u8fd4\u56de \u5f15\u7528\u3002\u56e0\u4e3a\u8fd9\u56db\u4e2a\u64cd\u4f5c\u7b26\u7684\u5bf9\u8c61\u90fd\u662f\u53f3\u503c,\u56e0\u6b64,\u5b83\u4eec\u5fc5\u987b\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u8fd4\u56de\u503c\u3002\r\n",
      "title": "C&C++"
    },
    {
      "ID": "236",
      "typeID": "12",
      "question": "extern \u6709\u4ec0\u4e48\u4f5c\u7528",
      "answer": "extern \u6807\u8bc6\u7684\u53d8\u91cf\u6216\u8005\u51fd\u6570\u58f0\u660e\u5176\u5b9a\u4e49\u5728\u522b\u7684\u6587\u4ef6\u4e2d,\u63d0\u793a\u7f16\u8bd1\u5668\u9047\u5230\u6b64\u53d8\u91cf\u548c\u51fd\u6570\u65f6\u5728\u5176\u5b83\u6a21\u5757\r\n\u4e2d\u5bfb\u627e\u5176\u5b9a\u4e49\u3002",
      "title": "C&C++"
    },
    {
      "ID": "235",
      "typeID": "12",
      "question": "static \u6709\u4ec0\u4e48\u4f5c\u7528",
      "answer": "static \u5728 C \u4e2d\u4e3b\u8981\u7528\u4e8e\u5b9a\u4e49\u5168\u5c40\u9759\u6001\u53d8\u91cf\u3001\u5b9a\u4e49\u5c40\u90e8\u9759\u6001\u53d8\u91cf\u3001\u5b9a\u4e49\u9759\u6001\u51fd\u6570\u3002\u5728 C++\u4e2d\u65b0\u589e\u4e86\u4e24 \u79cd\u4f5c\u7528:\u5b9a\u4e49\u9759\u6001\u6570\u636e\u6210\u5458\u3001\u9759\u6001\u51fd\u6570\u6210\u5458\u3002\r\n\u6ce8\u610f:\u56e0\u4e3a static \u5b9a\u4e49\u7684\u53d8\u91cf\u5206\u914d\u5728\u9759\u6001\u533a,\u6240\u4ee5\u5176\u5b9a\u4e49\u7684\u53d8\u91cf\u7684\u9ed8\u8ba4\u503c\u4e3a 0,\u666e\u901a\u53d8\u91cf\u7684\u9ed8\u8ba4\u503c \u4e3a\u968f\u673a\u6570,\u5728\u5b9a\u4e49\u6307\u9488\u53d8\u91cf\u65f6\u8981\u7279\u522b\u6ce8\u610f\u3002\r\n",
      "title": "C&C++"
    },
    {
      "ID": "234",
      "typeID": "12",
      "question": "\u5173\u952e\u5b57 const \u662f\u4ec0\u4e48",
      "answer": "const \u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u53ea\u8bfb\u7684\u53d8\u91cf\u6216\u5bf9\u8c61\u3002\u4e3b\u8981\u4f18\u70b9:\u4fbf\u4e8e\u7c7b\u578b\u68c0\u67e5\u3001\u540c\u5b8f\u5b9a\u4e49\u4e00\u6837\u53ef\u4ee5\u65b9\u4fbf\u5730\u8fdb\u884c \u53c2\u6570\u7684\u4fee\u6539\u548c\u8c03\u6574\u3001\u8282\u7701\u7a7a\u95f4,\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u5185\u5b58\u5206\u914d\u3001\u53ef\u4e3a\u51fd\u6570\u91cd\u8f7d\u63d0\u4f9b\u53c2\u8003\u3002\r\n\u8bf4\u660e:const \u4fee\u9970\u51fd\u6570\u53c2\u6570,\u662f\u4e00\u79cd\u7f16\u7a0b\u89c4\u8303\u7684\u8981\u6c42,\u4fbf\u4e8e\u9605\u8bfb,\u4e00\u770b\u5373\u77e5\u8fd9\u4e2a\u53c2\u6570\u4e0d\u80fd\u88ab\u6539\u53d8, \u5b9e\u73b0\u65f6\u4e0d\u6613\u51fa\u9519\u3002",
      "title": "C&C++"
    },
    {
      "ID": "233",
      "typeID": "12",
      "question": "typedef \u548c define \u6709\u4ec0\u4e48\u533a\u522b",
      "answer": "(1)\u7528\u6cd5\u4e0d\u540c:typedef \u7528\u6765\u5b9a\u4e49\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u7684\u522b\u540d,\u589e\u5f3a\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u3002define \u4e3b\u8981\u7528\u6765\u5b9a\u4e49 \u5e38\u91cf,\u4ee5\u53ca\u4e66\u5199\u590d\u6742\u4f7f\u7528\u9891\u7e41\u7684\u5b8f\u3002\r\n(2)\u6267\u884c\u65f6\u95f4\u4e0d\u540c:typedef \u662f\u7f16\u8bd1\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206,\u6709\u7c7b\u578b\u68c0\u67e5\u7684\u529f\u80fd\u3002define \u662f\u5b8f\u5b9a\u4e49,\u662f\u9884\u7f16 \u8bd1\u7684\u90e8\u5206,\u5176\u53d1\u751f\u5728\u7f16\u8bd1\u4e4b\u524d,\u53ea\u662f\u7b80\u5355\u7684\u8fdb\u884c\u5b57\u7b26\u4e32\u7684\u66ff\u6362,\u4e0d\u8fdb\u884c\u7c7b\u578b\u7684\u68c0\u67e5\u3002\r\n(3)\u4f5c\u7528\u57df\u4e0d\u540c:typedef \u6709\u4f5c\u7528\u57df\u9650\u5b9a\u3002define \u4e0d\u53d7\u4f5c\u7528\u57df\u7ea6\u675f,\u53ea\u8981\u662f\u5728 define \u58f0\u660e\u540e\u7684\u5f15\u7528 \u90fd\u662f\u6b63\u786e\u7684\u3002\r\n(4)\u5bf9\u6307\u9488\u7684\u64cd\u4f5c\u4e0d\u540c:typedef \u548c define \u5b9a\u4e49\u7684\u6307\u9488\u65f6\u6709\u5f88\u5927\u7684\u533a\u522b\u3002\r\n\u6ce8\u610f:typedef \u5b9a\u4e49\u662f\u8bed\u53e5,\u56e0\u4e3a\u53e5\u5c3e\u8981\u52a0\u4e0a\u5206\u53f7\u3002\u800c define \u4e0d\u662f\u8bed\u53e5,\u5343\u4e07\u4e0d\u80fd\u5728\u53e5\u5c3e\u52a0\u5206\u53f7\u3002",
      "title": "C&C++"
    },
    {
      "ID": "232",
      "typeID": "12",
      "question": "\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8f MIN",
      "answer": "\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8f MIN,\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u4e14\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002 \u3010\u7b54\u6848\u3011\r\n#define min(a,b)((a)<=(b)?(a):(b)) \u6ce8\u610f:\u5728\u8c03\u7528\u65f6\u4e00\u5b9a\u8981\u6ce8\u610f\u8fd9\u4e2a\u5b8f\u5b9a\u4e49\u7684\u526f\u4f5c\u7528,\u5982\u4e0b\u8c03\u7528: ((++*p)<=(x)?(++*p):(x)\u3002\r\np \u6307\u9488\u5c31\u81ea\u52a0\u4e86\u4e24\u6b21,\u8fdd\u80cc\u4e86 MIN \u7684\u672c\u610f\u3002",
      "title": "C&C++"
    },
    {
      "ID": "231",
      "typeID": "12",
      "question": "C++\u7684\u5f15\u7528\u548c C \u8bed\u8a00\u7684\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b",
      "answer": "\u6307\u9488\u548c\u5f15\u7528\u4e3b\u8981\u6709\u4ee5\u4e0b\u533a\u522b:\r\n(1)\u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316,\u4f46\u662f\u4e0d\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\u3002\u6307\u9488\u4e0d\u58f0\u660e\u65f6\u521d\u59cb\u5316,\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u9700\u8981\u5206\u914d \u5b58\u50a8\u7a7a\u95f4\u3002\r\n(2)\u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8,\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002 (3)\u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528,\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002 \u6ce8\u610f:\u5f15\u7528\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u65f6,\u4f1a\u5f15\u53d1\u4e00\u5b9a\u7684\u95ee\u9898,\u56e0\u4e3a\u8ba9\u5f15\u7528\u4f5c\u53c2\u6570,\u76ee\u7684\u5c31\u662f\u60f3\u6539\u53d8\u8fd9\u4e2a\u5f15\u7528\u6240\r\n\u6307\u5411\u5730\u5740\u7684\u5185\u5bb9,\u800c\u51fd\u6570\u8c03\u7528\u65f6\u4f20\u5165\u7684\u662f\u5b9e\u53c2,\u770b\u4e0d\u51fa\u51fd\u6570\u7684\u53c2\u6570\u662f\u6b63\u5e38\u53d8\u91cf,\u8fd8\u662f\u5f15\u7528,\u56e0\u6b64\u53ef\u80fd\u4f1a\r\n\u5f15\u53d1\u9519\u8bef\u3002\u6240\u4ee5\u4f7f\u7528\u65f6\u4e00\u5b9a\u8981\u5c0f\u5fc3\u8c28\u614e\u3002\r\n",
      "title": "C&C++"
    },
    {
      "ID": "230",
      "typeID": "12",
      "question": "&&\u548c&\u3001||\u548c|\u6709\u4ec0\u4e48\u533a\u522b",
      "answer": "(1)&\u548c|\u5bf9\u64cd\u4f5c\u6570\u8fdb\u884c\u6c42\u503c\u8fd0\u7b97,&&\u548c||\u53ea\u662f\u5224\u65ad\u903b\u8f91\u5173\u7cfb\u3002 18\r\n\ufffc\ufffc(2)&&\u548c||\u5728\u5728\u5224\u65ad\u5de6\u4fa7\u64cd\u4f5c\u6570\u5c31\u80fd\u786e\u5b9a\u7ed3\u679c\u7684\u60c5\u51b5\u4e0b\u5c31\u4e0d\u518d\u5bf9\u53f3\u4fa7\u64cd\u4f5c\u6570\u6c42\u503c\u3002\r\n\u6ce8\u610f:\u5728\u7f16\u7a0b\u7684\u65f6\u5019\u6709\u4e9b\u65f6\u5019\u5c06&&\u6216||\u66ff\u6362\u6210&\u6216|\u6ca1\u6709\u51fa\u9519,\u4f46\u662f\u5176\u903b\u8f91\u662f\u9519\u8bef\u7684,\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d \u53ef\u9884\u60f3\u7684\u540e\u679c(\u6bd4\u5982\u5f53\u4e24\u4e2a\u64cd\u4f5c\u6570\u4e00\u4e2a\u662f 1 \u53e6\u4e00\u4e2a\u662f 2 \u65f6)\u3002",
      "title": "C&C++"
    },
    {
      "ID": "229",
      "typeID": "12",
      "question": "short i = 0; i = i + 1L;\u8fd9\u4e24\u53e5\u6709\u9519\u5417",
      "answer": "\u4ee3\u7801\u4e00\u662f\u9519\u7684,\u4ee3\u7801\u4e8c\u662f\u6b63\u786e\u7684\u3002\r\n\u8bf4\u660e:\u5728\u6570\u636e\u5b89\u5168\u7684\u60c5\u51b5\u4e0b\u5927\u7c7b\u578b\u7684\u6570\u636e\u5411\u5c0f\u7c7b\u578b\u7684\u6570\u636e\u8f6c\u6362\u4e00\u5b9a\u8981\u663e\u793a\u7684\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002",
      "title": "C&C++"
    },
    {
      "ID": "228",
      "typeID": "12",
      "question": "\u8c08\u8c08\u4f60\u5bf9\u7f16\u7a0b\u89c4\u8303\u7684\u7406\u89e3\u6216\u8ba4\u8bc6",
      "answer": "\u7f16\u7a0b\u89c4\u8303\u53ef\u603b\u7ed3\u4e3a:\u7a0b\u5e8f\u7684\u53ef\u884c\u6027,\u53ef\u8bfb\u6027\u3001\u53ef\u79fb\u690d\u6027\u4ee5\u53ca\u53ef\u6d4b\u8bd5\u6027\u3002\r\n\u8bf4\u660e:\u8fd9\u662f\u7f16\u7a0b\u89c4\u8303\u7684\u603b\u7eb2\u76ee,\u9762\u8bd5\u8005\u4e0d\u4e00\u5b9a\u8981\u53bb\u80cc\u8bf5\u4e0a\u9762\u7ed9\u51fa\u7684\u90a3\u51e0\u4e2a\u4f8b\u5b50,\u5e94\u8be5\u53bb\u7406\u89e3\u8fd9\u51e0\u4e2a \u4f8b\u5b50\u8bf4\u660e\u7684\u95ee\u9898,\u60f3\u4e00\u60f3,\u81ea\u5df1\u5982\u4f55\u89e3\u51b3\u53ef\u884c\u6027\u3001\u53ef\u8bfb\u6027\u3001\u53ef\u79fb\u690d\u6027\u4ee5\u53ca\u53ef\u6d4b\u8bd5\u6027\u8fd9\u51e0\u4e2a\u95ee\u9898,\u7ed3\u5408\u4ee5 \u4e0a\u51e0\u4e2a\u4f8b\u5b50\u548c\u81ea\u5df1\u5e73\u65f6\u7684\u7f16\u7a0b\u4e60\u60ef\u6765\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u3002",
      "title": "C&C++"
    },
    {
      "ID": "227",
      "typeID": "12",
      "question": "\u7f16\u7801\u5b9e\u73b0\u5192\u6ce1\u6392\u5e8f",
      "answer": "\u5192\u6ce1\u6392\u5e8f\u7f16\u7a0b\u5b9e\u73b0\u5982\u4e0b:\r\n#include <stdio.h>\r\n#define LEN 10 //\u6570\u7ec4\u957f\u5ea6\r\nvoid main( void ) {\r\nintARRAY[10]={0,6,3,2,7,5,4,9,1,8}; //\u5f85\u6392\u5e8f\u6570\u7ec4 printf( \"\n\" );\r\nfor( int a = 0; a < LEN; a++ ) {\r\nprintf( \"%d \", ARRAY[a] ); }\r\nint i = 0;\r\nint j = 0;\r\nbool isChange;\r\n//\u6253\u5370\u6570\u7ec4\u5185\u5bb9\r\n//\u8bbe\u5b9a\u4ea4\u6362\u6807\u5fd7\r\nfor( i = 1; i < LEN; i++ ) {\r\nisChange = 0;\r\nfor( j = LEN-1; j >= i; j-- ) {\r\nif( ARRAY[j+1] < ARRAY[j] ) {\r\nARRAY[0] = ARRAY[j+1];\r\n//\u6700\u591a\u505a LEN-1 \u8d9f\u6392\u5e8f //\u672c\u8d9f\u6392\u5e8f\u5f00\u59cb\u524d,\u4ea4\u6362\u6807\u5fd7\u5e94\u4e3a\u5047 //\u5bf9\u5f53\u524d\u65e0\u5e8f\u533a ARRAY[i..LEN]\u81ea\u4e0b\u5411\u4e0a\u626b\u63cf\r\n//\u4ea4\u6362\u8bb0\u5f55 //ARRAY[0]\u4e0d\u662f\u54e8\u5175,\u4ec5\u505a\u6682\u5b58\u5355\u5143\r\n} }\r\nARRAY[j+1] = ARRAY[j]; ARRAY[j] = ARRAY[0]; isChange = 1;\r\n//\u53d1\u751f\u4e86\u4ea4\u6362,\u6545\u5c06\u4ea4\u6362\u6807\u5fd7\u7f6e\u4e3a\u771f\r\n//\u6253\u5370\u672c\u6b21\u6392\u5e8f\u540e\u6570\u7ec4\u5185\u5bb9\r\n//\u672c\u8d9f\u6392\u5e8f\u672a\u53d1\u751f\u4ea4\u6362,\u63d0\u524d\u7ec8\u6b62\u7b97\u6cd5\r\nprintf( \"\n\" );\r\nfor( a = 0; a < LEN; a++)\r\n{\r\nprintf( \"%d \", ARRAY[a] );\r\n}\r\nif( !isChange )\r\n{\r\nbreak;\r\n} }\r\nprintf( \"\n\" );\r\nreturn; }",
      "title": "C&C++"
    },
    {
      "ID": "226",
      "typeID": "12",
      "question": "\u7f16\u7801\u5b9e\u73b0\u76f4\u63a5\u63d2\u5165\u6392\u5e8f",
      "answer": "\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u7f16\u7a0b\u5b9e\u73b0\u5982\u4e0b:\r\n#include<iostream.h> void main( void )\r\n{\r\nint ARRAY[10] = { 0, 6, 3, 2, 7, 5, 4, 9, 1, 8 };\r\nint i,j;\r\nfor( i=0;i<10;i++) {\r\ncout<<ARRAY[i]<<\" \"; }\r\ncout<<endl;\r\nfor( i = 2; i <= 10; i++ ) {\r\nif(ARRAY[i] < ARRAY[i-1]) {\r\n//\u5c06 ARRAY[2],...,ARRAY[n]\u4f9d\u6b21\u6309\u5e8f\u63d2\u5165\r\n//\u5982\u679c ARRAY[i]\u5927\u4e8e\u4e00\u5207\u6709\u5e8f\u7684\u6570\u503c, //ARRAY[i]\u5c06\u4fdd\u6301\u539f\u4f4d\u4e0d\u52a8\r\nARRAY[0] = ARRAY[i]; j = i - 1;\r\ndo{\r\n//\u5c06 ARRAY[0]\u770b\u505a\u662f\u54e8\u5175,\u662f ARRAY[i]\u7684\u526f\u672c\r\n//\u4ece\u53f3\u5411\u5de6\u5728\u6709\u5e8f\u533a ARRAY[1..i-1]\u4e2d //\u67e5\u627e ARRAY[i]\u7684\u63d2\u5165\u4f4d\u7f6e //\u5c06\u6570\u503c\u5927\u4e8e ARRAY[i]\u8bb0\u5f55\u540e\u79fb\r\nARRAY[j+1] = ARRAY[j];\r\nj-- ;\r\n}while( ARRAY[0] < ARRAY[j] );\r\nARRAY[j+1]=ARRAY[0]; //ARRAY[i]\u63d2\u5165\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a\r\n} }\r\nfor( i=0;i<10;i++)\r\n{\r\ncout<<ARRAY[i]<<\" \";\r\n}\r\ncout<<endl; }\r\n\u6ce8\u610f:\u6240\u6709\u4e3a\u7b80\u5316\u8fb9\u754c\u6761\u4ef6\u800c\u5f15\u5165\u7684\u9644\u52a0\u7ed3\u70b9(\u5143\u7d20)\u5747\u53ef\u79f0\u4e3a\u54e8\u5175\u3002\u5f15\u5165\u54e8\u5175\u540e\u4f7f\u5f97\u67e5\u627e\u5faa\u73af\u6761 \u4ef6\u7684\u65f6\u95f4\u5927\u7ea6\u51cf\u5c11\u4e86\u4e00\u534a,\u5bf9\u4e8e\u8bb0\u5f55\u6570\u8f83\u5927\u7684\u6587\u4ef6\u8282\u7ea6\u7684\u65f6\u95f4\u5c31\u76f8\u5f53\u53ef\u89c2\u3002\u7c7b\u4f3c\u4e8e\u6392\u5e8f\u8fd9\u6837\u4f7f\u7528\u9891\u7387\u975e \u5e38\u9ad8\u7684\u7b97\u6cd5,\u8981\u5c3d\u53ef\u80fd\u5730\u51cf\u5c11\u5176\u8fd0\u884c\u65f6\u95f4\u3002\u6240\u4ee5\u4e0d\u80fd\u628a\u4e0a\u8ff0\u7b97\u6cd5\u4e2d\u7684\u54e8\u5175\u89c6\u4e3a\u96d5\u866b\u5c0f\u6280\u3002\r\n",
      "title": "C&C++"
    },
    {
      "ID": "225",
      "typeID": "12",
      "question": "\u8ba1\u7b97\u4e00\u9897\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6",
      "answer": "\u6df1\u5ea6\u7684\u8ba1\u7b97\u51fd\u6570:\r\n\r\n\ufffcint depth(BiTree T) {\r\nif(!T) return 0; //\u5224\u65ad\u5f53\u524d\u7ed3\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u7ed3\u70b9\r\n\ufffc\ufffc\r\nint d1= depth(T->lchild); //\u6c42\u5f53\u524d\u7ed3\u70b9\u7684\u5de6\u5b69\u5b50\u6811\u7684\u6df1\u5ea6 int d2= depth(T->rchild); //\u6c42\u5f53\u524d\u7ed3\u70b9\u7684\u53f3\u5b69\u5b50\u6811\u7684\u6df1\u5ea6 return (d1>d2?d1:d2)+1;\r\n}\r\n\u6ce8\u610f:\u6839\u636e\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\u7279\u70b9,\u5f88\u591a\u7b97\u6cd5\u90fd\u53ef\u4ee5\u7528\u9012\u5f52\u7b97\u6cd5\u6765\u5b9e\u73b0\u3002\r\n",
      "title": "C&C++"
    },
    {
      "ID": "224",
      "typeID": "12",
      "question": "\u7b80\u8ff0\u961f\u5217\u548c\u6808\u7684\u5f02\u540c",
      "answer": "\u961f\u5217\u548c\u6808\u90fd\u662f\u7ebf\u6027\u5b58\u50a8\u7ed3\u6784,\u4f46\u662f\u4e24\u8005\u7684\u63d2\u5165\u548c\u5220\u9664\u6570\u636e\u7684\u64cd\u4f5c\u4e0d\u540c,\u961f\u5217\u662f\u201c\u5148\u8fdb\u5148\u51fa\u201d,\u6808\u662f \u201c\u540e\u8fdb\u5148\u51fa\u201d\u3002\r\n\u6ce8\u610f:\u533a\u522b\u6808\u533a\u548c\u5806\u533a\u3002\u5806\u533a\u7684\u5b58\u53d6\u662f\u201c\u987a\u5e8f\u968f\u610f\u201d,\u800c\u6808\u533a\u662f\u201c\u540e\u8fdb\u5148\u51fa\u201d\u3002\u6808\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206 \u914d\u91ca\u653e ,\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c,\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u7b49\u3002\u5176\u64cd\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6808\u3002\u5806\u4e00\u822c\u7531\u7a0b\u5e8f\u5458 \u5206\u914d\u91ca\u653e, \u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e,\u7a0b\u5e8f\u7ed3\u675f\u65f6\u53ef\u80fd\u7531 OS \u56de\u6536\u3002\u5206\u914d\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u94fe\u8868\u3002\r\n\u5b83\u4e0e\u672c\u9898\u4e2d\u7684\u5806\u548c\u6808\u662f\u4e24\u56de\u4e8b\u3002\u5806\u6808\u53ea\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784,\u800c\u5806\u533a\u548c\u6808\u533a\u662f\u7a0b\u5e8f\u7684\u4e0d\u540c\u5185\u5b58\u5b58\u50a8\u533a\u57df\u3002\r\n",
      "title": "C&C++"
    },
    {
      "ID": "223",
      "typeID": "12",
      "question": "\u600e\u6837\u628a\u4e00\u4e2a\u5355\u94fe\u8868\u53cd\u5e8f",
      "answer": "(1)\u53cd\u8f6c\u4e00\u4e2a\u94fe\u8868\u3002\u5faa\u73af\u7b97\u6cd5\u3002\r\nList reverse(List n) {\r\nif(!n) {\r\nreturn n; }\r\nlist cur = n.next; list pre = n;\r\nlist tmp;\r\n//\u5224\u65ad\u94fe\u8868\u662f\u5426\u4e3a\u7a7a,\u4e3a\u7a7a\u5373\u9000\u51fa\u3002\r\n//\u4fdd\u5b58\u5934\u7ed3\u70b9\u7684\u4e0b\u4e2a\u7ed3\u70b9 //\u4fdd\u5b58\u5934\u7ed3\u70b9\r\n\ufffc\ufffc\r\npre.next = null;\r\nwhile ( NULL != cur.next ) {\r\ntmp = cur; tmp.next = pre pre = tmp;\r\ncur = cur.next;\r\n//\u5934\u7ed3\u70b9\u7684\u6307\u9488\u6307\u7a7a,\u8f6c\u6362\u540e\u53d8\u5c3e\u7ed3\u70b9 //\u5faa\u73af\u76f4\u5230 cur.next \u4e3a\u7a7a\r\n//\u5b9e\u73b0\u5982\u56fe 10.3\u2014\u56fe 10.5 \u6240\u793a\r\n}\r\nreturn tmp; //f \u8fd4\u56de\u5934\u6307\u9488\r\n}\r\n(2)\u53cd\u8f6c\u4e00\u4e2a\u94fe\u8868\u3002\u9012\u5f52\u7b97\u6cd5\u3002\r\nList *reverse( List *oldList, List *newHead = NULL ) {\r\nList *next = oldList-> next; oldList-> next = newHead; newHead = oldList;\r\n//\u8bb0\u5f55\u4e0a\u6b21\u7ffb\u8f6c\u540e\u7684\u94fe\u8868 //\u5c06\u5f53\u524d\u7ed3\u70b9\u63d2\u5165\u5230\u7ffb\u8f6c\u540e\u94fe\u8868\u7684\u5f00\u5934 //\u9012\u5f52\u5904\u7406\u5269\u4f59\u7684\u94fe\u8868\r\nreturn ( next==NULL )? newHead: reverse( t, newHead ); \r\n}\r\n\u8bf4\u660e:\u5faa\u73af\u7b97\u6cd5\u5c31\u662f\u56fe 10.2\u2014\u56fe 10.5 \u7684\u79fb\u52a8\u8fc7\u7a0b,\u6bd4\u8f83\u597d\u7406\u89e3\u548c\u60f3\u5230\u3002\u9012\u5f52\u7b97\u6cd5\u7684\u8bbe\u8ba1\u867d\u6709\u4e00\u70b9\u96be \u5ea6,\u4f46\u662f\u7406\u89e3\u4e86\u5faa\u73af\u7b97\u6cd5,\u518d\u8bbe\u8ba1\u9012\u5f52\u7b97\u6cd5\u5c31\u7b80\u5355\u591a\u4e86\u3002",
      "title": "C&C++"
    },
    {
      "ID": "222",
      "typeID": "12",
      "question": "\u94fe\u8868\u548c\u6570\u7ec4\u6709\u4ec0\u4e48\u533a\u522b",
      "answer": "\u6570\u7ec4\u548c\u94fe\u8868\u6709\u4ee5\u4e0b\u51e0\u70b9\u4e0d\u540c:\r\n(1)\u5b58\u50a8\u5f62\u5f0f:\u6570\u7ec4\u662f\u4e00\u5757\u8fde\u7eed\u7684\u7a7a\u95f4,\u58f0\u660e\u65f6\u5c31\u8981\u786e\u5b9a\u957f\u5ea6\u3002\u94fe\u8868\u662f\u4e00\u5757\u53ef\u4e0d\u8fde\u7eed\u7684\u52a8\u6001\u7a7a\u95f4, \u957f\u5ea6\u53ef\u53d8,\u6bcf\u4e2a\u7ed3\u70b9\u8981\u4fdd\u5b58\u76f8\u90bb\u7ed3\u70b9\u6307\u9488\u3002\r\n(2)\u6570\u636e\u67e5\u627e:\u6570\u7ec4\u7684\u7ebf\u6027\u67e5\u627e\u901f\u5ea6\u5feb,\u67e5\u627e\u64cd\u4f5c\u76f4\u63a5\u4f7f\u7528\u504f\u79fb\u5730\u5740\u3002\u94fe\u8868\u9700\u8981\u6309\u987a\u5e8f\u68c0\u7d22\u7ed3\u70b9, \u6548\u7387\u4f4e\u3002\r\n(3)\u6570\u636e\u63d2\u5165\u6216\u5220\u9664:\u94fe\u8868\u53ef\u4ee5\u5feb\u901f\u63d2\u5165\u548c\u5220\u9664\u7ed3\u70b9,\u800c\u6570\u7ec4\u5219\u53ef\u80fd\u9700\u8981\u5927\u91cf\u6570\u636e\u79fb\u52a8\u3002 (4)\u8d8a\u754c\u95ee\u9898:\u94fe\u8868\u4e0d\u5b58\u5728\u8d8a\u754c\u95ee\u9898,\u6570\u7ec4\u6709\u8d8a\u754c\u95ee\u9898\u3002 \u8bf4\u660e:\u5728\u9009\u62e9\u6570\u7ec4\u6216\u94fe\u8868\u6570\u636e\u7ed3\u6784\u65f6,\u4e00\u5b9a\u8981\u6839\u636e\u5b9e\u9645\u9700\u8981\u8fdb\u884c\u9009\u62e9\u3002\u6570\u7ec4\u4fbf\u4e8e\u67e5\u8be2,\u94fe\u8868\u4fbf\u4e8e\u63d2\r\n\u5165\u5220\u9664\u3002\u6570\u7ec4\u8282\u7701\u7a7a\u95f4\u4f46\u662f\u957f\u5ea6\u56fa\u5b9a,\u94fe\u8868\u867d\u7136\u53d8\u957f\u4f46\u662f\u5360\u4e86\u66f4\u591a\u7684\u5b58\u50a8\u7a7a\u95f4\u3002",
      "title": "C&C++"
    },
    {
      "ID": "221",
      "typeID": "12",
      "question": "\u7b80\u8ff0\u591a\u6001\u5b9e\u73b0\u7684\u539f\u7406",
      "answer": "\u7f16\u8bd1\u5668\u53d1\u73b0\u4e00\u4e2a\u7c7b\u4e2d\u6709\u865a\u51fd\u6570,\u4fbf\u4f1a\u7acb\u5373\u4e3a\u6b64\u7c7b\u751f\u6210\u865a\u51fd\u6570\u8868 vtable\u3002\u865a\u51fd\u6570\u8868\u7684\u5404\u8868\u9879\u4e3a\u6307\u5411\u5bf9 \u5e94\u865a\u51fd\u6570\u7684\u6307\u9488\u3002\u7f16\u8bd1\u5668\u8fd8\u4f1a\u5728\u6b64\u7c7b\u4e2d\u9690\u542b\u63d2\u5165\u4e00\u4e2a\u6307\u9488 vptr(\u5bf9 vc \u7f16\u8bd1\u5668\u6765\u8bf4,\u5b83\u63d2\u5728\u7c7b\u7684\u7b2c\u4e00\u4e2a\u4f4d \u7f6e\u4e0a)\u6307\u5411\u865a\u51fd\u6570\u8868\u3002\u8c03\u7528\u6b64\u7c7b\u7684\u6784\u9020\u51fd\u6570\u65f6,\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d,\u7f16\u8bd1\u5668\u4f1a\u9690\u542b\u6267\u884c vptr \u4e0e vtable \u7684 \u5173\u8054\u4ee3\u7801,\u5c06 vptr \u6307\u5411\u5bf9\u5e94\u7684 vtable,\u5c06\u7c7b\u4e0e\u6b64\u7c7b\u7684 vtable \u8054\u7cfb\u4e86\u8d77\u6765\u3002\u53e6\u5916\u5728\u8c03\u7528\u7c7b\u7684\u6784\u9020\u51fd\u6570\u65f6, \u6307\u5411\u57fa\u7840\u7c7b\u7684\u6307\u9488\u6b64\u65f6\u5df2\u7ecf\u53d8\u6210\u6307\u5411\u5177\u4f53\u7684\u7c7b\u7684 this \u6307\u9488,\u8fd9\u6837\u4f9d\u9760\u6b64 this \u6307\u9488\u5373\u53ef\u5f97\u5230\u6b63\u786e\u7684 vtable,\u3002 \u5982\u6b64\u624d\u80fd\u771f\u6b63\u4e0e\u51fd\u6570\u4f53\u8fdb\u884c\u8fde\u63a5,\u8fd9\u5c31\u662f\u52a8\u6001\u8054\u7f16,\u5b9e\u73b0\u591a\u6001\u7684\u57fa\u672c\u539f\u7406\u3002\r\n\u6ce8\u610f:\u4e00\u5b9a\u8981\u533a\u5206\u865a\u51fd\u6570,\u7eaf\u865a\u51fd\u6570\u3001\u865a\u62df\u7ee7\u627f\u7684\u5173\u7cfb\u548c\u533a\u522b\u3002\u7262\u8bb0\u865a\u51fd\u6570\u5b9e\u73b0\u539f\u7406,\u56e0\u4e3a\u591a\u6001 C++\u9762\u8bd5\u7684\u91cd\u8981\u8003\u70b9\u4e4b\u4e00,\u800c\u865a\u51fd\u6570\u662f\u5b9e\u73b0\u591a\u6001\u7684\u57fa\u7840\u3002\r\n",
      "title": "C&C++"
    },
    {
      "ID": "220",
      "typeID": "12",
      "question": "\u7b80\u8ff0\u7c7b\u6210\u5458\u51fd\u6570\u7684\u91cd\u5199\u3001\u91cd\u8f7d\u548c\u9690\u85cf\u7684\u533a\u522b",
      "answer": "(1)\u91cd\u5199\u548c\u91cd\u8f7d\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u70b9\u4e0d\u540c\u3002\r\n\uf071 \u8303\u56f4\u7684\u533a\u522b:\u88ab\u91cd\u5199\u7684\u548c\u91cd\u5199\u7684\u51fd\u6570\u5728\u4e24\u4e2a\u7c7b\u4e2d,\u800c\u91cd\u8f7d\u548c\u88ab\u91cd\u8f7d\u7684\u51fd\u6570\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\u3002\r\n\uf071 \u53c2\u6570\u7684\u533a\u522b:\u88ab\u91cd\u5199\u51fd\u6570\u548c\u91cd\u5199\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e00\u5b9a\u76f8\u540c,\u800c\u88ab\u91cd\u8f7d\u51fd\u6570\u548c\u91cd\u8f7d\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e00\r\n\u5b9a\u4e0d\u540c\u3002\r\n\uf071 virtual \u7684\u533a\u522b:\u91cd\u5199\u7684\u57fa\u7c7b\u4e2d\u88ab\u91cd\u5199\u7684\u51fd\u6570\u5fc5\u987b\u8981\u6709 virtual \u4fee\u9970,\u800c\u91cd\u8f7d\u51fd\u6570\u548c\u88ab\u91cd\u8f7d\u51fd\u6570\u53ef\u4ee5\u88ab\r\n6\r\n\ufffcB::g A::f B::h\r\n\ufffc\ufffcvirtual \u4fee\u9970,\u4e5f\u53ef\u4ee5\u6ca1\u6709\u3002\r\n(2)\u9690\u85cf\u548c\u91cd\u5199\u3001\u91cd\u8f7d\u6709\u4ee5\u4e0b\u51e0\u70b9\u4e0d\u540c\u3002\r\n\uf071 \u4e0e\u91cd\u8f7d\u7684\u8303\u56f4\u4e0d\u540c:\u548c\u91cd\u5199\u4e00\u6837,\u9690\u85cf\u51fd\u6570\u548c\u88ab\u9690\u85cf\u51fd\u6570\u4e0d\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\u3002\r\n\uf071 \u53c2\u6570\u7684\u533a\u522b:\u9690\u85cf\u51fd\u6570\u548c\u88ab\u9690\u85cf\u7684\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u76f8\u540c,\u4e5f\u53ef\u4e0d\u540c,\u4f46\u662f\u51fd\u6570\u540d\u80af\u5b9a\u8981\u76f8\u540c\u3002\r\n\u5f53\u53c2\u6570\u4e0d\u76f8\u540c\u65f6,\u65e0\u8bba\u57fa\u7c7b\u4e2d\u7684\u53c2\u6570\u662f\u5426\u88ab virtual \u4fee\u9970,\u57fa\u7c7b\u7684\u51fd\u6570\u90fd\u662f\u88ab\u9690\u85cf,\u800c\u4e0d\u662f\u88ab\u91cd\u5199\u3002\r\n\u8bf4\u660e:\u867d\u7136\u91cd\u8f7d\u548c\u8986\u76d6\u90fd\u662f\u5b9e\u73b0\u591a\u6001\u7684\u57fa\u7840,\u4f46\u662f\u4e24\u8005\u5b9e\u73b0\u7684\u6280\u672f\u5b8c\u5168\u4e0d\u76f8\u540c,\u8fbe\u5230\u7684\u76ee\u7684\u4e5f\u662f\u5b8c \u5168\u4e0d\u540c\u7684,\u8986\u76d6\u662f\u52a8\u6001\u6001\u7ed1\u5b9a\u7684\u591a\u6001,\u800c\u91cd\u8f7d\u662f\u9759\u6001\u7ed1\u5b9a\u7684\u591a\u6001\u3002\r\n",
      "title": "C&C++"
    },
    {
      "ID": "219",
      "typeID": "12",
      "question": "\u8bbf\u95ee\u57fa\u7c7b\u7684\u79c1\u6709\u865a\u51fd\u6570",
      "answer": "\u5199\u51fa\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c:\r\n\ufffc#include <iostream.h> class A\r\n5\r\n\ufffc\ufffc\r\n{\r\nvirtual void g()\r\n{\r\ncout << \"A::g\" << endl;\r\n} private:\r\nvirtual void f() {\r\ncout << \"A::f\" << endl; }\r\n};\r\nclass B : public A {\r\nvoid g() {\r\ncout << \"B::g\" << endl; }\r\nvirtual void h() {\r\ncout << \"B::h\" << endl; }\r\n};\r\ntypedef void( *Fun )( void ); void main()\r\n{\r\nB b;\r\nFun pFun;\r\nfor(int i = 0 ; i < 3; i++) {\r\npFun = ( Fun )*( ( int* ) * ( int* )( &b ) + i );\r\npFun(); }\r\n}\r\n\u8f93\u51fa\u7ed3\u679c:\r\n\u6ce8\u610f:\u672c\u9898\u4e3b\u8981\u8003\u5bdf\u4e86\u9762\u8bd5\u8005\u5bf9\u865a\u51fd\u6570\u7684\u7406\u89e3\u7a0b\u5ea6\u3002\u4e00\u4e2a\u5bf9\u865a\u51fd\u6570\u4e0d\u4e86\u89e3\u7684\u4eba\u5f88\u96be\u6b63\u786e\u7684\u505a\u51fa\u672c\u9898\u3002 \u5728\u5b66\u4e60\u9762\u5411\u5bf9\u8c61\u7684\u591a\u6001\u6027\u65f6\u4e00\u5b9a\u8981\u6df1\u523b\u7406\u89e3\u865a\u51fd\u6570\u8868\u7684\u5de5\u4f5c\u539f\u7406\u3002",
      "title": "C&C++"
    },
    {
      "ID": "217",
      "typeID": "12",
      "question": "\u8c08\u8c08\u4f60\u5bf9\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u8ba4\u8bc6",
      "answer": "\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u6709\u4ee5\u4e0b\u4e24\u4e2a\u4e0d\u540c\u4e4b\u5904: (1)\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u751f\u6210\u65b0\u7684\u7c7b\u5bf9\u8c61,\u800c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4e0d\u80fd\u3002 (2)\u7531\u4e8e\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u76f4\u63a5\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u7c7b\u5bf9\u8c61,\u6240\u4ee5\u5728\u521d\u59cb\u5316\u8fd9\u4e2a\u5bf9\u8c61\u4e4b\u524d\u4e0d\u7528\u68c0\u9a8c\u6e90\u5bf9\u8c61\r\n\u662f\u5426\u548c\u65b0\u5efa\u5bf9\u8c61\u76f8\u540c\u3002\u800c\u8d4b\u503c\u8fd0\u7b97\u7b26\u5219\u9700\u8981\u8fd9\u4e2a\u64cd\u4f5c,\u53e6\u5916\u8d4b\u503c\u8fd0\u7b97\u4e2d\u5982\u679c\u539f\u6765\u7684\u5bf9\u8c61\u4e2d\u6709\u5185\u5b58\u5206\u914d\u8981 \u5148\u628a\u5185\u5b58\u91ca\u653e\u6389\r\n  \u6ce8\u610f:\u5f53\u6709\u7c7b\u4e2d\u6709\u6307\u9488\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u65f6,\u4e00\u5b9a\u8981\u91cd\u5199\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26,\u4e0d\u8981\u4f7f\u7528\u9ed8\u8ba4\r\n\u7684\u3002",
      "title": "C&C++"
    },
    {
      "ID": "216",
      "typeID": "12",
      "question": "C++\u7684\u7a7a\u7c7b\u6709\u54ea\u4e9b\u6210\u5458\u51fd\u6570",
      "answer": "\u7f3a\u7701\u6784\u9020\u51fd\u6570\u3002\r\n\uf071 \u7f3a\u7701\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\r\n\uf071 \u7f3a\u7701\u6790\u6784\u51fd\u6570\u3002\r\n\uf071 \u7f3a\u7701\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002\r\n\uf071 \u7f3a\u7701\u53d6\u5740\u8fd0\u7b97\u7b26\u3002\r\n\uf071 \u7f3a\u7701\u53d6\u5740\u8fd0\u7b97\u7b26 const\u3002\r\n\u6ce8\u610f:\u6709\u4e9b\u4e66\u4e0a\u53ea\u662f\u7b80\u5355\u7684\u4ecb\u7ecd\u4e86\u524d\u56db\u4e2a\u51fd\u6570\u3002\u6ca1\u6709\u63d0\u53ca\u540e\u9762\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002\u4f46\u540e\u9762\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e5f\u662f \u7a7a\u7c7b\u7684\u9ed8\u8ba4\u51fd\u6570\u3002\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f,\u53ea\u6709\u5f53\u5b9e\u9645\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u65f6\u5019,\u7f16\u8bd1\u5668\u624d\u4f1a\u53bb\u5b9a\u4e49\u5b83\u4eec\u3002\r\n",
      "title": "C&C++"
    },
    {
      "ID": "215",
      "typeID": "12",
      "question": "\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u5f81",
      "answer": "\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u5f81\u662f\u5c01\u88c5\u6027\u3001\u7ee7\u627f\u6027\u548c\u591a\u6001\u6027:\r\n\uf071 \u5c01\u88c5\u6027:\u5c06\u5ba2\u89c2\u4e8b\u7269\u62bd\u8c61\u6210\u7c7b,\u6bcf\u4e2a\u7c7b\u5bf9\u81ea\u8eab\u7684\u6570\u636e\u548c\u65b9\u6cd5\u5b9e\u884c protection(private, protected,\r\npublic)\u3002\r\n\uf071 \u7ee7\u627f\u6027:\u5e7f\u4e49\u7684\u7ee7\u627f\u6709\u4e09\u79cd\u5b9e\u73b0\u5f62\u5f0f:\u5b9e\u73b0\u7ee7\u627f(\u4f7f\u7528\u57fa\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u800c\u65e0\u9700\u989d\u5916\u7f16\u7801\u7684\u80fd\u529b)\u3001\u53ef\r\n\u89c6\u7ee7\u627f(\u5b50\u7a97\u4f53\u4f7f\u7528\u7236\u7a97\u4f53\u7684\u5916\u89c2\u548c\u5b9e\u73b0\u4ee3\u7801)\u3001\u63a5\u53e3\u7ee7\u627f(\u4ec5\u4f7f\u7528\u5c5e\u6027\u548c\u65b9\u6cd5,\u5b9e\u73b0\u6ede\u540e\u5230\u5b50\u7c7b\u5b9e\u73b0)\u3002\r\n\uf071 \u591a\u6001\u6027:\u662f\u5c06\u7236\u7c7b\u5bf9\u8c61\u8bbe\u7f6e\u6210\u4e3a\u548c\u4e00\u4e2a\u6216\u66f4\u591a\u5b83\u7684\u5b50\u5bf9\u8c61\u76f8\u7b49\u7684\u6280\u672f\u3002\u7528\u5b50\u7c7b\u5bf9\u8c61\u7ed9\u7236\u7c7b\u5bf9\u8c61\u8d4b\u503c\r\n\u4e4b\u540e,\u7236\u7c7b\u5bf9\u8c61\u5c31\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u8d4b\u503c\u7ed9\u5b83\u7684\u5b50\u5bf9\u8c61\u7684\u7279\u6027\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u4f5c\u3002\r\n\u8bf4\u660e:\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u4e2a\u7279\u5f81\u662f\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u6280\u672f\u7684\u5173\u952e,\u6bcf\u4e00\u4e2a\u7279\u5f81\u7684\u76f8\u5173\u6280\u672f\u90fd\u975e\u5e38\u7684\u590d\u6742,\u7a0b \u5e8f\u5458\u5e94\u8be5\u591a\u770b\u3001\u591a\u7ec3\u3002",
      "title": "C&C++"
    },
    {
      "ID": "214",
      "typeID": "12",
      "question": "\u8bbe\u7f6e\u5730\u5740\u4e3a 0x67a9 \u7684\u6574\u578b\u53d8\u91cf\u7684\u503c\u4e3a 0xaa66",
      "answer": "\r\n\u8bf4\u660e:\u8fd9\u9053\u9898\u5c31\u662f\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u5178\u578b\u4f8b\u5b50,\u65e0\u8bba\u5728\u4ec0\u4e48\u5e73\u53f0\u5730\u5740\u957f\u5ea6\u548c\u6574\u578b\u6570\u636e\u7684\u957f\u5ea6\u662f\u4e00\u6837\u7684, \u5373\u4e00\u4e2a\u6574\u578b\u6570\u636e\u53ef\u4ee5\u5f3a\u5236\u8f6c\u6362\u6210\u5730\u5740\u6307\u9488\u7c7b\u578b,\u53ea\u8981\u6709\u610f\u4e49\u5373\u53ef\u3002",
      "title": "C&C++"
    },
    {
      "ID": "213",
      "typeID": "12",
      "question": "\u7b80\u8ff0 strcpy\u3001sprintf \u4e0e memcpy \u7684\u533a\u522b",
      "answer": "\u4e09\u8005\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e0d\u540c\u4e4b\u5904:\r\n(1)\u64cd\u4f5c\u5bf9\u8c61\u4e0d\u540c,strcpy\u7684\u4e24\u4e2a\u64cd\u4f5c\u5bf9\u8c61\u5747\u4e3a\u5b57\u7b26\u4e32,sprintf\u7684\u64cd\u4f5c\u6e90\u5bf9\u8c61\u53ef\u4ee5\u662f\u591a\u79cd\u6570\u636e\u7c7b\u578b, \u76ee\u7684\u64cd\u4f5c\u5bf9\u8c61\u662f\u5b57\u7b26\u4e32,memcpy \u7684\u4e24\u4e2a\u5bf9\u8c61\u5c31\u662f\u4e24\u4e2a\u4efb\u610f\u53ef\u64cd\u4f5c\u7684\u5185\u5b58\u5730\u5740,\u5e76\u4e0d\u9650\u4e8e\u4f55\u79cd\u6570\u636e\u7c7b\u578b\u3002\r\n(2)\u6267\u884c\u6548\u7387\u4e0d\u540c,memcpy \u6700\u9ad8,strcpy \u6b21\u4e4b,sprintf \u7684\u6548\u7387\u6700\u4f4e\u3002\r\n(3)\u5b9e\u73b0\u529f\u80fd\u4e0d\u540c,strcpy \u4e3b\u8981\u5b9e\u73b0\u5b57\u7b26\u4e32\u53d8\u91cf\u95f4\u7684\u62f7\u8d1d,sprintf \u4e3b\u8981\u5b9e\u73b0\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u683c\u5f0f\u5230\u5b57 \u7b26\u4e32\u7684\u8f6c\u5316,memcpy \u4e3b\u8981\u662f\u5185\u5b58\u5757\u95f4\u7684\u62f7\u8d1d\u3002\r\n\u8bf4\u660e:strcpy\u3001sprintf \u4e0e memcpy \u90fd\u53ef\u4ee5\u5b9e\u73b0\u62f7\u8d1d\u7684\u529f\u80fd,\u4f46\u662f\u9488\u5bf9\u7684\u5bf9\u8c61\u4e0d\u540c,\u6839\u636e\u5b9e\u9645\u9700\u6c42,\u6765 \u9009\u62e9\u5408\u9002\u7684\u51fd\u6570\u5b9e\u73b0\u62f7\u8d1d\u529f\u80fd\u3002",
      "title": "C&C++"
    },
    {
      "ID": "212",
      "typeID": "12",
      "question": "\u7b80\u8ff0 C\u3001C++\u7a0b\u5e8f\u7f16\u8bd1\u7684\u5185\u5b58\u5206\u914d\u60c5\u51b5",
      "answer": "C\u3001C++\u4e2d\u5185\u5b58\u5206\u914d\u65b9\u5f0f\u53ef\u4ee5\u5206\u4e3a\u4e09\u79cd:\r\n(1)\u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d: \u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u5c31\u5df2\u7ecf\u5206\u914d\u597d,\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002\u901f\u5ea6\u5feb\u3001\u4e0d\u5bb9\u6613\u51fa\u9519,\r\n\u56e0\u4e3a\u6709\u7cfb\u7edf\u4f1a\u5584\u540e\u3002\u4f8b\u5982\u5168\u5c40\u53d8\u91cf,static \u53d8\u91cf\u7b49\u3002\r\n(2)\u5728\u6808\u4e0a\u5206\u914d: \u5728\u6267\u884c\u51fd\u6570\u65f6,\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u5728\u6808\u4e0a\u521b\u5efa,\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\r\n\u653e\u3002\u6808\u5185\u5b58\u5206\u914d\u8fd0\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u4e2d,\u6548\u7387\u5f88\u9ad8,\u4f46\u662f\u5206\u914d\u7684\u5185\u5b58\u5bb9\u91cf\u6709\u9650\u3002 (3)\u4ece\u5806\u4e0a\u5206\u914d:\r\n\u5373\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528 malloc \u6216 new \u7533\u8bf7\u4efb\u610f\u5927\u5c0f\u7684\u5185\u5b58,\u7a0b\u5e8f\u5458\u81ea\u5df1\u8d1f\u8d23\u5728\u4f55\r\n\u65f6\u7528 free \u6216 delete \u91ca\u653e\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u7531\u7a0b\u5e8f\u5458\u51b3\u5b9a,\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\u3002\u5982\u679c\u5728\u5806\u4e0a\u5206\u914d\u4e86\u7a7a\u95f4, \u5c31\u6709\u8d23\u4efb\u56de\u6536\u5b83,\u5426\u5219\u8fd0\u884c\u7684\u7a0b\u5e8f\u4f1a\u51fa\u73b0\u5185\u5b58\u6cc4\u6f0f,\u53e6\u5916\u9891\u7e41\u5730\u5206\u914d\u548c\u91ca\u653e\u4e0d\u540c\u5927\u5c0f\u7684\u5806\u7a7a\u95f4\u5c06\u4f1a\u4ea7\u751f \u5806\u5185\u788e\u5757\u3002\r\n\u4e00\u4e2a C\u3001C++\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u5185\u5b58\u5206\u4e3a 5 \u5927\u5b58\u50a8\u533a:\u5806\u533a\u3001\u6808\u533a\u3001\u5168\u5c40\u533a\u3001\u6587\u5b57\u5e38\u91cf\u533a\u3001\u7a0b\u5e8f\u4ee3\u7801\u533a\u3002\r\n",
      "title": "C&C++"
    },
    {
      "ID": "211",
      "typeID": "12",
      "question": "a \u548c&a \u6709\u4ec0\u4e48\u533a\u522b",
      "answer": "\u8bf7\u5199\u51fa\u4ee5\u4e0b\u4ee3\u7801\u7684\u6253\u5370\u7ed3\u679c,\u4e3b\u8981\u76ee\u7684\u662f\u8003\u5bdf a \u548c&a \u7684\u533a\u522b\u3002\r\n#include<stdio.h> void main( void ) {\r\nint a[5]={1,2,3,4,5}; int *ptr=(int *)(&a+1);\r\nprintf(\"%d,%d\",*(a+1),*(ptr-1));\r\nreturn; }\r\n\u8f93\u51fa\u7ed3\u679c:2,5\u3002\r\n\u6ce8\u610f:\u6570\u7ec4\u540d a \u53ef\u4ee5\u4f5c\u6570\u7ec4\u7684\u9996\u5730\u5740,\u800c&a \u662f\u6570\u7ec4\u7684\u6307\u9488\u3002\u601d\u8003,\u5c06\u539f\u5f0f\u7684 int *ptr=(int *)(&a+1); \u6539\u4e3a int *ptr=(int *)(a+1);\u65f6\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48\u5462?",
      "title": "C&C++"
    },
    {
      "ID": "210",
      "typeID": "12",
      "question": "\u4e00\u4e2a\u6307\u9488\u53ef\u4ee5\u662f volatile \u5417",
      "answer": "\u53ef\u4ee5,\u56e0\u4e3a\u6307\u9488\u548c\u666e\u901a\u53d8\u91cf\u4e00\u6837,\u6709\u65f6\u4e5f\u6709\u53d8\u5316\u7a0b\u5e8f\u7684\u4e0d\u53ef\u63a7\u6027\u3002\u5e38\u89c1\u4f8b:\u5b50\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4fee\u6539 \u4e00\u4e2a\u6307\u5411\u4e00\u4e2a buffer \u7684\u6307\u9488\u65f6,\u5fc5\u987b\u7528 volatile \u6765\u4fee\u9970\u8fd9\u4e2a\u6307\u9488\u3002\r\n\u8bf4\u660e:\u6307\u9488\u662f\u4e00\u79cd\u666e\u901a\u7684\u53d8\u91cf,\u4ece\u8bbf\u95ee\u4e0a\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u4e8e\u5176\u4ed6\u53d8\u91cf\u7684\u7279\u6027\u3002\u5176\u4fdd\u5b58\u7684\u6570\u503c\u662f\u4e2a\u6574\u578b \u6570\u636e,\u548c\u6574\u578b\u53d8\u91cf\u4e0d\u540c\u7684\u662f,\u8fd9\u4e2a\u6574\u578b\u6570\u636e\u6307\u5411\u7684\u662f\u4e00\u6bb5\u5185\u5b58\u5730\u5740\u3002\r\n",
      "title": "C&C++"
    },
    {
      "ID": "209",
      "typeID": "12",
      "question": "\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8f MIN",
      "answer": "#define min(a,b)((a)<=(b)?(a):(b))\r\n\u6ce8\u610f:\u5728\u8c03\u7528\u65f6\u4e00\u5b9a\u8981\u6ce8\u610f\u8fd9\u4e2a\u5b8f\u5b9a\u4e49\u7684\u526f\u4f5c\u7528,\u5982\u4e0b\u8c03\u7528:\r\n((++*p)<=(x)?(++*p):(x)\u3002\r\np \u6307\u9488\u5c31\u81ea\u52a0\u4e86\u4e24\u6b21,\u8fdd\u80cc\u4e86 MIN \u7684\u672c\u610f\u3002",
      "title": "C&C++"
    },
    {
      "ID": "208",
      "typeID": "12",
      "question": "C\u4e2d\u7684 malloc \u548cC++\u4e2d\u7684 new \u6709\u4ec0\u4e48\u533a\u522b",
      "answer": "malloc \u548c new \u6709\u4ee5\u4e0b\u4e0d\u540c:\r\n(1)new\u3001delete \u662f\u64cd\u4f5c\u7b26,\u53ef\u4ee5\u91cd\u8f7d,\u53ea\u80fd\u5728 C++\u4e2d\u4f7f\u7528\u3002\r\n(2)malloc\u3001free \u662f\u51fd\u6570,\u53ef\u4ee5\u8986\u76d6,C\u3001C++\u4e2d\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\r\n(3)new \u53ef\u4ee5\u8c03\u7528\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570,\u5bf9\u5e94\u7684 delete \u8c03\u7528\u76f8\u5e94\u7684\u6790\u6784\u51fd\u6570\u3002\r\n(4)malloc \u4ec5\u4ec5\u5206\u914d\u5185\u5b58,free \u4ec5\u4ec5\u56de\u6536\u5185\u5b58,\u5e76\u4e0d\u6267\u884c\u6784\u9020\u548c\u6790\u6784\u51fd\u6570\r\n(5)new\u3001delete \u8fd4\u56de\u7684\u662f\u67d0\u79cd\u6570\u636e\u7c7b\u578b\u6307\u9488,malloc\u3001free \u8fd4\u56de\u7684\u662f void \u6307\u9488\u3002\r\n\u6ce8\u610f:malloc \u7533\u8bf7\u7684\u5185\u5b58\u7a7a\u95f4\u8981\u7528 free \u91ca\u653e,\u800c new \u7533\u8bf7\u7684\u5185\u5b58\u7a7a\u95f4\u8981\u7528 delete \u91ca\u653e,\u4e0d\u8981\u6df7\u7528\u3002\r\n\u56e0\u4e3a\u4e24\u8005\u5b9e\u73b0\u7684\u673a\u7406\u4e0d\u540c\u3002",
      "title": "C&C++"
    },
    {
      "ID": "207",
      "typeID": "12",
      "question": "C \u8bed\u8a00\u7684\u5173\u952e\u5b57 static \u548c C++ \u7684\u5173\u952e\u5b57 static \u6709\u4ec0\u4e48\u533a\u522b",
      "answer": "\u5728 C \u4e2d static \u7528\u6765\u4fee\u9970\u5c40\u90e8\u9759\u6001\u53d8\u91cf\u548c\u5916\u90e8\u9759\u6001\u53d8\u91cf\u3001\u51fd\u6570\u3002\u800c C++\u4e2d\u9664\u4e86\u4e0a\u8ff0\u529f\u80fd\u5916,\u8fd8\u7528\u6765\u5b9a \u4e49\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u548c\u51fd\u6570\u3002\u5373\u9759\u6001\u6210\u5458\u548c\u9759\u6001\u6210\u5458\u51fd\u6570\u3002\r\n\u6ce8\u610f:\u7f16\u7a0b\u65f6 static \u7684\u8bb0\u5fc6\u6027,\u548c\u5168\u5c40\u6027\u7684\u7279\u70b9\u53ef\u4ee5\u8ba9\u5728\u4e0d\u540c\u65f6\u671f\u8c03\u7528\u7684\u51fd\u6570\u8fdb\u884c\u901a\u4fe1,\u4f20\u9012\u4fe1\u606f, \u800c C++\u7684\u9759\u6001\u6210\u5458\u5219\u53ef\u4ee5\u5728\u591a\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u95f4\u8fdb\u884c\u901a\u4fe1,\u4f20\u9012\u4fe1\u606f\u3002",
      "title": "C&C++"
    },
    {
      "ID": "206",
      "typeID": "12",
      "question": "sizeof \u548c strlen \u7684\u533a\u522b",
      "answer": "sizeof \u548c strlen \u6709\u4ee5\u4e0b\u533a\u522b:\r\n\uf071 sizeof \u662f\u4e00\u4e2a\u64cd\u4f5c\u7b26,strlen \u662f\u5e93\u51fd\u6570\u3002\r\n\uf071 sizeof \u7684\u53c2\u6570\u53ef\u4ee5\u662f\u6570\u636e\u7684\u7c7b\u578b,\u4e5f\u53ef\u4ee5\u662f\u53d8\u91cf,\u800c strlen \u53ea\u80fd\u4ee5\u7ed3\u5c3e\u4e3a\u2018\u0000\u2018\u7684\u5b57\u7b26\u4e32\u4f5c\u53c2\u6570\u3002\r\n\uf071 \u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u5c31\u8ba1\u7b97\u51fa\u4e86 sizeof \u7684\u7ed3\u679c\u3002\u800c strlen \u51fd\u6570\u5fc5\u987b\u5728\u8fd0\u884c\u65f6\u624d\u80fd\u8ba1\u7b97\u51fa\u6765\u3002\u5e76\u4e14 sizeof\r\n\u8ba1\u7b97\u7684\u662f\u6570\u636e\u7c7b\u578b\u5360\u5185\u5b58\u7684\u5927\u5c0f,\u800c strlen \u8ba1\u7b97\u7684\u662f\u5b57\u7b26\u4e32\u5b9e\u9645\u7684\u957f\u5ea6\u3002\r\n\uf071 \u6570\u7ec4\u505a sizeof \u7684\u53c2\u6570\u4e0d\u9000\u5316,\u4f20\u9012\u7ed9 strlen \u5c31\u9000\u5316\u4e3a\u6307\u9488\u4e86\u3002\r\n\u6ce8\u610f:\u6709\u4e9b\u662f\u64cd\u4f5c\u7b26\u770b\u8d77\u6765\u50cf\u662f\u51fd\u6570,\u800c\u6709\u4e9b\u51fd\u6570\u540d\u770b\u8d77\u6765\u53c8\u50cf\u64cd\u4f5c\u7b26,\u8fd9\u7c7b\u5bb9\u6613\u6df7\u6dc6\u7684\u540d\u79f0\u4e00\u5b9a \u8981\u52a0\u4ee5\u533a\u5206,\u5426\u5219\u9047\u5230\u6570\u7ec4\u540d\u8fd9\u7c7b\u7279\u6b8a\u6570\u636e\u7c7b\u578b\u4f5c\u53c2\u6570\u65f6\u5c31\u5f88\u5bb9\u6613\u51fa\u9519\u3002\u6700\u5bb9\u6613\u6df7\u6dc6\u4e3a\u51fd\u6570\u7684\u64cd\u4f5c\u7b26\u5c31 \u662f sizeof\u3002",
      "title": "C&C++"
    },
    {
      "ID": "205",
      "typeID": "12",
      "question": "\u5199\u51fa bool \u3001int\u3001 float\u3001\u6307\u9488\u53d8\u91cf\u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5",
      "answer": "bool \u578b\u6570\u636e:\r\nint \u578b\u6570\u636e:\r\n\u6307\u9488\u578b\u6570:\r\nfloat \u578b\u6570\u636e:\r\nif( flag )\r\n{\r\nA;\r\n} else {\r\nB; }\r\nif( 0 != flag )\r\n{\r\nA;\r\n} else {\r\nB; }\r\nif( NULL == flag ) {\r\nA; }\r\nelse\r\n{\r\nB;\r\n}\r\nif ( ( flag >= NORM ) && ( flag <= NORM ) ) {\r\nA;\r\n\ufffc\ufffc\r\n}\r\n\u6ce8\u610f:\u5e94\u7279\u522b\u6ce8\u610f\u5728 int\u3001\u6307\u9488\u578b\u53d8\u91cf\u548c\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684\u65f6\u5019,\u628a\u201c\u96f6\u503c\u201d\u653e\u5728\u5de6\u8fb9,\u8fd9\u6837\u5f53\u628a\u201c==\u201d \u8bef\u5199\u6210\u201c=\u201d\u65f6,\u7f16\u8bd1\u5668\u53ef\u4ee5\u62a5\u9519,\u5426\u5219\u8fd9\u79cd\u903b\u8f91\u9519\u8bef\u4e0d\u5bb9\u6613\u53d1\u73b0,\u5e76\u4e14\u53ef\u80fd\u5bfc\u81f4\u5f88\u4e25\u91cd\u7684\u540e\u679c\u3002",
      "title": "C&C++"
    },
    {
      "ID": "204",
      "typeID": "12",
      "question": "\u53d8\u91cf\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u6709\u4ec0\u4e48\u533a\u522b\uff1f",
      "answer": "\u4e3a\u53d8\u91cf\u5206\u914d\u5730\u5740\u548c\u5b58\u50a8\u7a7a\u95f4\u7684\u79f0\u4e3a\u5b9a\u4e49,\u4e0d\u5206\u914d\u5730\u5740\u7684\u79f0\u4e3a\u58f0\u660e\u3002\u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u5728\u591a\u4e2a\u5730\u65b9\u58f0\u660e, \u4f46\u662f\u53ea\u5728\u4e00\u4e2a\u5730\u65b9\u5b9a\u4e49\u3002\u52a0\u5165 extern \u4fee\u9970\u7684\u662f\u53d8\u91cf\u7684\u58f0\u660e,\u8bf4\u660e\u6b64\u53d8\u91cf\u5c06\u5728\u6587\u4ef6\u4ee5\u5916\u6216\u5728\u6587\u4ef6\u540e\u9762\u90e8\u5206 \u5b9a\u4e49\u3002\r\n\u8bf4\u660e:\u5f88\u591a\u65f6\u5019\u4e00\u4e2a\u53d8\u91cf,\u53ea\u662f\u58f0\u660e\u4e0d\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u76f4\u5230\u5177\u4f53\u4f7f\u7528\u65f6\u624d\u521d\u59cb\u5316,\u5206\u914d\u5185\u5b58\u7a7a\u95f4, \u5982\u5916\u90e8\u53d8\u91cf\u3002",
      "title": "C&C++"
    },
    {
      "ID": "24",
      "typeID": "12",
      "question": "\u5982\u4f55\u6253\u5370\u51fa\u5f53\u524d\u6e90\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u4ee5\u53ca\u6e90\u6587\u4ef6\u7684\u5f53\u524d\u884c\u53f7\uff1f",
      "answer": "cout << __FILE__ ;\r\ncout<<__LINE__ ;\r\n__FILE__\u548c__LINE__\u662f\u7cfb\u7edf\u9884\u5b9a\u4e49\u5b8f\uff0c\u8fd9\u79cd\u5b8f\u5e76\u4e0d\u662f\u5728\u67d0\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\uff0c\u800c\u662f\u7531\u7f16\u8bd1\u5668\u5b9a\u4e49\u7684\u3002",
      "title": "C&C++"
    },
    {
      "ID": "23",
      "typeID": "12",
      "question": "\u7c7b\u6210\u5458\u51fd\u6570\u7684\u91cd\u8f7d\u3001\u8986\u76d6\u548c\u9690\u85cf\u533a\u522b\uff1f",
      "answer": "a.\u6210\u5458\u51fd\u6570\u88ab\u91cd\u8f7d\u7684\u7279\u5f81\uff1a\r\n\uff081\uff09\u76f8\u540c\u7684\u8303\u56f4\uff08\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff09\uff1b\r\n\uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b\r\n\uff083\uff09\u53c2\u6570\u4e0d\u540c\uff1b\r\n\uff084\uff09virtual \u5173\u952e\u5b57\u53ef\u6709\u53ef\u65e0\u3002\r\nb.\u8986\u76d6\u662f\u6307\u6d3e\u751f\u7c7b\u51fd\u6570\u8986\u76d6\u57fa\u7c7b\u51fd\u6570\uff0c\u7279\u5f81\u662f\uff1a\r\n\uff081\uff09\u4e0d\u540c\u7684\u8303\u56f4\uff08\u5206\u522b\u4f4d\u4e8e\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b\uff09\uff1b\r\n\uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b\r\n\uff083\uff09\u53c2\u6570\u76f8\u540c\uff1b\r\n\uff084\uff09\u57fa\u7c7b\u51fd\u6570\u5fc5\u987b\u6709virtual \u5173\u952e\u5b57\u3002\r\nc.\u201c\u9690\u85cf\u201d\u662f\u6307\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u5c4f\u853d\u4e86\u4e0e\u5176\u540c\u540d\u7684\u57fa\u7c7b\u51fd\u6570\uff0c\u89c4\u5219\u5982\u4e0b\uff1a\r\n\uff081\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u4f46\u662f\u53c2\u6570\u4e0d\u540c\u3002\u6b64\u65f6\uff0c\u4e0d\u8bba\u6709\u65e0virtual\u5173\u952e\u5b57\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u5c06\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u91cd\u8f7d\u6df7\u6dc6\uff09\u3002\r\n\uff082\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u5e76\u4e14\u53c2\u6570\u4e5f\u76f8\u540c\uff0c\u4f46\u662f\u57fa\u7c7b\u51fd\u6570\u6ca1\u6709virtual \u5173\u952e\u5b57\u3002\u6b64\u65f6\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u8986\u76d6\u6df7\u6dc6\uff09",
      "title": "C&C++"
    },
    {
      "ID": "22",
      "typeID": "12",
      "question": "\u8bf7\u8bf4\u51faconst\u4e0e#define \u76f8\u6bd4\uff0c\u6709\u4f55\u4f18\u70b9\uff1f",
      "answer": "1\uff09 const \u5e38\u91cf\u6709\u6570\u636e\u7c7b\u578b\uff0c\u800c\u5b8f\u5e38\u91cf\u6ca1\u6709\u6570\u636e\u7c7b\u578b\u3002\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9\u524d\u8005\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002\u800c\u5bf9\u540e\u8005\u53ea\u8fdb\u884c\u5b57\u7b26\u66ff\u6362\uff0c\u6ca1\u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u5e76\u4e14\u5728\u5b57\u7b26\u66ff\u6362\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e0d\u5230\u7684\u9519\u8bef\u3002\r\n      2\uff09 \u6709\u4e9b\u96c6\u6210\u5316\u7684\u8c03\u8bd5\u5de5\u5177\u53ef\u4ee5\u5bf9const \u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\uff0c\u4f46\u662f\u4e0d\u80fd\u5bf9\u5b8f\u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\u3002",
      "title": "C&C++"
    },
    {
      "ID": "21",
      "typeID": "12",
      "question": "\u5206\u522b\u5199\u51faBOOL,int,float,\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cfa \u4e0e\u201c\u96f6\u201d\u7684\u6bd4\u8f83\u8bed\u53e5\uff1f",
      "answer": "BOOL :    if ( !a ) or if(a)\r\nint :     if ( a == 0)\r\nfloat :   const EXPRESSION EXP = 0.000001\r\n          if ( a < EXP && a >-EXP)\r\npointer : if ( a != NULL) or if(a == NULL)",
      "title": "C&C++"
    },
    {
      "ID": "20",
      "typeID": "12",
      "question": "C++\u662f\u4e0d\u662f\u7c7b\u578b\u5b89\u5168\u7684\uff1f",
      "answer": "\u4e0d\u662f\u3002\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488\u4e4b\u95f4\u53ef\u4ee5\u5f3a\u5236\u8f6c\u6362\uff08\u7528reinterpret cast)\u3002C#\u662f\u7c7b\u578b\u5b89\u5168\u7684\u3002",
      "title": "C&C++"
    },
    {
      "ID": "19",
      "typeID": "12",
      "question": "New delete \u4e0emalloc free \u7684\u8054\u7cfb\u4e0e\u533a\u522b?",
      "answer": "\u90fd\u662f\u5728\u5806(heap)\u4e0a\u8fdb\u884c\u52a8\u6001\u7684\u5185\u5b58\u64cd\u4f5c\u3002\u7528malloc\u51fd\u6570\u9700\u8981\u6307\u5b9a\u5185\u5b58\u5206\u914d\u7684\u5b57\u8282\u6570\u5e76\u4e14\u4e0d\u80fd\u521d\u59cb\u5316\u5bf9\u8c61\uff0cnew \u4f1a\u81ea\u52a8\u8c03\u7528\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u3002delete \u4f1a\u8c03\u7528\u5bf9\u8c61\u7684destructor\uff0c\u800cfree \u4e0d\u4f1a\u8c03\u7528\u5bf9\u8c61\u7684destructor.",
      "title": "C&C++"
    },
    {
      "ID": "18",
      "typeID": "12",
      "question": " Ado\u4e0eAdo.net\u7684\u76f8\u540c\u4e0e\u4e0d\u540c\uff1f",
      "answer": "\u9664\u4e86\u201c\u80fd\u591f\u8ba9\u5e94\u7528\u7a0b\u5e8f\u5904\u7406\u5b58\u50a8\u4e8eDBMS \u4e2d\u7684\u6570\u636e\u201c\u8fd9\u4e00\u57fa\u672c\u76f8\u4f3c\u70b9\u5916\uff0c\u4e24\u8005\u6ca1\u6709\u592a\u591a\u5171\u540c\u4e4b\u5904\u3002\u4f46\u662fAdo\u4f7f\u7528OLE DB \u63a5\u53e3\u5e76\u57fa\u4e8e\u5fae\u8f6f\u7684COM \u6280\u672f\uff0c\u800cADO.NET \u62e5\u6709\u81ea\u5df1\u7684ADO.NET \u63a5\u53e3\u5e76\u4e14\u57fa\u4e8e\u5fae\u8f6f\u7684.NET \u4f53\u7cfb\u67b6\u6784\u3002\u4f17\u6240\u5468\u77e5.NET \u4f53\u7cfb\u4e0d\u540c\u4e8eCOM \u4f53\u7cfb\uff0cADO.NET \u63a5\u53e3\u4e5f\u5c31\u5b8c\u5168\u4e0d\u540c\u4e8eADO\u548cOLE DB \u63a5\u53e3\uff0c\u8fd9\u4e5f\u5c31\u662f\u8bf4ADO.NET \u548cADO\u662f\u4e24\u79cd\u6570\u636e\u8bbf\u95ee\u65b9\u5f0f\u3002ADO.net \u63d0\u4f9b\u5bf9XML \u7684\u652f\u6301\u3002",
      "title": "C&C++"
    },
    {
      "ID": "17",
      "typeID": "12",
      "question": "\u591a\u6001\u7684\u4f5c\u7528\uff1f",
      "answer": "\u4e3b\u8981\u662f\u4e24\u4e2a\uff1a1. \u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u4f7f\u5f97\u4ee3\u7801\u80fd\u591f\u6a21\u5757\u5316\uff1b\u6269\u5c55\u4ee3\u7801\u6a21\u5757\uff0c\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\uff1b2. \u63a5\u53e3\u91cd\u7528\uff1a\u4e3a\u4e86\u7c7b\u5728\u7ee7\u627f\u548c\u6d3e\u751f\u7684\u65f6\u5019\uff0c\u4fdd\u8bc1\u4f7f\u7528\u5bb6\u65cf\u4e2d\u4efb\u4e00\u7c7b\u7684\u5b9e\u4f8b\u7684\u67d0\u4e00\u5c5e\u6027\u65f6\u7684\u6b63\u786e\u8c03\u7528\u3002",
      "title": "C&C++"
    },
    {
      "ID": "16",
      "typeID": "12",
      "question": "\u5df2\u77e5strcpy\u7684\u51fd\u6570\u539f\u578b\uff1achar *strcpy(char *strDest, const char *strSrc)\u5176\u4e2dstrDest \u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc \u662f\u6e90\u5b57\u7b26\u4e32\u3002\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcpy\u3002",
      "answer": "char *strcpy(char *strDest, const char *strSrc)\r\n{\r\nif ( strDest == NULL || strSrc == NULL)\r\nreturn NULL ;\r\nif ( strDest == strSrc)\r\nreturn strDest ;\r\nchar *tempptr = strDest ;\r\nwhile( (*strDest++ = *strSrc++) != \u2018/0\u2019)\r\n;\r\nreturn tempptr ;\r\n}",
      "title": "C&C++"
    },
    {
      "ID": "15",
      "typeID": "12",
      "question": "\u7ed3\u6784\u4e0e\u8054\u5408\u6709\u548c\u533a\u522b\uff1f",
      "answer": "1. \u7ed3\u6784\u548c\u8054\u5408\u90fd\u662f\u7531\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6210\u5458\u7ec4\u6210, \u4f46\u5728\u4efb\u4f55\u540c\u4e00\u65f6\u523b, \u8054\u5408\u4e2d\u53ea\u5b58\u653e\u4e86\u4e00\u4e2a\u88ab\u9009\u4e2d\u7684\u6210\u5458\uff08\u6240\u6709\u6210\u5458\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09, \u800c\u7ed3\u6784\u7684\u6240\u6709\u6210\u5458\u90fd\u5b58\u5728\uff08\u4e0d\u540c\u6210\u5458\u7684\u5b58\u653e\u5730\u5740\u4e0d\u540c\uff09\u3002 \r\n 2. \u5bf9\u4e8e\u8054\u5408\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c, \u5c06\u4f1a\u5bf9\u5176\u5b83\u6210\u5458\u91cd\u5199,  \u539f\u6765\u6210\u5458\u7684\u503c\u5c31\u4e0d\u5b58\u5728\u4e86, \u800c\u5bf9\u4e8e\u7ed3\u6784\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\u3002",
      "title": "C&C++"
    },
    {
      "ID": "14",
      "typeID": "12",
      "question": " \u201c\u5f15\u7528\u201d\u4e0e\u6307\u9488\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f",
      "answer": "\u6307\u9488\u901a\u8fc7\u67d0\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0c\u5bf9\u5b83\u6240\u6307\u5411\u7684\u53d8\u91cf\u95f4\u63a5\u64cd\u4f5c\u3002\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u6307\u9488\uff0c\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u5dee\uff1b\u800c\u5f15\u7528\u672c\u8eab\u5c31\u662f\u76ee\u6807\u53d8\u91cf\u7684\u522b\u540d\uff0c\u5bf9\u5f15\u7528\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u76ee\u6807\u53d8\u91cf\u7684\u64cd\u4f5c\u3002\u6b64\u5916\uff0c\u5c31\u662f\u4e0a\u9762\u63d0\u5230\u7684\u5bf9\u51fd\u6570\u4f20ref\u548cpointer\u7684\u533a\u522b\u3002",
      "title": "C&C++"
    }
  ]
}