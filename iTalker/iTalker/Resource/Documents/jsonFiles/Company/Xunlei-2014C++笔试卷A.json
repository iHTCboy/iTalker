{"success":1,"total":11,"result":[
  {
    "ID" : "55fa6a71e4b043d0caf2725f",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "++（a-b--）",
    "optionC" : "c+++c+++c++",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "（x+y）++",
    "type" : "1",
    "optionA" : "9++",
    "knowledge" : "C\/C++",
    "question" : "下列表达式正确的是："
  },
  {
    "ID" : "55fa6a71e4b043d0caf27260",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "48",
    "optionC" : "28",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "12",
    "type" : "1",
    "optionA" : "4",
    "knowledge" : "C\/C++",
    "question" : "在int b[ ][3] = {{1},{3,2},{4,5,6},{0}};中，sizeof(b) = ？"
  },
  {
    "ID" : "55fa6a71e4b043d0caf27261",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "12",
    "optionC" : "15",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "17",
    "type" : "1",
    "optionA" : "19",
    "knowledge" : "C\/C++",
    "question" : "以下程序的输出结果是：\n#define M(x,y,z) x*y+z\nmain()\n{\n    int a=1, b=2, c=3;\n    printf(\"%d\/n\",M(a+b,b+c,c+a));\n}"
  },
  {
    "ID" : "55fa6a71e4b043d0caf27262",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "8,10,10",
    "optionC" : "8,8,10",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "10,10,10",
    "type" : "1",
    "optionA" : "8,16,10",
    "knowledge" : "C\/C++",
    "question" : "若有以下定义和语句：int u=010, v= 0x10, w=10;\nprintf(“%d，%d,%d\/n”,u,v,w);\n则输出结果是："
  },
  {
    "ID" : "55fa6a71e4b043d0caf27263",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "编译错误",
    "optionC" : "4",
    "optionAnswer" : "B",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "3",
    "type" : "1",
    "optionA" : "2",
    "knowledge" : "C\/C++",
    "question" : "下面程序段的输出结果是：int a=5, b=4, c=3, d=2;\nif(a>b>c)\n       printf(“%d\/n”,d);\nelse if((c-1>=d)==1)\n       printf(“%d\/n”, d+1);\nelse\n       printf(“%d\/n”, d+1);"
  },
  {
    "ID" : "55fa6a71e4b043d0caf27264",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "6",
    "optionC" : "5",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "4",
    "type" : "1",
    "optionA" : "3",
    "knowledge" : "C\/C++",
    "question" : "有如下程序段，请问k的值是enum {\n    a, b=5, c, d=4, e\n} k;\nk =c;"
  },
  {
    "ID" : "55fa6a71e4b043d0caf27265",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "程序崩溃",
    "optionC" : "无限循环",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "22",
    "type" : "1",
    "optionA" : "21",
    "knowledge" : "C\/C++",
    "question" : "有如下程序段：int i, n = 0;\nfloat x = 1, y1 = 2.1 \/ 1.9, y2 = 1.9 \/ 2.1;\nfor ( i = 1; i < 22; i++ )\n x = x * y1;\nwhile ( x != 1.0 )\n{\n x = x * y2; n++;\n}\nprintf( “ %d \/ n ”, n );请问执行结果是："
  },
  {
    "ID" : "55fa6a71e4b043d0caf27266",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "以上三个都是",
    "optionC" : "层次模型",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "网状模型",
    "type" : "1",
    "optionA" : "关系模型",
    "knowledge" : "软件工程",
    "question" : "用树形结构表示实体之间联系的模型是"
  },
  {
    "ID" : "55fa6a71e4b043d0caf27267",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "ch = *f1(s);要改成（*f1）(s)才正确",
    "optionC" : "f1(&ch)",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "f1（*s）;",
    "type" : "1",
    "optionA" : "*f1(&a);",
    "knowledge" : "C\/C++",
    "question" : "有如下程序段：char fun(char *);\nmain()\n{\n       char *s = “one”, a[5] = {0}, (*f1)(char *) = fun, ch;\n}\n则对函数fun的调用语句正确的是"
  },
  {
    "ID" : "55fa6a71e4b043d0caf27268",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "以上都不对",
    "optionC" : "23",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "46",
    "type" : "1",
    "optionA" : "0",
    "knowledge" : "C\/C++",
    "question" : "有如下程序段：?int c = 23;\nprintf(“%d\\n”, c&c);\n请问执行结果是："
  },
  {
    "ID" : "55fa6a71e4b043d0caf27269",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "拷贝初始化构造函数的作用是将一个已知对象的数据成员值拷贝给正在创建的另一个同类的对象",
    "optionC" : "每个类都必须有一个拷贝初始化构造函数，如果类中没有说明拷贝构造函数，则编译器系统会自动生成一个缺省拷贝构造函数，作为该类的保护成员",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "该函数只有一个参数，必须是对某个对象的引用",
    "type" : "1",
    "optionA" : "该函数名同类名，也是一种构造函数，该函数返回自身引用",
    "knowledge" : "C\/C++",
    "question" : "拷贝构造函数的特点是（）"
  }
]}