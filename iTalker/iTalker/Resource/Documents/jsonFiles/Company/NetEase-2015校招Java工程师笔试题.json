{"success":1,"total":2100,"result":[
  {
    "ID" : "55fa6a43e4b043d0caf2721d",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "B+Tree\/Hash_Map",
    "optionC" : "STL_Map\/Hash_Map",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "STL_Map\/B+Tree",
    "type" : "1",
    "optionA" : "Hash_Map\/B+Tree",
    "knowledge" : "哈希",
    "question" : "有B+Tree\/Hash_Map\/STL Map三种数据结构。对于内存中数据，查找性能较好的数据结构是（），对于磁盘中数据，查找性能较好的数据结构是（）"
  },
  {
    "ID" : "55fa6a43e4b043d0caf2721e",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "SYN，SYN，ACK",
    "optionC" : "SYN+ACK，ACK，SYN",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "SYN，ACK，SYN，ACK",
    "type" : "1",
    "optionA" : "SYN，SYN+ACK，ACK",
    "knowledge" : "网络基础",
    "question" : "tcp三次握手创建连接，双方交互的报文中SYN和ACK的序列是什么样的（）"
  },
  {
    "ID" : "55fa6a43e4b043d0caf2721f",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "堆，堆",
    "optionC" : "栈， 栈",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "栈，堆",
    "type" : "1",
    "optionA" : "堆，栈",
    "knowledge" : "C\/C++",
    "question" : "函数参数使用的空间是在（）中申请的，malloc或new是在（）中申请空间的？"
  },
  {
    "ID" : "55fa6a43e4b043d0caf27220",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "链接",
    "optionC" : "汇编",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "编译",
    "type" : "1",
    "optionA" : "预编译",
    "knowledge" : "编译和体系结构",
    "question" : "由源代码生成可执行文件需要经过预编译，编译，汇编，链接等阶段，错误：unresolved external symbol BeginScene属于()阶段错误"
  },
  {
    "ID" : "55fa6a43e4b043d0caf27221",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "都属于",
    "optionC" : "内存共享",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "消息队列",
    "type" : "1",
    "optionA" : "管道",
    "knowledge" : "操作系统",
    "question" : "下面属于进程间通信的有？"
  },
  {
    "ID" : "55fa6a43e4b043d0caf27222",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "运输层，常规数据递送－面向连接或无连接",
    "optionC" : "网络层，本层通过寻址来建立两个节点之间的连接，为源端的运输层送来的分组，选择合适的路由和交换节点",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "会话层，在两个节点之间建立端连接。",
    "type" : "1",
    "optionA" : "物理层，在此层将数据分帧，并处理流控制",
    "knowledge" : "网络基础",
    "question" : "下面关于ISO网络参考模型分层及每一层功能描述错误的有？"
  },
  {
    "ID" : "55fa6a43e4b043d0caf27223",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "describe user;",
    "optionC" : "show columns for user;",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "show create table user;",
    "type" : "1",
    "optionA" : "desc user;",
    "knowledge" : "数据库",
    "question" : "用命令（）可以查看mysql数据库中user表的表结构？以下不正确的是？"
  },
  {
    "ID" : "55fa6a43e4b043d0caf2722a",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "使用Spring的IoC容器时只需指出组件需要的对象，在运行时Spring的IoC容器会根据XML配置数据提供给它",
    "optionC" : "IoC将控制创建的职责搬进了框架中，从应用代码脱离开来",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "所谓“控制反转”是指控制权由应用代码转到外部容器，即控制权的转移",
    "type" : "1",
    "optionA" : "IoC就是指程序之间的关系由程序代码直接操控",
    "knowledge" : "Spring",
    "question" : "下列关于Spring特性中IoC描述错误的是："
  },
  {
    "ID" : "55fa6a43e4b043d0caf2722b",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "RuntimeException体系包括错误的类型转换、数组越界访问和试图访问空指针等等，必须被 try{}catch语句块所捕获",
    "optionC" : "Error类体系描述了Java运行系统中的内部错误以及资源耗尽的情形，Error不需要捕捉",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "非RuntimeException一般是外部错误，其必须被 try{}catch语句块所捕获",
    "type" : "1",
    "optionA" : "异常的继承结构：基类为Throwable，Error和Exception继承Throwable，RuntimeException和IOException等继承Exception",
    "knowledge" : "Java",
    "question" : "下面有关JAVA异常类的描述，说法错误的是？"
  },
  {
    "ID" : "55fa6a43e4b043d0caf2722c",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "I’m A class\nstatic A\nI’m B class\nstatic B",
    "optionC" : "static A\nstatic B\nI’m A class\nI’m B class",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "I’m A class\nI’m B class\nstatic A\nstatic B",
    "type" : "1",
    "optionA" : "static A\nI’m A class\nstatic B\nI’m B class",
    "knowledge" : "Java",
    "question" : "检查程序，是否存在问题，如果存在指出问题所在，如果不存在，说明输出结果。\npublic class HelloB extends HelloA \n{\n public HelloB()\n {\n }\n {\n     System.out.println(\"I’m B class\");\n }\n static\n {\n     System.out.println(\"static B\");\n }\n public static void main(String[] args)\n {\n     new HelloB();\n }\n}\nclass HelloA\n{\n public HelloA()\n {\n }\n {\n     System.out.println(\"I’m A class\");\n }\n static\n {\n     System.out.println(\"static A\");\n }\n}\n"
  },
  {
    "ID" : "55fa6a43e4b043d0caf2722d",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "3",
    "optionC" : "2",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "1",
    "type" : "1",
    "optionA" : "0",
    "knowledge" : "Java",
    "question" : "检查程序，是否存在问题，如果存在指出问题所在，如果不存在，说明输出结果。\npackage algorithms.com.guan.javajicu; \npublic class Inc { \n    public static void main(String[] args) { \n       Inc inc = new Inc(); \n       int i = 0; \n       inc.fermin(i); \n       i= i ++; \n       System.out.println(i);\n    \n    } \n    void fermin(int i){ \n       i++; \n    } \n}"
  },
  {
    "ID" : "55fa6a43e4b043d0caf2722e",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "goodandgbc",
    "optionC" : "goodandabc",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "test okandgbc",
    "type" : "1",
    "optionA" : "test okandabc",
    "knowledge" : "Java",
    "question" : "检查程序，是否存在问题，如果存在指出问题所在，如果不存在，说明输出结果。\npackage algorithms.com.guan.javajicu; \npublic class Example { \n  String str = new String(\"good\"); \n  char[] ch = {'a','b','c'}; \n  public static void main(String[] args) { \n     Example ex = new Example(); \n     ex.change(ex.str, ex.ch); \n     System.out.print(ex.str +\"and\"); \n     System.out.print(ex.ch);  \n  } \n    \n  public void change(String str, char ch[]){ \n     str= \"test ok\"; \n     ch[0]= 'g'; \n  } \n}"
  },
  {
    "ID" : "55fa6a43e4b043d0caf2722f",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "以上方法都不能单独使用",
    "optionC" : "使用隐藏的表单域",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "使用URL重写",
    "type" : "1",
    "optionA" : "使用Cookie",
    "knowledge" : " 网络基础",
    "question" : "在服务器的网络编程中，解决会话跟踪的方法不包括?"
  },
  {
    "answer" : "  ",
    "ID" : "55fa6a43e4b043d0caf27230",
    "typeID" : "55dd5e2360b258078b9e4458",
    "type" : "2",
    "knowledge" : "",
    "question" : "任意2n个整数，从其中选出n个整数，使得选出的n个整数和同剩下的n个整数之和的差最小。"
  },
  {
    "answer" : "  ",
    "ID" : "55fa6a43e4b043d0caf27231",
    "typeID" : "55dd5e2360b258078b9e4458",
    "type" : "2",
    "knowledge" : "",
    "question" : "有两个有序的集合，集合的每个元素都是一段范围，求其交集，例如集合{[4,8],[9,13]}和{[6,12]}的交集为{[6,8],[9,12]}"
  },
  {
    "answer" : "  ",
    "ID" : "55fa6a43e4b043d0caf27232",
    "typeID" : "55dd5e2360b258078b9e4458",
    "type" : "2",
    "knowledge" : "",
    "question" : " 一个文件中有10000个数，用Java实现一个多线程程序将这个10000个数输出到5个不用文件中（不要求输出到每个文件中的数量相同）。要求启动10个线程，两两一组，分为5组。每组两个线程分别将文件中的奇数和偶数输出到该组对应的一个文件中，需要偶数线程每打印10个偶数以后，就将奇数线程打印10个奇数，如此交替进行。同时需要记录输出进度，每完成1000个数就在控制台中打印当前完成数量，并在所有线程结束后，在控制台打印”Done”."
  },
  {
    "answer" : "  ",
    "ID" : "55fa6a43e4b043d0caf27233",
    "typeID" : "55dd5e2360b258078b9e4458",
    "type" : "2",
    "knowledge" : "",
    "question" : "检查程序，是否存在问题，如果存在指出问题所在，如果不存在，说明输出结果。\npackage algorithms.com.guan.javajicu;\npublic class Example {\n    String str = new String(“good”);\n    char[] ch = {‘a’, ’b’, ’c’};\n    public static void main(String[] args) {\n        Exampleex = new Example();\n        ex.change(ex.str, ex.ch);\n        System.out.print(ex.str + ” and ”);\n        System.out.print(ex.ch);\n }\n public void change(Stringstr, char ch[]) {\n        str = “test ok”;\n        ch[0] = 'g';\n }\n}"
  }
]}
