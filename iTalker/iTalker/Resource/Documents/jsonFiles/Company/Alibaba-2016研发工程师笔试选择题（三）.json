{"success":1,"total":2100,"result":[
  {
    "ID" : "55fa696ee4b043d0caf26fc5",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "pthread_rwlock",
    "optionC" : "信号量",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "pthread_mutex",
    "type" : "1",
    "optionA" : "pthread_spin_lock",
    "knowledge" : "操作系统",
    "question" : "下面线程间的通讯机制中，关键路径上不会产生系统调用从而减少用户态到内核态的上下文切换的是____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fc6",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "c e",
    "optionC" : "b c d e",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "b c e",
    "type" : "1",
    "optionA" : "b c",
    "knowledge" : "C\/C++",
    "question" : "有一个类B继承自类A，他们数据成员如下：\n\nclass A {\n...\nprivate：\n   int &a;\n};\nclass B : public A {\n...\nprivate:\n     int a;\npublic:\n     const int b;\n     A c;\n     static const char* d;\n     A* e;\n};\n则构造函数中，成员变量一定要通过初始化列表来初始化的是____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fc7",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "12",
    "optionC" : "15",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "17",
    "type" : "1",
    "optionA" : "18",
    "knowledge" : "智力题",
    "question" : "一人以d元在淘宝买入n套《三体》，d为正整数，其中两套他以成本一半送给朋友，余下的每套高于原价8元卖出，加上送给朋友的两套，如果全部利润是72元，那么n最小可能是____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fc8",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "P1(wB->rA), P2(wA->rB)",
    "optionC" : "P1(wB->rA), P2(rA->rB)",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "P1(rA->rB), P2(wA->rB)",
    "type" : "1",
    "optionA" : "P1(rA->rB), P2(rA->wB)",
    "knowledge" : "操作系统",
    "question" : "进程P1和P2，资源A和B，进程对资源的操作定义如下：读取资源A：rA读取资源B：rB写入资源A：wA写入资源B：wB同时规定，进程读取某一资源前，必须加上共享锁，写入某一资源前必须加上排他锁；资源在被进程加共享锁时，可以被其他进程继续加共享锁，但不能加排他锁；资源在被进程加排他锁时，其他进程无法加锁。进程完成全部操作后释放锁。进程P1和进程P2并发执行，如下哪种运行序列可能会出现死锁_____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fc9",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "1-2-3-4-5-6-7",
    "optionC" : "1-5-7-2-4-6-3",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "6-2-3-5-4-1-7",
    "type" : "1",
    "optionA" : "2-6-3-7-5-1-4",
    "knowledge" : "排序",
    "question" : "假设基准值为数组首元素的快速排序，要使得数组满足非降序排列，下列数据分布导致快排算法效率最低的是____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fca",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "0.22",
    "optionC" : "0.2",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "0.15",
    "type" : "1",
    "optionA" : "0.1",
    "knowledge" : "编程基础",
    "question" : "二进制值0.00110011001100110011001100110011 转换成10进制后最接近____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fcb",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "1-5-3-2-4-6-7",
    "optionC" : "6-5-3-2-4-1-7",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "6-2-3-5-4-1-7",
    "type" : "1",
    "optionA" : "2-6-3-5-4-1-7",
    "knowledge" : "排序",
    "question" : "将整数数组（7-6-3-5-4-1-2）按照堆排序的方式原地进行升序排列，请问在第一轮排序结束之后，数组的顺序是_____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fcc",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "2 0",
    "optionC" : "2 1 ",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "1 2",
    "type" : "1",
    "optionA" : "0 1",
    "knowledge" : "C\/C++",
    "question" : "函数func的定义如下：\nvoid func(const int& v1, cont int& v2)\n{\n    std::cout << v1 << ' ';\n    std::cout << v2 << ' ';\n}\n则以下代码输出结果为____。\n\nint main (int argc, char* argv[])\n{\n    int i=0;\n    func(++i,i++);\n    return 0;\n}"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fcd",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "1、2和3",
    "optionC" : "1和2",
    "optionAnswer" : "B",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "1和3",
    "type" : "1",
    "optionA" : "只有3",
    "knowledge" : "树",
    "question" : "将森林转换为对应的二叉树，若在二叉树结点中，结点m是结点n的双亲结点的双亲结点，则在原来的森林中，m和n可能具有的关系是____。\n1.父子关系 \n2.m的双亲结点与n的双亲结点是兄弟关系 \n3.兄弟关系"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fce",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "150",
    "optionC" : "101",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "100",
    "type" : "1",
    "optionA" : "99",
    "knowledge" : "智力题",
    "question" : "在1,2,3,......,999,1000中，有____个数各位数之和模10等于0。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fcf",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "5",
    "optionC" : "4",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "3",
    "type" : "1",
    "optionA" : "2",
    "knowledge" : "图",
    "question" : "两人在一个n个点的无向完全图上进行游戏，每次可以选择当前图中两个端点度数奇偶性相同的边删除，谁不能操作谁输，则在n=1,2,3,......,9,10中，有____个图先手有必胜策略。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fd0",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "B->0",
    "optionC" : "A->1",
    "optionAnswer" : "B",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "B->1",
    "type" : "1",
    "optionA" : "A->0",
    "knowledge" : "C\/C++",
    "question" : "以下程序输出结果是____。\n\nclass A\n{\npublic:\n    virtual void func(int val = 1)\n    { std::cout<<\"A->\"<<val <<std::endl;}\n    virtual void test()\n    { func();}\n};\nclass B : public A\n{\npublic:\n    void func(int val=0)\n{std::cout<<\"B->\"<<val <<std::endl;}\n};\nint main(int argc ,char* argv[])\n{\n    B*p = new B;\n    p->test();\nreturn 0;\n}"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fd1",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "同一个进程的线程之间共享内存，包括堆和栈",
    "optionC" : "不同进程间不会共享逻辑地址空间",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "线程在资源消耗上通常要比进程轻量",
    "type" : "1",
    "optionA" : "进程的隔离性要好于线程",
    "knowledge" : "操作系统",
    "question" : "关于线程和进程，不正确的描述是____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fd2",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "2.40%",
    "optionC" : "2.00%",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "1.80%",
    "type" : "1",
    "optionA" : "1.50%",
    "knowledge" : "智力题",
    "question" : "如果我国希望在３０年后实现经济翻翻，并且假设我国经济增长速度每年都保持相同，那么至少需要每年保持____增长速度才可实现目标。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fd3",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "5",
    "optionC" : "4",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "3",
    "type" : "1",
    "optionA" : "1",
    "knowledge" : "C\/C++ 查找",
    "question" : "下面是折半查找的实现，data是按升序排列的数据，x是查找下标，y是查找的上标，\nv是查找的数值，返回v在data的索引，若没找到返回-1。代码不正确是____。\n\npublic int bsearch(int[] data, int x, int y, int v) {\n    int m;\n    while(x<y){ \/\/1\n        m = x + (y-x)\/2; \/\/2\n        if(data[m] == v) return m; \/\/3\n        else if(data[m] > v) y = m; \/\/4\n        else x = m; \/\/5\n    }\n    return -1; \/\/6\n}"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fd4",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "14",
    "optionC" : "12",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "11",
    "type" : "1",
    "optionA" : "15",
    "knowledge" : "编程基础",
    "question" : "如果下列的公式成立：84*148=B6A8。则采用的是____进制表示的"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fd5",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "4.5",
    "optionC" : "5.5",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "6",
    "type" : "1",
    "optionA" : "5",
    "knowledge" : "操作系统",
    "question" : "有一个程序中有A,B,C三个线程同时对一个文件进行读写操作，其中的A,B是写进程只负责往里面写数据，C是读线程，同时把读取的数据从文件中删除，A线程单独写满文件需要10个小时，B单独写程序需要6小时，C线程需要15小时才能读取完整个文件，不考虑三个线程之间的相互影响的情况下现在____小时才能写满文件"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fd6",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "甲-前端&算法；乙-测试&运维；丙-后端&数据",
    "optionC" : "甲-算法&数据；乙-测试&前端；丙-后端&运维",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "甲-后端&算法；乙-前端&运维；丙-测试&数据",
    "type" : "1",
    "optionA" : "甲-前端&测试；乙-算法&运维；丙-后端&数据",
    "knowledge" : "智力题",
    "question" : "有甲、乙、丙三位员工分别负责前端、后端、数据、算法、测试、运维。每人负责两项。已知：数据和前端住在一起 甲是三人中最年轻的 前端和丙有空一起下棋 后端比算法年长，又比乙年轻 三人中最年长的住得最远 那么，三人分别负责____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fd7",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : " 1\/4",
    "optionC" : " 3\/16",
    "optionAnswer" : "B",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : " 1\/8",
    "type" : "1",
    "optionA" : " 1\/16",
    "knowledge" : "概率统计",
    "question" : "商品推荐场景中过于聚焦的商品推荐往往会损害用户的购物体验，在有些场景中，系统会通过一定程度的随机性给用户带来发现的惊喜感。假设在某推荐场景中，经计算A和B两个商品与当前访问用户的匹配度分别为0.8和0.2分，系统将随机为A生成一个均匀分布于0到0.8的最终得分，为B生成一个均匀分布于0到0.2的最终得分，那么最终B的分数大于A的分数的概率为_____。\n"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fd8",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "160",
    "optionC" : "156",
    "optionAnswer" : "B",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "152",
    "type" : "1",
    "optionA" : "144",
    "knowledge" : "组合数学",
    "question" : "从1,2,3,4...8,9里任意选择一部分数(至少1个),能得到多少种不同的乘积"
  }
]}