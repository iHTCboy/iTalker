{"success": 1, "total": 2100, "result": [{"ID": "55fa6a5de4b043d0caf2724c", "typeID": "55dd5e2360b258078b9e4458", "optionD": "\u4ee5\u4e0a\u90fd\u4e0d\u5bf9", "optionC": "\u4ee5\u4e0a\u90fd\u5bf9", "optionAnswer": "B", "answer": "  ", "optionB": "char *p=\"hello\"; return p == \"hello\";", "type": "1", "optionA": "main \u51fd\u6570\u6b63\u5e38\u7ed3\u675f\u7684\u8fd4\u56de\u503c", "knowledge": "C/C++", "question": "\u5728 C \u8bed\u8a00\u4e2d\u4e0b\u9762\u90a3\u4e2a\u8bed\u53e5\u7684\u7ed3\u679c\u662f 1 \uff1f", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf2724d", "typeID": "55dd5e2360b258078b9e4458", "optionD": "F-G=1", "optionC": "X \u662f\u8d1f\u6570", "optionAnswer": "C", "answer": "  ", "optionB": "X \u662f\u5947\u6570", "type": "1", "optionA": "\u7f16\u8bd1\u9519\u8bef", "knowledge": "\u7f16\u7a0b\u57fa\u7840", "question": "F\u3001G\u3001X \u90fd\u662f32\u4f4d\u6709\u7b26\u53f7\u6574\u6570\uff0cF=X/2\uff0cG=X>>1\uff0c\u5982\u679c F != G\uff0c\u90a3\u4e48\uff1a", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf2724e", "typeID": "55dd5e2360b258078b9e4458", "optionD": "60", "optionC": "40", "optionAnswer": "D", "answer": "  ", "optionB": "20", "type": "1", "optionA": "18", "knowledge": "\u667a\u529b\u9898", "question": "3*4 \u7684\u65b9\u683c\uff0c\u6709\u591a\u5c11\u4e2a\u957f\u65b9\u5f62\uff1f", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf2724f", "typeID": "55dd5e2360b258078b9e4458", "optionD": "5511", "optionC": "5510", "optionAnswer": "A", "answer": "  ", "optionB": "5053", "type": "1", "optionA": "5051", "knowledge": "\u667a\u529b\u9898 \u56fe", "question": "\u4e00\u4e2a\u76f4\u7ebf\u5c06\u4e00\u4e2a\u5e73\u9762\u5206\u6210 2 \u90e8\u5206\uff0c\u4e24\u6761\u76f4\u7ebf\u5206\u6210 4 \u90e8\u5206\uff0c\u5982\u679c\u76f4\u7ebf\u4e0d\u5e73\u884c\uff0c\u591a\u6761\u76f4\u7ebf\u4e0d\u5171\u4e00\u70b9\uff0c\u95ee 100 \u6761\u76f4\u7ebf\u5c06\u5e73\u9762\u5206\u6210\u51e0\u90e8\u5206\uff1f", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf27250", "typeID": "55dd5e2360b258078b9e4458", "optionD": "n!", "optionC": "2^n-1", "optionAnswer": "B", "answer": "  ", "optionB": "n(n+1)/2", "type": "1", "optionA": "n+1", "knowledge": "\u667a\u529b\u9898 \u5b57\u7b26\u4e32", "question": " n \u4e2a\u5b57\u7b26\u6784\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u5047\u8bbe\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4e0d\u4e00\u6837\uff0c\u95ee\u6709\u591a\u5c11\u4e2a\u5b50\u4e32\uff1f", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf27251", "typeID": "55dd5e2360b258078b9e4458", "optionD": "4", "optionC": "3", "optionAnswer": "B", "answer": "  ", "optionB": "2", "type": "1", "optionA": "1", "knowledge": "\u6570\u636e\u5e93", "question": "\u6839\u636e\u4e0b\u9762\u7ed9\u7684\u8868\u548c SQL \u8bed\u53e5\uff0c\u95ee\u6267\u884c SQL \u8bed\u53e5\u66f4\u65b0\u591a\u5c11\u6761\u6570\u636e\uff1fsql \u8bed\u53e5\uff1a \nupdate Books set NumberOfCopies = NumberOfCopies + 1 where AuthorID in select AuthorID from Books group by AuthorID having sum(NumberOfCopies) <= 8 \n\u8868\u4e2d\u6570\u636e\uff1a \nBookID Tittle Category NumberOfCopies AuthorID \n1 SQL Server 2008 MS 3 1 \n2 SharePoint 2007 MS 2 2 \n3 SharePoint 2010 MS 4 2 \n5 DB2 IBM 10 3 \n7 SQL Server 2012 MS 6 1", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf27252", "typeID": "55dd5e2360b258078b9e4458", "optionD": "39", "optionC": "32", "optionAnswer": "C", "answer": "  ", "optionB": "31", "type": "1", "optionA": "16", "knowledge": "\u67e5\u627e", "question": "Suppose that a Selection Sort of 80 items has completed 32 iterations of the main loop. How many items are now guaranteed to be in their final spot (never to be moved again)?", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf27253", "typeID": "55dd5e2360b258078b9e4458", "optionD": "0011 0100 0011 0111", "optionC": "0011 0100 0011 0101", "optionAnswer": "A", "answer": "  ", "optionB": "0101 0111 0111 0011", "type": "1", "optionA": "0001 0100 0011 1111", "knowledge": "\u7f16\u7a0b\u57fa\u7840", "question": "What is the result of binary number 01011001 after multiplying by 0111001 and adding 1101110?", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf27254", "typeID": "55dd5e2360b258078b9e4458", "optionD": "void f(int *ret) { int a[3] = {1, 2, 3}; ret = a; return; }", "optionC": "vector<int> f() {vector<int> v(3); return v; }", "optionAnswer": "C", "answer": "  ", "optionB": "int *f() { int a[3] = {1, 2, 3}; return a; }", "type": "1", "optionA": "int f() { int *a = new int(3); return *a; }", "knowledge": "C/C++", "question": "Which of following C++ code is correct?", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf27255", "typeID": "55dd5e2360b258078b9e4458", "optionD": "10968", "optionC": "18609", "optionAnswer": "D", "answer": "  ", "optionB": "91086", "type": "1", "optionA": "60918", "knowledge": "\u667a\u529b\u9898", "question": "Given that the 180-degree rotated image of a 5-digit number is another 5-digit number and the difference between the numbers is 78633, what is the original 5-digit number?", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf27256", "typeID": "55dd5e2360b258078b9e4458", "optionD": "None of above.", "optionC": "(x ^ y) ^ (y ^ x)", "optionAnswer": "D", "answer": "  ", "optionB": "y ^(x ^ y)", "type": "1", "optionA": "y ^ ((x ^ y) & ~(x < y))", "knowledge": "\u7f16\u7a0b\u57fa\u7840", "question": "Assume both x and y are integers, which one of the followings returns the minimum of the two integers?", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf27257", "typeID": "55dd5e2360b258078b9e4458", "optionD": "abddcccd", "optionC": "abcc", "optionAnswer": "D", "answer": "  ", "optionB": "abdd", "type": "1", "optionA": "abdcccd", "knowledge": "C/C++", "question": " What is the result of the following program?\nchar* f(char *str, char ch) {\n    char *it1 = str;\n    char *it2 = str;\n    while (*it2 != '\\0') {\n        while (*it2 == ch) { it2++; }\n        *it1++ = *it2++;\n     }\n    return str;\n}\nvoid main(int argc, char *argv[]) {\n    char *a = new char[10];\n    strcpy(a, \"abcdcccd\");\n    cout << f(a, 'c');\n}", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf27258", "typeID": "55dd5e2360b258078b9e4458", "optionD": "exponential", "optionC": "quadratic", "optionAnswer": "A", "answer": "  ", "optionB": "linear", "type": "1", "optionA": "logarithmic", "knowledge": "\u590d\u6742\u5ea6 C/C++", "question": "Consider the following definition of a recursive function, power, that will perform exponentiation.\nint power(int b, int e) {\n    if (e == 0)\n        return 1;\n    if (e %2 == 0)\n        return power (b * b, e / 2);\n    return b * power(b * b, e / 2);\n}\nAsymptotically (\u6e10\u8fdb\u5730) in terms of the exponent e, the number of calls to power that occur as a result of the call power(b, e) is", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf27259", "typeID": "55dd5e2360b258078b9e4458", "optionD": "dcba", "optionC": "dbca", "optionAnswer": "D", "answer": "  ", "optionB": "badc", "type": "1", "optionA": "cbad", "knowledge": "C/C++", "question": "What is the output of the following piece of C++ code?\nusing namespace std;\nstruct Item {\n    char c;\n    Item *next;\n};\nItem *Routine1(Item *x) {\n    Item *prev = NULL, *curr = x;\n    while (curr) {\n        Item *next = curr->next;\n        curr->next = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n}\nvoid Routine2(Item *x) {\n    Item *curr = x;\n    while (curr) {\n         cout << curr->c << \u201d \u201c;\n         curr = curr->next;\n    }\n}\nint main(void) {\n    Item *x, d = {\u2018d\u2019, NULL}, c = {\u2018c\u2019, &d}, b = {\u2018b\u2019, &c}, a = {\u2018a\u2019, &b};\n    x = Routine1(&a);\n    Routine2(x);\n    return 0;\n}", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf2725a", "typeID": "55dd5e2360b258078b9e4458", "optionD": "Time: N, Space: N", "optionC": "Time: NlogN, Space: N", "optionAnswer": "C", "answer": "  ", "optionB": "Time: N^2, Space: N", "type": "1", "optionA": "Time: N^2, Space: N^2", "knowledge": "\u7f16\u7a0b\u57fa\u7840", "question": " Longest Increasing Subsequence (LIS) means a sequence containing some elements in another sequence by the same order, and the values of elements keeps increasing.For example, LIS of {2, 1, 4, 2, 3, 7, 4, 6} is {1, 2, 3, 4, 6}, and its LIS length is 5. Considering an array with N elements, what is the average time and space complexity to get the length of LIS?", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf2725b", "typeID": "55dd5e2360b258078b9e4458", "optionD": "None of the above", "optionC": "const static/static", "optionAnswer": "B", "answer": "  ", "optionB": "_/static", "type": "1", "optionA": "static/const const/static", "knowledge": "C/C++", "question": "Fill the blanks inside class definition\nclass Test {\n    public:\n         ____ int a;\n         ____ int b;\n    public:\n        Test::Test(int _a, int _b) : a(_a) {\n            b = _b;\n         }\n};\nint Test::b;\nint _tmain(int argc, __TCHAR *argv[]) {\n    Test t1(0, 0), t2(1, 1);\n    t1.b = 10;\n    t2.b = 20;\n    printf(\u201c%u %u %u %u\u201d, t1.a, t1.b, t2.a, t2.b);\n}\nRunning result: 0 20 1 20", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf2725c", "typeID": "55dd5e2360b258078b9e4458", "optionD": "Heap sort uses two heap operations: insertion and root deletion.", "optionC": "There is an array: 7, 6, 5, 4, 3, 2, 1. If using selection sort (ascending), the number of swap operation is 6.", "optionAnswer": "C", "answer": "  ", "optionB": "Quick sort makes O(n^2) comparisons in the worst case.", "type": "1", "optionA": "Insertion sort and bubble sort are not effcient for large data sets.", "knowledge": "\u6392\u5e8f", "question": "Which of the following statements are false?", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf2725d", "typeID": "55dd5e2360b258078b9e4458", "optionD": "Suppose T(n) is the runtime of resolving a problem with n elements, T(n) = \u0398(1) if n = 1; T(n) = 2T(n/2) + \u0398(n) if > 1; so T(n) is \u0398(n log n).", "optionC": "For an almost sorted array, insertion sort can be more effective than Quicksort.", "optionAnswer": "B", "answer": "  ", "optionB": "We can create a binary tree from given preorder and postorder traversal sequences.", "type": "1", "optionA": "We can create a binary tree from given inorder and preorder traversal sequences.", "knowledge": "C/C++ \u6570\u7ec4 \u6811 \u6392\u5e8f \u9012\u5f52 \u7f16\u7a0b\u57fa\u7840", "question": "Which of the following statements are false?", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}, {"ID": "55fa6a5de4b043d0caf2725e", "typeID": "55dd5e2360b258078b9e4458", "optionD": "MVC \u7684\u5e38\u7528\u5b9e\u8df5\u662f\uff0c\u6a21\u578b\u4ece\u7528\u6237\u63a5\u6536 GET \u548c POST \u7684\u8bf7\u6c42\uff0c\u7136\u540e\u51b3\u5b9a\u505a\u795e\u9a6c\uff0c\u901a\u8fc7\u79fb\u4ea4\u7ed9\u63a7\u5236\u5668\u548c\u89c6\u56fe", "optionC": "\u63a7\u5236\u5668\u4ecb\u4e8e\u7528\u6237\u548c\u7cfb\u7edf\u4e4b\u95f4\uff0c\u5b83\u63a5\u53d7\u7528\u6237\u7684\u8f93\u5165\uff0c\u6307\u6325\u7740\u6a21\u578b\u548c\u89c6\u56fe\u6765\u5b8c\u6210\u8f93\u5165\u5bf9\u5e94\u7684\u4efb\u52a1", "optionAnswer": "D", "answer": "  ", "optionB": "\u89c6\u56fe ( View ) \u662f\u5bf9\u6a21\u578b\u7684(\u53ef\u89c6\u5316)\u5c55\u793a\uff0c\u5b83\u6e32\u67d3\u6a21\u578b\u7684\u7ed3\u679c\uff0c\u5178\u578b\u7684\u662f\u4e00\u4e2a\u7528\u6237\u63a5\u53e3\u5143\u7d20(user interface element)", "type": "1", "optionA": "\u578b ( Model )\u8868\u793a\u6570\u636e\u4ee5\u53ca\u5904\u7406\u6570\u636e\u7684\u4e1a\u52a1\u903b\u8f91", "knowledge": "\u8f6f\u4ef6\u5de5\u7a0b", "question": "Web \u5e94\u7528\u7a0b\u5e8f\u4e2d\u5e38\u4f7f\u7528 MVC \u6a21\u5f0f\uff0c\u5173\u4e8e\u8bf4\u6cd5\u9519\u7684\u662f", "title": "Microsoft-\u7814\u53d1\u5de5\u7a0b\u5e08\u7b14\u8bd5\u5377B"}]}