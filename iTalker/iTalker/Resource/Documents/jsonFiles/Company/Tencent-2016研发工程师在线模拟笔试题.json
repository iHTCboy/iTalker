{"success":1,"total":2100,"result":[
  {
    "ID" : "55fa6a30e4b043d0caf271c1",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "12",
    "optionC" : "192",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "48",
    "type" : "1",
    "optionA" : "4",
    "knowledge" : "C\/C++",
    "question" : "32位系统中，定义**a[3][4],则变量占用内存空间为()。"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271c2",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "Oxf8b821c0",
    "optionC" : "Oxf8b82198",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "Oxf8b821a6",
    "type" : "1",
    "optionA" : "Oxf8b821c4",
    "knowledge" : "C\/C++",
    "question" : "二维数组X按行顺序存储，其中每个元素占1个存储单元。若X[4][4]的存储地址为Oxf8b82140,X[9][9]的存储地址为Oxf8b8221c,则X[7][7]的存储地址为()。"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271c3",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "45",
    "optionC" : "44",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "42",
    "type" : "1",
    "optionA" : "40",
    "knowledge" : "排序",
    "question" : "线性表的长度为10，在最坏情况下，冒泡排序需要比较次数为（）。"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271c4",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "o(N!)",
    "optionC" : "O(N^2)",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "O(N^2)",
    "type" : "1",
    "optionA" : "O(N)",
    "knowledge" : "C\/C++",
    "question" : "下面函数的时间复杂度是\nlong foo(long x){\n    if(x<2) return 1;\n        return x*x*foo(x-1);\n}"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271c5",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "23",
    "optionC" : "21",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "20",
    "type" : "1",
    "optionA" : "18",
    "knowledge" : "图",
    "question" : "22个顶点的连通图中边的条数至少为（）"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271c6",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "0",
    "optionC" : "120",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "110",
    "type" : "1",
    "optionA" : "100",
    "knowledge" : "C\/C++",
    "question" : "写出下列代码的输出内容（）\n\n#include<stdio.h>\nint inc(int a)\n{\n   return (++a);\n}\nint multi(int *a,int *b,int *c)\n{ \n  return (*c=*a* *b);\n}\ntypedef int (FUNC1)(int in);\ntypedef int (FUNC2)(int*,int*,int*);\nvoid show(FUNC2 fun,int arg1,int *arg2)\n{\n  FUNC1 p=&inc;\n  int temp=p(arg1);\n  fun(&temp,&arg1,arg2);\n  printf(\"%d\\n\",*arg2);\n}\nint main()\n{ \n   int a;\n   show(multi,10,&a);\n   return 0;\n}"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271c7",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "10",
    "optionC" : "9",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "8",
    "type" : "1",
    "optionA" : "7",
    "knowledge" : "智力题",
    "question" : "有36辆自动赛车和6条跑道，没有计时器的前提下，最少用几次比赛可以筛选出最快的三辆赛车？"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271c8",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "未知",
    "optionC" : "111111",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "123456",
    "type" : "1",
    "optionA" : "12345",
    "knowledge" : "C\/C++",
    "question" : "下面程序运行的结果是（）。\n\n#include<stdio.h>\nvoid add(int *p)\n{\n    (*p)++;\n    printf(\"%d\",*p);\n    if (*p>5)\n    {\n        return;\n    }\n    add(p);\n}\nint main()\n{\n    int i=0;\n    add(&i);\n    return 0;\n}"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271c9",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "OPTIONS",
    "optionC" : "TRACE",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "HEAD",
    "type" : "1",
    "optionA" : "GET",
    "knowledge" : "网络基础",
    "question" : "下列哪些http方法对于服务端和用户端一定是安全的？（）"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271ca",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "decorator",
    "optionC" : "proxy",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "factory method",
    "type" : "1",
    "optionA" : "Aadapter",
    "knowledge" : "软件工程",
    "question" : "一个系统，提供多个http协议的接口，返回的结果Y有json格式和jsonp格式。Json的格式为{\"code\":100,\"msg\":\"aaa\"},为了保证该协议变更之后更好的应用到多个接口，为了保证修改协议不影响到原先逻辑的代码，以下哪些设计模式是不需要的?协议的变更指的是日后可能返回xml格式，或者是根据需求统一对返回的消息进行过滤。()"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271cb",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "p是一个动态数组",
    "optionC" : "p是一个指向二维数组的指针",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "p是一个指向一维数组的指针",
    "type" : "1",
    "optionA" : "p是一个指向int型值的指针",
    "knowledge" : "C\/C++",
    "question" : "对于定义\"int *p\",下列哪些说明可能是正确的?()"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271cc",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "heap与stack都会在初始大小空间用满时，系统自动增加其大小",
    "optionC" : "stack由系统自动分配，无需程序员干涉，heap需要手动申请",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "heap一般由程序员分配和释放，若程序员不释放，不会造成操作系统的内存泄露",
    "type" : "1",
    "optionA" : "stack由编译器自动分配和释放,存放函数的参数值，局部变量，全局变量的值",
    "knowledge" : "C\/C++",
    "question" : " 关于操作系统heap与stack说法中，正确的是（）。"
  }
]}
