{"success":1,"total":2100,"result":[
  {
    "ID" : "55fa6a30e4b043d0caf271e8",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "模型(model)-视图(view)-控制器(controller)",
    "optionC" : "模块(module)-视图(view)-控制器(controller)",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "模型(model)-视图(view)-组件(component)",
    "type" : "1",
    "optionA" : "模块(module)-视图(view)-组件(component)",
    "knowledge" : "软件工程 编程基础",
    "question" : "我们常说的mvc框架是指的什么的?"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271e9",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "BDEFAC",
    "optionC" : "BDFECA",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "DFEBCA",
    "type" : "1",
    "optionA" : "DBFEAC",
    "knowledge" : "树",
    "question" : "对某二叉树进行先序遍历的结果是ABDEFC，中序遍历的结果是DBFEAC，则后序遍历的结果是（）"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271ea",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "18",
    "optionC" : "16",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "28",
    "type" : "1",
    "optionA" : "24",
    "knowledge" : "C\/C++",
    "question" : "有一个如下的结构体：\n\nstruct A{\n long a1;\n short a2;\n int a3;\n int *a4;\n};\n请问在64位编译器下用sizeof(struct A)计算出的大小是多少？"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271eb",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "FIN_WAIT_2",
    "optionC" : "SYNC_SENT",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "FIN_WAIT_1",
    "type" : "1",
    "optionA" : "TIME_WAIT",
    "knowledge" : "网络基础",
    "question" : "以下不属于tcp连接断开的状态是？"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271ec",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "ICMP协议集中管理网络中的IP地址分配",
    "optionC" : "ICMP协议用于控制数据报传送中的差错情况",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "ICMP协议把公网的IP地址转换为私网的IP地址",
    "type" : "1",
    "optionA" : "ICMP协议根据MAC地址查找对应的IP地址",
    "knowledge" : "网络基础",
    "question" : "下面关于ICMP协议的描述中，正确的是（）"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271ed",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "0.39",
    "optionC" : "0.48",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "0.26",
    "type" : "1",
    "optionA" : "0.55",
    "knowledge" : "操作系统",
    "question" : "在一个单CPU的处理机中，有P1，P3，P5三个作业，有两个IO设备IO1，IO2，并且能够实现抢先式多任务并行工作的多道程序环境中，投入运行优先级由高到低P5，P1，P3三个作业，他们使用设备的先后顺序和占用设备的时间分别为：P1:IO2(10ms) CPU(10ms) IO1(30ms）CPU(10ms)P3:IO1(30ms) CPU(10ms) IO2(30ms）CPU(10ms)P5:CPU(20ms) IO1(30ms) CPU(10ms) IO2(15ms）忽略其他的时间损耗，3个作业投入到全部完成的情况下。请问下列哪些选项为IO2的设备利用率？"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271ee",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "7",
    "optionC" : "5",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "3",
    "type" : "1",
    "optionA" : "1",
    "knowledge" : "C\/C++",
    "question" : "C语言里i=5,j=7,请问i|j等于多少？"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271ef",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "125",
    "optionC" : "100",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "80",
    "type" : "1",
    "optionA" : "60",
    "knowledge" : "C\/C++",
    "question" : "请选择下面代码的输出结果\nint main(int argc,char*argv[])\n{\n    int a=10;\n    int b=4;\n    int c=a\/b;\n    int d=c*a*b++;\n    std:cout<<d<<std::endl;\n    return 0;\n}"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271f0",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "20150, 810",
    "optionC" : "810, 20150",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "50810, 201",
    "type" : "1",
    "optionA" : "2015, 810",
    "knowledge" : "C\/C++",
    "question" : "请问下列代码的输出结果有可能是哪些（）？\n#include<stdint.h>\n#include<stdio.h>\nunion X\n{\n    int32_t a;\n    struct \n    {\n        int16_t b;\n        int16_t c;\n    };\n};\nint main(){\n    X x;\n    x.a=0x20150810;\n    printf(\"%x,%x\\n\",x.b,x.c);\n    return 0;\n}"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271f1",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "12",
    "optionC" : "9",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "11",
    "type" : "1",
    "optionA" : "10",
    "knowledge" : "C\/C++",
    "question" : "如下代码，result变量的输出结果是多少？\n\n\n#include<iostream>\nusing namespace std;\nint i=1;\nclass MyCls{\npublic:\n    MyCls():m_nFor(m_nThd),m_nSec(i++),m_nFir(i++),m_nThd(i++){\n        m_nThd=i;\n    }\n    void echo(){\n        cout<<\"result:\"<<m_nFir+m_nSec+m_nThd+m_nFor<<endl;\n    }\nprivate:\n    int m_nFir;\n    int m_nSec;\n    int m_nThd;\n    int &m_nFor;\n};\nint main()\n{\n    MyCls oCls;\n    oCls.echo();\n    return 0;\n}"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271f2",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "有上邻空闲区，也有下邻空闲区",
    "optionC" : "有下邻空闲区，但上下邻空闲区",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "有上邻空闲区，但无下邻空闲区",
    "type" : "1",
    "optionA" : "无上邻空闲区，也无下邻空闲区",
    "knowledge" : "操作系统",
    "question" : "在动态分区分配方案中，某一作业完成后，系统收回其主存空间，并与相邻空闲区合并，为此需要修改空闲区表，造成空闲区数减1的情况是()"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271f3",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "空间复杂度是O(nlogn)",
    "optionC" : "空间复杂度是O(logn)",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "空间复杂度是O(n)",
    "type" : "1",
    "optionA" : "空间复杂度是O(l)",
    "knowledge" : "编程基础",
    "question" : "对于移动平均算法，是计算某变量之前n个数值的算术平均，正确的说法是："
  },
  {
    "ID" : "55fa6a30e4b043d0caf271f4",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "100S",
    "optionC" : "40S",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "20S",
    "type" : "1",
    "optionA" : "10S",
    "knowledge" : "网络基础",
    "question" : "某一速率为100M的交换机有20个端口，其一个端口上连着一台笔记本电脑，此电脑从迅雷上下载一部1G的电影需要的时间可能是多久？"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271f5",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "TCP_KEEPALIVE",
    "optionC" : "TCP_SYNCNT",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "TCP_NODELAY",
    "type" : "1",
    "optionA" : "TCP_MAXSEG",
    "knowledge" : "C\/C++ ",
    "question" : "在linux编程中，以下哪个TCP的套接字选项与nagle算法的开启和关闭有关？"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271f6",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "空或只有一个结点",
    "optionC" : "任一结点无右孩子",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "任一结点无左孩子",
    "type" : "1",
    "optionA" : "高度等于其结点数",
    "knowledge" : "树",
    "question" : "某二叉树的先根遍历序列和后根遍历序列正好相反，则该二叉树具有的特征是()"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271f7",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "IJ",
    "optionC" : "HI",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "HJ",
    "type" : "1",
    "optionA" : "FJ",
    "knowledge" : "编程基础",
    "question" : "已知关系R（F,G,H,I,J）及其上的函数相关性集合，F=(F->G,J->F,HJ->I),该关系的候选关键字是："
  },
  {
    "ID" : "55fa6a30e4b043d0caf271f8",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "a=4,b=8,c=4",
    "optionC" : "a=4,b=7,c=4",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "a=4,b=4,c=4",
    "type" : "1",
    "optionA" : "a=1,b=1,c=1",
    "knowledge" : "C\/C++",
    "question" : "win32系统里，下面几个sizeof的运行结果是（）\n\nint intValue=1024;\nchar str[]=\"Tencent\";\nconst char* ch=str;\nsizeof(intValue)=__a___;\nsizeof(str)=__b____;\nsizeof(ch)=____c___;"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271f9",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "2",
    "optionC" : "3",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "4",
    "type" : "1",
    "optionA" : "5",
    "knowledge" : "操作系统",
    "question" : "若系统中有五台打印机，有多个进程均需要使用两台，规定每个进程一次仅允许申请一台，则在不发生死锁的情况下至多允许______个进程参与竞争"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271fa",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : " 3\/7",
    "optionC" : " 2\/7",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : " 4\/7",
    "type" : "1",
    "optionA" : " 1\/14",
    "knowledge" : "概率统计",
    "question" : "在正方体上任取三个顶点连成三角形，则所得的三角形是直角非等腰三角形的概率为？"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271fb",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "JDK的TreeMap是一个AVL的实现",
    "optionC" : "包含n个内部节点的红黑树的高度是O(log(n))",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "两者查找,插入，删除的时间复杂度相同",
    "type" : "1",
    "optionA" : "两者都属于自平衡二叉树",
    "knowledge" : "查找 高级结构",
    "question" : "关于红黑树和AVL树，以下哪种说法不正确？"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271fc",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "16KB",
    "optionC" : "9KB",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "8KB",
    "type" : "1",
    "optionA" : "7KB",
    "knowledge" : "网络基础",
    "question" : "客户端C和服务器S之间建立一个TCP连接，该连接总是以1KB的最大段长发送TCP段，客户端C有足够的数据要发送。当拥塞窗口为16KB的时候发生超时，如果接下来的4个RTT往返时间内的TCP段的传输是成功的，那么当第4个RTT时间内发送的所有TCP段都得到了ACK时，拥塞窗口大小是："
  },
  {
    "ID" : "55fa6a30e4b043d0caf271fd",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "select能并行支持I\/O比较小，且无法修改",
    "optionC" : "epoll支持水平触发和边沿触发两种模式",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "epoll相比select效率更高，主要是基于其操作系统支持的I\/O事件通知机制，而select是基于轮询机制",
    "type" : "1",
    "optionA" : "epoll和select都是I\/O多路复用的技术，都可以实现同时监听多个I\/O事件的状态",
    "knowledge" : "网络基础",
    "question" : "关于epoll和select的区别，哪些说法是不正确的？"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271fe",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "int *ip=new int(12);\nfor(int i=0;i<12;++i){\nip[i]=i;\n}\ndelete []ip;",
    "optionC" : "double *a=new double[1];\n\/\/.... \ndelete a;",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "int *ip=static_cast<int*>(malloc(sizeof(int)));\n*ip=10;\n\/\/.....\ndelete ip;",
    "type" : "1",
    "optionA" : "int *a=new int(12);\n\/\/..... \nfree(a);",
    "knowledge" : "C\/C++",
    "question" : "以下涉及到内存管理的代码段中，正确的是："
  },
  {
    "ID" : "55fa6a30e4b043d0caf271ff",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "递归",
    "optionC" : "内联函数",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "模板",
    "type" : "1",
    "optionA" : "宏定义",
    "knowledge" : "编程基础",
    "question" : "下面哪些特性不可能导致代码体积膨胀:"
  }
]}
