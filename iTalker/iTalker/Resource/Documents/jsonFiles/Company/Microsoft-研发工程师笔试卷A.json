{"success":1,"total":2100,"result":[
  {
    "ID" : "55fa6a5ce4b043d0caf2723b",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "1",
    "optionC" : "0",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "-1",
    "type" : "1",
    "optionA" : "-2",
    "knowledge" : "C\/C++",
    "question" : "Initialize integer i as 0, what's the value of i after the following operation?i += i > 0 ? i++ : i--;"
  },
  {
    "ID" : "55fa6a5de4b043d0caf2723c",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "5,4,3,2,1",
    "optionC" : "1,2,5,4,3",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "3,5,1,4,2",
    "type" : "1",
    "optionA" : "1,2,3,4,5",
    "knowledge" : "树",
    "question" : "Which of the follwing sequence(s) could not be a postorder tree walk result of a binary search tree?"
  },
  {
    "ID" : "55fa6a5de4b043d0caf2723d",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "None of the above",
    "optionC" : "20",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "18",
    "type" : "1",
    "optionA" : "14",
    "knowledge" : "C\/C++ 递归",
    "question" : "How many times is f() called when calculating f(10)?\nint f(int x) {\n    if(x <= 2)\n        return 1;\n    return f(x - 2) + f(x - 4) + 1;\n}"
  },
  {
    "ID" : "55fa6a5de4b043d0caf2723e",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "(1) Sort linked list(2) Array.",
    "optionC" : "(1) Tree with linked list at leaves(2) Hash(10,000 buckets)",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "(1) Tree with linked list at leaves(2) Array.",
    "type" : "1",
    "optionA" : "(1) Tree with Hash(100 bucket) at leaves(2) Tree with linked list at leaves.",
    "knowledge" : "数组 树 链表 哈希",
    "question" : "Asume you have an object to describe customer data:{ ID（7 digit numeric） Family Name（string） Account Balance（currency） } If you have 500,000 Chinese customers records represented by instances of this object type , what set of data structures is best to get fast retrieval of customers (1) get IDs from Name and (2) get Name from ID?"
  },
  {
    "ID" : "55fa6a5de4b043d0caf2723f",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "O(n*n)",
    "optionC" : "O(nlgn)",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "O(n)",
    "type" : "1",
    "optionA" : "O(lgn)",
    "knowledge" : "排序",
    "question" : "The best time complexity of quick sort algorithm is:"
  },
  {
    "ID" : "55fa6a5de4b043d0caf27240",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "DES",
    "optionC" : "RC4",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "RSA",
    "type" : "1",
    "optionA" : "MD5",
    "knowledge" : "加密和安全",
    "question" : "Which of the following method(s) CANNOT be used for Text-encryption:"
  },
  {
    "ID" : "55fa6a5de4b043d0caf27241",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "50",
    "optionC" : "45",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "30",
    "type" : "1",
    "optionA" : "5",
    "knowledge" : "编译和体系结构",
    "question" : "To speed up data access , we build cache system. In one system , The L1 cache access time is 5 ns , the L2 cache access time is 50 ns and the memory access time is 400 ns. The L1 cache miss rate is 50% , the L2 cache miss rate is 10%. The average data access time of this system is:"
  },
  {
    "ID" : "55fa6a5de4b043d0caf27242",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "Many clustered index",
    "optionC" : "clustered index and many non-clustered indexes",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "A clustered index",
    "type" : "1",
    "optionA" : "No indexes",
    "knowledge" : "数据库",
    "question" : "A table CANNOT have one or more of the following index configurations."
  },
  {
    "ID" : "55fa6a5de4b043d0caf27243",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "fastcal",
    "optionC" : "pascal",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "stdcall",
    "type" : "1",
    "optionA" : "cdecl",
    "knowledge" : "C\/C++",
    "question" : "下面哪些调用转换支持可变长度参数"
  },
  {
    "ID" : "55fa6a5de4b043d0caf27244",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "A::f() A::f() const",
    "optionC" : "A::f() B::f() const",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "B::f() A::f() const",
    "type" : "1",
    "optionA" : "B::f() B::f() const",
    "knowledge" : "C\/C++",
    "question" : "下面程序执行结果:\nusing namespace std;\nclass A{\n    public:\n        virtual void f() { cout << \"A::f() \"; }\n        void f() const { cout << \"A::f() const \"; }\n};\nclass B : public A {\n    public:\n        void f() { cout << \"B::f() \"; }\n        void f() const { cout << \"B::f() const \"; }\n};\nvoid g(const A* a) {\n    a->f();\n}\nint main(int argc, char *argv[]) {\n    A* p = new B();\n    p->f();\n    g(p);\n    delete(p);\n    return 0;\n}"
  },
  {
    "ID" : "55fa6a5de4b043d0caf27245",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "线程可以更改从属的进程",
    "optionC" : "线程必从属于一个进程",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "进程有自己的栈空间，而线程只共享父进程的栈空间",
    "type" : "1",
    "optionA" : "操作系统的一个程序必须有一个进程，但是不必须有一个线程",
    "knowledge" : "Windows 操作系统",
    "question" : "Windows 下进程和线程的描述，哪些是对的："
  },
  {
    "ID" : "55fa6a5de4b043d0caf27246",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "11 11",
    "optionC" : "11 10",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "10 11",
    "type" : "1",
    "optionA" : "10 10",
    "knowledge" : "C\/C++",
    "question" : "下面代码段的运行结果（环境linux平台, g++编译器）:\nint main() {\n    int x = 10;\n    int y = 10;\n    x = y = ++y;\n    printf(\"%d %d\", x, y);\n    return 0;\n}"
  },
  {
    "ID" : "55fa6a5de4b043d0caf27247",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "溢出",
    "optionC" : "2",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "6",
    "type" : "1",
    "optionA" : "9",
    "knowledge" : "Java 数组 C#",
    "question" : "C# 或是 Java 程序段的结果： int[][] array = new int[3][]{ new int[3]{5,6,2}, new int[5]{6,9,7,8,3}, new int[2]{3,2} }; array[2][2] 返回（）"
  },
  {
    "ID" : "55fa6a5de4b043d0caf27248",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "999",
    "optionC" : "32",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "10",
    "type" : "1",
    "optionA" : "8",
    "knowledge" : "智力题",
    "question" : "1000 个瓶子中有一瓶毒药，一只老鼠吃到毒药一周之内会死，如果要在一周之内检测出有毒药的一瓶，问至少需要几只老鼠？"
  },
  {
    "ID" : "55fa6a5de4b043d0caf27249",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "None of the above.",
    "optionC" : "Changes to the parent process does not affect child processes.Multiple threads mar cause deadlock,while multiple processes  won't cause deadlock",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "Changes to the main thread(cancellation，priority change，etc.) may affect the behavior of the other threads of the process;",
    "type" : "1",
    "optionA" : "Threads share the same address space of the parent process;Processes share the same address space of the parent process.",
    "knowledge" : "操作系统",
    "question" : "Which statement(s) is(are) correct about thread and process？Select all that apply."
  },
  {
    "ID" : "55fa6a5de4b043d0caf2724a",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "None of the above.",
    "optionC" : "Port numbers below 1024 are called well-known ports and are reserved for standard services. For example,port 21 is reserved for FTP protocol, and port 25 is for SMTP protocol.",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "TCP supports multicasting.",
    "type" : "1",
    "optionA" : "TCP provides a way for applications to send encapsulated IP datagrams and send them without having to establish a connection.",
    "knowledge" : "网络基础",
    "question" : "Which statement(s) below regarding TCP(Transmission Control Protocol) is(are) correct? Select all that apply."
  },
  {
    "ID" : "55fa6a5de4b043d0caf2724b",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "const int *a; \/\/ a 是常指针",
    "optionC" : "int const *a; \/\/ a 指向常数的指针",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "int const a; \/\/ a 是常数",
    "type" : "1",
    "optionA" : "const int a; \/\/ a 是常数",
    "knowledge" : "C\/C++",
    "question" : "下面说法错误的是:"
  }
]}
