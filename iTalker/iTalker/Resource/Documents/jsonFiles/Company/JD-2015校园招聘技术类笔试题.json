{"success":1,"total":2100,"result":[
  {
    "ID" : "55fa69b6e4b043d0caf27044",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "HTTP和TCP，UDP在网络分层里是同一层次的协议",
    "optionC" : "HTTP响应包括数字状态码，200代表此次请求有正确返回",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "FTP也可以使用HTTP协议",
    "type" : "1",
    "optionA" : "有状态，前后请求有关联关系",
    "knowledge" : "网络基础",
    "question" : "关于HTTP协议的说法，以下哪些说法是正确的（）"
  },
  {
    "ID" : "55fa69b6e4b043d0caf27045",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "死循环",
    "optionC" : "0",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "100",
    "type" : "1",
    "optionA" : "-1",
    "knowledge" : "C\/C++",
    "question" : "以下代码运行结果为（）\n#include<stdio.h>\nint main()\n{\n    uint32_t a = 100;\n    while (a > 0)\n    {\n        --a;\n    }\n    printf(\"%d\", a);\n    return 0;\n}"
  },
  {
    "ID" : "55fa69b6e4b043d0caf27046",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "堆排序",
    "optionC" : "快速排序",
    "optionAnswer" : "B",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "归并排序",
    "type" : "1",
    "optionA" : "选择排序",
    "knowledge" : "排序",
    "question" : "以下哪种排序算法需要开辟额外的存储空间（）"
  },
  {
    "ID" : "55fa69b6e4b043d0caf27047",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "更差的磁盘吞吐量和更差的磁盘空间利用率",
    "optionC" : "更差的磁盘吞吐量和更好的磁盘空间利用率",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "更好的磁盘吞吐量和更好的磁盘空间利用率",
    "type" : "1",
    "optionA" : "更好的磁盘吞吐量和更差的磁盘空间利用率",
    "knowledge" : "操作系统",
    "question" : " 如果将固定块大小的文件系统中的块大小设置大一些，会造成（）。"
  },
  {
    "ID" : "55fa69b6e4b043d0caf27048",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "不确定",
    "optionC" : "有e，c",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "有e，b",
    "type" : "1",
    "optionA" : "只有e",
    "knowledge" : " 树",
    "question" : "若一颗二叉树的前序遍历为a,e,b,d,c,后序遍历为b,c,d,e,a，则根节点的孩子节点（）"
  },
  {
    "ID" : "55fa69b6e4b043d0caf27049",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "不能确定",
    "optionC" : "一样多",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "女的多",
    "type" : "1",
    "optionA" : "男的多",
    "knowledge" : "智力题",
    "question" : "在一个世世代代都重男轻女的村庄里，村长决定颁布一条法律，村子里没有生育出儿子的夫妻可以一直生育直到生出儿子为止，假设现在村子上的男女比例是1:1，这条法律颁布之后的若干年后村子的男女比例将会（）"
  },
  {
    "ID" : "55fa69b6e4b043d0caf2704a",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "降低用户作业的周转时间",
    "optionC" : "减少用户作业的等待时间",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "提高系统与用户的交互性能",
    "type" : "1",
    "optionA" : "提高系统资源利用率",
    "knowledge" : "操作系统",
    "question" : "批处理操作系统的目的是（）。"
  },
  {
    "ID" : "55fa69b6e4b043d0caf2704b",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "'_W_%'",
    "optionC" : "'_W__'",
    "optionAnswer" : "B",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "'_%W_ _'",
    "type" : "1",
    "optionA" : "'_ _W_%'",
    "knowledge" : "数据库",
    "question" : "设有一个关系：DEPT(DNO,DNAME),如果要找出倒数第三个字母为W，并且至少包含4个字母的DNAME，则查询条件子句应写成WHERE DNAME LIKE（）"
  },
  {
    "ID" : "55fa69b6e4b043d0caf2704c",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "m的1\/3方",
    "optionC" : "m的1\/2方",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "m的平方",
    "type" : "1",
    "optionA" : "log m",
    "knowledge" : "复杂度",
    "question" : "如下程序的时间复杂度为（其中m>1,e>0）（）\nx = m;\ny = 1;\nwhile （x - y > e）\n{\nx = (x + y) \/ 2;\n    y = m \/ x;\n}\nprint(x);"
  },
  {
    "ID" : "55fa69b6e4b043d0caf2704d",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "power(2，(n*n-n)\/2)",
    "optionC" : "power(2，(n*n+n)\/2)",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "power(2，n*n\/2)",
    "type" : "1",
    "optionA" : "power(2，n)",
    "knowledge" : "组合数学",
    "question" : "关于主对角线（从左上角到右下角）对称的矩阵为对称矩阵；如果一个矩阵中的各个元素取值为0或1，那么该矩阵为01矩阵，求大小为N*N的01对称矩阵的个数？（）"
  },
  {
    "ID" : "55fa69b6e4b043d0caf2704e",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "图灵机",
    "optionC" : "非确定下推自动机",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "确定下推自动机",
    "type" : "1",
    "optionA" : "有限状态自动机",
    "knowledge" : "编译和体系结构",
    "question" : "现代的语言（如Java）的编译器的词法分析主要依靠（）。"
  },
  {
    "ID" : "55fa69b6e4b043d0caf2704f",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "8",
    "optionC" : "7",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "6",
    "type" : "1",
    "optionA" : "5",
    "knowledge" : "C\/C++",
    "question" : "如下函数的f(1)的值为()\nint f(int n){\n    static int i=1;\n     if(n>=5)\n         return n;\n     n=n+i;\n     i++;\n     return f(n);\n}"
  }
]}