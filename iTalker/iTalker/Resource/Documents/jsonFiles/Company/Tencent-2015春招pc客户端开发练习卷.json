{"success":1,"total":2100,"result":[
  {
    "ID" : "55fa6a2ee4b043d0caf27158",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "在类方法中绝对不能调用实例方法",
    "optionC" : "在类方法中只能调用本类中的类方法",
    "optionAnswer" : "B",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "在类方法中调用本类的类方法时可直接调用",
    "type" : "1",
    "optionA" : "在类方法中可用this来调用本类的类方法",
    "knowledge" : "C\/C++\/Java",
    "question" : "下列说法正确的有（ ）"
  },
  {
    "ID" : "55fa6a2ee4b043d0caf27159",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "B和C",
    "optionC" : "::",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : ".*",
    "type" : "1",
    "optionA" : "*",
    "knowledge" : "C\/C++",
    "question" : "下列运算符，在C++语言中不能重载的是（）"
  },
  {
    "ID" : "55fa6a2ee4b043d0caf2715a",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "A和C",
    "optionC" : "template <class T1, class T2>",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "template <class T1, T2>",
    "type" : "1",
    "optionA" : "template <typename T1， typename T2>",
    "knowledge" : "C\/C++",
    "question" : "下列的模板说明中，正确的有（ ）"
  },
  {
    "ID" : "55fa6a2fe4b043d0caf2715b",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "All options are correct",
    "optionC" : "const",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "extern",
    "type" : "1",
    "optionA" : "static",
    "knowledge" : "C\/C++",
    "question" : "In C++, which of the following keyword(s) can be used on both a variable and a function?"
  },
  {
    "ID" : "55fa6a2fe4b043d0caf2715c",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "return \"microsoft\"==\"microsoft\"",
    "optionC" : "char *str=\"microsoft\"; return str==\"microsoft\"",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "return (7&1)",
    "type" : "1",
    "optionA" : "the return value of main function if program ends normally",
    "knowledge" : "C\/C++",
    "question" : "Which of the following statement doesn't equal value 1 in C programming language?"
  },
  {
    "ID" : "55fa6a2fe4b043d0caf2715d",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "int（*p）（）；",
    "optionC" : "char（*pac）[10]；",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "char*acp[10]；",
    "type" : "1",
    "optionA" : "int px*；",
    "knowledge" : "C\/C++",
    "question" : "下列定义语句中，错误的是"
  },
  {
    "ID" : "55fa6a2fe4b043d0caf2715e",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "多继承类",
    "optionC" : "含有纯虚函数",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "派生类",
    "type" : "1",
    "optionA" : "嵌套类",
    "knowledge" : "C\/C++",
    "question" : "抽象基类是指（ ）"
  },
  {
    "ID" : "55fa6a2fe4b043d0caf2715f",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "p2++;",
    "optionC" : "p2[2] = ‘l’;",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "p1[2] = ‘w’;",
    "type" : "1",
    "optionA" : "p1++;",
    "knowledge" : "C\/C++",
    "question" : "给出以下定义，下列哪些操作是合法的？ const char *p1 = “hello”;char *const p2 = “world”;"
  },
  {
    "ID" : "55fa6a2fe4b043d0caf27160",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "每个C类网络最多包含254台主机",
    "optionC" : "202.112.139.140属于B类地址",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "根据不同的取值范围IP地址可以分为五类",
    "type" : "1",
    "optionA" : "IP地址采用分层结构，它由网络号与主机号两部分组成",
    "knowledge" : "网络基础",
    "question" : "关于IP地址下列说法错误的是？"
  },
  {
    "ID" : "55fa6a2fe4b043d0caf27161",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "AC都对",
    "optionC" : "只能在已经排序的数据上进行查找",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "只能用于链表",
    "type" : "1",
    "optionA" : "只能用于数组",
    "knowledge" : "复杂度",
    "question" : "对于二分查找算法下面描述正确的是哪个？"
  },
  {
    "ID" : "55fa6a2fe4b043d0caf27162",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "IPCONFIG",
    "optionC" : "TELNET",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "TRACERT",
    "type" : "1",
    "optionA" : "PING",
    "knowledge" : "网络基础",
    "question" : "用来检查到一台主机的网络层是否连通命令是（ ）？"
  },
  {
    "ID" : "55fa6a2fe4b043d0caf27163",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "AC都对",
    "optionC" : "protected成员",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "private成员",
    "type" : "1",
    "optionA" : "public成员",
    "knowledge" : "C\/C++\/Java",
    "question" : "类B从类A派生，则类B可以访问类A中的（ ）成员？"
  },
  {
    "ID" : "55fa6a2fe4b043d0caf27164",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "DSAP子段",
    "optionC" : "SSAP子段",
    "optionAnswer" : "B",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "IP报文头部",
    "type" : "1",
    "optionA" : "帧头",
    "knowledge" : "网络基础",
    "question" : "路由器转发数据包到非直接网段的过程中，依靠下列哪一个选项来寻找下一跳地址( )"
  },
  {
    "ID" : "55fa6a2fe4b043d0caf27165",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "16",
    "optionC" : "8",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "6",
    "type" : "1",
    "optionA" : "4",
    "knowledge" : "网络基础",
    "question" : "IPv6地址占____个字节"
  },
  {
    "ID" : "55fa6a2fe4b043d0caf27166",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "ABC都对",
    "optionC" : "获得内部锁的唯一途径是：进入这个内部锁保护的同步块或方法。",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "原语Compare-and-swap(CAS)是实现无锁数据结构的通用原语。",
    "type" : "1",
    "optionA" : "在并行程度中，当两个并行的线程，在没有任何约束的情况下，访问一个共享变量或者共享对象的一个域，而且至少要有一个操作是写操作，就可能发生数据竞争错误。",
    "knowledge" : "并发",
    "question" : "以下说法正确的是："
  }
]}