{"success":1,"total":2100,"result":[
  {
    "ID" : "55fa696ee4b043d0caf26fb1",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "14",
    "optionC" : "13",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "12",
    "type" : "1",
    "optionA" : "11",
    "knowledge" : "编程基础",
    "question" : "如果下列的公式成立：78+78=123，则采用的是_______进制表示的。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fb2",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "false,false",
    "optionC" : "false,true",
    "optionAnswer" : "B",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "true,true",
    "type" : "1",
    "optionA" : "true,false",
    "knowledge" : "Java",
    "question" : "下列 java 程序输出结果为______。\nint i=0;\nInteger j = new Integer(0);\nSystem.out.println(i==j);\nSystem.out.println(j.equals(i));"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fb3",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "test ok and ab",
    "optionC" : "hello and a",
    "optionAnswer" : "B",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "hello and cb",
    "type" : "1",
    "optionA" : "hello and ab",
    "knowledge" : "Java",
    "question" : "下列java程序的输出结果为____。\n\npublic class Example{\n    String str=new String(\"hello\");\n    char[]ch={'a','b'};\n    public static void main(String args[]){\n        Example ex=new Example();\n        ex.change(ex.str,ex.ch);\n        System.out.print(ex.str+\" and \");\n        Sytem.out.print(ex.ch);\n    }\n    public void change(String str,char ch[]){\n        str=\"test ok\";\n        ch[0]='c';\n    }\n}"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fb4",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "运行正常，输出testMethod",
    "optionC" : "编译通过，运行异常，报Exception",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "编译通过，运行异常，报IllegalArgumentException",
    "type" : "1",
    "optionA" : "编译不通过",
    "knowledge" : "Java",
    "question" : "有关下述Java代码描述正确的选项是____。\n\npublic class TestClass {\n   private static void testMethod(){\n        System.out.println(\"testMethod\");\n   }\n   public static void main(String[] args) {\n        ((TestClass)null).testMethod();\n   }\n}"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fb5",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : " 53\/91",
    "optionC" : " 48\/91",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : " 25\/91",
    "type" : "1",
    "optionA" : " 8\/91",
    "knowledge" : "概率统计",
    "question" : "袋子中分别一叠纸币，其中5元面值的纸币6张，10元面值的纸币5张，20元面值的纸币4张，从袋子中任意取4张纸币，则每种面值至少取到一张的概率为____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fb6",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "4.25",
    "optionC" : "4",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "3.75",
    "type" : "1",
    "optionA" : "3.5",
    "knowledge" : "智力题",
    "question" : "有一个扔骰子得返现的游戏：你扔一个骰子，扔到多少就可以得到和点数相同的返现。例如你扔到3，可以得到3元返现；扔到1，可以得到1元返现。当你扔完第一次骰子，看到点数后，你需要做出如下选择：\n\n1、拿这个点数对应的返现，放弃扔第二次骰子；\n\n2、再扔一次骰子，但此时你只能拿第二次扔的点数对应的返现。\n\n那么，玩一轮这个游戏的期望收益是____元。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fb7",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "50",
    "optionC" : "49",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "100",
    "type" : "1",
    "optionA" : "99",
    "knowledge" : "链表",
    "question" : "一个长度为100的循环链表，指针A和指针B都指向了链表中的同一个节点，A以步长为1向前移动，B以步长为3向前移动，一共需要同时移动多少步A和B才能再次指向同一个节点____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fb8",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "6",
    "optionC" : "4",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "2",
    "type" : "1",
    "optionA" : "9",
    "knowledge" : "操作系统",
    "question" : "某操作系统采用分页存储管理方式，下图给出了进程A的页表结构。如果物理页的大小为512字节，那么进程A逻辑地址为0x0457（十六 进制）的变量存放在____号物理内存页中。\n\n进程A页表：\n\n逻辑页    物理页\n\n0            9\n\n1            2\n\n2            4\n\n3            6\n\n4            5\n\n5            8"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fb9",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "35",
    "optionC" : "30",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "15",
    "type" : "1",
    "optionA" : "0",
    "knowledge" : "组合数学",
    "question" : "在一个100人的团队活动中，主持人小猿亮出了一幅裙子的照片，大喊：”看出蓝黑色的举手！“，团队中有45人举手，然后小猿又喊：”看出白金色的举手！“，团队中有40人举手。机灵的小猿发现，有人从未举过手，有人举手了两次，两轮举手分出的四类人的数目恰好构成一个等差数列。请问有____人既能看出蓝黑色又能看出白金色。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fba",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "5000",
    "optionC" : "2500",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "500",
    "type" : "1",
    "optionA" : "100",
    "knowledge" : "智力题",
    "question" : "将1,2,3,......,99,100任意排列成一个圈，相邻两数的差的绝对值求和最多为____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fbb",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "115",
    "optionC" : "114",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "113",
    "type" : "1",
    "optionA" : "112",
    "knowledge" : "树",
    "question" : "已知二叉树中有45个叶节点，有25个度为1的节点，则二叉树的总结点数为____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fbc",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "strcat",
    "optionC" : "snprintf",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "strncpy",
    "type" : "1",
    "optionA" : "strcpy",
    "knowledge" : "Linux",
    "question" : "以下函数中，和其他函数不属于一类的是____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fbd",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "temp = p->next; p->next=temp->next; p->data=temp->data; delete temp;temp=NULL;",
    "optionC" : "p->data=p->next->data; p->next=p->next->next; delete p->next;",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "p->next=q->next;",
    "type" : "1",
    "optionA" : "q=p->next;",
    "knowledge" : "链表",
    "question" : "某单链表有5个元素，设单链表的节点结构为(data,next)，5个元素的data依次为（1、2、3、4、5），已知指针q指向节点3，指针p指向节点4，那么下面操作能将链表变为data依次为（1、2、3、5）的是____。（其中temp为节点类型指针，默认指向NULL）"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fbe",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "181",
    "optionC" : "172",
    "optionAnswer" : "D",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "101",
    "type" : "1",
    "optionA" : "100",
    "knowledge" : "智力题",
    "question" : "在1,2,3,.....1000中，有____个数各位乘积为0。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fbf",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "D",
    "optionC" : "C",
    "optionAnswer" : "B",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "B",
    "type" : "1",
    "optionA" : "A",
    "knowledge" : "智力题",
    "question" : "A、B、C、D四人应聘一个程序员职位，此职务的要求条件是：Java熟练；懂数据库开发；会Web开发；有Ｃ++经验。谁满足的条件最多，谁就被雇用。（1）把上面四个要求条件两两组合，每个组合都恰有一人满足。同时已知（2）A和Bjava熟练（3）B和C会Web（4）C和D懂数据库（5）D有C++经验那么，被雇用的是____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fc0",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "r=p->next;p->next=r->next",
    "optionC" : "r->next=p->next;p->next=r",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "r->next=p;p->next=r->next",
    "type" : "1",
    "optionA" : "p->next=p->next->next",
    "knowledge" : "链表",
    "question" : "有一个单向链表队列中有一个A、B两个相邻元素，有一个指针p指向元素A，现将一个指针r指向的S元素要插入到A和B之间，该进行操作____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fc1",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "0,1,1,2,3,1,1,2,3",
    "optionC" : "0,1,1,2,3,1,2,2,3",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "0,1,2,2,3,1,2,2,3",
    "type" : "1",
    "optionA" : "0,1,1,2,2,1,2,2,3",
    "knowledge" : "查找",
    "question" : "使用KMP算法在文本串S中找模式串P是一种常见的方法。假设S=P={xyxyyxxyx}，亦即将S对自己进行匹配，匹配过程中正确的next数组是____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fc2",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "O(log(N))",
    "optionC" : "O(Nlog(N))",
    "optionAnswer" : "B",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "O(N^2)",
    "type" : "1",
    "optionA" : "O(N)",
    "knowledge" : "数组",
    "question" : "A为整数数组， N为A的数组长度，请问执行以下代码，最坏情况下的时间复杂度为____。\nvoid fun(int A[], int n) {                                                                       \n    for (int i = n - 1; i >= 1; i--) {                                                          \n        for (int j = 0; j < i; j++) {                                                            \n            if (A[j] > A[j+1]) {                                                                \n                int tmp = A[j + 1];                                                              \n                A[j + 1] = A[j];\n                A[j] = tmp;\n         }\n      }\n   }\n}"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fc3",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : " 2\/3",
    "optionC" : " 1\/2",
    "optionAnswer" : "A",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : " 1\/3",
    "type" : "1",
    "optionA" : " 1\/4 ",
    "knowledge" : "概率统计",
    "question" : "某程序猿小杨每天接老婆下班回家。小杨在6点准时下班从公司开车出发，由于路上可能存在的堵车情况，小杨到老婆公司门口的时间点均匀的分布在6点20到6点30之间。老婆根据小杨的下班时间做了估计，到公司门口的时间点均匀的分布在6点25到6点30之间，如果小杨比老婆晚到公司门口将会挨骂，那么小杨被骂的概率是____。"
  },
  {
    "ID" : "55fa696ee4b043d0caf26fc4",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "3",
    "optionC" : "2",
    "optionAnswer" : "C",
    "answer" : "解析正在重新整理中……请不要离开和卸载，其实陪伴是最长情的告白。",
    "optionB" : "1",
    "type" : "1",
    "optionA" : "0",
    "knowledge" : "排序",
    "question" : "将整数数组（7-6-3-5-4-1-2）按照堆排序的方式原地进行升序排列，请问在整个排序过程中，元素3的数组下标发生过____次改变。"
  }
]}