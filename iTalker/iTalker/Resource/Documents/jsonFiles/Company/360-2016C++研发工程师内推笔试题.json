{"success":1,"total":2100,"result":[
  {
    "ID" : "55fa69c4e4b043d0caf27088",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "for(int i=0;i<1000;j++) for(int j=0;j<1000;j++) x[i][j]+=x[i][j];",
    "optionC" : "for(int i=0;i<1000;j++) for(int j=0;j<1000;j++) x[j][i]+=x[j][i];",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "for(int i=0;i<1000;j++) for(int j=0;j<1000;j++) x[i][j]+=x[j][i];",
    "type" : "1",
    "optionA" : "for(int j=0;j<1000;j++) for(int i=0;i<1000;i++) x[i][j]+=x[j][i];",
    "knowledge" : "C\/C++",
    "question" : "x是一个行列数均为1000二维数组，下面代码效率执行最高的是（）"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27089",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "char b[10]=\"HELLO!\";",
    "optionC" : "char b[10];strcpy(b，\"HELLO!\");",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "char b[10];b=\"HELLO!\";",
    "type" : "1",
    "optionA" : "char b[10]={'H'，'E'，'L'，'L'，'O'，'!'，'\\0'};",
    "knowledge" : "C\/C++",
    "question" : "不能把字符串\"HELLO!\"赋给数组b的语句是（）"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2708a",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "E7H",
    "optionC" : "E6H",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "99H",
    "type" : "1",
    "optionA" : "67H",
    "knowledge" : "C\/C++",
    "question" : "假设寄存器为8位，用补码形式存储机器数，包括一位符号位，那么十进制数-25在寄存器表示为："
  },
  {
    "ID" : "55fa69c4e4b043d0caf2708b",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "0，0",
    "optionC" : "1，0",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "1，1",
    "type" : "1",
    "optionA" : "0，1",
    "knowledge" : "C\/C++",
    "question" : "在c++中，const int i = 0; \nint *j = (int *) &i; \n*j = 1; \nprintf(\"%d,%d\", i, *j)输出是多少?"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2708c",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "struct str_t *pData=(struct str_t*)&str; printf(\"data:%s%s\\n\",str.data,(char*)(pData->data));",
    "optionC" : "struct data1_t *pData=(struct data1_t*)&str;printf(\"data:%s%s\\n\",str.data,(char*)(pData->data));",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "struct data2_t *pData=(struct data2_t*)&str; printf(\"data:%s%s\\n\",str.data,(char*)(pData->data[0]));",
    "type" : "1",
    "optionA" : "struct data3_t *pData=(struct data3_t*)&str; printf(\"data:%s%s\\n\",str.data,(char*)(&(pData->data[0])));",
    "knowledge" : "C\/C++",
    "question" : "下面代码不能正确输出hello的选项为\n#include<stdio.h>\nstruct str_t{\n   long long len;\n   char data[32];\n};\nstruct data1_t{\n   long long len;\n   int data[2];\n};\nstruct data2_t{\n   long long len;\n   char *data[1];\n};\nstruct data3_t{\n   long long len;\n   void *data[];\n};\nint main(void)\n{\n   struct str_t str;\n   memset((void*)&str,0,sizeof(struct str_t));\n   str.len=sizeof(struct str_t)-sizeof(int);\n   snprintf(str.data,str.len,\"hello\");\n\/\/VS下为_snprintf\n   ____________________________________;\n   ____________________________________;\n   return 0;\n}"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2708d",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "122",
    "optionC" : "102",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "20",
    "type" : "1",
    "optionA" : "111",
    "knowledge" : "C\/C++",
    "question" : "下面代码段输出为：int i;\n  for(i=0;i<3;i++){\n    switch(i){\n    case 0:printf(\"%d\",i);\n    case 2:printf(\"%d\",i);\n    default:printf(\"%d\",i);\n    }\n  }"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2708e",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "8,val1会被覆盖",
    "optionC" : "8,val2会被覆盖",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "其他三项都不对",
    "type" : "1",
    "optionA" : "16,val2会被覆盖",
    "knowledge" : "C\/C++",
    "question" : "int function(const int src[16]){int val1=0;int dst[16]={0};int val2=0;const int *psrc=src;\/\/问题1：如下代码行输出什么？printf(stdout,\"size of src=%lu\\n\",sizeof(src));\/\/问题2：如下代码有什么副作用？for(int i=0;i<=16;i++){dst[i]=*psrc+i;psrc++;}return 0;}"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2708f",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "9",
    "optionC" : "36",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "18",
    "type" : "1",
    "optionA" : "3",
    "knowledge" : "C\/C++",
    "question" : "下面程序的输出是：#define f(x) x*x\nmain (){\n  int a=6,b=2,c;\n  c=f(a)\/f(b);\n  printf(\"%d\",c);\n}"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27090",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "16",
    "optionC" : "20",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "24",
    "type" : "1",
    "optionA" : "12",
    "knowledge" : "C\/C++",
    "question" : "在64位操作系统上，如下数据结构占用的存储空间大小为多少字节"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27091",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "C++不是类型安全的语言",
    "optionC" : "静态局部变量内存是在运行期分配的，存储在堆栈区",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "局部变量和全局变量不能重名",
    "type" : "1",
    "optionA" : "inline函数表示编译器一定会将函数体直接插入到调用此函数的地方，这样可以加快程序的运行速度",
    "knowledge" : "C\/C++",
    "question" : "在C++语言中，下列说法正确的是："
  },
  {
    "ID" : "55fa69c4e4b043d0caf27092",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "其他选项都不对",
    "optionC" : "结果正确，不会溢出",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "结果正确，即使会溢出",
    "type" : "1",
    "optionA" : "结果不正确，因为会溢出，用位与的方式就没问题",
    "knowledge" : "C\/C++",
    "question" : "void swap_int(int *a,int *b){?*a=*a+*b;?*b=*a-*b;??*a=*a-*b;}"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27093",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "7",
    "optionC" : "6",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "5",
    "type" : "1",
    "optionA" : "4",
    "knowledge" : "C\/C++",
    "question" : "以下程序的运行结果是：\nint main(void)\n{\n    int m=5;\n    if(m++>5) cout<<m<<endl;\n    else cout<<--m;\n}"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27094",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "a和b中都存放字符串",
    "optionC" : "a与b数组完全相同",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "a与b长度相同",
    "type" : "1",
    "optionA" : "a数组比b数组长度长",
    "knowledge" : "C\/C++",
    "question" : "对两个字符a和b进行初始化:char a[]=\"ABCDEF\";char b[]={'A','B','C','D','E','F'};则以下叙述正确的是："
  },
  {
    "ID" : "55fa69c4e4b043d0caf27095",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "0，0，1",
    "optionC" : "0，1，1",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "1，1，0",
    "type" : "1",
    "optionA" : "1，0，0",
    "knowledge" : "C\/C++",
    "question" : "在一个64位的操作系统中定义如下结构体：\nstruct st_task{\n    uint16_t id;\n    uint32_t value;\n    uint64_t timestamp;\n};同时定义fool函数如下：\nvoid fool(){\n    st_task task = {};\n    uint64_t a = 0x00010001;\n    memcpy(&task, &a, sizeof(uint64_t));\n    printf(\"%11u,%11u,%11u\", task.id, task.value, task.timestamp);\n}上述fool()程序的执行结果为（）"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27096",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "9,4",
    "optionC" : "9,9",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "4,4",
    "type" : "1",
    "optionA" : "10,4",
    "knowledge" : "C\/C++",
    "question" : "定义char dog[]=\"wang\\0miao\";那么sizeof(dog)与strlen(dog)分别是多少："
  },
  {
    "ID" : "55fa69c4e4b043d0caf27097",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "其他三项都不对",
    "optionC" : "传值后对形参的修改会改变实参的值",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "传引用后实参和形参是不同的对象",
    "type" : "1",
    "optionA" : "传地址后实参和形参指向不同的对象",
    "knowledge" : "C\/C++",
    "question" : "C++中以下关于函数调用的说法哪个是正确的？"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27098",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "32位下：4,4,2^32 64位下：4,4,2^64",
    "optionC" : "32位下：4,4,2^32 64位下：4,8,2^64",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "32位下：4,4,不限制 64位下：4,8,不限制",
    "type" : "1",
    "optionA" : "32位下：4,4,2^32 64位下：8,8,2^64",
    "knowledge" : "C\/C++",
    "question" : "以下系统中，int类型占几个字节，指针占几个字节，操作系统可以使用的最大内存空间是多大："
  },
  {
    "ID" : "55fa69c4e4b043d0caf27099",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "堆和栈都可以动态分配",
    "optionC" : "堆和栈都可以静态分配",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "在堆上频繁的调用new\/delete容易产生内存碎片，栈没有这个问题",
    "type" : "1",
    "optionA" : "堆的大小仅受操作系统的限制，栈的大小一般一般较小",
    "knowledge" : "C\/C++",
    "question" : "C++中关于堆和栈的说法，哪个是错误的:"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2709a",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "15",
    "optionC" : "32",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "30",
    "type" : "1",
    "optionA" : "16",
    "knowledge" : "Linux",
    "question" : "Linux下多少个\"-\"将被打印：int main(void){\n  int i;\n  for(i=0;i<4;i++){\n  fork();\n  printf(\"-\\n\");\n }\n return 0;\n}"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2709b",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "把汇编语言翻译成机器语言",
    "optionC" : "把中间代码变换成依赖具体机器的目标代码",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "把高级语言翻译成汇编语言",
    "type" : "1",
    "optionA" : "把高级语言翻译成机器语言",
    "knowledge" : "C\/C++",
    "question" : "代码生成阶段的主要任务是："
  },
  {
    "ID" : "55fa69c4e4b043d0caf2709c",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "其他三项都错",
    "optionC" : "Is Page Fault??",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "No Page Fault??",
    "type" : "1",
    "optionA" : "No",
    "knowledge" : "C\/C++",
    "question" : "下面代码的执行结果是什么：char ccString1[]=\"Is Page Fault??\";char ccString2[]=\"No Page Fault??\";strcpy(ccString1,\"No\");if(strcmp(ccString1,ccString2)==0)   cout<<ccString2;else   cout<<ccString1;"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2709d",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "7",
    "optionC" : "5",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "3",
    "type" : "1",
    "optionA" : "1",
    "knowledge" : "C\/C++",
    "question" : "以下代码共调用多少次拷贝构造函数：Widget f(Widget u){ Widget v(u); Widget w=v; return w;}main(){ Widget x; Widget =f(f(x));}"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2709e",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "3 3 3 4",
    "optionC" : "3 2 3 4",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "1 2 3 4",
    "type" : "1",
    "optionA" : "1 2 2 3",
    "knowledge" : "C\/C++",
    "question" : "下面C程序的输出结果:int i=0,a=1,b=2,c=3;i=++a||++b||++c;printf(\"%d %d %d %d\",i,a,b,c);"
  }
]}
