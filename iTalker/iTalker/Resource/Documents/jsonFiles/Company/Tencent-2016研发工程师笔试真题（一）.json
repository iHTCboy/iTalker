{"success":1,"total":2100,"result":[
  {
    "ID" : "55fa6a30e4b043d0caf271cd",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "144",
    "optionC" : "240",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "48",
    "type" : "1",
    "optionA" : "120",
    "knowledge" : "智力题",
    "question" : "爸爸去哪儿中的3对父子站成一排，各自父子之间不能相邻，比如石头不能和郭涛挨着，以此类推，共有几种站法？"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271ce",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "3,5",
    "optionC" : "6,7",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "1,3,5,6",
    "type" : "1",
    "optionA" : "1,2,3,4,5,6,7",
    "knowledge" : "C\/C++",
    "question" : "请找出下面程序中有哪些错误：\nint main()\n{\n   int i=10;\n   int j=1;\n   const int *p1;\/\/(1)\n   int const *p2=&i; \/\/(2)\n   p2=&j;\/\/(3)\n   int *const p3=&i;\/\/(4)\n   *p3=20;\/\/(5)\n   *p2=30;\/\/(6)\n   p3=&j;\/\/(7)\nreturn 0;\n}"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271cf",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "出现错误",
    "optionC" : "5",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "2",
    "type" : "1",
    "optionA" : "1",
    "knowledge" : "C\/C++",
    "question" : "以下代码输出什么____.  \n\nmain()\n{\n   int a[5]={1,2,3,4,5};\n   int *p=(int *)(&a+1);\n   printf(\"%d\",*(p-1));\n}"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271d0",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "可能有零向量",
    "optionC" : "对应分量成比例",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "线性无关",
    "type" : "1",
    "optionA" : "线性相关",
    "knowledge" : "编程基础",
    "question" : "设k1,k2是矩阵A的两个不同的特征值，a与b是A的分别属于k1,k2的特征向量，则由a与b是："
  },
  {
    "ID" : "55fa6a30e4b043d0caf271d1",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "foobarb_fpp",
    "optionC" : "barfoob_foo",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "foobarb_bar",
    "type" : "1",
    "optionA" : "barfoob_bar",
    "knowledge" : "C\/C++",
    "question" : "有如下C++代码：\nstruct A{\n  void foo(){printf(\"foo\");}\n  virtual void bar(){printf(\"bar\");}\n  A(){bar();}\n};\nstruct B:A{\n  void foo(){printf(\"b_foo\");}\n  void bar(){printf(\"b_bar\");}\n};\n那么 \nA *p=new B;\np->foo();\np->bar();\n输出为：  "
  },
  {
    "ID" : "55fa6a30e4b043d0caf271d2",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "chmod 778,chown user",
    "optionC" : "chmod 777,chown test",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "chmod 777,chown user",
    "type" : "1",
    "optionA" : "chmod 776,chown test",
    "knowledge" : "Linux",
    "question" : "linux下，指定文件file1为所有用户可读，可写，可执行，执行命令：___1__。修改file1的拥有者为test，拥有组为user,执行命令:___2__。"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271d3",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "abstract factory",
    "optionC" : "release",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "singleton",
    "type" : "1",
    "optionA" : "prototype",
    "knowledge" : "软件工程",
    "question" : "哪些设计模式是降低资源使用率："
  },
  {
    "ID" : "55fa6a30e4b043d0caf271d4",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "8",
    "optionC" : "4",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "2",
    "type" : "1",
    "optionA" : "1",
    "knowledge" : "C\/C++",
    "question" : "testArray是一个包含8个元素的int类型数组，请问表达式：sizeof(testArray)\/sizeof(testArray[0])的值是_____."
  },
  {
    "ID" : "55fa6a30e4b043d0caf271d5",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "m-n-1",
    "optionC" : "m-n+1",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "m-1",
    "type" : "1",
    "optionA" : "n-1",
    "knowledge" : "树",
    "question" : "n个顶点,m条边的全连通图，至少去掉____边才能构成一棵树？"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271d6",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "4,2,4",
    "optionC" : "3,4,3",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "3,3,4",
    "type" : "1",
    "optionA" : "3,3,3",
    "knowledge" : "查找",
    "question" : "在序列(22,34,55,77,89,93,99,102,120,140）中，采用二分查找，分别查找77,34,99，所需的查找次数分别为()"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271d7",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "10.1.10.0\/24",
    "optionC" : "10.1.8.0\/23",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "10.1.0.0\/16",
    "type" : "1",
    "optionA" : "10.0.0.0\/8",
    "knowledge" : "网络基础",
    "question" : "ip地址10.1.8.0\/24和10.1.9.0\/24，下列哪个是正确的汇总网段："
  },
  {
    "ID" : "55fa6a30e4b043d0caf271d8",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "程序死循环",
    "optionC" : "程序崩溃",
    "optionAnswer" : "",
    "answer" : "  ",
    "optionB" : "程序编译错误",
    "type" : "1",
    "optionA" : "程序正常运行",
    "knowledge" : "C\/C++",
    "question" : "以下代码是否完全正确，执行可能得到的结果是____。\n\nclass A{\n   int i;\n};\nclass B{\n   A *p;\npublic:\n   B(){p=new A;}\n   ~B(){delete p;}\n};\nvoid sayHello(B b){\n}\nint main(){\n   B b;\n   sayHello(b);\n}"
  },
  {
    "ID" : "55fa6a30e4b043d0caf271d9",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "接口中不可以包含已经实现的方法",
    "optionC" : "接口不能被实例化",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "一个类可以实现多个接口",
    "type" : "1",
    "optionA" : "接口中可以用虚方法",
    "knowledge" : "C\/C++",
    "question" : "在C++面向对象编程语言中，以下阐述不正确的是："
  },
  {
    "ID" : "55fa6a30e4b043d0caf271da",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "线程使用公共变量\/内存时需要使用同步机制，因为他们在同一地址空间内",
    "optionC" : "线程的通信速度更快，切换更快，因为他们在同一地址空间内",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "线程因为有自己的独立栈空间且共享数据，所有执行的开销相对较大，同时不利于资源管理和保护",
    "type" : "1",
    "optionA" : "多进程里，子进程可获得父进程的所有堆和栈的数据；而线程会与同进程的其他线程共享数据，拥有自己的栈空间",
    "knowledge" : "操作系统",
    "question" : "关于多线程和多进程编程，下面描述不正确的是（）："
  }
]}
