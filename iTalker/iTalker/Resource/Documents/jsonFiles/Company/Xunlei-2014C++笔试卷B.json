{"success":1,"total":10,"result":[
  {
    "ID" : "55fa6a71e4b043d0caf2726a",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "以上都不对",
    "optionC" : "无限",
    "optionAnswer" : "A",
    "answer" : "  ",
    "optionB" : "1",
    "type" : "1",
    "optionA" : "0",
    "knowledge" : "C\/C++",
    "question" : "下列for循环的循环体执行次数为for(int i=10, j=1; i=j=0; i++, j--)"
  },
  {
    "ID" : "55fa6a71e4b043d0caf2726b",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "出错",
    "optionC" : "xy123ABC",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "z123ABC",
    "type" : "1",
    "optionA" : "xyz123ABC",
    "knowledge" : "C\/C++",
    "question" : "下面程序的输出结果是char *p1= “123”, *p2 = “ABC”, str［50］= \"xyz\";\nstrcpy（str+2,strcat（p1,p2））;\ncout << str;"
  },
  {
    "ID" : "55fa6a71e4b043d0caf2726c",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "6, 6, 4",
    "optionC" : "6, 4, 4",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "7, 4, 4",
    "type" : "1",
    "optionA" : "4, 4, 4",
    "knowledge" : "C\/C++",
    "question" : "下面函数的执行结果是输出char str[ ] = “xunlei”;\nchar *p = str;\nint n = 10;\nprintf(“%d, %d, %d\/n”, sizeof(str), sizeof(p), sizeof(n));"
  },
  {
    "ID" : "55fa6a71e4b043d0caf2726d",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "16",
    "optionC" : "13",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "12",
    "type" : "1",
    "optionA" : "11",
    "knowledge" : "C\/C++\/操作系统",
    "question" : "现在有以下语句：struct _THUNDER{\n       int iVersion;\n       char cTag;\n       char cAdv;\n       int iUser;\n       char cEnd;\n}Thunder;\nint sz = sizeof(Thunder);则执行后，变量sz的值将得到\n"
  },
  {
    "ID" : "55fa6a71e4b043d0caf2726e",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "程序崩溃",
    "optionC" : "Thunderownloader",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "under Downloader",
    "type" : "1",
    "optionA" : "Thunder Downloader",
    "knowledge" : "C\/C++\/操作系统",
    "question" : "有如下程序段：void GetMemeory(char* p)\n{\n    p = (char*) malloc (100);\n｝\nvoid test()\n{\n    char *str=NULL;\n    GetMemory(str);\n    strcpy(str,”Thunder”);\n    strcat(str+2, “Downloader”);\n    printf(str);\n}请问运行Test函数结果是："
  },
  {
    "ID" : "55fa6a71e4b043d0caf2726f",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "*s.p = 5",
    "optionC" : "s.*p = 5",
    "optionAnswer" : "D",
    "answer" : "  ",
    "optionB" : "s->p = 5",
    "type" : "1",
    "optionA" : "s.p = 5",
    "knowledge" : "C\/C++",
    "question" : "p是指向类X的成员m的指针，s是类X的一个对象。现要给m赋值，（）是正确的。"
  },
  {
    "ID" : "55fa6a71e4b043d0caf27270",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "行参p自身的地址值",
    "optionC" : "一个临时存储单元的地址",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "行参p中存放的地址值",
    "type" : "1",
    "optionA" : "无确切值",
    "knowledge" : "C\/C++",
    "question" : "函数fun（char* p） {\n    return p;\n}\n的返回值是"
  },
  {
    "ID" : "55fa6a71e4b043d0caf27271",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "a\/b*b == a",
    "optionC" : "a\/b*b + a%b == a",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "a\/b*b\/a == 1",
    "type" : "1",
    "optionA" : "a*b\/a*b == 1",
    "knowledge" : "编程基础",
    "question" : "a,b均为不等于0的整形变量，以下关系式恒成立的是："
  },
  {
    "ID" : "55fa6a71e4b043d0caf27272",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "NEW是一个结构体变量",
    "optionC" : "NEW是一个结构体类型",
    "optionAnswer" : "C",
    "answer" : "  ",
    "optionB" : "ST是一个结构体类型",
    "type" : "1",
    "optionA" : "以上的说明形式非法",
    "knowledge" : "C\/C++",
    "question" : "设有如下说明：typedef struct ST{\n    long a; int b; char c[2];\n} NEW;\n则下面叙述中正确的是："
  },
  {
    "ID" : "55fa6a71e4b043d0caf27273",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "使用内联函数的地方会在运行阶段用内联函数体替换掉",
    "optionC" : "类的保护成员函数不能作为内联函数",
    "optionAnswer" : "B",
    "answer" : "  ",
    "optionB" : "在所有类说明中内部定义的成员函数都是内联函数",
    "type" : "1",
    "optionA" : "类的私有成员函数不能作为内联函数",
    "knowledge" : "C\/C++",
    "question" : "关于内联函数正确的是（）"
  }
]}
