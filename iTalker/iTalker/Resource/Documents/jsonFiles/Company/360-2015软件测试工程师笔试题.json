{"success":1,"total":40,"result":[
  {
    "ID" : "55fa69c4e4b043d0caf27060",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "10",
    "optionC" : "9",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "8",
    "type" : "1",
    "optionA" : "7",
    "knowledge" : "操作系统",
    "question" : "优异虚拟存储系统，若进程在内存中占3页（开始时内存为空），若采用先进先出（FIFO）页面淘汰算法，当执行以下访问页号序列后1,3,4,2,1,3,5,1,2,5,4,2，会产生多少次缺页（）"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27061",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "0.82",
    "optionC" : "0.74",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "0.64",
    "type" : "1",
    "optionA" : "0.5",
    "knowledge" : "概率统计",
    "question" : "假设用户今天是否使用360搜索与前一日用户是否使用360搜索有关，用户今日使用360搜索，则明日使用的概率为0.8；今日不使用，则明日使用的概率为0.5；那么用户如果周二使用了360搜索，则周四继续使用的概率为："
  },
  {
    "ID" : "55fa69c4e4b043d0caf27062",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "4",
    "optionC" : "3",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "2",
    "type" : "1",
    "optionA" : "1",
    "knowledge" : "C\/C++",
    "question" : "下面代码会输出什么，int main(int argc,char**argv){\n    int a[4]={1,2,3,4};\n    int*ptr=(int*)(&a+1);\n    printf(“&d”,*(ptr-1));\n}"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27063",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "单循环链表",
    "optionC" : "带头结点的双循环链表",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "双链表",
    "type" : "1",
    "optionA" : "顺序表",
    "knowledge" : "链表\/数组",
    "question" : "若某线性表最常用得操作是存取任一指定序号的元素和在最后进行插入和删除运算，则利用哪种存储方式最节省时间？"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27064",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "E7H",
    "optionC" : "E6H",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "99H",
    "type" : "1",
    "optionA" : "67H",
    "knowledge" : "编译和体系结构",
    "question" : "假设寄存器为8位，用补码形式存储机器数，包括一位符号位，那么十进制数-25在寄存器表示为："
  },
  {
    "ID" : "55fa69c4e4b043d0caf27065",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "16GB",
    "optionC" : "8GB",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "4GB",
    "type" : "1",
    "optionA" : "2GB",
    "knowledge" : "编译和体系结构",
    "question" : "32位处理器的最大虚拟地址空间为"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27066",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "348",
    "optionC" : "216",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "96",
    "type" : "1",
    "optionA" : "124",
    "knowledge" : "智力题",
    "question" : "4  2  12  28  80  (  )"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27067",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "分段和重新组装",
    "optionC" : "寻址",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "路径选择",
    "type" : "1",
    "optionA" : "流量控制",
    "knowledge" : "网络基础",
    "question" : "在因特网中，下列哪个不是IP层所需解决的问题"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27068",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "主存与CPU速度不匹配",
    "optionC" : "辅存与CPU速度不匹配",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "主存与辅存速度不匹配",
    "type" : "1",
    "optionA" : "主存容量不足",
    "knowledge" : "编译和体系结构",
    "question" : "在多级存储体系中，“cache——主存”结构的作用是解决什么问题"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27069",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "宏定义不检查参数正确性，会有安全隐患",
    "optionC" : "相对于函数调用，宏定义可以提高程序的运行效率",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "宏的嵌套定义过多会影响程序的可读性，而且很容易出错",
    "type" : "1",
    "optionA" : "宏定义的常量更容易理解，如果可以使用宏定义常量的话，要避免使用 const常量",
    "knowledge" : "C\/C++",
    "question" : "下列关于C\/C++的宏定义的说法中，不正确的是："
  },
  {
    "ID" : "55fa69c4e4b043d0caf2706a",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "CSMA\/CD",
    "optionC" : "FDDI",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "TDMA",
    "type" : "1",
    "optionA" : "令牌环",
    "knowledge" : "网络基础",
    "question" : "以下哪种介质访问控制机制不能完全避免冲突："
  },
  {
    "ID" : "55fa69c4e4b043d0caf2706b",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "3",
    "optionC" : "2",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "1",
    "type" : "1",
    "optionA" : "0",
    "knowledge" : "C\/C++",
    "question" : "以下函数用法正确的个数是：\nvoid test1(){\n unsigned char array[MAX_CHAR+1],i;\n for(i=0;i<=MAX_CHAR;i++){\narray[i]=i;\n }\n}\n\nchar*test2(){\n char p[]= \"hello world\";\n return p;\n}\n\nchar *p =test2();\n\nvoid test3(){\n    char str[10];\n    str++;\n    *str='0';\n}"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2706c",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "以上全都不正确",
    "optionC" : "Hell",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "Hello World!",
    "type" : "1",
    "optionA" : "Hello",
    "knowledge" : "C\/C++",
    "question" : "如下代码输出结果是什么？\n#include<stdio.h>\nchar buffer[6] = {0};\nchar *mystring(){  \n    char *s = \"Hello world\";\n    for(int i = 0;i<(sizeof(buffer) - 1);i++){\n    buffer[i] = *(s+i);\n    }\n    return buffer;\n}\nint main(int args,char**argv){\n    printf(\"%s\\n\",mystring());\n    return 0;\n}"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2706d",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "32",
    "optionC" : "15",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "10",
    "type" : "1",
    "optionA" : "5",
    "knowledge" : "Linux",
    "question" : "请问下面的程序最后会产生多少个进程：\n#include<stdio.h>\n#include<unistd.h>\nInt main(　）\n{\n    int i;\n    for(i = 0; i<5;i++){\n        int pid = fork();\n        if(pid == 0){\n            \/\/do something\n        } else {\n            \/\/do something\n        }\n    }\n\/\/ do somthing,sleep\nreturn 0;\n}"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2706e",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "3和2",
    "optionC" : "４和2",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "５和２",
    "type" : "1",
    "optionA" : "４和３",
    "knowledge" : "智力题",
    "question" : "教授选出两个从２到５的数字（假设第一个数字比第二个大），分别把它们的和告诉学生Ａ，把它们的差告诉学生Ｂ。结果学生Ａ和Ｂ都无法正确推导出数字是多少。又假设学生Ａ和Ｂ的结论是正确的，则这两个数字是："
  },
  {
    "ID" : "55fa69c4e4b043d0caf2706f",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "48",
    "optionC" : "61",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "72",
    "type" : "1",
    "optionA" : "57",
    "knowledge" : "树",
    "question" : "由权值为3,6,7,2,5,1的叶子结点生成一棵哈夫曼树，它的带权路径长度为："
  },
  {
    "ID" : "55fa69c4e4b043d0caf27070",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "9,991,999",
    "optionC" : "9,992,000",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "19,991,000",
    "type" : "1",
    "optionA" : "1,999,999",
    "knowledge" : "网络基础",
    "question" : "TCP建立连接的过程采用三次握手，已知第三次握手报文的发送序列号为1000，确认序列号为2000，请问第二次握手报文的发送序列号和确认序列号分别为"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27071",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "nlogn",
    "optionC" : "n+1",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "n",
    "type" : "1",
    "optionA" : "n-1",
    "knowledge" : "图",
    "question" : "一个n个顶点的连通无向图，其边的个数至少为："
  },
  {
    "ID" : "55fa69c4e4b043d0caf27072",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "new[ ]",
    "optionC" : "realloc()",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "calloc()",
    "type" : "1",
    "optionA" : "malloc()",
    "knowledge" : "C\/C++",
    "question" : "下面哪种C\/C++分配内存的方法会将分配的空间初始化为0"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27073",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "58",
    "optionC" : "116",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "29",
    "type" : "1",
    "optionA" : "87",
    "knowledge" : "智力题",
    "question" : "29只青蛙29分钟能抓29只蚊子。87只青蛙抓87只蚊子需要多长时间"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27074",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "对进程来说，其虚拟内存的大小不受物理内存大小的限制",
    "optionC" : "x=y是线程安全的，不需要同步",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "i++是线程安全的，不需要同步",
    "type" : "1",
    "optionA" : "各个线程拥有相同的堆栈",
    "knowledge" : "Linux\/编译和体系结构",
    "question" : "下面说法哪个正确的："
  },
  {
    "ID" : "55fa69c4e4b043d0caf27075",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "60%",
    "optionC" : "50%",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "40%",
    "type" : "1",
    "optionA" : "30%",
    "knowledge" : "Linux\/编译和体系结构",
    "question" : "单任务系统中两个程序A和B，其中A程序：CPU：10s? ->??设备1：5s -> CPU: 5s ->?设备2:10s -> CPU：10s；B程序：设备1:10s -> CPU：10s ->?设备2：5s? -> CPU: 5S ->?设备2：?10s；执行顺序为A ->B,那么CPU的利用率为（?）"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27076",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "1 1 1 4",
    "optionC" : "1 2 2 4",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "1 2 2 2",
    "type" : "1",
    "optionA" : "1 2 3 4",
    "knowledge" : "C\/C++",
    "question" : "下面程序会输出什么：\nstatic int a=1;\nvoid fun1(void)\n{\n    a=2;\n}\nvoid fun2(void)\n{\n    int a=3;\n}\nvoid fun3(void)\n{\n    static int a=4;\n}\nint main(int argc,char**a)\n{\n  printf(“%d”,a);\n  fun1( );\n  printf(“%d”,a);\n  fun2( );\n  printf(“%d”，a）；   \n  fun3( )\n  printf(“%d”,a); \n}"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27077",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "const char *const p",
    "optionC" : "char*const p",
    "optionAnswer" : "C ",
    "answer" : " ",
    "optionB" : "char const *p",
    "type" : "1",
    "optionA" : "const char *p",
    "knowledge" : "C\/C++",
    "question" : "语言中哪一种形式声明了一个指向char类型变量的指针p，p的值不可修改，但p指向的变量值可修改？"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27078",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "栈",
    "optionC" : "队列",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "树",
    "type" : "1",
    "optionA" : "链表",
    "knowledge" : "树\/队列\/栈\/链表",
    "question" : "解析XML时，需要校验节点是否闭合，如必须有与之对应，用（）数据结构实现比较好"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27079",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "线性链表中的各元素在存储空间中的位置不一定是连续的，且各元素的存储顺序也是任意的",
    "optionC" : "线性链表中的各元素在存储空间中的位置不一定是连续的，但表头元素一定存储在其他元素的前面",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "线性链表中的表头元素一定存储在其他元素的前面",
    "type" : "1",
    "optionA" : "线性链表中的各元素在存储空间中的位置必须是连续的",
    "knowledge" : "链表",
    "question" : "下列叙述中，正确的是（）"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2707a",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "52",
    "optionC" : "51",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "50",
    "type" : "1",
    "optionA" : "49",
    "knowledge" : "树",
    "question" : "将一棵有100个结点的完全二叉树从根这一层开始，开始进行层次遍历编号，那么编号最小的叶节点的编号为（根节点为1）"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2707b",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "B和C都对",
    "optionC" : "会拷贝静态分配的成员对象",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "会拷贝成员数据的值",
    "type" : "1",
    "optionA" : "会拷贝动态分配的成员对象",
    "knowledge" : "C\/C++",
    "question" : "关于“深拷贝”，下列说法正确的是："
  },
  {
    "ID" : "55fa69c4e4b043d0caf2707c",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "503",
    "optionC" : "404",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "302",
    "type" : "1",
    "optionA" : "301",
    "knowledge" : "网络基础",
    "question" : "HTTP协议中，如果要告知所请求的网页已经永久跳转到了另一个地址，应该返回哪个状态码："
  },
  {
    "ID" : "55fa69c4e4b043d0caf2707d",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "STACK",
    "optionC" : "DATA",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "TEXT",
    "type" : "1",
    "optionA" : "BSS",
    "knowledge" : "C\/C++ Linux",
    "question" : "在Linux 系统中，在运行一个程序时，程序中未初始化的全局变量会被加载到以下哪个内存段中?"
  },
  {
    "ID" : "55fa69c4e4b043d0caf2707e",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "thread ID",
    "optionC" : "register set",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "data section",
    "type" : "1",
    "optionA" : "stack",
    "knowledge" : "操作系统",
    "question" : "同一进程下的多个线程可以共享哪一种资源："
  },
  {
    "ID" : "55fa69c4e4b043d0caf2707f",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "10,30，30",
    "optionC" : "20,30，10",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "10，20，30",
    "type" : "1",
    "optionA" : "20，30，30",
    "knowledge" : "C\/C++",
    "question" : "下面这段代码的输出结果为：#include<stdio.h>\nvoid change(int*a, int&b, int c)\n{\n      c=*a;\n      b=30;\n      *a=20;\n}\nint main ( )\n{\n      int a=10, b=20, c=30;\n      change(&a,b,c);\n      printf(“%d,%d,%d,”,a,b,c)；\n      return 0；\n }"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27080",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "ICMP 应答报文",
    "optionC" : "ICMP 请求报文",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "TCP 应答报文",
    "type" : "1",
    "optionA" : "TCP 请求报文",
    "knowledge" : "网络基础",
    "question" : "应用程序PING发出的是什么报文"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27081",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "0x34",
    "optionC" : "0xab",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "0x4",
    "type" : "1",
    "optionA" : "0xa",
    "knowledge" : "C\/C++",
    "question" : "在x86的机器上，int a=0xabcd1234 char b=（（char*）&a）[0]请问b是多少"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27082",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "512M byte",
    "optionC" : "4G byte",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "8K byte",
    "type" : "1",
    "optionA" : "64K byte",
    "knowledge" : "操作系统",
    "question" : "32位的机器上，如果要用位图来保存65336个不重复的无符号整型值，最小需要为位图分配多大的内存"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27083",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "定义了一个名为pt的指针变量，它可以指向每行有三个整数元素的二维数组",
    "optionC" : "定义了一个名为*pt、具有三个元素的整型数组",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "定义了基类型为int的具有三个元素的指针数组pt",
    "type" : "1",
    "optionA" : "定义了基类型为int的三个指针变量",
    "knowledge" : "C\/C++",
    "question" : "若有定义int（*pt）[3]；则下列说法正确的是："
  },
  {
    "ID" : "55fa69c4e4b043d0caf27084",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "服务端未收到客户端确认包，等待2*ml时间后会直接关闭连接",
    "optionC" : "当客户端处于ESTABLISHED状态时，服务端可能仍然处于SYN_RCVD状态",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "服务端收到客户端的ACK包后会进入SYN_RCVD状态",
    "type" : "1",
    "optionA" : "服务端收到客户端的SYN包后等待2*ml时间后就会进入SYN_SENT状态",
    "knowledge" : "网络基础",
    "question" : "下列TCP连接建立过程描述正确的是："
  },
  {
    "ID" : "55fa69c4e4b043d0caf27085",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "#NAME?",
    "optionC" : "xyz—*u+",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "xyz*—u+",
    "type" : "1",
    "optionA" : "xyzu*—+",
    "knowledge" : "编程基础",
    "question" : "表达式x*（y-z）+u的逆波兰表示是"
  },
  {
    "ID" : "55fa69c4e4b043d0caf27086",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "当使用free释放掉一个指针内容后，指针变量的值被置为NULL",
    "optionC" : "野指针是指向未分配或者已释放的内存地址",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "指针的数据类型声明的是指针实际指向内容的数据类型",
    "type" : "1",
    "optionA" : "32位系统下任何类型指针的长度都是4个字节",
    "knowledge" : "C\/C++",
    "question" : "以下对C语言的”指针“描述不正确的是："
  },
  {
    "ID" : "55fa69c4e4b043d0caf27087",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "a，e，d，f，c，b",
    "optionC" : "a，e，b，c，f，d",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "a，c，f，e，b，d",
    "type" : "1",
    "optionA" : "a，b，e，c，d，f",
    "knowledge" : "图?排序",
    "question" : "无向图G=（V E），其中V={a,b,c,d,e,f},E={<a,b>,<a,e>,<a,c>,<b,e>,<c,f>,<f,d>,<e,d>}对该图进行深度优先排序，得到的顶点序列正确的是（）"
  }
                                  ]}
