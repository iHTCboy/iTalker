{"success":1,"total":2100,"result":[
  {
    "ID" : "55fa696de4b043d0caf26f3e",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "循环队列中元素的个数是有队头指针和队尾指针共同决定",
    "optionC" : "在循环队列中，只需要队尾指针就能反映队列中元素的动态变化情况",
    "optionAnswer" : "D",
    "answer" : "队列(Queue)也是一种运算受限的线性表。它只允许在表的一端进行插入，而在另一端进行删除。循环队列是将顺序队列首尾相连形成的，随着插入元素或删除元素的进行，其队头指针及队尾指针是在不断变化的，有时可能会出现队头指针大于队尾指针的情况，也可能是队尾指针大于队头指针。",
    "optionB" : "在循环队列中，只需要队头指针就能反映队列中元素的动态变化情况",
    "type" : "1",
    "optionA" : "循环队列有队头和队尾两个指针，因此，循环队列是非线性结构",
    "knowledge" : "链表",
    "question" : "下列叙述中正确的是？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f3f",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "以上皆不是",
    "optionC" : "SPARC",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "MIPS",
    "type" : "1",
    "optionA" : "ARM",
    "knowledge" : "编译和体系结构",
    "question" : "以下指令集架构属于复杂指令集架构的是？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f40",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "6",
    "optionC" : "5",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "4",
    "type" : "1",
    "optionA" : "3",
    "knowledge" : "栈",
    "question" : "设栈S初始状态为空。元素a,b,c,d,e,f依次通过栈S，若出栈的顺序为c,f,e,d,b,a，则栈S的容量至少应该为？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f41",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "乘以10",
    "optionC" : "乘以2",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "除以2",
    "type" : "1",
    "optionA" : "除以10",
    "knowledge" : "编程基础",
    "question" : "在二进制数据中，小数点向右移一位，则数据"
  },
  {
    "ID" : "55fa696de4b043d0caf26f42",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "A按列存，B按列存。",
    "optionC" : "A按列存，B按行存。",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "A按行存，B按列存。",
    "type" : "1",
    "optionA" : "A按行存，B按行存。",
    "knowledge" : "数组 操作系统",
    "question" : "有两个N*N的矩阵A和B，想要在PC上按矩阵乘法基本算法编程实现计算A*B。假设N较大，本机内存也很大，可以存下A、B和结果矩阵。那么，为了计算速度，A和B在内存中应该如何存储（按行存指先存储第一行，再第二行，直到最后一行；按列存指先存储第一列，再第二列，直到最后一列）？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f43",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "little_endian, 0 0 0x34 0x12",
    "optionC" : "big_endian,0 0 0x12 0x34",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "little_endian,0x34 0x12 0 0",
    "type" : "1",
    "optionA" : "big_endian,0x12 0x34 0 0",
    "knowledge" : "网络基础",
    "question" : "IP数据报头采用（）字节序，在此字节序下从低地址到高地址0x1234的表示形式为 （） 。"
  },
  {
    "ID" : "55fa696de4b043d0caf26f44",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "sizeof(p->e) == 4",
    "optionC" : "sizeof(p->a) == 1",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "sizeof(*p) == 24",
    "type" : "1",
    "optionA" : "sizeof(p) == 24",
    "knowledge" : "C\/C++\/编译和体系结构",
    "question" : "struct T {    char a;    int *d;    int b;    int c:16;    double e;};T *p;在64位系统以及64位编译器下，以下描述正确的是"
  },
  {
    "ID" : "55fa696de4b043d0caf26f45",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "插入排序",
    "optionC" : "冒泡排序",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "快速排序",
    "type" : "1",
    "optionA" : "Shell排序",
    "knowledge" : "排序\/复杂度",
    "question" : "平均速度最快的排序算法是？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f46",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "O(2)",
    "optionC" : "O(1)",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "O(N)",
    "type" : "1",
    "optionA" : "O(N*logN)",
    "knowledge" : "复杂度",
    "question" : "在N个乱序数字中查找第k大的数字，时间复杂度可以减小至"
  },
  {
    "ID" : "55fa696de4b043d0caf26f47",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "反对称性",
    "optionC" : "对称性",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "传递性",
    "type" : "1",
    "optionA" : "自反性",
    "knowledge" : "组合数学",
    "question" : "设集合A={1,2,3},A上的关系R＝{(1,1),(2,2),(2,3),(3,2),(3,3)}，则R不具备 ()?"
  },
  {
    "ID" : "55fa696de4b043d0caf26f48",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "1.1001",
    "optionC" : "101.111",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "0.001",
    "type" : "1",
    "optionA" : "101.1001",
    "knowledge" : "编程基础",
    "question" : "小数值1.5625的二进制表示是"
  },
  {
    "ID" : "55fa696de4b043d0caf26f49",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "CAS（Compare-and-Swap），如无锁栈，无锁队列等待",
    "optionC" : "RCU（Read-Copy-Update），新旧副本切换机制，对于旧副本可以采用延迟释放的做法",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "只有一个生产者和一个消费者，那么就可以做到免锁访问环形缓冲区（Ring Buffer）",
    "type" : "1",
    "optionA" : "针对计数器，可以使用原子加",
    "knowledge" : "并发",
    "question" : "无锁化编程有哪些常见方法？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f4a",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "1000",
    "optionC" : "800",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "700",
    "type" : "1",
    "optionA" : "500",
    "knowledge" : "网络基础",
    "question" : "主机甲和主机乙间已建立一个TCP连接，主机甲向主机乙发送了两个连续的TCP段，分别包含300字节和500字节的有效载荷，第一个段的序列号为200，主机乙正确接收到两个段后，发送给主机甲的确认序列号是"
  },
  {
    "ID" : "55fa696de4b043d0caf26f4b",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "实现异步读写机制",
    "optionC" : "数据预取机制",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "优化调度系统，尽量做到任务与数据相近（Locality）",
    "type" : "1",
    "optionA" : "网络从千兆网升级为万兆网",
    "knowledge" : "系统设计",
    "question" : "以下措施中，不可能改进分布式系统读写(IO)性能的有____。"
  },
  {
    "ID" : "55fa696de4b043d0caf26f4c",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "O(n 3\/2)",
    "optionC" : "O(n (log n)2)",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "O(n log n)",
    "type" : "1",
    "optionA" : "O(n)",
    "knowledge" : "数组\/排序\/复杂度",
    "question" : "在一个元素个数为N的数组里，找到升序排在N\/5位置的元素的最优算法时间复杂度是"
  },
  {
    "ID" : "55fa696de4b043d0caf26f4d",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "堆排序",
    "optionC" : "快速排序",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "冒泡排序",
    "type" : "1",
    "optionA" : "插入排序",
    "knowledge" : "排序\/复杂度",
    "question" : "将一个从大到小的数组，用以下排序方法排序成从小到大的，（）最快。"
  },
  {
    "ID" : "55fa696de4b043d0caf26f4e",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "80000",
    "optionC" : "70000",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "60000",
    "type" : "1",
    "optionA" : "50000",
    "knowledge" : "系统设计",
    "question" : "有一台带一个千兆网卡的服务器A，会把接收到的消息转发给另外两台带一个千兆网卡的服务器B和C，B和C上面的一个服务进程处理一条10K字节的消息需要2毫秒。如果在B和C上面各跑80个服务进程，在不考虑CPU负载和进程切换、内存占用、传输损耗和交互损耗的情况下，B和C服务器每秒一共大约可以处理______条10K字节的消息。"
  },
  {
    "ID" : "55fa696de4b043d0caf26f4f",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "54321",
    "optionC" : "12345",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "42351",
    "type" : "1",
    "optionA" : "45231",
    "knowledge" : "树",
    "question" : "某二叉树的先序遍历是12453，中序遍历是42513，那么其后续遍历是？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f50",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "15",
    "optionC" : "14",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "13",
    "type" : "1",
    "optionA" : "12",
    "knowledge" : "树",
    "question" : "设一棵二叉树中有3个叶子节点，有8个度为1的节点，则该二叉树中总的节点数为？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f51",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "36",
    "optionC" : "35",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "34",
    "type" : "1",
    "optionA" : "33",
    "knowledge" : "组合数学",
    "question" : "10个相同的糖果，分给三个人，每个人至少要得一个。有()种不同分法"
  },
  {
    "ID" : "55fa696de4b043d0caf26f52",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "6",
    "optionC" : "5",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "3",
    "type" : "1",
    "optionA" : "2",
    "knowledge" : "C\/C++\/复杂度",
    "question" : "假定x=500，求下面函数的返回值______int fun(int x){    int countx = 0;    while (x)    {        countx++;        x = x & (x C 1);    }   return countx;｝"
  },
  {
    "ID" : "55fa696de4b043d0caf26f53",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "将进程控制块链入就绪队列",
    "optionC" : "为进程分配内存",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "建立一个进程控制块",
    "type" : "1",
    "optionA" : "由调度程序为进程分配CPU",
    "knowledge" : "操作系统",
    "question" : "下面所述步骤中，不是创建进程所必须的步骤是？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f54",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "1a",
    "optionC" : "19",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "26",
    "type" : "1",
    "optionA" : "25",
    "knowledge" : "C\/C++",
    "question" : "已有变量定义和函数调用语句，int a=25;print_value(&a);则下面函数的正确输出结果是______。void print_value(int* x){    printf(“%x\\n,++*x);}"
  },
  {
    "ID" : "55fa696de4b043d0caf26f55",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "k-中心点聚类问题",
    "optionC" : "层次聚类问题",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "多分类问题",
    "type" : "1",
    "optionA" : "二分类问题",
    "knowledge" : "机器学习",
    "question" : "一监狱人脸识别准入系统用来识别待进入人员的身份，此系统一共包括识别4种不同的人员：狱警，小偷，送餐员，其他。下面哪种学习方法最适合此种应用需求：（）。"
  },
  {
    "ID" : "55fa696de4b043d0caf26f56",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "ABCF",
    "optionC" : "F",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "BCF",
    "type" : "1",
    "optionA" : "BCEF",
    "knowledge" : "智力题",
    "question" : "某团队负责人接到一个紧急项目，他要考虑在代号为ABCDEF这6个团队成员中的部分人员参加项目的开发工作。人员必须满足下列各点：1.AB两人中至少一人参加；2.AD不能都去参加；3.AEF三人中要派两人参加；4.BC两人都去或都不参加；5.CD两人中有一人参加；6.若D不参加则E也不参加；那么，最后（）参加紧急项目的开发。"
  },
  {
    "ID" : "55fa696de4b043d0caf26f57",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "y[3]=11",
    "optionC" : "y[2]=11",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : "y[1]=11",
    "type" : "1",
    "optionA" : "y[0]=11",
    "knowledge" : "编程基础",
    "question" : "在小端序的机器中，如果union X{    int x;    char y[4];};如果X a;a.x=0x11223344;\/\/16进制,则：（）"
  },
  {
    "ID" : "55fa696de4b043d0caf26f58",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "今天H早上遇到堵车了",
    "optionC" : "今天H早上睡过头了的概率大于0.2",
    "optionAnswer" : "C",
    "answer" : " ",
    "optionB" : "今天H早上睡过头的概率为0.2",
    "type" : "1",
    "optionA" : "今天H早上睡过头了",
    "knowledge" : "概率统计",
    "question" : "H同学每天乘公交上学，早上睡过头或遇到堵车都会迟到；H早上睡过头的概率为0.2，路上遇到堵车的概率为0.5；若某天早上H迟到了，那么以下推测正确的有（）。"
  },
  {
    "ID" : "55fa696de4b043d0caf26f59",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "d",
    "optionC" : "c",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "b",
    "type" : "1",
    "optionA" : "a",
    "knowledge" : "C\/C++",
    "question" : " test.c文件中包括如下语句：#define INT_PTR int* typedef int*int_ptr;INT_PTR a,b;int_ptr c,d;文件中定义的四个变量，哪个变量不是指针类型？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f5a",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "6000",
    "optionC" : "4000",
    "optionAnswer" : "",
    "answer" : " ",
    "optionB" : "3000",
    "type" : "1",
    "optionA" : "2000",
    "knowledge" : "智力题",
    "question" : "使用一辆卡车运输n块单块1TB装满数据的硬盘，以时速80km\/h行驶1000km将数据运送到目的地；卡车至少运送（）块硬盘才能使运输速率超1000Gbps"
  },
  {
    "ID" : "55fa696de4b043d0caf26f5b",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "mike mike",
    "optionC" : "mike root",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "root rooy",
    "type" : "1",
    "optionA" : "root mike",
    "knowledge" : "Linux",
    "question" : "?Linux系统中某个可执行文件属于root并且有setid，当一个普通用户mike运行这个程序时，产生的进程的有效用户和实际用户分别是____？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f5c",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "str1和str2地址相同，P1和P2地址不同",
    "optionC" : "str1和str2地址不同，P1和P2地址不同",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "str1和str2地址相同，P1和P2地址相同",
    "type" : "1",
    "optionA" : "str1和str2地址不同，P1和P2地址相同",
    "knowledge" : "C\/C++",
    "question" : "针对以下代码，const char str1[] = \"abc\";const char str2[] = \"abc\";const char *p1 = \"abc\";const char *p2 = \"abc\";判断下列说法哪个是正确的（）"
  },
  {
    "ID" : "55fa696de4b043d0caf26f5d",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : " 3\/4",
    "optionC" : " 1\/3",
    "optionAnswer" : "D",
    "answer" : " ",
    "optionB" : " 1\/4",
    "type" : "1",
    "optionA" : " 1\/6",
    "knowledge" : "概率统计",
    "question" : "硬币游戏：连续扔硬币，直到某一人获胜。A获胜条件是先正后反，B获胜是出现连续两次反面，问AB游戏时A获胜概率是（）？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f5e",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "2-3-5-4-6-7-9-1-8",
    "optionC" : "5-4-2-1-3-7-6-9-8",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "1-2-6-5-4-3-8-7-9",
    "type" : "1",
    "optionA" : "3-2-8-7-6-9-5-4-1",
    "knowledge" : "树",
    "question" : "已知某二叉树的前序为（1-2-3-4-5-6-7-8-9），中序为（2-3-1-6-7-8-5-9-4），则它的后续为？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f5f",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "(m-r-f) mod m",
    "optionC" : "(m-r+f) mod m",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "r-f",
    "type" : "1",
    "optionA" : "（m+r-f）mod m",
    "knowledge" : "数组",
    "question" : "有一个用数组C[1..m]表示的环形队列，m为数组的长度。假设f为队头元素在数组中的位置，r为队尾元素的后一位置（按顺时针方向）。若队列非空，则计算队列中元素个数的公式应为？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f60",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "70，65，100，32，50，60",
    "optionC" : "65，100，70，32，50，60",
    "optionAnswer" : "A",
    "answer" : " ",
    "optionB" : "60，70，65，50，32，100",
    "type" : "1",
    "optionA" : "100，60，70，50，32，65",
    "knowledge" : "堆",
    "question" : "下列关键字序列为堆的是（）？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f61",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "17.25",
    "optionC" : "16.75",
    "optionAnswer" : "B",
    "answer" : " ",
    "optionB" : "16.25",
    "type" : "1",
    "optionA" : "15.25",
    "knowledge" : "操作系统",
    "question" : "有4个进程A,B,C,D,设它们依次进入就绪队列，因相差时间很短可视为同时到达。4个进程按轮转法分别运行11,7,2,和4个时间单位，设时间片为1。四个进程的平均周转时间为 （）？"
  },
  {
    "ID" : "55fa696de4b043d0caf26f62",
    "typeID" : "55dd5e2360b258078b9e4458",
    "optionD" : "linux通过提供socket接口来进行网络编程",
    "optionC" : "服务端编程会调用listen()，客户端会调用bind()",
    "optionAnswer" : "C",
    "answer" : "client端不需要bind；TCP建立连接需要三次握手 断开连接需要四次",
    "optionB" : "主动关闭的一端会出现TIME_WAIT状态",
    "type" : "1",
    "optionA" : "UDP是不可靠服务",
    "knowledge" : "网络基础",
    "question" : "下列关于网络编程错误的是？"
  }
]}
